// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contracts

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// AccessIndexorABI is the input ABI used to generate the binding from.
const AccessIndexorABI = "[{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"principal\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"entity\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"aggregate\",\"type\":\"uint8\"}],\"name\":\"RightsChanged\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"ACCESS_CONFIRMED\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ACCESS_NONE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ACCESS_TENTATIVE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CATEGORY_CONTENT_OBJECT\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CATEGORY_CONTENT_TYPE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CATEGORY_CONTRACT\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CATEGORY_GROUP\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CATEGORY_LIBRARY\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TYPE_ACCESS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TYPE_EDIT\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TYPE_SEE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"accessGroups\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"category\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index_type\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"obj\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"}],\"name\":\"checkDirectRights\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index_type\",\"type\":\"uint8\"},{\"internalType\":\"addresspayable\",\"name\":\"obj\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"}],\"name\":\"checkRights\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cleanUpAccessGroups\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cleanUpAll\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cleanUpContentObjects\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cleanUpContentTypes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cleanUpLibraries\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentObjects\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"category\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentSpace\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentTypes\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"category\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"contractExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contracts\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"category\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"position\",\"type\":\"uint256\"}],\"name\":\"getAccessGroup\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"group\",\"type\":\"address\"}],\"name\":\"getAccessGroupRights\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAccessGroupsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"position\",\"type\":\"uint256\"}],\"name\":\"getContentObject\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"obj\",\"type\":\"address\"}],\"name\":\"getContentObjectRights\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getContentObjectsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"position\",\"type\":\"uint256\"}],\"name\":\"getContentType\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"obj\",\"type\":\"address\"}],\"name\":\"getContentTypeRights\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getContentTypesLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"position\",\"type\":\"uint256\"}],\"name\":\"getContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"obj\",\"type\":\"address\"}],\"name\":\"getContractRights\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getContractsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLibrariesLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"position\",\"type\":\"uint256\"}],\"name\":\"getLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"}],\"name\":\"getLibraryRights\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"hasManagerAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"libraries\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"category\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"others\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"category\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"group\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setAccessGroupRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setAccessRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"obj\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setContentObjectRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"content_space\",\"type\":\"address\"}],\"name\":\"setContentSpace\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"obj\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setContentTypeRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"obj\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setContractRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"indexType\",\"type\":\"uint8\"},{\"internalType\":\"addresspayable\",\"name\":\"obj\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setEntityRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setLibraryRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newCreator\",\"type\":\"address\"}],\"name\":\"transferCreatorship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"versionAPI\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// AccessIndexorFuncSigs maps the 4-byte function signature to its string representation.
var AccessIndexorFuncSigs = map[string]string{
	"18689733": "ACCESS_CONFIRMED()",
	"8232f3f1": "ACCESS_NONE()",
	"479a0c51": "ACCESS_TENTATIVE()",
	"091600e6": "CATEGORY_CONTENT_OBJECT()",
	"68a0469a": "CATEGORY_CONTENT_TYPE()",
	"6373a411": "CATEGORY_CONTRACT()",
	"12915a30": "CATEGORY_GROUP()",
	"16aed232": "CATEGORY_LIBRARY()",
	"d1aeb651": "TYPE_ACCESS()",
	"5d97b6c2": "TYPE_EDIT()",
	"96eba03d": "TYPE_SEE()",
	"30e66949": "accessGroups()",
	"a00b38c4": "checkDirectRights(uint8,address,uint8)",
	"7fb52f1a": "checkRights(uint8,address,uint8)",
	"d30f8cd0": "cleanUpAccessGroups()",
	"2fa5c842": "cleanUpAll()",
	"048bd529": "cleanUpContentObjects()",
	"85e0a200": "cleanUpContentTypes()",
	"92297d7b": "cleanUpLibraries()",
	"a980892d": "contentObjects()",
	"af570c04": "contentSpace()",
	"9f46133e": "contentTypes()",
	"7709bc78": "contractExists(address)",
	"6c0f79b6": "contracts()",
	"02d05d3f": "creator()",
	"2d474cbd": "getAccessGroup(uint256)",
	"304f4a7b": "getAccessGroupRights(address)",
	"0dc10d3f": "getAccessGroupsLength()",
	"cf8a7503": "getContentObject(uint256)",
	"69881c0c": "getContentObjectRights(address)",
	"ebe9314e": "getContentObjectsLength()",
	"aa3f6952": "getContentType(uint256)",
	"a4081d62": "getContentTypeRights(address)",
	"5c1d3059": "getContentTypesLength()",
	"6ebc8c86": "getContract(uint256)",
	"08d865d7": "getContractRights(address)",
	"fccc134f": "getContractsLength()",
	"cb86806d": "getLibrariesLength()",
	"d15d62a7": "getLibrary(uint256)",
	"fb52222c": "getLibraryRights(address)",
	"42e7ba7b": "hasManagerAccess(address)",
	"41c0e1b5": "kill()",
	"c4b1978d": "libraries()",
	"51a7fc87": "others()",
	"8da5cb5b": "owner()",
	"f17bda91": "setAccessGroupRights(address,uint8,uint8)",
	"b8ff1dba": "setAccessRights()",
	"3def5140": "setContentObjectRights(address,uint8,uint8)",
	"055af48f": "setContentSpace(address)",
	"8635adb5": "setContentTypeRights(address,uint8,uint8)",
	"224dcba0": "setContractRights(address,uint8,uint8)",
	"5d7cf830": "setEntityRights(uint8,address,uint8,uint8)",
	"7cbb7bf2": "setLibraryRights(address,uint8,uint8)",
	"6d2e4b1b": "transferCreatorship(address)",
	"f2fde38b": "transferOwnership(address)",
	"54fd4d50": "version()",
	"5f4fcae1": "versionAPI()",
}

// AccessIndexorBin is the compiled bytecode used for deploying new contracts.
var AccessIndexorBin = "0x7f4f776e61626c653230323030393238313130303030504f000000000000000000600055620332e360ec1b60019081557f416363657373496e6465786f723230323030393238313130303030504f0000006005556006805460ff1916821761ff0019166102001762ff00001916620300001763ff000000191663040000001760ff60201b191664050000000017905560e06040526080908152600a60a052606460c052620000b29060079060036200013e565b50600280546001600160a01b0319908116321790915560038054909116331790556006546008805460ff1990811660ff62010000850481169190911790925560108054821661010085048416179055600c8054821683851617905560148054821663010000008504841617905560188054909116640100000000909304909116919091179055620001fc565b600183019183908215620001c65791602002820160005b838211156200019557835183826101000a81548160ff021916908360ff160217905550926020019260010160208160000104928301926001030262000155565b8015620001c45782816101000a81549060ff021916905560010160208160000104928301926001030262000195565b505b50620001d4929150620001d8565b5090565b620001f991905b80821115620001d457805460ff19168155600101620001df565b90565b611aef806200020c6000396000f3fe6080604052600436106103765760003560e01c80636d2e4b1b116101d1578063a980892d11610102578063d15d62a7116100a0578063f17bda911161006f578063f17bda9114610ae0578063f2fde38b14610b24578063fb52222c14610b57578063fccc134f14610b8a57610376565b8063d15d62a714610a8c578063d1aeb65114610668578063d30f8cd014610ab6578063ebe9314e14610acb57610376565b8063b8ff1dba116100dc578063b8ff1dba14610a23578063c4b1978d14610a38578063cb86806d14610a4d578063cf8a750314610a6257610376565b8063a980892d146109cf578063aa3f6952146109e4578063af570c0414610a0e57610376565b80638635adb51161016f57806396eba03d1161014957806396eba03d146108a95780639f46133e14610941578063a00b38c414610956578063a4081d621461099c57610376565b80638635adb5146108d35780638da5cb5b1461091757806392297d7b1461092c57610376565b80637cbb7bf2116101ab5780637cbb7bf21461081f5780637fb52f1a146108635780638232f3f1146108a957806385e0a200146108be57610376565b80636d2e4b1b1461078f5780636ebc8c86146107c25780637709bc78146107ec57610376565b80633def5140116102ab5780635d7cf830116102495780636373a411116102235780636373a4111461071d57806368a0469a1461073257806369881c0c146107475780636c0f79b61461077a57610376565b80635d7cf830146106bc5780635d97b6c2146104a05780635f4fcae11461070857610376565b8063479a0c5111610285578063479a0c511461066857806351a7fc871461067d57806354fd4d50146106925780635c1d3059146106a757610376565b80633def5140146105c857806341c0e1b51461060c57806342e7ba7b1461062157610376565b806316aed232116103185780632d474cbd116102f25780632d474cbd146104f95780632fa5c84214610523578063304f4a7b1461056357806330e669491461059657610376565b806316aed2321461048b57806318689733146104a0578063224dcba0146104b557610376565b806308d865d71161035457806308d865d714610403578063091600e61461044c5780630dc10d3f1461046157806312915a301461047657610376565b806302d05d3f14610378578063048bd529146103a9578063055af48f146103d0575b005b34801561038457600080fd5b5061038d610b9f565b604080516001600160a01b039092168252519081900360200190f35b3480156103b557600080fd5b506103be610bae565b60408051918252519081900360200190f35b3480156103dc57600080fd5b50610376600480360360208110156103f357600080fd5b50356001600160a01b0316610bbf565b34801561040f57600080fd5b506104366004803603602081101561042657600080fd5b50356001600160a01b0316610bf8565b6040805160ff9092168252519081900360200190f35b34801561045857600080fd5b50610436610c1a565b34801561046d57600080fd5b506103be610c23565b34801561048257600080fd5b50610436610c29565b34801561049757600080fd5b50610436610c37565b3480156104ac57600080fd5b50610436610c46565b3480156104c157600080fd5b50610376600480360360608110156104d857600080fd5b506001600160a01b038135169060ff60208201358116916040013516610c4b565b34801561050557600080fd5b5061038d6004803603602081101561051c57600080fd5b5035610c5d565b34801561052f57600080fd5b50610538610c8a565b6040805195865260208601949094528484019290925260608401526080830152519081900360a00190f35b34801561056f57600080fd5b506104366004803603602081101561058657600080fd5b50356001600160a01b0316610cd5565b3480156105a257600080fd5b506105ab610cf3565b6040805160ff909316835260208301919091528051918290030190f35b3480156105d457600080fd5b50610376600480360360608110156105eb57600080fd5b506001600160a01b038135169060ff60208201358116916040013516610d02565b34801561061857600080fd5b50610376610d0f565b34801561062d57600080fd5b506106546004803603602081101561064457600080fd5b50356001600160a01b0316610d34565b604080519115158252519081900360200190f35b34801561067457600080fd5b50610436610d48565b34801561068957600080fd5b506105ab610d4d565b34801561069e57600080fd5b506103be610d5c565b3480156106b357600080fd5b506103be610d62565b3480156106c857600080fd5b50610376600480360360808110156106df57600080fd5b5060ff81358116916001600160a01b036020820135169160408201358116916060013516610d68565b34801561071457600080fd5b506103be610d8b565b34801561072957600080fd5b50610436610d91565b34801561073e57600080fd5b50610436610da2565b34801561075357600080fd5b506104366004803603602081101561076a57600080fd5b50356001600160a01b0316610db2565b34801561078657600080fd5b506105ab610dd0565b34801561079b57600080fd5b50610376600480360360208110156107b257600080fd5b50356001600160a01b0316610ddf565b3480156107ce57600080fd5b5061038d600480360360208110156107e557600080fd5b5035610e2b565b3480156107f857600080fd5b506106546004803603602081101561080f57600080fd5b50356001600160a01b0316610e3d565b34801561082b57600080fd5b506103766004803603606081101561084257600080fd5b506001600160a01b038135169060ff60208201358116916040013516610e43565b34801561086f57600080fd5b506106546004803603606081101561088657600080fd5b5060ff81358116916001600160a01b036020820135169160409091013516610e50565b3480156108b557600080fd5b5061043661110e565b3480156108ca57600080fd5b506103be611113565b3480156108df57600080fd5b50610376600480360360608110156108f657600080fd5b506001600160a01b038135169060ff6020820135811691604001351661111f565b34801561092357600080fd5b5061038d611139565b34801561093857600080fd5b506103be611148565b34801561094d57600080fd5b506105ab611154565b34801561096257600080fd5b506106546004803603606081101561097957600080fd5b5060ff81358116916001600160a01b036020820135169160409091013516611163565b3480156109a857600080fd5b50610436600480360360208110156109bf57600080fd5b50356001600160a01b0316611192565b3480156109db57600080fd5b506105ab6111b0565b3480156109f057600080fd5b5061038d60048036036020811015610a0757600080fd5b50356111bf565b348015610a1a57600080fd5b5061038d6111d1565b348015610a2f57600080fd5b506103766111e0565b348015610a4457600080fd5b506105ab6112d9565b348015610a5957600080fd5b506103be6112e8565b348015610a6e57600080fd5b5061038d60048036036020811015610a8557600080fd5b50356112ee565b348015610a9857600080fd5b5061038d60048036036020811015610aaf57600080fd5b5035611300565b348015610ac257600080fd5b506103be611312565b348015610ad757600080fd5b506103be61131e565b348015610aec57600080fd5b5061037660048036036060811015610b0357600080fd5b506001600160a01b038135169060ff60208201358116916040013516611324565b348015610b3057600080fd5b5061037660048036036020811015610b4757600080fd5b50356001600160a01b0316611331565b348015610b6357600080fd5b5061043660048036036020811015610b7a57600080fd5b50356001600160a01b031661137d565b348015610b9657600080fd5b506103be61139b565b6002546001600160a01b031681565b6000610bba600c6113a1565b905090565b6003546001600160a01b03163314610bd657600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811660009081526019602052604090205460ff165b919050565b60065460ff1681565b60135490565b600654610100900460ff1681565b60065462010000900460ff1681565b600281565b610c5860188484846114dd565b505050565b600060106002018281548110610c6f57fe5b6000918252602090912001546001600160a01b031692915050565b6000806000806000610c9c60086113a1565b610ca660106113a1565b610cb0600c6113a1565b610cba60146113a1565b610cc460186113a1565b945094509450945094509091929394565b6001600160a01b031660009081526011602052604090205460ff1690565b60105460135460ff9091169082565b610c58600c8484846114dd565b6003546001600160a01b03163314610d2657600080fd5b6003546001600160a01b0316ff5b6003546001600160a01b0390811691161490565b600181565b601c54601f5460ff9091169082565b60055481565b60175490565b60ff841615610d8557610d85610d7d856117d6565b8484846114dd565b50505050565b60015481565b600654640100000000900460ff1681565b6006546301000000900460ff1681565b6001600160a01b03166000908152600d602052604090205460ff1690565b601854601b5460ff9091169082565b6002546001600160a01b03163314610df657600080fd5b6001600160a01b038116610e0957600080fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600060186002018281548110610c6f57fe5b3b151590565b610c5860088484846114dd565b600080839050600360009054906101000a90046001600160a01b03166001600160a01b0316816001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610eae57600080fd5b505afa158015610ec2573d6000803e3d6000fd5b505050506040513d6020811015610ed857600080fd5b50516001600160a01b03161415610ef3576001915050611107565b6000610f00868686611163565b905060018115151415610f1857600192505050611107565b60065460ff878116610100909204161461110057600080805b6013548110156110fc576012805482908110610f4957fe5b6000918252602090912001546001600160a01b031691508115801590610f8d57506001600160a01b038216600090815260116020526040902054600160ff90911610155b156110f457819250600360009054906101000a90046001600160a01b03166001600160a01b0316836001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610fed57600080fd5b505afa158015611001573d6000803e3d6000fd5b505050506040513d602081101561101757600080fd5b50516001600160a01b0316148061104c57506001600160a01b038216600090815260116020526040902054600a60ff90911610155b80156110e1575060408051632802ce3160e21b815260ff808c1660048301526001600160a01b038b81166024840152908a16604483015291519185169163a00b38c491606480820192602092909190829003018186803b1580156110af57600080fd5b505afa1580156110c3573d6000803e3d6000fd5b505050506040513d60208110156110d957600080fd5b505115156001145b156110f457600195505050505050611107565b600101610f31565b5050505b6000925050505b9392505050565b600081565b6000610bba60146113a1565b600654610c5890610d7d906301000000900460ff166117d6565b6003546001600160a01b031681565b6000610bba60086113a1565b60145460175460ff9091169082565b600060ff8416156111885761118161117a856117d6565b8484611873565b9050611107565b5060009392505050565b6001600160a01b031660009081526015602052604090205460ff1690565b600c54600f5460ff9091169082565b600060146002018281548110610c6f57fe5b6004546001600160a01b031681565b336000818152600d602052604090205460ff166111fb611a9c565b600a60ff83811691820681168084526064909206829003811684038290038116604080850182905260075461010090048316600202831660208087018290526001600160a01b0389166000908152600d9091529190912080549190940190910191821660ff1990911681179092559015801590611279575060ff8316155b1561128957611289600c856118c7565b604080513081526001600160a01b038616602082015260ff83168183015290517f23dcae6acc296731e3679d01e7cd963988e5a372850a0a1db2b9b01539e19ff49181900360600190a150505050565b600854600b5460ff9091169082565b600b5490565b6000600c6002018281548110610c6f57fe5b600060086002018281548110610c6f57fe5b6000610bba60106113a1565b600f5490565b610c5860108484846114dd565b6003546001600160a01b0316331461134857600080fd5b6001600160a01b03811661135b57600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b031660009081526009602052604090205460ff1690565b601b5490565b600080805b83600301548110156114d6576113de8460020182815481106113c457fe5b6000918252602090912001546001600160a01b0316610e3d565b6114cd578360020181815481106113f157fe5b600091825260209091200180546001600160a01b03191690556003840154600192909201916000190181146114bc578360020160018560030154038154811061143657fe5b6000918252602090912001546002850180546001600160a01b03909216918390811061145e57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550836002016001856003015403815481106114a257fe5b600091825260209091200180546001600160a01b03191690555b6003840180546000190190556114d1565b6001015b6113a6565b5092915050565b60006001336001600160a01b0386161461157957604080516367e5c3bf60e01b8152336004820152905186916001600160a01b038316916367e5c3bf91602480820192602092909190829003018186803b15801561153a57600080fd5b505afa15801561154e573d6000803e3d6000fd5b505050506040513d602081101561156457600080fd5b5051915061157133610d34565b925050611585565b61158232610d34565b91505b6001600160a01b038516600090815260018701602052604090205460ff166115ab611a9c565b600a60ff8381169182068116808452606490920682900381166020840181905284039190910381166040830152600090869081161580156115f0575085806115f05750845b156115fa57600191505b60ff8716158015906116095750855b801561162b575060018360ff8a166003811061162157fe5b602002015160ff16145b1561163857506001905060025b60ff8716158015906116475750845b801561166a575060028360ff8a166003811061165f57fe5b602002015160ff1614155b15611676575060019050805b60ff8716158015906116855750855b801561168e5750845b1561169b57506001905060025b816116a557600080fd5b60078860ff16600381106116b557fe5b602091828204019190069054906101000a900460ff168102838960ff16600381106116dc57fe5b60ff9092166020929092020152600083600260200201518460016020020151856000602002015101019050808b60010160008c6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff021916908360ff1602179055508060ff1660001415801561175c575060ff8516155b1561176b5761176b8b8b6118c7565b60ff811661177f5761177d8b8b61195c565b505b604080513081526001600160a01b038c16602082015260ff83168183015290517f23dcae6acc296731e3679d01e7cd963988e5a372850a0a1db2b9b01539e19ff49181900360600190a15050505050505050505050565b60065460009060ff838116911614156117f15750600c610c15565b60065460ff83811661010090920416141561180e57506010610c15565b60065460ff8381166201000090920416141561182c57506008610c15565b60065460ff83811664010000000090920416141561184c57506018610c15565b60065460ff838116630100000090920416141561186b57506014610c15565b50601c919050565b6001600160a01b038216600090815260018401602052604081205460ff908116906007908416600381106118a357fe5b602081049091015460ff601f9092166101000a900481169116101590509392505050565b60028201546003830154101561191e5780826002018360030154815481106118eb57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555061194f565b600282018054600181018255600091825260209091200180546001600160a01b0319166001600160a01b0383161790555b5060030180546001019055565b6000805b8360030154811015611a9057826001600160a01b031684600201828154811061198557fe5b6000918252602090912001546001600160a01b03161415611a88578360020181815481106119af57fe5b600091825260209091200180546001600160a01b03191690556003840154600019018114611a7357836002016001856003015403815481106119ed57fe5b6000918252602090912001546002850180546001600160a01b039092169183908110611a1557fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555083600201600185600301540381548110611a5957fe5b600091825260209091200180546001600160a01b03191690555b50506003820180546000190190556001611a96565b600101611960565b50600090505b92915050565b6040518060600160405280600390602082028038833950919291505056fea265627a7a72315820db468dcb061d041191a2d7e79cab148f198693a7359e4bb469078f4637f7dc5d64736f6c63430005110032"

// DeployAccessIndexor deploys a new Ethereum contract, binding an instance of AccessIndexor to it.
func DeployAccessIndexor(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *AccessIndexor, error) {
	parsed, err := abi.JSON(strings.NewReader(AccessIndexorABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(AccessIndexorBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &AccessIndexor{AccessIndexorCaller: AccessIndexorCaller{contract: contract}, AccessIndexorTransactor: AccessIndexorTransactor{contract: contract}, AccessIndexorFilterer: AccessIndexorFilterer{contract: contract}}, nil
}

// AccessIndexor is an auto generated Go binding around an Ethereum contract.
type AccessIndexor struct {
	AccessIndexorCaller     // Read-only binding to the contract
	AccessIndexorTransactor // Write-only binding to the contract
	AccessIndexorFilterer   // Log filterer for contract events
}

// AccessIndexorCaller is an auto generated read-only Go binding around an Ethereum contract.
type AccessIndexorCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AccessIndexorTransactor is an auto generated write-only Go binding around an Ethereum contract.
type AccessIndexorTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AccessIndexorFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type AccessIndexorFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AccessIndexorSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type AccessIndexorSession struct {
	Contract     *AccessIndexor    // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// AccessIndexorCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type AccessIndexorCallerSession struct {
	Contract *AccessIndexorCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts        // Call options to use throughout this session
}

// AccessIndexorTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type AccessIndexorTransactorSession struct {
	Contract     *AccessIndexorTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts        // Transaction auth options to use throughout this session
}

// AccessIndexorRaw is an auto generated low-level Go binding around an Ethereum contract.
type AccessIndexorRaw struct {
	Contract *AccessIndexor // Generic contract binding to access the raw methods on
}

// AccessIndexorCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type AccessIndexorCallerRaw struct {
	Contract *AccessIndexorCaller // Generic read-only contract binding to access the raw methods on
}

// AccessIndexorTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type AccessIndexorTransactorRaw struct {
	Contract *AccessIndexorTransactor // Generic write-only contract binding to access the raw methods on
}

// NewAccessIndexor creates a new instance of AccessIndexor, bound to a specific deployed contract.
func NewAccessIndexor(address common.Address, backend bind.ContractBackend) (*AccessIndexor, error) {
	contract, err := bindAccessIndexor(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &AccessIndexor{AccessIndexorCaller: AccessIndexorCaller{contract: contract}, AccessIndexorTransactor: AccessIndexorTransactor{contract: contract}, AccessIndexorFilterer: AccessIndexorFilterer{contract: contract}}, nil
}

// NewAccessIndexorCaller creates a new read-only instance of AccessIndexor, bound to a specific deployed contract.
func NewAccessIndexorCaller(address common.Address, caller bind.ContractCaller) (*AccessIndexorCaller, error) {
	contract, err := bindAccessIndexor(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &AccessIndexorCaller{contract: contract}, nil
}

// NewAccessIndexorTransactor creates a new write-only instance of AccessIndexor, bound to a specific deployed contract.
func NewAccessIndexorTransactor(address common.Address, transactor bind.ContractTransactor) (*AccessIndexorTransactor, error) {
	contract, err := bindAccessIndexor(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &AccessIndexorTransactor{contract: contract}, nil
}

// NewAccessIndexorFilterer creates a new log filterer instance of AccessIndexor, bound to a specific deployed contract.
func NewAccessIndexorFilterer(address common.Address, filterer bind.ContractFilterer) (*AccessIndexorFilterer, error) {
	contract, err := bindAccessIndexor(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &AccessIndexorFilterer{contract: contract}, nil
}

// bindAccessIndexor binds a generic wrapper to an already deployed contract.
func bindAccessIndexor(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(AccessIndexorABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_AccessIndexor *AccessIndexorRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _AccessIndexor.Contract.AccessIndexorCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_AccessIndexor *AccessIndexorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _AccessIndexor.Contract.AccessIndexorTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_AccessIndexor *AccessIndexorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _AccessIndexor.Contract.AccessIndexorTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_AccessIndexor *AccessIndexorCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _AccessIndexor.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_AccessIndexor *AccessIndexorTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _AccessIndexor.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_AccessIndexor *AccessIndexorTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _AccessIndexor.Contract.contract.Transact(opts, method, params...)
}

// ACCESSCONFIRMED is a free data retrieval call binding the contract method 0x18689733.
//
// Solidity: function ACCESS_CONFIRMED() constant returns(uint8)
func (_AccessIndexor *AccessIndexorCaller) ACCESSCONFIRMED(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _AccessIndexor.contract.Call(opts, out, "ACCESS_CONFIRMED")
	return *ret0, err
}

// ACCESSCONFIRMED is a free data retrieval call binding the contract method 0x18689733.
//
// Solidity: function ACCESS_CONFIRMED() constant returns(uint8)
func (_AccessIndexor *AccessIndexorSession) ACCESSCONFIRMED() (uint8, error) {
	return _AccessIndexor.Contract.ACCESSCONFIRMED(&_AccessIndexor.CallOpts)
}

// ACCESSCONFIRMED is a free data retrieval call binding the contract method 0x18689733.
//
// Solidity: function ACCESS_CONFIRMED() constant returns(uint8)
func (_AccessIndexor *AccessIndexorCallerSession) ACCESSCONFIRMED() (uint8, error) {
	return _AccessIndexor.Contract.ACCESSCONFIRMED(&_AccessIndexor.CallOpts)
}

// ACCESSNONE is a free data retrieval call binding the contract method 0x8232f3f1.
//
// Solidity: function ACCESS_NONE() constant returns(uint8)
func (_AccessIndexor *AccessIndexorCaller) ACCESSNONE(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _AccessIndexor.contract.Call(opts, out, "ACCESS_NONE")
	return *ret0, err
}

// ACCESSNONE is a free data retrieval call binding the contract method 0x8232f3f1.
//
// Solidity: function ACCESS_NONE() constant returns(uint8)
func (_AccessIndexor *AccessIndexorSession) ACCESSNONE() (uint8, error) {
	return _AccessIndexor.Contract.ACCESSNONE(&_AccessIndexor.CallOpts)
}

// ACCESSNONE is a free data retrieval call binding the contract method 0x8232f3f1.
//
// Solidity: function ACCESS_NONE() constant returns(uint8)
func (_AccessIndexor *AccessIndexorCallerSession) ACCESSNONE() (uint8, error) {
	return _AccessIndexor.Contract.ACCESSNONE(&_AccessIndexor.CallOpts)
}

// ACCESSTENTATIVE is a free data retrieval call binding the contract method 0x479a0c51.
//
// Solidity: function ACCESS_TENTATIVE() constant returns(uint8)
func (_AccessIndexor *AccessIndexorCaller) ACCESSTENTATIVE(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _AccessIndexor.contract.Call(opts, out, "ACCESS_TENTATIVE")
	return *ret0, err
}

// ACCESSTENTATIVE is a free data retrieval call binding the contract method 0x479a0c51.
//
// Solidity: function ACCESS_TENTATIVE() constant returns(uint8)
func (_AccessIndexor *AccessIndexorSession) ACCESSTENTATIVE() (uint8, error) {
	return _AccessIndexor.Contract.ACCESSTENTATIVE(&_AccessIndexor.CallOpts)
}

// ACCESSTENTATIVE is a free data retrieval call binding the contract method 0x479a0c51.
//
// Solidity: function ACCESS_TENTATIVE() constant returns(uint8)
func (_AccessIndexor *AccessIndexorCallerSession) ACCESSTENTATIVE() (uint8, error) {
	return _AccessIndexor.Contract.ACCESSTENTATIVE(&_AccessIndexor.CallOpts)
}

// CATEGORYCONTENTOBJECT is a free data retrieval call binding the contract method 0x091600e6.
//
// Solidity: function CATEGORY_CONTENT_OBJECT() constant returns(uint8)
func (_AccessIndexor *AccessIndexorCaller) CATEGORYCONTENTOBJECT(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _AccessIndexor.contract.Call(opts, out, "CATEGORY_CONTENT_OBJECT")
	return *ret0, err
}

// CATEGORYCONTENTOBJECT is a free data retrieval call binding the contract method 0x091600e6.
//
// Solidity: function CATEGORY_CONTENT_OBJECT() constant returns(uint8)
func (_AccessIndexor *AccessIndexorSession) CATEGORYCONTENTOBJECT() (uint8, error) {
	return _AccessIndexor.Contract.CATEGORYCONTENTOBJECT(&_AccessIndexor.CallOpts)
}

// CATEGORYCONTENTOBJECT is a free data retrieval call binding the contract method 0x091600e6.
//
// Solidity: function CATEGORY_CONTENT_OBJECT() constant returns(uint8)
func (_AccessIndexor *AccessIndexorCallerSession) CATEGORYCONTENTOBJECT() (uint8, error) {
	return _AccessIndexor.Contract.CATEGORYCONTENTOBJECT(&_AccessIndexor.CallOpts)
}

// CATEGORYCONTENTTYPE is a free data retrieval call binding the contract method 0x68a0469a.
//
// Solidity: function CATEGORY_CONTENT_TYPE() constant returns(uint8)
func (_AccessIndexor *AccessIndexorCaller) CATEGORYCONTENTTYPE(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _AccessIndexor.contract.Call(opts, out, "CATEGORY_CONTENT_TYPE")
	return *ret0, err
}

// CATEGORYCONTENTTYPE is a free data retrieval call binding the contract method 0x68a0469a.
//
// Solidity: function CATEGORY_CONTENT_TYPE() constant returns(uint8)
func (_AccessIndexor *AccessIndexorSession) CATEGORYCONTENTTYPE() (uint8, error) {
	return _AccessIndexor.Contract.CATEGORYCONTENTTYPE(&_AccessIndexor.CallOpts)
}

// CATEGORYCONTENTTYPE is a free data retrieval call binding the contract method 0x68a0469a.
//
// Solidity: function CATEGORY_CONTENT_TYPE() constant returns(uint8)
func (_AccessIndexor *AccessIndexorCallerSession) CATEGORYCONTENTTYPE() (uint8, error) {
	return _AccessIndexor.Contract.CATEGORYCONTENTTYPE(&_AccessIndexor.CallOpts)
}

// CATEGORYCONTRACT is a free data retrieval call binding the contract method 0x6373a411.
//
// Solidity: function CATEGORY_CONTRACT() constant returns(uint8)
func (_AccessIndexor *AccessIndexorCaller) CATEGORYCONTRACT(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _AccessIndexor.contract.Call(opts, out, "CATEGORY_CONTRACT")
	return *ret0, err
}

// CATEGORYCONTRACT is a free data retrieval call binding the contract method 0x6373a411.
//
// Solidity: function CATEGORY_CONTRACT() constant returns(uint8)
func (_AccessIndexor *AccessIndexorSession) CATEGORYCONTRACT() (uint8, error) {
	return _AccessIndexor.Contract.CATEGORYCONTRACT(&_AccessIndexor.CallOpts)
}

// CATEGORYCONTRACT is a free data retrieval call binding the contract method 0x6373a411.
//
// Solidity: function CATEGORY_CONTRACT() constant returns(uint8)
func (_AccessIndexor *AccessIndexorCallerSession) CATEGORYCONTRACT() (uint8, error) {
	return _AccessIndexor.Contract.CATEGORYCONTRACT(&_AccessIndexor.CallOpts)
}

// CATEGORYGROUP is a free data retrieval call binding the contract method 0x12915a30.
//
// Solidity: function CATEGORY_GROUP() constant returns(uint8)
func (_AccessIndexor *AccessIndexorCaller) CATEGORYGROUP(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _AccessIndexor.contract.Call(opts, out, "CATEGORY_GROUP")
	return *ret0, err
}

// CATEGORYGROUP is a free data retrieval call binding the contract method 0x12915a30.
//
// Solidity: function CATEGORY_GROUP() constant returns(uint8)
func (_AccessIndexor *AccessIndexorSession) CATEGORYGROUP() (uint8, error) {
	return _AccessIndexor.Contract.CATEGORYGROUP(&_AccessIndexor.CallOpts)
}

// CATEGORYGROUP is a free data retrieval call binding the contract method 0x12915a30.
//
// Solidity: function CATEGORY_GROUP() constant returns(uint8)
func (_AccessIndexor *AccessIndexorCallerSession) CATEGORYGROUP() (uint8, error) {
	return _AccessIndexor.Contract.CATEGORYGROUP(&_AccessIndexor.CallOpts)
}

// CATEGORYLIBRARY is a free data retrieval call binding the contract method 0x16aed232.
//
// Solidity: function CATEGORY_LIBRARY() constant returns(uint8)
func (_AccessIndexor *AccessIndexorCaller) CATEGORYLIBRARY(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _AccessIndexor.contract.Call(opts, out, "CATEGORY_LIBRARY")
	return *ret0, err
}

// CATEGORYLIBRARY is a free data retrieval call binding the contract method 0x16aed232.
//
// Solidity: function CATEGORY_LIBRARY() constant returns(uint8)
func (_AccessIndexor *AccessIndexorSession) CATEGORYLIBRARY() (uint8, error) {
	return _AccessIndexor.Contract.CATEGORYLIBRARY(&_AccessIndexor.CallOpts)
}

// CATEGORYLIBRARY is a free data retrieval call binding the contract method 0x16aed232.
//
// Solidity: function CATEGORY_LIBRARY() constant returns(uint8)
func (_AccessIndexor *AccessIndexorCallerSession) CATEGORYLIBRARY() (uint8, error) {
	return _AccessIndexor.Contract.CATEGORYLIBRARY(&_AccessIndexor.CallOpts)
}

// TYPEACCESS is a free data retrieval call binding the contract method 0xd1aeb651.
//
// Solidity: function TYPE_ACCESS() constant returns(uint8)
func (_AccessIndexor *AccessIndexorCaller) TYPEACCESS(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _AccessIndexor.contract.Call(opts, out, "TYPE_ACCESS")
	return *ret0, err
}

// TYPEACCESS is a free data retrieval call binding the contract method 0xd1aeb651.
//
// Solidity: function TYPE_ACCESS() constant returns(uint8)
func (_AccessIndexor *AccessIndexorSession) TYPEACCESS() (uint8, error) {
	return _AccessIndexor.Contract.TYPEACCESS(&_AccessIndexor.CallOpts)
}

// TYPEACCESS is a free data retrieval call binding the contract method 0xd1aeb651.
//
// Solidity: function TYPE_ACCESS() constant returns(uint8)
func (_AccessIndexor *AccessIndexorCallerSession) TYPEACCESS() (uint8, error) {
	return _AccessIndexor.Contract.TYPEACCESS(&_AccessIndexor.CallOpts)
}

// TYPEEDIT is a free data retrieval call binding the contract method 0x5d97b6c2.
//
// Solidity: function TYPE_EDIT() constant returns(uint8)
func (_AccessIndexor *AccessIndexorCaller) TYPEEDIT(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _AccessIndexor.contract.Call(opts, out, "TYPE_EDIT")
	return *ret0, err
}

// TYPEEDIT is a free data retrieval call binding the contract method 0x5d97b6c2.
//
// Solidity: function TYPE_EDIT() constant returns(uint8)
func (_AccessIndexor *AccessIndexorSession) TYPEEDIT() (uint8, error) {
	return _AccessIndexor.Contract.TYPEEDIT(&_AccessIndexor.CallOpts)
}

// TYPEEDIT is a free data retrieval call binding the contract method 0x5d97b6c2.
//
// Solidity: function TYPE_EDIT() constant returns(uint8)
func (_AccessIndexor *AccessIndexorCallerSession) TYPEEDIT() (uint8, error) {
	return _AccessIndexor.Contract.TYPEEDIT(&_AccessIndexor.CallOpts)
}

// TYPESEE is a free data retrieval call binding the contract method 0x96eba03d.
//
// Solidity: function TYPE_SEE() constant returns(uint8)
func (_AccessIndexor *AccessIndexorCaller) TYPESEE(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _AccessIndexor.contract.Call(opts, out, "TYPE_SEE")
	return *ret0, err
}

// TYPESEE is a free data retrieval call binding the contract method 0x96eba03d.
//
// Solidity: function TYPE_SEE() constant returns(uint8)
func (_AccessIndexor *AccessIndexorSession) TYPESEE() (uint8, error) {
	return _AccessIndexor.Contract.TYPESEE(&_AccessIndexor.CallOpts)
}

// TYPESEE is a free data retrieval call binding the contract method 0x96eba03d.
//
// Solidity: function TYPE_SEE() constant returns(uint8)
func (_AccessIndexor *AccessIndexorCallerSession) TYPESEE() (uint8, error) {
	return _AccessIndexor.Contract.TYPESEE(&_AccessIndexor.CallOpts)
}

// AccessGroups is a free data retrieval call binding the contract method 0x30e66949.
//
// Solidity: function accessGroups() constant returns(uint8 category, uint256 length)
func (_AccessIndexor *AccessIndexorCaller) AccessGroups(opts *bind.CallOpts) (struct {
	Category uint8
	Length   *big.Int
}, error) {
	ret := new(struct {
		Category uint8
		Length   *big.Int
	})
	out := ret
	err := _AccessIndexor.contract.Call(opts, out, "accessGroups")
	return *ret, err
}

// AccessGroups is a free data retrieval call binding the contract method 0x30e66949.
//
// Solidity: function accessGroups() constant returns(uint8 category, uint256 length)
func (_AccessIndexor *AccessIndexorSession) AccessGroups() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _AccessIndexor.Contract.AccessGroups(&_AccessIndexor.CallOpts)
}

// AccessGroups is a free data retrieval call binding the contract method 0x30e66949.
//
// Solidity: function accessGroups() constant returns(uint8 category, uint256 length)
func (_AccessIndexor *AccessIndexorCallerSession) AccessGroups() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _AccessIndexor.Contract.AccessGroups(&_AccessIndexor.CallOpts)
}

// CheckDirectRights is a free data retrieval call binding the contract method 0xa00b38c4.
//
// Solidity: function checkDirectRights(uint8 index_type, address obj, uint8 access_type) constant returns(bool)
func (_AccessIndexor *AccessIndexorCaller) CheckDirectRights(opts *bind.CallOpts, index_type uint8, obj common.Address, access_type uint8) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _AccessIndexor.contract.Call(opts, out, "checkDirectRights", index_type, obj, access_type)
	return *ret0, err
}

// CheckDirectRights is a free data retrieval call binding the contract method 0xa00b38c4.
//
// Solidity: function checkDirectRights(uint8 index_type, address obj, uint8 access_type) constant returns(bool)
func (_AccessIndexor *AccessIndexorSession) CheckDirectRights(index_type uint8, obj common.Address, access_type uint8) (bool, error) {
	return _AccessIndexor.Contract.CheckDirectRights(&_AccessIndexor.CallOpts, index_type, obj, access_type)
}

// CheckDirectRights is a free data retrieval call binding the contract method 0xa00b38c4.
//
// Solidity: function checkDirectRights(uint8 index_type, address obj, uint8 access_type) constant returns(bool)
func (_AccessIndexor *AccessIndexorCallerSession) CheckDirectRights(index_type uint8, obj common.Address, access_type uint8) (bool, error) {
	return _AccessIndexor.Contract.CheckDirectRights(&_AccessIndexor.CallOpts, index_type, obj, access_type)
}

// CheckRights is a free data retrieval call binding the contract method 0x7fb52f1a.
//
// Solidity: function checkRights(uint8 index_type, address obj, uint8 access_type) constant returns(bool)
func (_AccessIndexor *AccessIndexorCaller) CheckRights(opts *bind.CallOpts, index_type uint8, obj common.Address, access_type uint8) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _AccessIndexor.contract.Call(opts, out, "checkRights", index_type, obj, access_type)
	return *ret0, err
}

// CheckRights is a free data retrieval call binding the contract method 0x7fb52f1a.
//
// Solidity: function checkRights(uint8 index_type, address obj, uint8 access_type) constant returns(bool)
func (_AccessIndexor *AccessIndexorSession) CheckRights(index_type uint8, obj common.Address, access_type uint8) (bool, error) {
	return _AccessIndexor.Contract.CheckRights(&_AccessIndexor.CallOpts, index_type, obj, access_type)
}

// CheckRights is a free data retrieval call binding the contract method 0x7fb52f1a.
//
// Solidity: function checkRights(uint8 index_type, address obj, uint8 access_type) constant returns(bool)
func (_AccessIndexor *AccessIndexorCallerSession) CheckRights(index_type uint8, obj common.Address, access_type uint8) (bool, error) {
	return _AccessIndexor.Contract.CheckRights(&_AccessIndexor.CallOpts, index_type, obj, access_type)
}

// ContentObjects is a free data retrieval call binding the contract method 0xa980892d.
//
// Solidity: function contentObjects() constant returns(uint8 category, uint256 length)
func (_AccessIndexor *AccessIndexorCaller) ContentObjects(opts *bind.CallOpts) (struct {
	Category uint8
	Length   *big.Int
}, error) {
	ret := new(struct {
		Category uint8
		Length   *big.Int
	})
	out := ret
	err := _AccessIndexor.contract.Call(opts, out, "contentObjects")
	return *ret, err
}

// ContentObjects is a free data retrieval call binding the contract method 0xa980892d.
//
// Solidity: function contentObjects() constant returns(uint8 category, uint256 length)
func (_AccessIndexor *AccessIndexorSession) ContentObjects() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _AccessIndexor.Contract.ContentObjects(&_AccessIndexor.CallOpts)
}

// ContentObjects is a free data retrieval call binding the contract method 0xa980892d.
//
// Solidity: function contentObjects() constant returns(uint8 category, uint256 length)
func (_AccessIndexor *AccessIndexorCallerSession) ContentObjects() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _AccessIndexor.Contract.ContentObjects(&_AccessIndexor.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_AccessIndexor *AccessIndexorCaller) ContentSpace(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _AccessIndexor.contract.Call(opts, out, "contentSpace")
	return *ret0, err
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_AccessIndexor *AccessIndexorSession) ContentSpace() (common.Address, error) {
	return _AccessIndexor.Contract.ContentSpace(&_AccessIndexor.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_AccessIndexor *AccessIndexorCallerSession) ContentSpace() (common.Address, error) {
	return _AccessIndexor.Contract.ContentSpace(&_AccessIndexor.CallOpts)
}

// ContentTypes is a free data retrieval call binding the contract method 0x9f46133e.
//
// Solidity: function contentTypes() constant returns(uint8 category, uint256 length)
func (_AccessIndexor *AccessIndexorCaller) ContentTypes(opts *bind.CallOpts) (struct {
	Category uint8
	Length   *big.Int
}, error) {
	ret := new(struct {
		Category uint8
		Length   *big.Int
	})
	out := ret
	err := _AccessIndexor.contract.Call(opts, out, "contentTypes")
	return *ret, err
}

// ContentTypes is a free data retrieval call binding the contract method 0x9f46133e.
//
// Solidity: function contentTypes() constant returns(uint8 category, uint256 length)
func (_AccessIndexor *AccessIndexorSession) ContentTypes() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _AccessIndexor.Contract.ContentTypes(&_AccessIndexor.CallOpts)
}

// ContentTypes is a free data retrieval call binding the contract method 0x9f46133e.
//
// Solidity: function contentTypes() constant returns(uint8 category, uint256 length)
func (_AccessIndexor *AccessIndexorCallerSession) ContentTypes() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _AccessIndexor.Contract.ContentTypes(&_AccessIndexor.CallOpts)
}

// ContractExists is a free data retrieval call binding the contract method 0x7709bc78.
//
// Solidity: function contractExists(address addr) constant returns(bool)
func (_AccessIndexor *AccessIndexorCaller) ContractExists(opts *bind.CallOpts, addr common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _AccessIndexor.contract.Call(opts, out, "contractExists", addr)
	return *ret0, err
}

// ContractExists is a free data retrieval call binding the contract method 0x7709bc78.
//
// Solidity: function contractExists(address addr) constant returns(bool)
func (_AccessIndexor *AccessIndexorSession) ContractExists(addr common.Address) (bool, error) {
	return _AccessIndexor.Contract.ContractExists(&_AccessIndexor.CallOpts, addr)
}

// ContractExists is a free data retrieval call binding the contract method 0x7709bc78.
//
// Solidity: function contractExists(address addr) constant returns(bool)
func (_AccessIndexor *AccessIndexorCallerSession) ContractExists(addr common.Address) (bool, error) {
	return _AccessIndexor.Contract.ContractExists(&_AccessIndexor.CallOpts, addr)
}

// Contracts is a free data retrieval call binding the contract method 0x6c0f79b6.
//
// Solidity: function contracts() constant returns(uint8 category, uint256 length)
func (_AccessIndexor *AccessIndexorCaller) Contracts(opts *bind.CallOpts) (struct {
	Category uint8
	Length   *big.Int
}, error) {
	ret := new(struct {
		Category uint8
		Length   *big.Int
	})
	out := ret
	err := _AccessIndexor.contract.Call(opts, out, "contracts")
	return *ret, err
}

// Contracts is a free data retrieval call binding the contract method 0x6c0f79b6.
//
// Solidity: function contracts() constant returns(uint8 category, uint256 length)
func (_AccessIndexor *AccessIndexorSession) Contracts() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _AccessIndexor.Contract.Contracts(&_AccessIndexor.CallOpts)
}

// Contracts is a free data retrieval call binding the contract method 0x6c0f79b6.
//
// Solidity: function contracts() constant returns(uint8 category, uint256 length)
func (_AccessIndexor *AccessIndexorCallerSession) Contracts() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _AccessIndexor.Contract.Contracts(&_AccessIndexor.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_AccessIndexor *AccessIndexorCaller) Creator(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _AccessIndexor.contract.Call(opts, out, "creator")
	return *ret0, err
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_AccessIndexor *AccessIndexorSession) Creator() (common.Address, error) {
	return _AccessIndexor.Contract.Creator(&_AccessIndexor.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_AccessIndexor *AccessIndexorCallerSession) Creator() (common.Address, error) {
	return _AccessIndexor.Contract.Creator(&_AccessIndexor.CallOpts)
}

// GetAccessGroup is a free data retrieval call binding the contract method 0x2d474cbd.
//
// Solidity: function getAccessGroup(uint256 position) constant returns(address)
func (_AccessIndexor *AccessIndexorCaller) GetAccessGroup(opts *bind.CallOpts, position *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _AccessIndexor.contract.Call(opts, out, "getAccessGroup", position)
	return *ret0, err
}

// GetAccessGroup is a free data retrieval call binding the contract method 0x2d474cbd.
//
// Solidity: function getAccessGroup(uint256 position) constant returns(address)
func (_AccessIndexor *AccessIndexorSession) GetAccessGroup(position *big.Int) (common.Address, error) {
	return _AccessIndexor.Contract.GetAccessGroup(&_AccessIndexor.CallOpts, position)
}

// GetAccessGroup is a free data retrieval call binding the contract method 0x2d474cbd.
//
// Solidity: function getAccessGroup(uint256 position) constant returns(address)
func (_AccessIndexor *AccessIndexorCallerSession) GetAccessGroup(position *big.Int) (common.Address, error) {
	return _AccessIndexor.Contract.GetAccessGroup(&_AccessIndexor.CallOpts, position)
}

// GetAccessGroupRights is a free data retrieval call binding the contract method 0x304f4a7b.
//
// Solidity: function getAccessGroupRights(address group) constant returns(uint8)
func (_AccessIndexor *AccessIndexorCaller) GetAccessGroupRights(opts *bind.CallOpts, group common.Address) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _AccessIndexor.contract.Call(opts, out, "getAccessGroupRights", group)
	return *ret0, err
}

// GetAccessGroupRights is a free data retrieval call binding the contract method 0x304f4a7b.
//
// Solidity: function getAccessGroupRights(address group) constant returns(uint8)
func (_AccessIndexor *AccessIndexorSession) GetAccessGroupRights(group common.Address) (uint8, error) {
	return _AccessIndexor.Contract.GetAccessGroupRights(&_AccessIndexor.CallOpts, group)
}

// GetAccessGroupRights is a free data retrieval call binding the contract method 0x304f4a7b.
//
// Solidity: function getAccessGroupRights(address group) constant returns(uint8)
func (_AccessIndexor *AccessIndexorCallerSession) GetAccessGroupRights(group common.Address) (uint8, error) {
	return _AccessIndexor.Contract.GetAccessGroupRights(&_AccessIndexor.CallOpts, group)
}

// GetAccessGroupsLength is a free data retrieval call binding the contract method 0x0dc10d3f.
//
// Solidity: function getAccessGroupsLength() constant returns(uint256)
func (_AccessIndexor *AccessIndexorCaller) GetAccessGroupsLength(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _AccessIndexor.contract.Call(opts, out, "getAccessGroupsLength")
	return *ret0, err
}

// GetAccessGroupsLength is a free data retrieval call binding the contract method 0x0dc10d3f.
//
// Solidity: function getAccessGroupsLength() constant returns(uint256)
func (_AccessIndexor *AccessIndexorSession) GetAccessGroupsLength() (*big.Int, error) {
	return _AccessIndexor.Contract.GetAccessGroupsLength(&_AccessIndexor.CallOpts)
}

// GetAccessGroupsLength is a free data retrieval call binding the contract method 0x0dc10d3f.
//
// Solidity: function getAccessGroupsLength() constant returns(uint256)
func (_AccessIndexor *AccessIndexorCallerSession) GetAccessGroupsLength() (*big.Int, error) {
	return _AccessIndexor.Contract.GetAccessGroupsLength(&_AccessIndexor.CallOpts)
}

// GetContentObject is a free data retrieval call binding the contract method 0xcf8a7503.
//
// Solidity: function getContentObject(uint256 position) constant returns(address)
func (_AccessIndexor *AccessIndexorCaller) GetContentObject(opts *bind.CallOpts, position *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _AccessIndexor.contract.Call(opts, out, "getContentObject", position)
	return *ret0, err
}

// GetContentObject is a free data retrieval call binding the contract method 0xcf8a7503.
//
// Solidity: function getContentObject(uint256 position) constant returns(address)
func (_AccessIndexor *AccessIndexorSession) GetContentObject(position *big.Int) (common.Address, error) {
	return _AccessIndexor.Contract.GetContentObject(&_AccessIndexor.CallOpts, position)
}

// GetContentObject is a free data retrieval call binding the contract method 0xcf8a7503.
//
// Solidity: function getContentObject(uint256 position) constant returns(address)
func (_AccessIndexor *AccessIndexorCallerSession) GetContentObject(position *big.Int) (common.Address, error) {
	return _AccessIndexor.Contract.GetContentObject(&_AccessIndexor.CallOpts, position)
}

// GetContentObjectRights is a free data retrieval call binding the contract method 0x69881c0c.
//
// Solidity: function getContentObjectRights(address obj) constant returns(uint8)
func (_AccessIndexor *AccessIndexorCaller) GetContentObjectRights(opts *bind.CallOpts, obj common.Address) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _AccessIndexor.contract.Call(opts, out, "getContentObjectRights", obj)
	return *ret0, err
}

// GetContentObjectRights is a free data retrieval call binding the contract method 0x69881c0c.
//
// Solidity: function getContentObjectRights(address obj) constant returns(uint8)
func (_AccessIndexor *AccessIndexorSession) GetContentObjectRights(obj common.Address) (uint8, error) {
	return _AccessIndexor.Contract.GetContentObjectRights(&_AccessIndexor.CallOpts, obj)
}

// GetContentObjectRights is a free data retrieval call binding the contract method 0x69881c0c.
//
// Solidity: function getContentObjectRights(address obj) constant returns(uint8)
func (_AccessIndexor *AccessIndexorCallerSession) GetContentObjectRights(obj common.Address) (uint8, error) {
	return _AccessIndexor.Contract.GetContentObjectRights(&_AccessIndexor.CallOpts, obj)
}

// GetContentObjectsLength is a free data retrieval call binding the contract method 0xebe9314e.
//
// Solidity: function getContentObjectsLength() constant returns(uint256)
func (_AccessIndexor *AccessIndexorCaller) GetContentObjectsLength(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _AccessIndexor.contract.Call(opts, out, "getContentObjectsLength")
	return *ret0, err
}

// GetContentObjectsLength is a free data retrieval call binding the contract method 0xebe9314e.
//
// Solidity: function getContentObjectsLength() constant returns(uint256)
func (_AccessIndexor *AccessIndexorSession) GetContentObjectsLength() (*big.Int, error) {
	return _AccessIndexor.Contract.GetContentObjectsLength(&_AccessIndexor.CallOpts)
}

// GetContentObjectsLength is a free data retrieval call binding the contract method 0xebe9314e.
//
// Solidity: function getContentObjectsLength() constant returns(uint256)
func (_AccessIndexor *AccessIndexorCallerSession) GetContentObjectsLength() (*big.Int, error) {
	return _AccessIndexor.Contract.GetContentObjectsLength(&_AccessIndexor.CallOpts)
}

// GetContentType is a free data retrieval call binding the contract method 0xaa3f6952.
//
// Solidity: function getContentType(uint256 position) constant returns(address)
func (_AccessIndexor *AccessIndexorCaller) GetContentType(opts *bind.CallOpts, position *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _AccessIndexor.contract.Call(opts, out, "getContentType", position)
	return *ret0, err
}

// GetContentType is a free data retrieval call binding the contract method 0xaa3f6952.
//
// Solidity: function getContentType(uint256 position) constant returns(address)
func (_AccessIndexor *AccessIndexorSession) GetContentType(position *big.Int) (common.Address, error) {
	return _AccessIndexor.Contract.GetContentType(&_AccessIndexor.CallOpts, position)
}

// GetContentType is a free data retrieval call binding the contract method 0xaa3f6952.
//
// Solidity: function getContentType(uint256 position) constant returns(address)
func (_AccessIndexor *AccessIndexorCallerSession) GetContentType(position *big.Int) (common.Address, error) {
	return _AccessIndexor.Contract.GetContentType(&_AccessIndexor.CallOpts, position)
}

// GetContentTypeRights is a free data retrieval call binding the contract method 0xa4081d62.
//
// Solidity: function getContentTypeRights(address obj) constant returns(uint8)
func (_AccessIndexor *AccessIndexorCaller) GetContentTypeRights(opts *bind.CallOpts, obj common.Address) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _AccessIndexor.contract.Call(opts, out, "getContentTypeRights", obj)
	return *ret0, err
}

// GetContentTypeRights is a free data retrieval call binding the contract method 0xa4081d62.
//
// Solidity: function getContentTypeRights(address obj) constant returns(uint8)
func (_AccessIndexor *AccessIndexorSession) GetContentTypeRights(obj common.Address) (uint8, error) {
	return _AccessIndexor.Contract.GetContentTypeRights(&_AccessIndexor.CallOpts, obj)
}

// GetContentTypeRights is a free data retrieval call binding the contract method 0xa4081d62.
//
// Solidity: function getContentTypeRights(address obj) constant returns(uint8)
func (_AccessIndexor *AccessIndexorCallerSession) GetContentTypeRights(obj common.Address) (uint8, error) {
	return _AccessIndexor.Contract.GetContentTypeRights(&_AccessIndexor.CallOpts, obj)
}

// GetContentTypesLength is a free data retrieval call binding the contract method 0x5c1d3059.
//
// Solidity: function getContentTypesLength() constant returns(uint256)
func (_AccessIndexor *AccessIndexorCaller) GetContentTypesLength(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _AccessIndexor.contract.Call(opts, out, "getContentTypesLength")
	return *ret0, err
}

// GetContentTypesLength is a free data retrieval call binding the contract method 0x5c1d3059.
//
// Solidity: function getContentTypesLength() constant returns(uint256)
func (_AccessIndexor *AccessIndexorSession) GetContentTypesLength() (*big.Int, error) {
	return _AccessIndexor.Contract.GetContentTypesLength(&_AccessIndexor.CallOpts)
}

// GetContentTypesLength is a free data retrieval call binding the contract method 0x5c1d3059.
//
// Solidity: function getContentTypesLength() constant returns(uint256)
func (_AccessIndexor *AccessIndexorCallerSession) GetContentTypesLength() (*big.Int, error) {
	return _AccessIndexor.Contract.GetContentTypesLength(&_AccessIndexor.CallOpts)
}

// GetContract is a free data retrieval call binding the contract method 0x6ebc8c86.
//
// Solidity: function getContract(uint256 position) constant returns(address)
func (_AccessIndexor *AccessIndexorCaller) GetContract(opts *bind.CallOpts, position *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _AccessIndexor.contract.Call(opts, out, "getContract", position)
	return *ret0, err
}

// GetContract is a free data retrieval call binding the contract method 0x6ebc8c86.
//
// Solidity: function getContract(uint256 position) constant returns(address)
func (_AccessIndexor *AccessIndexorSession) GetContract(position *big.Int) (common.Address, error) {
	return _AccessIndexor.Contract.GetContract(&_AccessIndexor.CallOpts, position)
}

// GetContract is a free data retrieval call binding the contract method 0x6ebc8c86.
//
// Solidity: function getContract(uint256 position) constant returns(address)
func (_AccessIndexor *AccessIndexorCallerSession) GetContract(position *big.Int) (common.Address, error) {
	return _AccessIndexor.Contract.GetContract(&_AccessIndexor.CallOpts, position)
}

// GetContractRights is a free data retrieval call binding the contract method 0x08d865d7.
//
// Solidity: function getContractRights(address obj) constant returns(uint8)
func (_AccessIndexor *AccessIndexorCaller) GetContractRights(opts *bind.CallOpts, obj common.Address) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _AccessIndexor.contract.Call(opts, out, "getContractRights", obj)
	return *ret0, err
}

// GetContractRights is a free data retrieval call binding the contract method 0x08d865d7.
//
// Solidity: function getContractRights(address obj) constant returns(uint8)
func (_AccessIndexor *AccessIndexorSession) GetContractRights(obj common.Address) (uint8, error) {
	return _AccessIndexor.Contract.GetContractRights(&_AccessIndexor.CallOpts, obj)
}

// GetContractRights is a free data retrieval call binding the contract method 0x08d865d7.
//
// Solidity: function getContractRights(address obj) constant returns(uint8)
func (_AccessIndexor *AccessIndexorCallerSession) GetContractRights(obj common.Address) (uint8, error) {
	return _AccessIndexor.Contract.GetContractRights(&_AccessIndexor.CallOpts, obj)
}

// GetContractsLength is a free data retrieval call binding the contract method 0xfccc134f.
//
// Solidity: function getContractsLength() constant returns(uint256)
func (_AccessIndexor *AccessIndexorCaller) GetContractsLength(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _AccessIndexor.contract.Call(opts, out, "getContractsLength")
	return *ret0, err
}

// GetContractsLength is a free data retrieval call binding the contract method 0xfccc134f.
//
// Solidity: function getContractsLength() constant returns(uint256)
func (_AccessIndexor *AccessIndexorSession) GetContractsLength() (*big.Int, error) {
	return _AccessIndexor.Contract.GetContractsLength(&_AccessIndexor.CallOpts)
}

// GetContractsLength is a free data retrieval call binding the contract method 0xfccc134f.
//
// Solidity: function getContractsLength() constant returns(uint256)
func (_AccessIndexor *AccessIndexorCallerSession) GetContractsLength() (*big.Int, error) {
	return _AccessIndexor.Contract.GetContractsLength(&_AccessIndexor.CallOpts)
}

// GetLibrariesLength is a free data retrieval call binding the contract method 0xcb86806d.
//
// Solidity: function getLibrariesLength() constant returns(uint256)
func (_AccessIndexor *AccessIndexorCaller) GetLibrariesLength(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _AccessIndexor.contract.Call(opts, out, "getLibrariesLength")
	return *ret0, err
}

// GetLibrariesLength is a free data retrieval call binding the contract method 0xcb86806d.
//
// Solidity: function getLibrariesLength() constant returns(uint256)
func (_AccessIndexor *AccessIndexorSession) GetLibrariesLength() (*big.Int, error) {
	return _AccessIndexor.Contract.GetLibrariesLength(&_AccessIndexor.CallOpts)
}

// GetLibrariesLength is a free data retrieval call binding the contract method 0xcb86806d.
//
// Solidity: function getLibrariesLength() constant returns(uint256)
func (_AccessIndexor *AccessIndexorCallerSession) GetLibrariesLength() (*big.Int, error) {
	return _AccessIndexor.Contract.GetLibrariesLength(&_AccessIndexor.CallOpts)
}

// GetLibrary is a free data retrieval call binding the contract method 0xd15d62a7.
//
// Solidity: function getLibrary(uint256 position) constant returns(address)
func (_AccessIndexor *AccessIndexorCaller) GetLibrary(opts *bind.CallOpts, position *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _AccessIndexor.contract.Call(opts, out, "getLibrary", position)
	return *ret0, err
}

// GetLibrary is a free data retrieval call binding the contract method 0xd15d62a7.
//
// Solidity: function getLibrary(uint256 position) constant returns(address)
func (_AccessIndexor *AccessIndexorSession) GetLibrary(position *big.Int) (common.Address, error) {
	return _AccessIndexor.Contract.GetLibrary(&_AccessIndexor.CallOpts, position)
}

// GetLibrary is a free data retrieval call binding the contract method 0xd15d62a7.
//
// Solidity: function getLibrary(uint256 position) constant returns(address)
func (_AccessIndexor *AccessIndexorCallerSession) GetLibrary(position *big.Int) (common.Address, error) {
	return _AccessIndexor.Contract.GetLibrary(&_AccessIndexor.CallOpts, position)
}

// GetLibraryRights is a free data retrieval call binding the contract method 0xfb52222c.
//
// Solidity: function getLibraryRights(address lib) constant returns(uint8)
func (_AccessIndexor *AccessIndexorCaller) GetLibraryRights(opts *bind.CallOpts, lib common.Address) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _AccessIndexor.contract.Call(opts, out, "getLibraryRights", lib)
	return *ret0, err
}

// GetLibraryRights is a free data retrieval call binding the contract method 0xfb52222c.
//
// Solidity: function getLibraryRights(address lib) constant returns(uint8)
func (_AccessIndexor *AccessIndexorSession) GetLibraryRights(lib common.Address) (uint8, error) {
	return _AccessIndexor.Contract.GetLibraryRights(&_AccessIndexor.CallOpts, lib)
}

// GetLibraryRights is a free data retrieval call binding the contract method 0xfb52222c.
//
// Solidity: function getLibraryRights(address lib) constant returns(uint8)
func (_AccessIndexor *AccessIndexorCallerSession) GetLibraryRights(lib common.Address) (uint8, error) {
	return _AccessIndexor.Contract.GetLibraryRights(&_AccessIndexor.CallOpts, lib)
}

// HasManagerAccess is a free data retrieval call binding the contract method 0x42e7ba7b.
//
// Solidity: function hasManagerAccess(address candidate) constant returns(bool)
func (_AccessIndexor *AccessIndexorCaller) HasManagerAccess(opts *bind.CallOpts, candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _AccessIndexor.contract.Call(opts, out, "hasManagerAccess", candidate)
	return *ret0, err
}

// HasManagerAccess is a free data retrieval call binding the contract method 0x42e7ba7b.
//
// Solidity: function hasManagerAccess(address candidate) constant returns(bool)
func (_AccessIndexor *AccessIndexorSession) HasManagerAccess(candidate common.Address) (bool, error) {
	return _AccessIndexor.Contract.HasManagerAccess(&_AccessIndexor.CallOpts, candidate)
}

// HasManagerAccess is a free data retrieval call binding the contract method 0x42e7ba7b.
//
// Solidity: function hasManagerAccess(address candidate) constant returns(bool)
func (_AccessIndexor *AccessIndexorCallerSession) HasManagerAccess(candidate common.Address) (bool, error) {
	return _AccessIndexor.Contract.HasManagerAccess(&_AccessIndexor.CallOpts, candidate)
}

// Libraries is a free data retrieval call binding the contract method 0xc4b1978d.
//
// Solidity: function libraries() constant returns(uint8 category, uint256 length)
func (_AccessIndexor *AccessIndexorCaller) Libraries(opts *bind.CallOpts) (struct {
	Category uint8
	Length   *big.Int
}, error) {
	ret := new(struct {
		Category uint8
		Length   *big.Int
	})
	out := ret
	err := _AccessIndexor.contract.Call(opts, out, "libraries")
	return *ret, err
}

// Libraries is a free data retrieval call binding the contract method 0xc4b1978d.
//
// Solidity: function libraries() constant returns(uint8 category, uint256 length)
func (_AccessIndexor *AccessIndexorSession) Libraries() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _AccessIndexor.Contract.Libraries(&_AccessIndexor.CallOpts)
}

// Libraries is a free data retrieval call binding the contract method 0xc4b1978d.
//
// Solidity: function libraries() constant returns(uint8 category, uint256 length)
func (_AccessIndexor *AccessIndexorCallerSession) Libraries() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _AccessIndexor.Contract.Libraries(&_AccessIndexor.CallOpts)
}

// Others is a free data retrieval call binding the contract method 0x51a7fc87.
//
// Solidity: function others() constant returns(uint8 category, uint256 length)
func (_AccessIndexor *AccessIndexorCaller) Others(opts *bind.CallOpts) (struct {
	Category uint8
	Length   *big.Int
}, error) {
	ret := new(struct {
		Category uint8
		Length   *big.Int
	})
	out := ret
	err := _AccessIndexor.contract.Call(opts, out, "others")
	return *ret, err
}

// Others is a free data retrieval call binding the contract method 0x51a7fc87.
//
// Solidity: function others() constant returns(uint8 category, uint256 length)
func (_AccessIndexor *AccessIndexorSession) Others() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _AccessIndexor.Contract.Others(&_AccessIndexor.CallOpts)
}

// Others is a free data retrieval call binding the contract method 0x51a7fc87.
//
// Solidity: function others() constant returns(uint8 category, uint256 length)
func (_AccessIndexor *AccessIndexorCallerSession) Others() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _AccessIndexor.Contract.Others(&_AccessIndexor.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_AccessIndexor *AccessIndexorCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _AccessIndexor.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_AccessIndexor *AccessIndexorSession) Owner() (common.Address, error) {
	return _AccessIndexor.Contract.Owner(&_AccessIndexor.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_AccessIndexor *AccessIndexorCallerSession) Owner() (common.Address, error) {
	return _AccessIndexor.Contract.Owner(&_AccessIndexor.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_AccessIndexor *AccessIndexorCaller) Version(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _AccessIndexor.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_AccessIndexor *AccessIndexorSession) Version() ([32]byte, error) {
	return _AccessIndexor.Contract.Version(&_AccessIndexor.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_AccessIndexor *AccessIndexorCallerSession) Version() ([32]byte, error) {
	return _AccessIndexor.Contract.Version(&_AccessIndexor.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_AccessIndexor *AccessIndexorCaller) VersionAPI(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _AccessIndexor.contract.Call(opts, out, "versionAPI")
	return *ret0, err
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_AccessIndexor *AccessIndexorSession) VersionAPI() ([32]byte, error) {
	return _AccessIndexor.Contract.VersionAPI(&_AccessIndexor.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_AccessIndexor *AccessIndexorCallerSession) VersionAPI() ([32]byte, error) {
	return _AccessIndexor.Contract.VersionAPI(&_AccessIndexor.CallOpts)
}

// CleanUpAccessGroups is a paid mutator transaction binding the contract method 0xd30f8cd0.
//
// Solidity: function cleanUpAccessGroups() returns(uint256)
func (_AccessIndexor *AccessIndexorTransactor) CleanUpAccessGroups(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _AccessIndexor.contract.Transact(opts, "cleanUpAccessGroups")
}

// CleanUpAccessGroups is a paid mutator transaction binding the contract method 0xd30f8cd0.
//
// Solidity: function cleanUpAccessGroups() returns(uint256)
func (_AccessIndexor *AccessIndexorSession) CleanUpAccessGroups() (*types.Transaction, error) {
	return _AccessIndexor.Contract.CleanUpAccessGroups(&_AccessIndexor.TransactOpts)
}

// CleanUpAccessGroups is a paid mutator transaction binding the contract method 0xd30f8cd0.
//
// Solidity: function cleanUpAccessGroups() returns(uint256)
func (_AccessIndexor *AccessIndexorTransactorSession) CleanUpAccessGroups() (*types.Transaction, error) {
	return _AccessIndexor.Contract.CleanUpAccessGroups(&_AccessIndexor.TransactOpts)
}

// CleanUpAll is a paid mutator transaction binding the contract method 0x2fa5c842.
//
// Solidity: function cleanUpAll() returns(uint256, uint256, uint256, uint256, uint256)
func (_AccessIndexor *AccessIndexorTransactor) CleanUpAll(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _AccessIndexor.contract.Transact(opts, "cleanUpAll")
}

// CleanUpAll is a paid mutator transaction binding the contract method 0x2fa5c842.
//
// Solidity: function cleanUpAll() returns(uint256, uint256, uint256, uint256, uint256)
func (_AccessIndexor *AccessIndexorSession) CleanUpAll() (*types.Transaction, error) {
	return _AccessIndexor.Contract.CleanUpAll(&_AccessIndexor.TransactOpts)
}

// CleanUpAll is a paid mutator transaction binding the contract method 0x2fa5c842.
//
// Solidity: function cleanUpAll() returns(uint256, uint256, uint256, uint256, uint256)
func (_AccessIndexor *AccessIndexorTransactorSession) CleanUpAll() (*types.Transaction, error) {
	return _AccessIndexor.Contract.CleanUpAll(&_AccessIndexor.TransactOpts)
}

// CleanUpContentObjects is a paid mutator transaction binding the contract method 0x048bd529.
//
// Solidity: function cleanUpContentObjects() returns(uint256)
func (_AccessIndexor *AccessIndexorTransactor) CleanUpContentObjects(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _AccessIndexor.contract.Transact(opts, "cleanUpContentObjects")
}

// CleanUpContentObjects is a paid mutator transaction binding the contract method 0x048bd529.
//
// Solidity: function cleanUpContentObjects() returns(uint256)
func (_AccessIndexor *AccessIndexorSession) CleanUpContentObjects() (*types.Transaction, error) {
	return _AccessIndexor.Contract.CleanUpContentObjects(&_AccessIndexor.TransactOpts)
}

// CleanUpContentObjects is a paid mutator transaction binding the contract method 0x048bd529.
//
// Solidity: function cleanUpContentObjects() returns(uint256)
func (_AccessIndexor *AccessIndexorTransactorSession) CleanUpContentObjects() (*types.Transaction, error) {
	return _AccessIndexor.Contract.CleanUpContentObjects(&_AccessIndexor.TransactOpts)
}

// CleanUpContentTypes is a paid mutator transaction binding the contract method 0x85e0a200.
//
// Solidity: function cleanUpContentTypes() returns(uint256)
func (_AccessIndexor *AccessIndexorTransactor) CleanUpContentTypes(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _AccessIndexor.contract.Transact(opts, "cleanUpContentTypes")
}

// CleanUpContentTypes is a paid mutator transaction binding the contract method 0x85e0a200.
//
// Solidity: function cleanUpContentTypes() returns(uint256)
func (_AccessIndexor *AccessIndexorSession) CleanUpContentTypes() (*types.Transaction, error) {
	return _AccessIndexor.Contract.CleanUpContentTypes(&_AccessIndexor.TransactOpts)
}

// CleanUpContentTypes is a paid mutator transaction binding the contract method 0x85e0a200.
//
// Solidity: function cleanUpContentTypes() returns(uint256)
func (_AccessIndexor *AccessIndexorTransactorSession) CleanUpContentTypes() (*types.Transaction, error) {
	return _AccessIndexor.Contract.CleanUpContentTypes(&_AccessIndexor.TransactOpts)
}

// CleanUpLibraries is a paid mutator transaction binding the contract method 0x92297d7b.
//
// Solidity: function cleanUpLibraries() returns(uint256)
func (_AccessIndexor *AccessIndexorTransactor) CleanUpLibraries(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _AccessIndexor.contract.Transact(opts, "cleanUpLibraries")
}

// CleanUpLibraries is a paid mutator transaction binding the contract method 0x92297d7b.
//
// Solidity: function cleanUpLibraries() returns(uint256)
func (_AccessIndexor *AccessIndexorSession) CleanUpLibraries() (*types.Transaction, error) {
	return _AccessIndexor.Contract.CleanUpLibraries(&_AccessIndexor.TransactOpts)
}

// CleanUpLibraries is a paid mutator transaction binding the contract method 0x92297d7b.
//
// Solidity: function cleanUpLibraries() returns(uint256)
func (_AccessIndexor *AccessIndexorTransactorSession) CleanUpLibraries() (*types.Transaction, error) {
	return _AccessIndexor.Contract.CleanUpLibraries(&_AccessIndexor.TransactOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_AccessIndexor *AccessIndexorTransactor) Kill(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _AccessIndexor.contract.Transact(opts, "kill")
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_AccessIndexor *AccessIndexorSession) Kill() (*types.Transaction, error) {
	return _AccessIndexor.Contract.Kill(&_AccessIndexor.TransactOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_AccessIndexor *AccessIndexorTransactorSession) Kill() (*types.Transaction, error) {
	return _AccessIndexor.Contract.Kill(&_AccessIndexor.TransactOpts)
}

// SetAccessGroupRights is a paid mutator transaction binding the contract method 0xf17bda91.
//
// Solidity: function setAccessGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_AccessIndexor *AccessIndexorTransactor) SetAccessGroupRights(opts *bind.TransactOpts, group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _AccessIndexor.contract.Transact(opts, "setAccessGroupRights", group, access_type, access)
}

// SetAccessGroupRights is a paid mutator transaction binding the contract method 0xf17bda91.
//
// Solidity: function setAccessGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_AccessIndexor *AccessIndexorSession) SetAccessGroupRights(group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _AccessIndexor.Contract.SetAccessGroupRights(&_AccessIndexor.TransactOpts, group, access_type, access)
}

// SetAccessGroupRights is a paid mutator transaction binding the contract method 0xf17bda91.
//
// Solidity: function setAccessGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_AccessIndexor *AccessIndexorTransactorSession) SetAccessGroupRights(group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _AccessIndexor.Contract.SetAccessGroupRights(&_AccessIndexor.TransactOpts, group, access_type, access)
}

// SetAccessRights is a paid mutator transaction binding the contract method 0xb8ff1dba.
//
// Solidity: function setAccessRights() returns()
func (_AccessIndexor *AccessIndexorTransactor) SetAccessRights(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _AccessIndexor.contract.Transact(opts, "setAccessRights")
}

// SetAccessRights is a paid mutator transaction binding the contract method 0xb8ff1dba.
//
// Solidity: function setAccessRights() returns()
func (_AccessIndexor *AccessIndexorSession) SetAccessRights() (*types.Transaction, error) {
	return _AccessIndexor.Contract.SetAccessRights(&_AccessIndexor.TransactOpts)
}

// SetAccessRights is a paid mutator transaction binding the contract method 0xb8ff1dba.
//
// Solidity: function setAccessRights() returns()
func (_AccessIndexor *AccessIndexorTransactorSession) SetAccessRights() (*types.Transaction, error) {
	return _AccessIndexor.Contract.SetAccessRights(&_AccessIndexor.TransactOpts)
}

// SetContentObjectRights is a paid mutator transaction binding the contract method 0x3def5140.
//
// Solidity: function setContentObjectRights(address obj, uint8 access_type, uint8 access) returns()
func (_AccessIndexor *AccessIndexorTransactor) SetContentObjectRights(opts *bind.TransactOpts, obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _AccessIndexor.contract.Transact(opts, "setContentObjectRights", obj, access_type, access)
}

// SetContentObjectRights is a paid mutator transaction binding the contract method 0x3def5140.
//
// Solidity: function setContentObjectRights(address obj, uint8 access_type, uint8 access) returns()
func (_AccessIndexor *AccessIndexorSession) SetContentObjectRights(obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _AccessIndexor.Contract.SetContentObjectRights(&_AccessIndexor.TransactOpts, obj, access_type, access)
}

// SetContentObjectRights is a paid mutator transaction binding the contract method 0x3def5140.
//
// Solidity: function setContentObjectRights(address obj, uint8 access_type, uint8 access) returns()
func (_AccessIndexor *AccessIndexorTransactorSession) SetContentObjectRights(obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _AccessIndexor.Contract.SetContentObjectRights(&_AccessIndexor.TransactOpts, obj, access_type, access)
}

// SetContentSpace is a paid mutator transaction binding the contract method 0x055af48f.
//
// Solidity: function setContentSpace(address content_space) returns()
func (_AccessIndexor *AccessIndexorTransactor) SetContentSpace(opts *bind.TransactOpts, content_space common.Address) (*types.Transaction, error) {
	return _AccessIndexor.contract.Transact(opts, "setContentSpace", content_space)
}

// SetContentSpace is a paid mutator transaction binding the contract method 0x055af48f.
//
// Solidity: function setContentSpace(address content_space) returns()
func (_AccessIndexor *AccessIndexorSession) SetContentSpace(content_space common.Address) (*types.Transaction, error) {
	return _AccessIndexor.Contract.SetContentSpace(&_AccessIndexor.TransactOpts, content_space)
}

// SetContentSpace is a paid mutator transaction binding the contract method 0x055af48f.
//
// Solidity: function setContentSpace(address content_space) returns()
func (_AccessIndexor *AccessIndexorTransactorSession) SetContentSpace(content_space common.Address) (*types.Transaction, error) {
	return _AccessIndexor.Contract.SetContentSpace(&_AccessIndexor.TransactOpts, content_space)
}

// SetContentTypeRights is a paid mutator transaction binding the contract method 0x8635adb5.
//
// Solidity: function setContentTypeRights(address obj, uint8 access_type, uint8 access) returns()
func (_AccessIndexor *AccessIndexorTransactor) SetContentTypeRights(opts *bind.TransactOpts, obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _AccessIndexor.contract.Transact(opts, "setContentTypeRights", obj, access_type, access)
}

// SetContentTypeRights is a paid mutator transaction binding the contract method 0x8635adb5.
//
// Solidity: function setContentTypeRights(address obj, uint8 access_type, uint8 access) returns()
func (_AccessIndexor *AccessIndexorSession) SetContentTypeRights(obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _AccessIndexor.Contract.SetContentTypeRights(&_AccessIndexor.TransactOpts, obj, access_type, access)
}

// SetContentTypeRights is a paid mutator transaction binding the contract method 0x8635adb5.
//
// Solidity: function setContentTypeRights(address obj, uint8 access_type, uint8 access) returns()
func (_AccessIndexor *AccessIndexorTransactorSession) SetContentTypeRights(obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _AccessIndexor.Contract.SetContentTypeRights(&_AccessIndexor.TransactOpts, obj, access_type, access)
}

// SetContractRights is a paid mutator transaction binding the contract method 0x224dcba0.
//
// Solidity: function setContractRights(address obj, uint8 access_type, uint8 access) returns()
func (_AccessIndexor *AccessIndexorTransactor) SetContractRights(opts *bind.TransactOpts, obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _AccessIndexor.contract.Transact(opts, "setContractRights", obj, access_type, access)
}

// SetContractRights is a paid mutator transaction binding the contract method 0x224dcba0.
//
// Solidity: function setContractRights(address obj, uint8 access_type, uint8 access) returns()
func (_AccessIndexor *AccessIndexorSession) SetContractRights(obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _AccessIndexor.Contract.SetContractRights(&_AccessIndexor.TransactOpts, obj, access_type, access)
}

// SetContractRights is a paid mutator transaction binding the contract method 0x224dcba0.
//
// Solidity: function setContractRights(address obj, uint8 access_type, uint8 access) returns()
func (_AccessIndexor *AccessIndexorTransactorSession) SetContractRights(obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _AccessIndexor.Contract.SetContractRights(&_AccessIndexor.TransactOpts, obj, access_type, access)
}

// SetEntityRights is a paid mutator transaction binding the contract method 0x5d7cf830.
//
// Solidity: function setEntityRights(uint8 indexType, address obj, uint8 access_type, uint8 access) returns()
func (_AccessIndexor *AccessIndexorTransactor) SetEntityRights(opts *bind.TransactOpts, indexType uint8, obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _AccessIndexor.contract.Transact(opts, "setEntityRights", indexType, obj, access_type, access)
}

// SetEntityRights is a paid mutator transaction binding the contract method 0x5d7cf830.
//
// Solidity: function setEntityRights(uint8 indexType, address obj, uint8 access_type, uint8 access) returns()
func (_AccessIndexor *AccessIndexorSession) SetEntityRights(indexType uint8, obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _AccessIndexor.Contract.SetEntityRights(&_AccessIndexor.TransactOpts, indexType, obj, access_type, access)
}

// SetEntityRights is a paid mutator transaction binding the contract method 0x5d7cf830.
//
// Solidity: function setEntityRights(uint8 indexType, address obj, uint8 access_type, uint8 access) returns()
func (_AccessIndexor *AccessIndexorTransactorSession) SetEntityRights(indexType uint8, obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _AccessIndexor.Contract.SetEntityRights(&_AccessIndexor.TransactOpts, indexType, obj, access_type, access)
}

// SetLibraryRights is a paid mutator transaction binding the contract method 0x7cbb7bf2.
//
// Solidity: function setLibraryRights(address lib, uint8 access_type, uint8 access) returns()
func (_AccessIndexor *AccessIndexorTransactor) SetLibraryRights(opts *bind.TransactOpts, lib common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _AccessIndexor.contract.Transact(opts, "setLibraryRights", lib, access_type, access)
}

// SetLibraryRights is a paid mutator transaction binding the contract method 0x7cbb7bf2.
//
// Solidity: function setLibraryRights(address lib, uint8 access_type, uint8 access) returns()
func (_AccessIndexor *AccessIndexorSession) SetLibraryRights(lib common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _AccessIndexor.Contract.SetLibraryRights(&_AccessIndexor.TransactOpts, lib, access_type, access)
}

// SetLibraryRights is a paid mutator transaction binding the contract method 0x7cbb7bf2.
//
// Solidity: function setLibraryRights(address lib, uint8 access_type, uint8 access) returns()
func (_AccessIndexor *AccessIndexorTransactorSession) SetLibraryRights(lib common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _AccessIndexor.Contract.SetLibraryRights(&_AccessIndexor.TransactOpts, lib, access_type, access)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_AccessIndexor *AccessIndexorTransactor) TransferCreatorship(opts *bind.TransactOpts, newCreator common.Address) (*types.Transaction, error) {
	return _AccessIndexor.contract.Transact(opts, "transferCreatorship", newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_AccessIndexor *AccessIndexorSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _AccessIndexor.Contract.TransferCreatorship(&_AccessIndexor.TransactOpts, newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_AccessIndexor *AccessIndexorTransactorSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _AccessIndexor.Contract.TransferCreatorship(&_AccessIndexor.TransactOpts, newCreator)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_AccessIndexor *AccessIndexorTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _AccessIndexor.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_AccessIndexor *AccessIndexorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _AccessIndexor.Contract.TransferOwnership(&_AccessIndexor.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_AccessIndexor *AccessIndexorTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _AccessIndexor.Contract.TransferOwnership(&_AccessIndexor.TransactOpts, newOwner)
}

// AccessIndexorRightsChangedIterator is returned from FilterRightsChanged and is used to iterate over the raw logs and unpacked data for RightsChanged events raised by the AccessIndexor contract.
type AccessIndexorRightsChangedIterator struct {
	Event *AccessIndexorRightsChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AccessIndexorRightsChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AccessIndexorRightsChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AccessIndexorRightsChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AccessIndexorRightsChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AccessIndexorRightsChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AccessIndexorRightsChanged represents a RightsChanged event raised by the AccessIndexor contract.
type AccessIndexorRightsChanged struct {
	Principal common.Address
	Entity    common.Address
	Aggregate uint8
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterRightsChanged is a free log retrieval operation binding the contract event 0x23dcae6acc296731e3679d01e7cd963988e5a372850a0a1db2b9b01539e19ff4.
//
// Solidity: event RightsChanged(address principal, address entity, uint8 aggregate)
func (_AccessIndexor *AccessIndexorFilterer) FilterRightsChanged(opts *bind.FilterOpts) (*AccessIndexorRightsChangedIterator, error) {

	logs, sub, err := _AccessIndexor.contract.FilterLogs(opts, "RightsChanged")
	if err != nil {
		return nil, err
	}
	return &AccessIndexorRightsChangedIterator{contract: _AccessIndexor.contract, event: "RightsChanged", logs: logs, sub: sub}, nil
}

// WatchRightsChanged is a free log subscription operation binding the contract event 0x23dcae6acc296731e3679d01e7cd963988e5a372850a0a1db2b9b01539e19ff4.
//
// Solidity: event RightsChanged(address principal, address entity, uint8 aggregate)
func (_AccessIndexor *AccessIndexorFilterer) WatchRightsChanged(opts *bind.WatchOpts, sink chan<- *AccessIndexorRightsChanged) (event.Subscription, error) {

	logs, sub, err := _AccessIndexor.contract.WatchLogs(opts, "RightsChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AccessIndexorRightsChanged)
				if err := _AccessIndexor.contract.UnpackLog(event, "RightsChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRightsChanged is a log parse operation binding the contract event 0x23dcae6acc296731e3679d01e7cd963988e5a372850a0a1db2b9b01539e19ff4.
//
// Solidity: event RightsChanged(address principal, address entity, uint8 aggregate)
func (_AccessIndexor *AccessIndexorFilterer) ParseRightsChanged(log types.Log) (*AccessIndexorRightsChanged, error) {
	event := new(AccessIndexorRightsChanged)
	if err := _AccessIndexor.contract.UnpackLog(event, "RightsChanged", log); err != nil {
		return nil, err
	}
	return event, nil
}

// AccessibleABI is the input ABI used to generate the binding from.
const AccessibleABI = "[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"contextHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestTimestamp\",\"type\":\"uint256\"}],\"name\":\"AccessRequestV3\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contentSpace\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"visibility\",\"type\":\"uint8\"}],\"name\":\"VisibilityChanged\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"CAN_ACCESS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CAN_EDIT\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CAN_SEE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"addresspayable[]\",\"name\":\"\",\"type\":\"address[]\"}],\"name\":\"accessRequestV3\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentSpace\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"hasAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"indexCategory\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_visibility_code\",\"type\":\"uint8\"}],\"name\":\"setVisibility\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newCreator\",\"type\":\"address\"}],\"name\":\"transferCreatorship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"versionAPI\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"visibility\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// AccessibleFuncSigs maps the 4-byte function signature to its string representation.
var AccessibleFuncSigs = map[string]string{
	"97ac4fd2": "CAN_ACCESS()",
	"ef1d7dc2": "CAN_EDIT()",
	"100508a2": "CAN_SEE()",
	"1bf7a912": "accessRequestV3(bytes32[],address[])",
	"af570c04": "contentSpace()",
	"02d05d3f": "creator()",
	"95a078e8": "hasAccess(address)",
	"6380501f": "indexCategory()",
	"41c0e1b5": "kill()",
	"8da5cb5b": "owner()",
	"aa024e8b": "setVisibility(uint8)",
	"6d2e4b1b": "transferCreatorship(address)",
	"f2fde38b": "transferOwnership(address)",
	"54fd4d50": "version()",
	"5f4fcae1": "versionAPI()",
	"29adec14": "visibility()",
}

// AccessibleBin is the compiled bytecode used for deploying new contracts.
var AccessibleBin = "0x60806040527f4f776e61626c653230323030393238313130303030504f000000000000000000600055620332e360ec1b60019081557f41636365737369626c653230323030363236313231363030504f0000000000006005556006805461ff001960ff19909116909217919091169055600280546001600160a01b0319908116321790915560038054909116331790556107ed8061009e6000396000f3fe6080604052600436106100f35760003560e01c80636d2e4b1b1161008a578063aa024e8b11610059578063aa024e8b14610397578063af570c04146103c4578063ef1d7dc2146103d9578063f2fde38b146103ee576100f3565b80636d2e4b1b146103075780638da5cb5b1461033a57806395a078e81461034f57806397ac4fd214610382576100f3565b806341c0e1b5116100c657806341c0e1b5146102a157806354fd4d50146102b65780635f4fcae1146102dd5780636380501f146102f2576100f3565b806302d05d3f146100f5578063100508a2146101265780631bf7a9121461015157806329adec141461028c575b005b34801561010157600080fd5b5061010a610421565b604080516001600160a01b039092168252519081900360200190f35b34801561013257600080fd5b5061013b610430565b6040805160ff9092168252519081900360200190f35b6102786004803603604081101561016757600080fd5b81019060208101813564010000000081111561018257600080fd5b82018360208201111561019457600080fd5b803590602001918460208302840111640100000000831117156101b657600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929594936020810193503591505064010000000081111561020657600080fd5b82018360208201111561021857600080fd5b8035906020019184602083028401116401000000008311171561023a57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610435945050505050565b604080519115158252519081900360200190f35b34801561029857600080fd5b5061013b6104d0565b3480156102ad57600080fd5b506100f36104d9565b3480156102c257600080fd5b506102cb6104fe565b60408051918252519081900360200190f35b3480156102e957600080fd5b506102cb610504565b3480156102fe57600080fd5b5061013b61050a565b34801561031357600080fd5b506100f36004803603602081101561032a57600080fd5b50356001600160a01b0316610518565b34801561034657600080fd5b5061010a610564565b34801561035b57600080fd5b506102786004803603602081101561037257600080fd5b50356001600160a01b0316610573565b34801561038e57600080fd5b5061013b6106d5565b3480156103a357600080fd5b506100f3600480360360208110156103ba57600080fd5b503560ff166106da565b3480156103d057600080fd5b5061010a610758565b3480156103e557600080fd5b5061013b610767565b3480156103fa57600080fd5b506100f36004803603602081101561041157600080fd5b50356001600160a01b031661076c565b6002546001600160a01b031681565b600181565b600061044033610573565b61044957600080fd5b604080513060601b60208083019190915242603480840182905284518085039091018152605484018086528151919093012090915260006074830181905260948301523360b48301526103e80260d482015290517f545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c79181900360f40190a150600192915050565b60065460ff1681565b6003546001600160a01b031633146104f057600080fd5b6003546001600160a01b0316ff5b60055481565b60015481565b600654610100900460ff1681565b6002546001600160a01b0316331461052f57600080fd5b6001600160a01b03811661054257600080fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031681565b6003546000906001600160a01b038381169116148061059a5750600654600a60ff90911610155b156105a7575060016106d0565b600654610100900460ff16156106cc5760048054604080516363e6ffdd60e01b81526001600160a01b03868116948201949094529051600093909216916363e6ffdd91602480820192602092909190829003018186803b15801561060a57600080fd5b505afa15801561061e573d6000803e3d6000fd5b505050506040513d602081101561063457600080fd5b505160065460408051633fda978d60e11b815261010090920460ff16600483015230602483015260016044830152519192506001600160a01b03831691637fb52f1a91606480820192602092909190829003018186803b15801561069757600080fd5b505afa1580156106ab573d6000803e3d6000fd5b505050506040513d60208110156106c157600080fd5b505191506106d09050565b5060005b919050565b600a81565b6003546001600160a01b031633146106f157600080fd5b6006805460ff191660ff8381169190911791829055600454604080516001600160a01b039092168083526020830152929091168183015290517f369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500916060908290030190a150565b6004546001600160a01b031681565b606481565b6003546001600160a01b0316331461078357600080fd5b6001600160a01b03811661079657600080fd5b600380546001600160a01b0319166001600160a01b039290921691909117905556fea265627a7a72315820363491dda90b81087e91ea82a1cdf3e815bf336329e2ffb1aac25866406d5b6964736f6c63430005110032"

// DeployAccessible deploys a new Ethereum contract, binding an instance of Accessible to it.
func DeployAccessible(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Accessible, error) {
	parsed, err := abi.JSON(strings.NewReader(AccessibleABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(AccessibleBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Accessible{AccessibleCaller: AccessibleCaller{contract: contract}, AccessibleTransactor: AccessibleTransactor{contract: contract}, AccessibleFilterer: AccessibleFilterer{contract: contract}}, nil
}

// Accessible is an auto generated Go binding around an Ethereum contract.
type Accessible struct {
	AccessibleCaller     // Read-only binding to the contract
	AccessibleTransactor // Write-only binding to the contract
	AccessibleFilterer   // Log filterer for contract events
}

// AccessibleCaller is an auto generated read-only Go binding around an Ethereum contract.
type AccessibleCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AccessibleTransactor is an auto generated write-only Go binding around an Ethereum contract.
type AccessibleTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AccessibleFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type AccessibleFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AccessibleSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type AccessibleSession struct {
	Contract     *Accessible       // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// AccessibleCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type AccessibleCallerSession struct {
	Contract *AccessibleCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts     // Call options to use throughout this session
}

// AccessibleTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type AccessibleTransactorSession struct {
	Contract     *AccessibleTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts     // Transaction auth options to use throughout this session
}

// AccessibleRaw is an auto generated low-level Go binding around an Ethereum contract.
type AccessibleRaw struct {
	Contract *Accessible // Generic contract binding to access the raw methods on
}

// AccessibleCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type AccessibleCallerRaw struct {
	Contract *AccessibleCaller // Generic read-only contract binding to access the raw methods on
}

// AccessibleTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type AccessibleTransactorRaw struct {
	Contract *AccessibleTransactor // Generic write-only contract binding to access the raw methods on
}

// NewAccessible creates a new instance of Accessible, bound to a specific deployed contract.
func NewAccessible(address common.Address, backend bind.ContractBackend) (*Accessible, error) {
	contract, err := bindAccessible(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Accessible{AccessibleCaller: AccessibleCaller{contract: contract}, AccessibleTransactor: AccessibleTransactor{contract: contract}, AccessibleFilterer: AccessibleFilterer{contract: contract}}, nil
}

// NewAccessibleCaller creates a new read-only instance of Accessible, bound to a specific deployed contract.
func NewAccessibleCaller(address common.Address, caller bind.ContractCaller) (*AccessibleCaller, error) {
	contract, err := bindAccessible(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &AccessibleCaller{contract: contract}, nil
}

// NewAccessibleTransactor creates a new write-only instance of Accessible, bound to a specific deployed contract.
func NewAccessibleTransactor(address common.Address, transactor bind.ContractTransactor) (*AccessibleTransactor, error) {
	contract, err := bindAccessible(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &AccessibleTransactor{contract: contract}, nil
}

// NewAccessibleFilterer creates a new log filterer instance of Accessible, bound to a specific deployed contract.
func NewAccessibleFilterer(address common.Address, filterer bind.ContractFilterer) (*AccessibleFilterer, error) {
	contract, err := bindAccessible(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &AccessibleFilterer{contract: contract}, nil
}

// bindAccessible binds a generic wrapper to an already deployed contract.
func bindAccessible(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(AccessibleABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Accessible *AccessibleRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Accessible.Contract.AccessibleCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Accessible *AccessibleRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Accessible.Contract.AccessibleTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Accessible *AccessibleRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Accessible.Contract.AccessibleTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Accessible *AccessibleCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Accessible.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Accessible *AccessibleTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Accessible.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Accessible *AccessibleTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Accessible.Contract.contract.Transact(opts, method, params...)
}

// CANACCESS is a free data retrieval call binding the contract method 0x97ac4fd2.
//
// Solidity: function CAN_ACCESS() constant returns(uint8)
func (_Accessible *AccessibleCaller) CANACCESS(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _Accessible.contract.Call(opts, out, "CAN_ACCESS")
	return *ret0, err
}

// CANACCESS is a free data retrieval call binding the contract method 0x97ac4fd2.
//
// Solidity: function CAN_ACCESS() constant returns(uint8)
func (_Accessible *AccessibleSession) CANACCESS() (uint8, error) {
	return _Accessible.Contract.CANACCESS(&_Accessible.CallOpts)
}

// CANACCESS is a free data retrieval call binding the contract method 0x97ac4fd2.
//
// Solidity: function CAN_ACCESS() constant returns(uint8)
func (_Accessible *AccessibleCallerSession) CANACCESS() (uint8, error) {
	return _Accessible.Contract.CANACCESS(&_Accessible.CallOpts)
}

// CANEDIT is a free data retrieval call binding the contract method 0xef1d7dc2.
//
// Solidity: function CAN_EDIT() constant returns(uint8)
func (_Accessible *AccessibleCaller) CANEDIT(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _Accessible.contract.Call(opts, out, "CAN_EDIT")
	return *ret0, err
}

// CANEDIT is a free data retrieval call binding the contract method 0xef1d7dc2.
//
// Solidity: function CAN_EDIT() constant returns(uint8)
func (_Accessible *AccessibleSession) CANEDIT() (uint8, error) {
	return _Accessible.Contract.CANEDIT(&_Accessible.CallOpts)
}

// CANEDIT is a free data retrieval call binding the contract method 0xef1d7dc2.
//
// Solidity: function CAN_EDIT() constant returns(uint8)
func (_Accessible *AccessibleCallerSession) CANEDIT() (uint8, error) {
	return _Accessible.Contract.CANEDIT(&_Accessible.CallOpts)
}

// CANSEE is a free data retrieval call binding the contract method 0x100508a2.
//
// Solidity: function CAN_SEE() constant returns(uint8)
func (_Accessible *AccessibleCaller) CANSEE(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _Accessible.contract.Call(opts, out, "CAN_SEE")
	return *ret0, err
}

// CANSEE is a free data retrieval call binding the contract method 0x100508a2.
//
// Solidity: function CAN_SEE() constant returns(uint8)
func (_Accessible *AccessibleSession) CANSEE() (uint8, error) {
	return _Accessible.Contract.CANSEE(&_Accessible.CallOpts)
}

// CANSEE is a free data retrieval call binding the contract method 0x100508a2.
//
// Solidity: function CAN_SEE() constant returns(uint8)
func (_Accessible *AccessibleCallerSession) CANSEE() (uint8, error) {
	return _Accessible.Contract.CANSEE(&_Accessible.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_Accessible *AccessibleCaller) ContentSpace(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Accessible.contract.Call(opts, out, "contentSpace")
	return *ret0, err
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_Accessible *AccessibleSession) ContentSpace() (common.Address, error) {
	return _Accessible.Contract.ContentSpace(&_Accessible.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_Accessible *AccessibleCallerSession) ContentSpace() (common.Address, error) {
	return _Accessible.Contract.ContentSpace(&_Accessible.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_Accessible *AccessibleCaller) Creator(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Accessible.contract.Call(opts, out, "creator")
	return *ret0, err
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_Accessible *AccessibleSession) Creator() (common.Address, error) {
	return _Accessible.Contract.Creator(&_Accessible.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_Accessible *AccessibleCallerSession) Creator() (common.Address, error) {
	return _Accessible.Contract.Creator(&_Accessible.CallOpts)
}

// HasAccess is a free data retrieval call binding the contract method 0x95a078e8.
//
// Solidity: function hasAccess(address candidate) constant returns(bool)
func (_Accessible *AccessibleCaller) HasAccess(opts *bind.CallOpts, candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Accessible.contract.Call(opts, out, "hasAccess", candidate)
	return *ret0, err
}

// HasAccess is a free data retrieval call binding the contract method 0x95a078e8.
//
// Solidity: function hasAccess(address candidate) constant returns(bool)
func (_Accessible *AccessibleSession) HasAccess(candidate common.Address) (bool, error) {
	return _Accessible.Contract.HasAccess(&_Accessible.CallOpts, candidate)
}

// HasAccess is a free data retrieval call binding the contract method 0x95a078e8.
//
// Solidity: function hasAccess(address candidate) constant returns(bool)
func (_Accessible *AccessibleCallerSession) HasAccess(candidate common.Address) (bool, error) {
	return _Accessible.Contract.HasAccess(&_Accessible.CallOpts, candidate)
}

// IndexCategory is a free data retrieval call binding the contract method 0x6380501f.
//
// Solidity: function indexCategory() constant returns(uint8)
func (_Accessible *AccessibleCaller) IndexCategory(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _Accessible.contract.Call(opts, out, "indexCategory")
	return *ret0, err
}

// IndexCategory is a free data retrieval call binding the contract method 0x6380501f.
//
// Solidity: function indexCategory() constant returns(uint8)
func (_Accessible *AccessibleSession) IndexCategory() (uint8, error) {
	return _Accessible.Contract.IndexCategory(&_Accessible.CallOpts)
}

// IndexCategory is a free data retrieval call binding the contract method 0x6380501f.
//
// Solidity: function indexCategory() constant returns(uint8)
func (_Accessible *AccessibleCallerSession) IndexCategory() (uint8, error) {
	return _Accessible.Contract.IndexCategory(&_Accessible.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Accessible *AccessibleCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Accessible.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Accessible *AccessibleSession) Owner() (common.Address, error) {
	return _Accessible.Contract.Owner(&_Accessible.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Accessible *AccessibleCallerSession) Owner() (common.Address, error) {
	return _Accessible.Contract.Owner(&_Accessible.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_Accessible *AccessibleCaller) Version(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _Accessible.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_Accessible *AccessibleSession) Version() ([32]byte, error) {
	return _Accessible.Contract.Version(&_Accessible.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_Accessible *AccessibleCallerSession) Version() ([32]byte, error) {
	return _Accessible.Contract.Version(&_Accessible.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_Accessible *AccessibleCaller) VersionAPI(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _Accessible.contract.Call(opts, out, "versionAPI")
	return *ret0, err
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_Accessible *AccessibleSession) VersionAPI() ([32]byte, error) {
	return _Accessible.Contract.VersionAPI(&_Accessible.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_Accessible *AccessibleCallerSession) VersionAPI() ([32]byte, error) {
	return _Accessible.Contract.VersionAPI(&_Accessible.CallOpts)
}

// Visibility is a free data retrieval call binding the contract method 0x29adec14.
//
// Solidity: function visibility() constant returns(uint8)
func (_Accessible *AccessibleCaller) Visibility(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _Accessible.contract.Call(opts, out, "visibility")
	return *ret0, err
}

// Visibility is a free data retrieval call binding the contract method 0x29adec14.
//
// Solidity: function visibility() constant returns(uint8)
func (_Accessible *AccessibleSession) Visibility() (uint8, error) {
	return _Accessible.Contract.Visibility(&_Accessible.CallOpts)
}

// Visibility is a free data retrieval call binding the contract method 0x29adec14.
//
// Solidity: function visibility() constant returns(uint8)
func (_Accessible *AccessibleCallerSession) Visibility() (uint8, error) {
	return _Accessible.Contract.Visibility(&_Accessible.CallOpts)
}

// AccessRequestV3 is a paid mutator transaction binding the contract method 0x1bf7a912.
//
// Solidity: function accessRequestV3(bytes32[] , address[] ) returns(bool)
func (_Accessible *AccessibleTransactor) AccessRequestV3(opts *bind.TransactOpts, arg0 [][32]byte, arg1 []common.Address) (*types.Transaction, error) {
	return _Accessible.contract.Transact(opts, "accessRequestV3", arg0, arg1)
}

// AccessRequestV3 is a paid mutator transaction binding the contract method 0x1bf7a912.
//
// Solidity: function accessRequestV3(bytes32[] , address[] ) returns(bool)
func (_Accessible *AccessibleSession) AccessRequestV3(arg0 [][32]byte, arg1 []common.Address) (*types.Transaction, error) {
	return _Accessible.Contract.AccessRequestV3(&_Accessible.TransactOpts, arg0, arg1)
}

// AccessRequestV3 is a paid mutator transaction binding the contract method 0x1bf7a912.
//
// Solidity: function accessRequestV3(bytes32[] , address[] ) returns(bool)
func (_Accessible *AccessibleTransactorSession) AccessRequestV3(arg0 [][32]byte, arg1 []common.Address) (*types.Transaction, error) {
	return _Accessible.Contract.AccessRequestV3(&_Accessible.TransactOpts, arg0, arg1)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_Accessible *AccessibleTransactor) Kill(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Accessible.contract.Transact(opts, "kill")
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_Accessible *AccessibleSession) Kill() (*types.Transaction, error) {
	return _Accessible.Contract.Kill(&_Accessible.TransactOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_Accessible *AccessibleTransactorSession) Kill() (*types.Transaction, error) {
	return _Accessible.Contract.Kill(&_Accessible.TransactOpts)
}

// SetVisibility is a paid mutator transaction binding the contract method 0xaa024e8b.
//
// Solidity: function setVisibility(uint8 _visibility_code) returns()
func (_Accessible *AccessibleTransactor) SetVisibility(opts *bind.TransactOpts, _visibility_code uint8) (*types.Transaction, error) {
	return _Accessible.contract.Transact(opts, "setVisibility", _visibility_code)
}

// SetVisibility is a paid mutator transaction binding the contract method 0xaa024e8b.
//
// Solidity: function setVisibility(uint8 _visibility_code) returns()
func (_Accessible *AccessibleSession) SetVisibility(_visibility_code uint8) (*types.Transaction, error) {
	return _Accessible.Contract.SetVisibility(&_Accessible.TransactOpts, _visibility_code)
}

// SetVisibility is a paid mutator transaction binding the contract method 0xaa024e8b.
//
// Solidity: function setVisibility(uint8 _visibility_code) returns()
func (_Accessible *AccessibleTransactorSession) SetVisibility(_visibility_code uint8) (*types.Transaction, error) {
	return _Accessible.Contract.SetVisibility(&_Accessible.TransactOpts, _visibility_code)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_Accessible *AccessibleTransactor) TransferCreatorship(opts *bind.TransactOpts, newCreator common.Address) (*types.Transaction, error) {
	return _Accessible.contract.Transact(opts, "transferCreatorship", newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_Accessible *AccessibleSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _Accessible.Contract.TransferCreatorship(&_Accessible.TransactOpts, newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_Accessible *AccessibleTransactorSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _Accessible.Contract.TransferCreatorship(&_Accessible.TransactOpts, newCreator)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Accessible *AccessibleTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _Accessible.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Accessible *AccessibleSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _Accessible.Contract.TransferOwnership(&_Accessible.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Accessible *AccessibleTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _Accessible.Contract.TransferOwnership(&_Accessible.TransactOpts, newOwner)
}

// AccessibleAccessRequestV3Iterator is returned from FilterAccessRequestV3 and is used to iterate over the raw logs and unpacked data for AccessRequestV3 events raised by the Accessible contract.
type AccessibleAccessRequestV3Iterator struct {
	Event *AccessibleAccessRequestV3 // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AccessibleAccessRequestV3Iterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AccessibleAccessRequestV3)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AccessibleAccessRequestV3)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AccessibleAccessRequestV3Iterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AccessibleAccessRequestV3Iterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AccessibleAccessRequestV3 represents a AccessRequestV3 event raised by the Accessible contract.
type AccessibleAccessRequestV3 struct {
	RequestNonce     *big.Int
	ParentAddress    common.Address
	ContextHash      [32]byte
	Accessor         common.Address
	RequestTimestamp *big.Int
	Raw              types.Log // Blockchain specific contextual infos
}

// FilterAccessRequestV3 is a free log retrieval operation binding the contract event 0x545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c7.
//
// Solidity: event AccessRequestV3(uint256 requestNonce, address parentAddress, bytes32 contextHash, address accessor, uint256 requestTimestamp)
func (_Accessible *AccessibleFilterer) FilterAccessRequestV3(opts *bind.FilterOpts) (*AccessibleAccessRequestV3Iterator, error) {

	logs, sub, err := _Accessible.contract.FilterLogs(opts, "AccessRequestV3")
	if err != nil {
		return nil, err
	}
	return &AccessibleAccessRequestV3Iterator{contract: _Accessible.contract, event: "AccessRequestV3", logs: logs, sub: sub}, nil
}

// WatchAccessRequestV3 is a free log subscription operation binding the contract event 0x545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c7.
//
// Solidity: event AccessRequestV3(uint256 requestNonce, address parentAddress, bytes32 contextHash, address accessor, uint256 requestTimestamp)
func (_Accessible *AccessibleFilterer) WatchAccessRequestV3(opts *bind.WatchOpts, sink chan<- *AccessibleAccessRequestV3) (event.Subscription, error) {

	logs, sub, err := _Accessible.contract.WatchLogs(opts, "AccessRequestV3")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AccessibleAccessRequestV3)
				if err := _Accessible.contract.UnpackLog(event, "AccessRequestV3", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAccessRequestV3 is a log parse operation binding the contract event 0x545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c7.
//
// Solidity: event AccessRequestV3(uint256 requestNonce, address parentAddress, bytes32 contextHash, address accessor, uint256 requestTimestamp)
func (_Accessible *AccessibleFilterer) ParseAccessRequestV3(log types.Log) (*AccessibleAccessRequestV3, error) {
	event := new(AccessibleAccessRequestV3)
	if err := _Accessible.contract.UnpackLog(event, "AccessRequestV3", log); err != nil {
		return nil, err
	}
	return event, nil
}

// AccessibleVisibilityChangedIterator is returned from FilterVisibilityChanged and is used to iterate over the raw logs and unpacked data for VisibilityChanged events raised by the Accessible contract.
type AccessibleVisibilityChangedIterator struct {
	Event *AccessibleVisibilityChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *AccessibleVisibilityChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(AccessibleVisibilityChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(AccessibleVisibilityChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *AccessibleVisibilityChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *AccessibleVisibilityChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// AccessibleVisibilityChanged represents a VisibilityChanged event raised by the Accessible contract.
type AccessibleVisibilityChanged struct {
	ContentSpace  common.Address
	ParentAddress common.Address
	Visibility    uint8
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterVisibilityChanged is a free log retrieval operation binding the contract event 0x369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500.
//
// Solidity: event VisibilityChanged(address contentSpace, address parentAddress, uint8 visibility)
func (_Accessible *AccessibleFilterer) FilterVisibilityChanged(opts *bind.FilterOpts) (*AccessibleVisibilityChangedIterator, error) {

	logs, sub, err := _Accessible.contract.FilterLogs(opts, "VisibilityChanged")
	if err != nil {
		return nil, err
	}
	return &AccessibleVisibilityChangedIterator{contract: _Accessible.contract, event: "VisibilityChanged", logs: logs, sub: sub}, nil
}

// WatchVisibilityChanged is a free log subscription operation binding the contract event 0x369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500.
//
// Solidity: event VisibilityChanged(address contentSpace, address parentAddress, uint8 visibility)
func (_Accessible *AccessibleFilterer) WatchVisibilityChanged(opts *bind.WatchOpts, sink chan<- *AccessibleVisibilityChanged) (event.Subscription, error) {

	logs, sub, err := _Accessible.contract.WatchLogs(opts, "VisibilityChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(AccessibleVisibilityChanged)
				if err := _Accessible.contract.UnpackLog(event, "VisibilityChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseVisibilityChanged is a log parse operation binding the contract event 0x369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500.
//
// Solidity: event VisibilityChanged(address contentSpace, address parentAddress, uint8 visibility)
func (_Accessible *AccessibleFilterer) ParseVisibilityChanged(log types.Log) (*AccessibleVisibilityChanged, error) {
	event := new(AccessibleVisibilityChanged)
	if err := _Accessible.contract.UnpackLog(event, "VisibilityChanged", log); err != nil {
		return nil, err
	}
	return event, nil
}

// AdminableABI is the input ABI used to generate the binding from.
const AdminableABI = "[{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentSpace\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newCreator\",\"type\":\"address\"}],\"name\":\"transferCreatorship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"versionAPI\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// AdminableFuncSigs maps the 4-byte function signature to its string representation.
var AdminableFuncSigs = map[string]string{
	"af570c04": "contentSpace()",
	"02d05d3f": "creator()",
	"24d7806c": "isAdmin(address)",
	"41c0e1b5": "kill()",
	"8da5cb5b": "owner()",
	"6d2e4b1b": "transferCreatorship(address)",
	"f2fde38b": "transferOwnership(address)",
	"54fd4d50": "version()",
	"5f4fcae1": "versionAPI()",
}

// AdminableBin is the compiled bytecode used for deploying new contracts.
var AdminableBin = "0x60806040527f4f776e61626c653230323030393238313130303030504f000000000000000000600055620332e360ec1b600155600280546001600160a01b031990811632179091556003805490911633179055610336806100616000396000f3fe6080604052600436106100865760003560e01c80635f4fcae1116100595780635f4fcae11461013c5780636d2e4b1b146101515780638da5cb5b14610184578063af570c0414610199578063f2fde38b146101ae57610086565b806302d05d3f1461008857806324d7806c146100b957806341c0e1b51461010057806354fd4d5014610115575b005b34801561009457600080fd5b5061009d6101e1565b604080516001600160a01b039092168252519081900360200190f35b3480156100c557600080fd5b506100ec600480360360208110156100dc57600080fd5b50356001600160a01b03166101f0565b604080519115158252519081900360200190f35b34801561010c57600080fd5b5061008661021a565b34801561012157600080fd5b5061012a61023f565b60408051918252519081900360200190f35b34801561014857600080fd5b5061012a610245565b34801561015d57600080fd5b506100866004803603602081101561017457600080fd5b50356001600160a01b031661024b565b34801561019057600080fd5b5061009d610297565b3480156101a557600080fd5b5061009d6102a6565b3480156101ba57600080fd5b50610086600480360360208110156101d157600080fd5b50356001600160a01b03166102b5565b6002546001600160a01b031681565b6003546000906001600160a01b038381169116141561021157506001610215565b5060005b919050565b6003546001600160a01b0316331461023157600080fd5b6003546001600160a01b0316ff5b60005481565b60015481565b6002546001600160a01b0316331461026257600080fd5b6001600160a01b03811661027557600080fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031681565b6004546001600160a01b031681565b6003546001600160a01b031633146102cc57600080fd5b6001600160a01b0381166102df57600080fd5b600380546001600160a01b0319166001600160a01b039290921691909117905556fea265627a7a723158203ffdeda983713dc2f4025547ec24fe638f38c9c1007b4c9ef99f10cf7d49af8564736f6c63430005110032"

// DeployAdminable deploys a new Ethereum contract, binding an instance of Adminable to it.
func DeployAdminable(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Adminable, error) {
	parsed, err := abi.JSON(strings.NewReader(AdminableABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(AdminableBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Adminable{AdminableCaller: AdminableCaller{contract: contract}, AdminableTransactor: AdminableTransactor{contract: contract}, AdminableFilterer: AdminableFilterer{contract: contract}}, nil
}

// Adminable is an auto generated Go binding around an Ethereum contract.
type Adminable struct {
	AdminableCaller     // Read-only binding to the contract
	AdminableTransactor // Write-only binding to the contract
	AdminableFilterer   // Log filterer for contract events
}

// AdminableCaller is an auto generated read-only Go binding around an Ethereum contract.
type AdminableCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AdminableTransactor is an auto generated write-only Go binding around an Ethereum contract.
type AdminableTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AdminableFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type AdminableFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AdminableSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type AdminableSession struct {
	Contract     *Adminable        // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// AdminableCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type AdminableCallerSession struct {
	Contract *AdminableCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts    // Call options to use throughout this session
}

// AdminableTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type AdminableTransactorSession struct {
	Contract     *AdminableTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts    // Transaction auth options to use throughout this session
}

// AdminableRaw is an auto generated low-level Go binding around an Ethereum contract.
type AdminableRaw struct {
	Contract *Adminable // Generic contract binding to access the raw methods on
}

// AdminableCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type AdminableCallerRaw struct {
	Contract *AdminableCaller // Generic read-only contract binding to access the raw methods on
}

// AdminableTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type AdminableTransactorRaw struct {
	Contract *AdminableTransactor // Generic write-only contract binding to access the raw methods on
}

// NewAdminable creates a new instance of Adminable, bound to a specific deployed contract.
func NewAdminable(address common.Address, backend bind.ContractBackend) (*Adminable, error) {
	contract, err := bindAdminable(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Adminable{AdminableCaller: AdminableCaller{contract: contract}, AdminableTransactor: AdminableTransactor{contract: contract}, AdminableFilterer: AdminableFilterer{contract: contract}}, nil
}

// NewAdminableCaller creates a new read-only instance of Adminable, bound to a specific deployed contract.
func NewAdminableCaller(address common.Address, caller bind.ContractCaller) (*AdminableCaller, error) {
	contract, err := bindAdminable(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &AdminableCaller{contract: contract}, nil
}

// NewAdminableTransactor creates a new write-only instance of Adminable, bound to a specific deployed contract.
func NewAdminableTransactor(address common.Address, transactor bind.ContractTransactor) (*AdminableTransactor, error) {
	contract, err := bindAdminable(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &AdminableTransactor{contract: contract}, nil
}

// NewAdminableFilterer creates a new log filterer instance of Adminable, bound to a specific deployed contract.
func NewAdminableFilterer(address common.Address, filterer bind.ContractFilterer) (*AdminableFilterer, error) {
	contract, err := bindAdminable(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &AdminableFilterer{contract: contract}, nil
}

// bindAdminable binds a generic wrapper to an already deployed contract.
func bindAdminable(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(AdminableABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Adminable *AdminableRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Adminable.Contract.AdminableCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Adminable *AdminableRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Adminable.Contract.AdminableTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Adminable *AdminableRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Adminable.Contract.AdminableTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Adminable *AdminableCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Adminable.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Adminable *AdminableTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Adminable.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Adminable *AdminableTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Adminable.Contract.contract.Transact(opts, method, params...)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_Adminable *AdminableCaller) ContentSpace(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Adminable.contract.Call(opts, out, "contentSpace")
	return *ret0, err
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_Adminable *AdminableSession) ContentSpace() (common.Address, error) {
	return _Adminable.Contract.ContentSpace(&_Adminable.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_Adminable *AdminableCallerSession) ContentSpace() (common.Address, error) {
	return _Adminable.Contract.ContentSpace(&_Adminable.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_Adminable *AdminableCaller) Creator(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Adminable.contract.Call(opts, out, "creator")
	return *ret0, err
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_Adminable *AdminableSession) Creator() (common.Address, error) {
	return _Adminable.Contract.Creator(&_Adminable.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_Adminable *AdminableCallerSession) Creator() (common.Address, error) {
	return _Adminable.Contract.Creator(&_Adminable.CallOpts)
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(address _candidate) constant returns(bool)
func (_Adminable *AdminableCaller) IsAdmin(opts *bind.CallOpts, _candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Adminable.contract.Call(opts, out, "isAdmin", _candidate)
	return *ret0, err
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(address _candidate) constant returns(bool)
func (_Adminable *AdminableSession) IsAdmin(_candidate common.Address) (bool, error) {
	return _Adminable.Contract.IsAdmin(&_Adminable.CallOpts, _candidate)
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(address _candidate) constant returns(bool)
func (_Adminable *AdminableCallerSession) IsAdmin(_candidate common.Address) (bool, error) {
	return _Adminable.Contract.IsAdmin(&_Adminable.CallOpts, _candidate)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Adminable *AdminableCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Adminable.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Adminable *AdminableSession) Owner() (common.Address, error) {
	return _Adminable.Contract.Owner(&_Adminable.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Adminable *AdminableCallerSession) Owner() (common.Address, error) {
	return _Adminable.Contract.Owner(&_Adminable.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_Adminable *AdminableCaller) Version(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _Adminable.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_Adminable *AdminableSession) Version() ([32]byte, error) {
	return _Adminable.Contract.Version(&_Adminable.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_Adminable *AdminableCallerSession) Version() ([32]byte, error) {
	return _Adminable.Contract.Version(&_Adminable.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_Adminable *AdminableCaller) VersionAPI(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _Adminable.contract.Call(opts, out, "versionAPI")
	return *ret0, err
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_Adminable *AdminableSession) VersionAPI() ([32]byte, error) {
	return _Adminable.Contract.VersionAPI(&_Adminable.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_Adminable *AdminableCallerSession) VersionAPI() ([32]byte, error) {
	return _Adminable.Contract.VersionAPI(&_Adminable.CallOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_Adminable *AdminableTransactor) Kill(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Adminable.contract.Transact(opts, "kill")
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_Adminable *AdminableSession) Kill() (*types.Transaction, error) {
	return _Adminable.Contract.Kill(&_Adminable.TransactOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_Adminable *AdminableTransactorSession) Kill() (*types.Transaction, error) {
	return _Adminable.Contract.Kill(&_Adminable.TransactOpts)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_Adminable *AdminableTransactor) TransferCreatorship(opts *bind.TransactOpts, newCreator common.Address) (*types.Transaction, error) {
	return _Adminable.contract.Transact(opts, "transferCreatorship", newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_Adminable *AdminableSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _Adminable.Contract.TransferCreatorship(&_Adminable.TransactOpts, newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_Adminable *AdminableTransactorSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _Adminable.Contract.TransferCreatorship(&_Adminable.TransactOpts, newCreator)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Adminable *AdminableTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _Adminable.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Adminable *AdminableSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _Adminable.Contract.TransferOwnership(&_Adminable.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Adminable *AdminableTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _Adminable.Contract.TransferOwnership(&_Adminable.TransactOpts, newOwner)
}

// BaseAccessControlGroupABI is the input ABI used to generate the binding from.
const BaseAccessControlGroupABI = "[{\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"_contentSpace\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"contextHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestTimestamp\",\"type\":\"uint256\"}],\"name\":\"AccessRequestV3\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"ident\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"ord\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"prev\",\"type\":\"bool\"}],\"name\":\"BitSetAndGet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spaceAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"objectHash\",\"type\":\"string\"}],\"name\":\"CommitPending\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"ident\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"slot\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"val\",\"type\":\"uint32\"}],\"name\":\"CounterIncremented\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"ManagerAccessGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"ManagerAccessRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"MemberAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"MemberRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"OAuthStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"ObjectMetaChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"principal\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"entity\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"aggregate\",\"type\":\"uint8\"}],\"name\":\"RightsChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"operationCode\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"UnauthorizedOperation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"objectHash\",\"type\":\"string\"}],\"name\":\"UpdateRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spaceAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"objectHash\",\"type\":\"string\"}],\"name\":\"VersionConfirm\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spaceAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"versionHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"index\",\"type\":\"int256\"}],\"name\":\"VersionDelete\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contentSpace\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"visibility\",\"type\":\"uint8\"}],\"name\":\"VisibilityChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"ident\",\"type\":\"bytes32\"}],\"name\":\"WordGroupDeleted\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"ACCESS_CONFIRMED\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ACCESS_NONE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ACCESS_TENTATIVE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CAN_ACCESS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CAN_EDIT\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CAN_SEE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CATEGORY_CONTENT_OBJECT\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CATEGORY_CONTENT_TYPE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CATEGORY_CONTRACT\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CATEGORY_GROUP\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CATEGORY_LIBRARY\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TYPE_ACCESS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TYPE_EDIT\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TYPE_SEE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"accessGroups\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"category\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"addresspayable[]\",\"name\":\"\",\"type\":\"address[]\"}],\"name\":\"accessRequestV3\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canCommit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canConfirm\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canEdit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index_type\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"obj\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"}],\"name\":\"checkDirectRights\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index_type\",\"type\":\"uint8\"},{\"internalType\":\"addresspayable\",\"name\":\"obj\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"}],\"name\":\"checkRights\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cleanUpAccessGroups\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cleanUpAll\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cleanUpContentObjects\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cleanUpContentTypes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cleanUpLibraries\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"clearPending\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_objectHash\",\"type\":\"string\"}],\"name\":\"commit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"commitPending\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"confirmCommit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentObjects\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"category\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentSpace\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentTypes\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"category\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"contractExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contracts\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"category\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"countVersionHashes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ident\",\"type\":\"bytes32\"}],\"name\":\"deleteGroup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_versionHash\",\"type\":\"string\"}],\"name\":\"deleteVersion\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"position\",\"type\":\"uint256\"}],\"name\":\"getAccessGroup\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"group\",\"type\":\"address\"}],\"name\":\"getAccessGroupRights\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAccessGroupsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ident\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"_ord\",\"type\":\"uint8\"}],\"name\":\"getBit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"position\",\"type\":\"uint256\"}],\"name\":\"getContentObject\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"obj\",\"type\":\"address\"}],\"name\":\"getContentObjectRights\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getContentObjectsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"position\",\"type\":\"uint256\"}],\"name\":\"getContentType\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"obj\",\"type\":\"address\"}],\"name\":\"getContentTypeRights\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getContentTypesLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"position\",\"type\":\"uint256\"}],\"name\":\"getContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"obj\",\"type\":\"address\"}],\"name\":\"getContractRights\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getContractsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ident\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"_ord\",\"type\":\"uint8\"}],\"name\":\"getCounter\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLibrariesLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"position\",\"type\":\"uint256\"}],\"name\":\"getLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"}],\"name\":\"getLibraryRights\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"getMeta\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"grantAccess\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"grantManagerAccess\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"hasAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"candidate\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"mgr\",\"type\":\"bool\"}],\"name\":\"hasAccessRight\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"hasEditorRight\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"hasManagerAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ident\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"_ord\",\"type\":\"uint8\"}],\"name\":\"incrementCounter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"indexCategory\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"libraries\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"category\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"managersList\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"managersNum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"membersList\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"membersNum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"oauthEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"objectHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"objectTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"others\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"category\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"parentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"putMeta\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"revokeAccess\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"revokeManagerAccess\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"group\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setAccessGroupRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setAccessRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ident\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"_ord\",\"type\":\"uint8\"}],\"name\":\"setAndGetBit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ident\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"_ord\",\"type\":\"uint8\"}],\"name\":\"setAndGetBitInternal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"obj\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setContentObjectRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"content_space\",\"type\":\"address\"}],\"name\":\"setContentSpace\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"obj\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setContentTypeRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"obj\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setContractRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"indexType\",\"type\":\"uint8\"},{\"internalType\":\"addresspayable\",\"name\":\"obj\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setEntityRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"group\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setGroupRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setLibraryRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"}],\"name\":\"setOAuthEnabled\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"stakeholder\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tenantAddr\",\"type\":\"address\"}],\"name\":\"setTenant\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_visibility_code\",\"type\":\"uint8\"}],\"name\":\"setVisibility\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tenant\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newCreator\",\"type\":\"address\"}],\"name\":\"transferCreatorship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"updateRequest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"versionAPI\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"versionHashes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"versionTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"visibility\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// BaseAccessControlGroupFuncSigs maps the 4-byte function signature to its string representation.
var BaseAccessControlGroupFuncSigs = map[string]string{
	"18689733": "ACCESS_CONFIRMED()",
	"8232f3f1": "ACCESS_NONE()",
	"479a0c51": "ACCESS_TENTATIVE()",
	"97ac4fd2": "CAN_ACCESS()",
	"ef1d7dc2": "CAN_EDIT()",
	"100508a2": "CAN_SEE()",
	"091600e6": "CATEGORY_CONTENT_OBJECT()",
	"68a0469a": "CATEGORY_CONTENT_TYPE()",
	"6373a411": "CATEGORY_CONTRACT()",
	"12915a30": "CATEGORY_GROUP()",
	"16aed232": "CATEGORY_LIBRARY()",
	"d1aeb651": "TYPE_ACCESS()",
	"5d97b6c2": "TYPE_EDIT()",
	"96eba03d": "TYPE_SEE()",
	"30e66949": "accessGroups()",
	"1bf7a912": "accessRequestV3(bytes32[],address[])",
	"6e375427": "canCommit()",
	"14cfabb3": "canConfirm()",
	"81beeb64": "canEdit()",
	"a00b38c4": "checkDirectRights(uint8,address,uint8)",
	"7fb52f1a": "checkRights(uint8,address,uint8)",
	"d30f8cd0": "cleanUpAccessGroups()",
	"2fa5c842": "cleanUpAll()",
	"048bd529": "cleanUpContentObjects()",
	"85e0a200": "cleanUpContentTypes()",
	"92297d7b": "cleanUpLibraries()",
	"5f6a1301": "clearPending()",
	"9867db74": "commit(string)",
	"375a6e7c": "commitPending()",
	"446e8826": "confirmCommit()",
	"a980892d": "contentObjects()",
	"af570c04": "contentSpace()",
	"9f46133e": "contentTypes()",
	"7709bc78": "contractExists(address)",
	"6c0f79b6": "contracts()",
	"331b86c0": "countVersionHashes()",
	"02d05d3f": "creator()",
	"e57097c9": "deleteGroup(bytes32)",
	"e1a70717": "deleteVersion(string)",
	"2d474cbd": "getAccessGroup(uint256)",
	"304f4a7b": "getAccessGroupRights(address)",
	"0dc10d3f": "getAccessGroupsLength()",
	"30f846a2": "getBit(bytes32,uint8)",
	"cf8a7503": "getContentObject(uint256)",
	"69881c0c": "getContentObjectRights(address)",
	"ebe9314e": "getContentObjectsLength()",
	"aa3f6952": "getContentType(uint256)",
	"a4081d62": "getContentTypeRights(address)",
	"5c1d3059": "getContentTypesLength()",
	"6ebc8c86": "getContract(uint256)",
	"08d865d7": "getContractRights(address)",
	"fccc134f": "getContractsLength()",
	"e1954b61": "getCounter(bytes32,uint8)",
	"cb86806d": "getLibrariesLength()",
	"d15d62a7": "getLibrary(uint256)",
	"fb52222c": "getLibraryRights(address)",
	"ac55c906": "getMeta(bytes)",
	"0ae5e739": "grantAccess(address)",
	"75861a95": "grantManagerAccess(address)",
	"95a078e8": "hasAccess(address)",
	"d8961c8d": "hasAccessRight(address,bool)",
	"67e5c3bf": "hasEditorRight(address)",
	"42e7ba7b": "hasManagerAccess(address)",
	"7558cbf0": "incrementCounter(bytes32,uint8)",
	"6380501f": "indexCategory()",
	"24d7806c": "isAdmin(address)",
	"41c0e1b5": "kill()",
	"c4b1978d": "libraries()",
	"1fcd7794": "managersList(uint256)",
	"638d0290": "managersNum()",
	"13b8ad31": "membersList(uint256)",
	"55277a5b": "membersNum()",
	"12b39dd0": "oauthEnabled()",
	"e02dd9c2": "objectHash()",
	"40b87a26": "objectTimestamp()",
	"51a7fc87": "others()",
	"8da5cb5b": "owner()",
	"00821de3": "parentAddress()",
	"628449fd": "pendingHash()",
	"e542b7cb": "putMeta(bytes,bytes)",
	"85e68531": "revokeAccess(address)",
	"cdb849b7": "revokeManagerAccess(address)",
	"f17bda91": "setAccessGroupRights(address,uint8,uint8)",
	"b8ff1dba": "setAccessRights()",
	"24d7c18d": "setAndGetBit(bytes32,uint8)",
	"33f12cf4": "setAndGetBitInternal(bytes32,uint8)",
	"3def5140": "setContentObjectRights(address,uint8,uint8)",
	"055af48f": "setContentSpace(address)",
	"8635adb5": "setContentTypeRights(address,uint8,uint8)",
	"224dcba0": "setContractRights(address,uint8,uint8)",
	"5d7cf830": "setEntityRights(uint8,address,uint8,uint8)",
	"22e564eb": "setGroupRights(address,uint8,uint8)",
	"7cbb7bf2": "setLibraryRights(address,uint8,uint8)",
	"fba3779a": "setOAuthEnabled(bool)",
	"0fe1b5a2": "setRights(address,uint8,uint8)",
	"2e74a4de": "setTenant(address)",
	"aa024e8b": "setVisibility(uint8)",
	"adf07791": "tenant()",
	"6d2e4b1b": "transferCreatorship(address)",
	"f2fde38b": "transferOwnership(address)",
	"c287e0ed": "updateRequest()",
	"54fd4d50": "version()",
	"5f4fcae1": "versionAPI()",
	"7ca8f618": "versionHashes(uint256)",
	"7886f747": "versionTimestamp(uint256)",
	"29adec14": "visibility()",
}

// BaseAccessControlGroupBin is the compiled bytecode used for deploying new contracts.
var BaseAccessControlGroupBin = ""

// DeployBaseAccessControlGroup deploys a new Ethereum contract, binding an instance of BaseAccessControlGroup to it.
func DeployBaseAccessControlGroup(auth *bind.TransactOpts, backend bind.ContractBackend, _contentSpace common.Address) (common.Address, *types.Transaction, *BaseAccessControlGroup, error) {
	parsed, err := abi.JSON(strings.NewReader(BaseAccessControlGroupABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(BaseAccessControlGroupBin), backend, _contentSpace)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &BaseAccessControlGroup{BaseAccessControlGroupCaller: BaseAccessControlGroupCaller{contract: contract}, BaseAccessControlGroupTransactor: BaseAccessControlGroupTransactor{contract: contract}, BaseAccessControlGroupFilterer: BaseAccessControlGroupFilterer{contract: contract}}, nil
}

// BaseAccessControlGroup is an auto generated Go binding around an Ethereum contract.
type BaseAccessControlGroup struct {
	BaseAccessControlGroupCaller     // Read-only binding to the contract
	BaseAccessControlGroupTransactor // Write-only binding to the contract
	BaseAccessControlGroupFilterer   // Log filterer for contract events
}

// BaseAccessControlGroupCaller is an auto generated read-only Go binding around an Ethereum contract.
type BaseAccessControlGroupCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseAccessControlGroupTransactor is an auto generated write-only Go binding around an Ethereum contract.
type BaseAccessControlGroupTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseAccessControlGroupFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type BaseAccessControlGroupFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseAccessControlGroupSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type BaseAccessControlGroupSession struct {
	Contract     *BaseAccessControlGroup // Generic contract binding to set the session for
	CallOpts     bind.CallOpts           // Call options to use throughout this session
	TransactOpts bind.TransactOpts       // Transaction auth options to use throughout this session
}

// BaseAccessControlGroupCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type BaseAccessControlGroupCallerSession struct {
	Contract *BaseAccessControlGroupCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                 // Call options to use throughout this session
}

// BaseAccessControlGroupTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type BaseAccessControlGroupTransactorSession struct {
	Contract     *BaseAccessControlGroupTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                 // Transaction auth options to use throughout this session
}

// BaseAccessControlGroupRaw is an auto generated low-level Go binding around an Ethereum contract.
type BaseAccessControlGroupRaw struct {
	Contract *BaseAccessControlGroup // Generic contract binding to access the raw methods on
}

// BaseAccessControlGroupCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type BaseAccessControlGroupCallerRaw struct {
	Contract *BaseAccessControlGroupCaller // Generic read-only contract binding to access the raw methods on
}

// BaseAccessControlGroupTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type BaseAccessControlGroupTransactorRaw struct {
	Contract *BaseAccessControlGroupTransactor // Generic write-only contract binding to access the raw methods on
}

// NewBaseAccessControlGroup creates a new instance of BaseAccessControlGroup, bound to a specific deployed contract.
func NewBaseAccessControlGroup(address common.Address, backend bind.ContractBackend) (*BaseAccessControlGroup, error) {
	contract, err := bindBaseAccessControlGroup(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &BaseAccessControlGroup{BaseAccessControlGroupCaller: BaseAccessControlGroupCaller{contract: contract}, BaseAccessControlGroupTransactor: BaseAccessControlGroupTransactor{contract: contract}, BaseAccessControlGroupFilterer: BaseAccessControlGroupFilterer{contract: contract}}, nil
}

// NewBaseAccessControlGroupCaller creates a new read-only instance of BaseAccessControlGroup, bound to a specific deployed contract.
func NewBaseAccessControlGroupCaller(address common.Address, caller bind.ContractCaller) (*BaseAccessControlGroupCaller, error) {
	contract, err := bindBaseAccessControlGroup(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &BaseAccessControlGroupCaller{contract: contract}, nil
}

// NewBaseAccessControlGroupTransactor creates a new write-only instance of BaseAccessControlGroup, bound to a specific deployed contract.
func NewBaseAccessControlGroupTransactor(address common.Address, transactor bind.ContractTransactor) (*BaseAccessControlGroupTransactor, error) {
	contract, err := bindBaseAccessControlGroup(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &BaseAccessControlGroupTransactor{contract: contract}, nil
}

// NewBaseAccessControlGroupFilterer creates a new log filterer instance of BaseAccessControlGroup, bound to a specific deployed contract.
func NewBaseAccessControlGroupFilterer(address common.Address, filterer bind.ContractFilterer) (*BaseAccessControlGroupFilterer, error) {
	contract, err := bindBaseAccessControlGroup(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &BaseAccessControlGroupFilterer{contract: contract}, nil
}

// bindBaseAccessControlGroup binds a generic wrapper to an already deployed contract.
func bindBaseAccessControlGroup(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(BaseAccessControlGroupABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BaseAccessControlGroup *BaseAccessControlGroupRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BaseAccessControlGroup.Contract.BaseAccessControlGroupCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BaseAccessControlGroup *BaseAccessControlGroupRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.BaseAccessControlGroupTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BaseAccessControlGroup *BaseAccessControlGroupRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.BaseAccessControlGroupTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BaseAccessControlGroup.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.contract.Transact(opts, method, params...)
}

// ACCESSCONFIRMED is a free data retrieval call binding the contract method 0x18689733.
//
// Solidity: function ACCESS_CONFIRMED() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) ACCESSCONFIRMED(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "ACCESS_CONFIRMED")
	return *ret0, err
}

// ACCESSCONFIRMED is a free data retrieval call binding the contract method 0x18689733.
//
// Solidity: function ACCESS_CONFIRMED() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) ACCESSCONFIRMED() (uint8, error) {
	return _BaseAccessControlGroup.Contract.ACCESSCONFIRMED(&_BaseAccessControlGroup.CallOpts)
}

// ACCESSCONFIRMED is a free data retrieval call binding the contract method 0x18689733.
//
// Solidity: function ACCESS_CONFIRMED() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) ACCESSCONFIRMED() (uint8, error) {
	return _BaseAccessControlGroup.Contract.ACCESSCONFIRMED(&_BaseAccessControlGroup.CallOpts)
}

// ACCESSNONE is a free data retrieval call binding the contract method 0x8232f3f1.
//
// Solidity: function ACCESS_NONE() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) ACCESSNONE(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "ACCESS_NONE")
	return *ret0, err
}

// ACCESSNONE is a free data retrieval call binding the contract method 0x8232f3f1.
//
// Solidity: function ACCESS_NONE() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) ACCESSNONE() (uint8, error) {
	return _BaseAccessControlGroup.Contract.ACCESSNONE(&_BaseAccessControlGroup.CallOpts)
}

// ACCESSNONE is a free data retrieval call binding the contract method 0x8232f3f1.
//
// Solidity: function ACCESS_NONE() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) ACCESSNONE() (uint8, error) {
	return _BaseAccessControlGroup.Contract.ACCESSNONE(&_BaseAccessControlGroup.CallOpts)
}

// ACCESSTENTATIVE is a free data retrieval call binding the contract method 0x479a0c51.
//
// Solidity: function ACCESS_TENTATIVE() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) ACCESSTENTATIVE(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "ACCESS_TENTATIVE")
	return *ret0, err
}

// ACCESSTENTATIVE is a free data retrieval call binding the contract method 0x479a0c51.
//
// Solidity: function ACCESS_TENTATIVE() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) ACCESSTENTATIVE() (uint8, error) {
	return _BaseAccessControlGroup.Contract.ACCESSTENTATIVE(&_BaseAccessControlGroup.CallOpts)
}

// ACCESSTENTATIVE is a free data retrieval call binding the contract method 0x479a0c51.
//
// Solidity: function ACCESS_TENTATIVE() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) ACCESSTENTATIVE() (uint8, error) {
	return _BaseAccessControlGroup.Contract.ACCESSTENTATIVE(&_BaseAccessControlGroup.CallOpts)
}

// CANACCESS is a free data retrieval call binding the contract method 0x97ac4fd2.
//
// Solidity: function CAN_ACCESS() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) CANACCESS(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "CAN_ACCESS")
	return *ret0, err
}

// CANACCESS is a free data retrieval call binding the contract method 0x97ac4fd2.
//
// Solidity: function CAN_ACCESS() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) CANACCESS() (uint8, error) {
	return _BaseAccessControlGroup.Contract.CANACCESS(&_BaseAccessControlGroup.CallOpts)
}

// CANACCESS is a free data retrieval call binding the contract method 0x97ac4fd2.
//
// Solidity: function CAN_ACCESS() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) CANACCESS() (uint8, error) {
	return _BaseAccessControlGroup.Contract.CANACCESS(&_BaseAccessControlGroup.CallOpts)
}

// CANEDIT is a free data retrieval call binding the contract method 0xef1d7dc2.
//
// Solidity: function CAN_EDIT() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) CANEDIT(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "CAN_EDIT")
	return *ret0, err
}

// CANEDIT is a free data retrieval call binding the contract method 0xef1d7dc2.
//
// Solidity: function CAN_EDIT() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) CANEDIT() (uint8, error) {
	return _BaseAccessControlGroup.Contract.CANEDIT(&_BaseAccessControlGroup.CallOpts)
}

// CANEDIT is a free data retrieval call binding the contract method 0xef1d7dc2.
//
// Solidity: function CAN_EDIT() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) CANEDIT() (uint8, error) {
	return _BaseAccessControlGroup.Contract.CANEDIT(&_BaseAccessControlGroup.CallOpts)
}

// CANSEE is a free data retrieval call binding the contract method 0x100508a2.
//
// Solidity: function CAN_SEE() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) CANSEE(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "CAN_SEE")
	return *ret0, err
}

// CANSEE is a free data retrieval call binding the contract method 0x100508a2.
//
// Solidity: function CAN_SEE() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) CANSEE() (uint8, error) {
	return _BaseAccessControlGroup.Contract.CANSEE(&_BaseAccessControlGroup.CallOpts)
}

// CANSEE is a free data retrieval call binding the contract method 0x100508a2.
//
// Solidity: function CAN_SEE() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) CANSEE() (uint8, error) {
	return _BaseAccessControlGroup.Contract.CANSEE(&_BaseAccessControlGroup.CallOpts)
}

// CATEGORYCONTENTOBJECT is a free data retrieval call binding the contract method 0x091600e6.
//
// Solidity: function CATEGORY_CONTENT_OBJECT() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) CATEGORYCONTENTOBJECT(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "CATEGORY_CONTENT_OBJECT")
	return *ret0, err
}

// CATEGORYCONTENTOBJECT is a free data retrieval call binding the contract method 0x091600e6.
//
// Solidity: function CATEGORY_CONTENT_OBJECT() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) CATEGORYCONTENTOBJECT() (uint8, error) {
	return _BaseAccessControlGroup.Contract.CATEGORYCONTENTOBJECT(&_BaseAccessControlGroup.CallOpts)
}

// CATEGORYCONTENTOBJECT is a free data retrieval call binding the contract method 0x091600e6.
//
// Solidity: function CATEGORY_CONTENT_OBJECT() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) CATEGORYCONTENTOBJECT() (uint8, error) {
	return _BaseAccessControlGroup.Contract.CATEGORYCONTENTOBJECT(&_BaseAccessControlGroup.CallOpts)
}

// CATEGORYCONTENTTYPE is a free data retrieval call binding the contract method 0x68a0469a.
//
// Solidity: function CATEGORY_CONTENT_TYPE() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) CATEGORYCONTENTTYPE(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "CATEGORY_CONTENT_TYPE")
	return *ret0, err
}

// CATEGORYCONTENTTYPE is a free data retrieval call binding the contract method 0x68a0469a.
//
// Solidity: function CATEGORY_CONTENT_TYPE() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) CATEGORYCONTENTTYPE() (uint8, error) {
	return _BaseAccessControlGroup.Contract.CATEGORYCONTENTTYPE(&_BaseAccessControlGroup.CallOpts)
}

// CATEGORYCONTENTTYPE is a free data retrieval call binding the contract method 0x68a0469a.
//
// Solidity: function CATEGORY_CONTENT_TYPE() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) CATEGORYCONTENTTYPE() (uint8, error) {
	return _BaseAccessControlGroup.Contract.CATEGORYCONTENTTYPE(&_BaseAccessControlGroup.CallOpts)
}

// CATEGORYCONTRACT is a free data retrieval call binding the contract method 0x6373a411.
//
// Solidity: function CATEGORY_CONTRACT() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) CATEGORYCONTRACT(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "CATEGORY_CONTRACT")
	return *ret0, err
}

// CATEGORYCONTRACT is a free data retrieval call binding the contract method 0x6373a411.
//
// Solidity: function CATEGORY_CONTRACT() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) CATEGORYCONTRACT() (uint8, error) {
	return _BaseAccessControlGroup.Contract.CATEGORYCONTRACT(&_BaseAccessControlGroup.CallOpts)
}

// CATEGORYCONTRACT is a free data retrieval call binding the contract method 0x6373a411.
//
// Solidity: function CATEGORY_CONTRACT() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) CATEGORYCONTRACT() (uint8, error) {
	return _BaseAccessControlGroup.Contract.CATEGORYCONTRACT(&_BaseAccessControlGroup.CallOpts)
}

// CATEGORYGROUP is a free data retrieval call binding the contract method 0x12915a30.
//
// Solidity: function CATEGORY_GROUP() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) CATEGORYGROUP(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "CATEGORY_GROUP")
	return *ret0, err
}

// CATEGORYGROUP is a free data retrieval call binding the contract method 0x12915a30.
//
// Solidity: function CATEGORY_GROUP() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) CATEGORYGROUP() (uint8, error) {
	return _BaseAccessControlGroup.Contract.CATEGORYGROUP(&_BaseAccessControlGroup.CallOpts)
}

// CATEGORYGROUP is a free data retrieval call binding the contract method 0x12915a30.
//
// Solidity: function CATEGORY_GROUP() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) CATEGORYGROUP() (uint8, error) {
	return _BaseAccessControlGroup.Contract.CATEGORYGROUP(&_BaseAccessControlGroup.CallOpts)
}

// CATEGORYLIBRARY is a free data retrieval call binding the contract method 0x16aed232.
//
// Solidity: function CATEGORY_LIBRARY() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) CATEGORYLIBRARY(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "CATEGORY_LIBRARY")
	return *ret0, err
}

// CATEGORYLIBRARY is a free data retrieval call binding the contract method 0x16aed232.
//
// Solidity: function CATEGORY_LIBRARY() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) CATEGORYLIBRARY() (uint8, error) {
	return _BaseAccessControlGroup.Contract.CATEGORYLIBRARY(&_BaseAccessControlGroup.CallOpts)
}

// CATEGORYLIBRARY is a free data retrieval call binding the contract method 0x16aed232.
//
// Solidity: function CATEGORY_LIBRARY() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) CATEGORYLIBRARY() (uint8, error) {
	return _BaseAccessControlGroup.Contract.CATEGORYLIBRARY(&_BaseAccessControlGroup.CallOpts)
}

// TYPEACCESS is a free data retrieval call binding the contract method 0xd1aeb651.
//
// Solidity: function TYPE_ACCESS() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) TYPEACCESS(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "TYPE_ACCESS")
	return *ret0, err
}

// TYPEACCESS is a free data retrieval call binding the contract method 0xd1aeb651.
//
// Solidity: function TYPE_ACCESS() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) TYPEACCESS() (uint8, error) {
	return _BaseAccessControlGroup.Contract.TYPEACCESS(&_BaseAccessControlGroup.CallOpts)
}

// TYPEACCESS is a free data retrieval call binding the contract method 0xd1aeb651.
//
// Solidity: function TYPE_ACCESS() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) TYPEACCESS() (uint8, error) {
	return _BaseAccessControlGroup.Contract.TYPEACCESS(&_BaseAccessControlGroup.CallOpts)
}

// TYPEEDIT is a free data retrieval call binding the contract method 0x5d97b6c2.
//
// Solidity: function TYPE_EDIT() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) TYPEEDIT(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "TYPE_EDIT")
	return *ret0, err
}

// TYPEEDIT is a free data retrieval call binding the contract method 0x5d97b6c2.
//
// Solidity: function TYPE_EDIT() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) TYPEEDIT() (uint8, error) {
	return _BaseAccessControlGroup.Contract.TYPEEDIT(&_BaseAccessControlGroup.CallOpts)
}

// TYPEEDIT is a free data retrieval call binding the contract method 0x5d97b6c2.
//
// Solidity: function TYPE_EDIT() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) TYPEEDIT() (uint8, error) {
	return _BaseAccessControlGroup.Contract.TYPEEDIT(&_BaseAccessControlGroup.CallOpts)
}

// TYPESEE is a free data retrieval call binding the contract method 0x96eba03d.
//
// Solidity: function TYPE_SEE() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) TYPESEE(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "TYPE_SEE")
	return *ret0, err
}

// TYPESEE is a free data retrieval call binding the contract method 0x96eba03d.
//
// Solidity: function TYPE_SEE() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) TYPESEE() (uint8, error) {
	return _BaseAccessControlGroup.Contract.TYPESEE(&_BaseAccessControlGroup.CallOpts)
}

// TYPESEE is a free data retrieval call binding the contract method 0x96eba03d.
//
// Solidity: function TYPE_SEE() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) TYPESEE() (uint8, error) {
	return _BaseAccessControlGroup.Contract.TYPESEE(&_BaseAccessControlGroup.CallOpts)
}

// AccessGroups is a free data retrieval call binding the contract method 0x30e66949.
//
// Solidity: function accessGroups() constant returns(uint8 category, uint256 length)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) AccessGroups(opts *bind.CallOpts) (struct {
	Category uint8
	Length   *big.Int
}, error) {
	ret := new(struct {
		Category uint8
		Length   *big.Int
	})
	out := ret
	err := _BaseAccessControlGroup.contract.Call(opts, out, "accessGroups")
	return *ret, err
}

// AccessGroups is a free data retrieval call binding the contract method 0x30e66949.
//
// Solidity: function accessGroups() constant returns(uint8 category, uint256 length)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) AccessGroups() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _BaseAccessControlGroup.Contract.AccessGroups(&_BaseAccessControlGroup.CallOpts)
}

// AccessGroups is a free data retrieval call binding the contract method 0x30e66949.
//
// Solidity: function accessGroups() constant returns(uint8 category, uint256 length)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) AccessGroups() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _BaseAccessControlGroup.Contract.AccessGroups(&_BaseAccessControlGroup.CallOpts)
}

// CanCommit is a free data retrieval call binding the contract method 0x6e375427.
//
// Solidity: function canCommit() constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) CanCommit(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "canCommit")
	return *ret0, err
}

// CanCommit is a free data retrieval call binding the contract method 0x6e375427.
//
// Solidity: function canCommit() constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) CanCommit() (bool, error) {
	return _BaseAccessControlGroup.Contract.CanCommit(&_BaseAccessControlGroup.CallOpts)
}

// CanCommit is a free data retrieval call binding the contract method 0x6e375427.
//
// Solidity: function canCommit() constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) CanCommit() (bool, error) {
	return _BaseAccessControlGroup.Contract.CanCommit(&_BaseAccessControlGroup.CallOpts)
}

// CanConfirm is a free data retrieval call binding the contract method 0x14cfabb3.
//
// Solidity: function canConfirm() constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) CanConfirm(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "canConfirm")
	return *ret0, err
}

// CanConfirm is a free data retrieval call binding the contract method 0x14cfabb3.
//
// Solidity: function canConfirm() constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) CanConfirm() (bool, error) {
	return _BaseAccessControlGroup.Contract.CanConfirm(&_BaseAccessControlGroup.CallOpts)
}

// CanConfirm is a free data retrieval call binding the contract method 0x14cfabb3.
//
// Solidity: function canConfirm() constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) CanConfirm() (bool, error) {
	return _BaseAccessControlGroup.Contract.CanConfirm(&_BaseAccessControlGroup.CallOpts)
}

// CanEdit is a free data retrieval call binding the contract method 0x81beeb64.
//
// Solidity: function canEdit() constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) CanEdit(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "canEdit")
	return *ret0, err
}

// CanEdit is a free data retrieval call binding the contract method 0x81beeb64.
//
// Solidity: function canEdit() constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) CanEdit() (bool, error) {
	return _BaseAccessControlGroup.Contract.CanEdit(&_BaseAccessControlGroup.CallOpts)
}

// CanEdit is a free data retrieval call binding the contract method 0x81beeb64.
//
// Solidity: function canEdit() constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) CanEdit() (bool, error) {
	return _BaseAccessControlGroup.Contract.CanEdit(&_BaseAccessControlGroup.CallOpts)
}

// CheckDirectRights is a free data retrieval call binding the contract method 0xa00b38c4.
//
// Solidity: function checkDirectRights(uint8 index_type, address obj, uint8 access_type) constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) CheckDirectRights(opts *bind.CallOpts, index_type uint8, obj common.Address, access_type uint8) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "checkDirectRights", index_type, obj, access_type)
	return *ret0, err
}

// CheckDirectRights is a free data retrieval call binding the contract method 0xa00b38c4.
//
// Solidity: function checkDirectRights(uint8 index_type, address obj, uint8 access_type) constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) CheckDirectRights(index_type uint8, obj common.Address, access_type uint8) (bool, error) {
	return _BaseAccessControlGroup.Contract.CheckDirectRights(&_BaseAccessControlGroup.CallOpts, index_type, obj, access_type)
}

// CheckDirectRights is a free data retrieval call binding the contract method 0xa00b38c4.
//
// Solidity: function checkDirectRights(uint8 index_type, address obj, uint8 access_type) constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) CheckDirectRights(index_type uint8, obj common.Address, access_type uint8) (bool, error) {
	return _BaseAccessControlGroup.Contract.CheckDirectRights(&_BaseAccessControlGroup.CallOpts, index_type, obj, access_type)
}

// CheckRights is a free data retrieval call binding the contract method 0x7fb52f1a.
//
// Solidity: function checkRights(uint8 index_type, address obj, uint8 access_type) constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) CheckRights(opts *bind.CallOpts, index_type uint8, obj common.Address, access_type uint8) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "checkRights", index_type, obj, access_type)
	return *ret0, err
}

// CheckRights is a free data retrieval call binding the contract method 0x7fb52f1a.
//
// Solidity: function checkRights(uint8 index_type, address obj, uint8 access_type) constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) CheckRights(index_type uint8, obj common.Address, access_type uint8) (bool, error) {
	return _BaseAccessControlGroup.Contract.CheckRights(&_BaseAccessControlGroup.CallOpts, index_type, obj, access_type)
}

// CheckRights is a free data retrieval call binding the contract method 0x7fb52f1a.
//
// Solidity: function checkRights(uint8 index_type, address obj, uint8 access_type) constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) CheckRights(index_type uint8, obj common.Address, access_type uint8) (bool, error) {
	return _BaseAccessControlGroup.Contract.CheckRights(&_BaseAccessControlGroup.CallOpts, index_type, obj, access_type)
}

// CommitPending is a free data retrieval call binding the contract method 0x375a6e7c.
//
// Solidity: function commitPending() constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) CommitPending(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "commitPending")
	return *ret0, err
}

// CommitPending is a free data retrieval call binding the contract method 0x375a6e7c.
//
// Solidity: function commitPending() constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) CommitPending() (bool, error) {
	return _BaseAccessControlGroup.Contract.CommitPending(&_BaseAccessControlGroup.CallOpts)
}

// CommitPending is a free data retrieval call binding the contract method 0x375a6e7c.
//
// Solidity: function commitPending() constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) CommitPending() (bool, error) {
	return _BaseAccessControlGroup.Contract.CommitPending(&_BaseAccessControlGroup.CallOpts)
}

// ContentObjects is a free data retrieval call binding the contract method 0xa980892d.
//
// Solidity: function contentObjects() constant returns(uint8 category, uint256 length)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) ContentObjects(opts *bind.CallOpts) (struct {
	Category uint8
	Length   *big.Int
}, error) {
	ret := new(struct {
		Category uint8
		Length   *big.Int
	})
	out := ret
	err := _BaseAccessControlGroup.contract.Call(opts, out, "contentObjects")
	return *ret, err
}

// ContentObjects is a free data retrieval call binding the contract method 0xa980892d.
//
// Solidity: function contentObjects() constant returns(uint8 category, uint256 length)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) ContentObjects() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _BaseAccessControlGroup.Contract.ContentObjects(&_BaseAccessControlGroup.CallOpts)
}

// ContentObjects is a free data retrieval call binding the contract method 0xa980892d.
//
// Solidity: function contentObjects() constant returns(uint8 category, uint256 length)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) ContentObjects() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _BaseAccessControlGroup.Contract.ContentObjects(&_BaseAccessControlGroup.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) ContentSpace(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "contentSpace")
	return *ret0, err
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) ContentSpace() (common.Address, error) {
	return _BaseAccessControlGroup.Contract.ContentSpace(&_BaseAccessControlGroup.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) ContentSpace() (common.Address, error) {
	return _BaseAccessControlGroup.Contract.ContentSpace(&_BaseAccessControlGroup.CallOpts)
}

// ContentTypes is a free data retrieval call binding the contract method 0x9f46133e.
//
// Solidity: function contentTypes() constant returns(uint8 category, uint256 length)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) ContentTypes(opts *bind.CallOpts) (struct {
	Category uint8
	Length   *big.Int
}, error) {
	ret := new(struct {
		Category uint8
		Length   *big.Int
	})
	out := ret
	err := _BaseAccessControlGroup.contract.Call(opts, out, "contentTypes")
	return *ret, err
}

// ContentTypes is a free data retrieval call binding the contract method 0x9f46133e.
//
// Solidity: function contentTypes() constant returns(uint8 category, uint256 length)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) ContentTypes() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _BaseAccessControlGroup.Contract.ContentTypes(&_BaseAccessControlGroup.CallOpts)
}

// ContentTypes is a free data retrieval call binding the contract method 0x9f46133e.
//
// Solidity: function contentTypes() constant returns(uint8 category, uint256 length)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) ContentTypes() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _BaseAccessControlGroup.Contract.ContentTypes(&_BaseAccessControlGroup.CallOpts)
}

// ContractExists is a free data retrieval call binding the contract method 0x7709bc78.
//
// Solidity: function contractExists(address addr) constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) ContractExists(opts *bind.CallOpts, addr common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "contractExists", addr)
	return *ret0, err
}

// ContractExists is a free data retrieval call binding the contract method 0x7709bc78.
//
// Solidity: function contractExists(address addr) constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) ContractExists(addr common.Address) (bool, error) {
	return _BaseAccessControlGroup.Contract.ContractExists(&_BaseAccessControlGroup.CallOpts, addr)
}

// ContractExists is a free data retrieval call binding the contract method 0x7709bc78.
//
// Solidity: function contractExists(address addr) constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) ContractExists(addr common.Address) (bool, error) {
	return _BaseAccessControlGroup.Contract.ContractExists(&_BaseAccessControlGroup.CallOpts, addr)
}

// Contracts is a free data retrieval call binding the contract method 0x6c0f79b6.
//
// Solidity: function contracts() constant returns(uint8 category, uint256 length)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) Contracts(opts *bind.CallOpts) (struct {
	Category uint8
	Length   *big.Int
}, error) {
	ret := new(struct {
		Category uint8
		Length   *big.Int
	})
	out := ret
	err := _BaseAccessControlGroup.contract.Call(opts, out, "contracts")
	return *ret, err
}

// Contracts is a free data retrieval call binding the contract method 0x6c0f79b6.
//
// Solidity: function contracts() constant returns(uint8 category, uint256 length)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) Contracts() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _BaseAccessControlGroup.Contract.Contracts(&_BaseAccessControlGroup.CallOpts)
}

// Contracts is a free data retrieval call binding the contract method 0x6c0f79b6.
//
// Solidity: function contracts() constant returns(uint8 category, uint256 length)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) Contracts() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _BaseAccessControlGroup.Contract.Contracts(&_BaseAccessControlGroup.CallOpts)
}

// CountVersionHashes is a free data retrieval call binding the contract method 0x331b86c0.
//
// Solidity: function countVersionHashes() constant returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) CountVersionHashes(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "countVersionHashes")
	return *ret0, err
}

// CountVersionHashes is a free data retrieval call binding the contract method 0x331b86c0.
//
// Solidity: function countVersionHashes() constant returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) CountVersionHashes() (*big.Int, error) {
	return _BaseAccessControlGroup.Contract.CountVersionHashes(&_BaseAccessControlGroup.CallOpts)
}

// CountVersionHashes is a free data retrieval call binding the contract method 0x331b86c0.
//
// Solidity: function countVersionHashes() constant returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) CountVersionHashes() (*big.Int, error) {
	return _BaseAccessControlGroup.Contract.CountVersionHashes(&_BaseAccessControlGroup.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) Creator(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "creator")
	return *ret0, err
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) Creator() (common.Address, error) {
	return _BaseAccessControlGroup.Contract.Creator(&_BaseAccessControlGroup.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) Creator() (common.Address, error) {
	return _BaseAccessControlGroup.Contract.Creator(&_BaseAccessControlGroup.CallOpts)
}

// GetAccessGroup is a free data retrieval call binding the contract method 0x2d474cbd.
//
// Solidity: function getAccessGroup(uint256 position) constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) GetAccessGroup(opts *bind.CallOpts, position *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "getAccessGroup", position)
	return *ret0, err
}

// GetAccessGroup is a free data retrieval call binding the contract method 0x2d474cbd.
//
// Solidity: function getAccessGroup(uint256 position) constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) GetAccessGroup(position *big.Int) (common.Address, error) {
	return _BaseAccessControlGroup.Contract.GetAccessGroup(&_BaseAccessControlGroup.CallOpts, position)
}

// GetAccessGroup is a free data retrieval call binding the contract method 0x2d474cbd.
//
// Solidity: function getAccessGroup(uint256 position) constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) GetAccessGroup(position *big.Int) (common.Address, error) {
	return _BaseAccessControlGroup.Contract.GetAccessGroup(&_BaseAccessControlGroup.CallOpts, position)
}

// GetAccessGroupRights is a free data retrieval call binding the contract method 0x304f4a7b.
//
// Solidity: function getAccessGroupRights(address group) constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) GetAccessGroupRights(opts *bind.CallOpts, group common.Address) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "getAccessGroupRights", group)
	return *ret0, err
}

// GetAccessGroupRights is a free data retrieval call binding the contract method 0x304f4a7b.
//
// Solidity: function getAccessGroupRights(address group) constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) GetAccessGroupRights(group common.Address) (uint8, error) {
	return _BaseAccessControlGroup.Contract.GetAccessGroupRights(&_BaseAccessControlGroup.CallOpts, group)
}

// GetAccessGroupRights is a free data retrieval call binding the contract method 0x304f4a7b.
//
// Solidity: function getAccessGroupRights(address group) constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) GetAccessGroupRights(group common.Address) (uint8, error) {
	return _BaseAccessControlGroup.Contract.GetAccessGroupRights(&_BaseAccessControlGroup.CallOpts, group)
}

// GetAccessGroupsLength is a free data retrieval call binding the contract method 0x0dc10d3f.
//
// Solidity: function getAccessGroupsLength() constant returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) GetAccessGroupsLength(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "getAccessGroupsLength")
	return *ret0, err
}

// GetAccessGroupsLength is a free data retrieval call binding the contract method 0x0dc10d3f.
//
// Solidity: function getAccessGroupsLength() constant returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) GetAccessGroupsLength() (*big.Int, error) {
	return _BaseAccessControlGroup.Contract.GetAccessGroupsLength(&_BaseAccessControlGroup.CallOpts)
}

// GetAccessGroupsLength is a free data retrieval call binding the contract method 0x0dc10d3f.
//
// Solidity: function getAccessGroupsLength() constant returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) GetAccessGroupsLength() (*big.Int, error) {
	return _BaseAccessControlGroup.Contract.GetAccessGroupsLength(&_BaseAccessControlGroup.CallOpts)
}

// GetBit is a free data retrieval call binding the contract method 0x30f846a2.
//
// Solidity: function getBit(bytes32 _ident, uint8 _ord) constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) GetBit(opts *bind.CallOpts, _ident [32]byte, _ord uint8) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "getBit", _ident, _ord)
	return *ret0, err
}

// GetBit is a free data retrieval call binding the contract method 0x30f846a2.
//
// Solidity: function getBit(bytes32 _ident, uint8 _ord) constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) GetBit(_ident [32]byte, _ord uint8) (bool, error) {
	return _BaseAccessControlGroup.Contract.GetBit(&_BaseAccessControlGroup.CallOpts, _ident, _ord)
}

// GetBit is a free data retrieval call binding the contract method 0x30f846a2.
//
// Solidity: function getBit(bytes32 _ident, uint8 _ord) constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) GetBit(_ident [32]byte, _ord uint8) (bool, error) {
	return _BaseAccessControlGroup.Contract.GetBit(&_BaseAccessControlGroup.CallOpts, _ident, _ord)
}

// GetContentObject is a free data retrieval call binding the contract method 0xcf8a7503.
//
// Solidity: function getContentObject(uint256 position) constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) GetContentObject(opts *bind.CallOpts, position *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "getContentObject", position)
	return *ret0, err
}

// GetContentObject is a free data retrieval call binding the contract method 0xcf8a7503.
//
// Solidity: function getContentObject(uint256 position) constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) GetContentObject(position *big.Int) (common.Address, error) {
	return _BaseAccessControlGroup.Contract.GetContentObject(&_BaseAccessControlGroup.CallOpts, position)
}

// GetContentObject is a free data retrieval call binding the contract method 0xcf8a7503.
//
// Solidity: function getContentObject(uint256 position) constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) GetContentObject(position *big.Int) (common.Address, error) {
	return _BaseAccessControlGroup.Contract.GetContentObject(&_BaseAccessControlGroup.CallOpts, position)
}

// GetContentObjectRights is a free data retrieval call binding the contract method 0x69881c0c.
//
// Solidity: function getContentObjectRights(address obj) constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) GetContentObjectRights(opts *bind.CallOpts, obj common.Address) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "getContentObjectRights", obj)
	return *ret0, err
}

// GetContentObjectRights is a free data retrieval call binding the contract method 0x69881c0c.
//
// Solidity: function getContentObjectRights(address obj) constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) GetContentObjectRights(obj common.Address) (uint8, error) {
	return _BaseAccessControlGroup.Contract.GetContentObjectRights(&_BaseAccessControlGroup.CallOpts, obj)
}

// GetContentObjectRights is a free data retrieval call binding the contract method 0x69881c0c.
//
// Solidity: function getContentObjectRights(address obj) constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) GetContentObjectRights(obj common.Address) (uint8, error) {
	return _BaseAccessControlGroup.Contract.GetContentObjectRights(&_BaseAccessControlGroup.CallOpts, obj)
}

// GetContentObjectsLength is a free data retrieval call binding the contract method 0xebe9314e.
//
// Solidity: function getContentObjectsLength() constant returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) GetContentObjectsLength(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "getContentObjectsLength")
	return *ret0, err
}

// GetContentObjectsLength is a free data retrieval call binding the contract method 0xebe9314e.
//
// Solidity: function getContentObjectsLength() constant returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) GetContentObjectsLength() (*big.Int, error) {
	return _BaseAccessControlGroup.Contract.GetContentObjectsLength(&_BaseAccessControlGroup.CallOpts)
}

// GetContentObjectsLength is a free data retrieval call binding the contract method 0xebe9314e.
//
// Solidity: function getContentObjectsLength() constant returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) GetContentObjectsLength() (*big.Int, error) {
	return _BaseAccessControlGroup.Contract.GetContentObjectsLength(&_BaseAccessControlGroup.CallOpts)
}

// GetContentType is a free data retrieval call binding the contract method 0xaa3f6952.
//
// Solidity: function getContentType(uint256 position) constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) GetContentType(opts *bind.CallOpts, position *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "getContentType", position)
	return *ret0, err
}

// GetContentType is a free data retrieval call binding the contract method 0xaa3f6952.
//
// Solidity: function getContentType(uint256 position) constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) GetContentType(position *big.Int) (common.Address, error) {
	return _BaseAccessControlGroup.Contract.GetContentType(&_BaseAccessControlGroup.CallOpts, position)
}

// GetContentType is a free data retrieval call binding the contract method 0xaa3f6952.
//
// Solidity: function getContentType(uint256 position) constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) GetContentType(position *big.Int) (common.Address, error) {
	return _BaseAccessControlGroup.Contract.GetContentType(&_BaseAccessControlGroup.CallOpts, position)
}

// GetContentTypeRights is a free data retrieval call binding the contract method 0xa4081d62.
//
// Solidity: function getContentTypeRights(address obj) constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) GetContentTypeRights(opts *bind.CallOpts, obj common.Address) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "getContentTypeRights", obj)
	return *ret0, err
}

// GetContentTypeRights is a free data retrieval call binding the contract method 0xa4081d62.
//
// Solidity: function getContentTypeRights(address obj) constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) GetContentTypeRights(obj common.Address) (uint8, error) {
	return _BaseAccessControlGroup.Contract.GetContentTypeRights(&_BaseAccessControlGroup.CallOpts, obj)
}

// GetContentTypeRights is a free data retrieval call binding the contract method 0xa4081d62.
//
// Solidity: function getContentTypeRights(address obj) constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) GetContentTypeRights(obj common.Address) (uint8, error) {
	return _BaseAccessControlGroup.Contract.GetContentTypeRights(&_BaseAccessControlGroup.CallOpts, obj)
}

// GetContentTypesLength is a free data retrieval call binding the contract method 0x5c1d3059.
//
// Solidity: function getContentTypesLength() constant returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) GetContentTypesLength(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "getContentTypesLength")
	return *ret0, err
}

// GetContentTypesLength is a free data retrieval call binding the contract method 0x5c1d3059.
//
// Solidity: function getContentTypesLength() constant returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) GetContentTypesLength() (*big.Int, error) {
	return _BaseAccessControlGroup.Contract.GetContentTypesLength(&_BaseAccessControlGroup.CallOpts)
}

// GetContentTypesLength is a free data retrieval call binding the contract method 0x5c1d3059.
//
// Solidity: function getContentTypesLength() constant returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) GetContentTypesLength() (*big.Int, error) {
	return _BaseAccessControlGroup.Contract.GetContentTypesLength(&_BaseAccessControlGroup.CallOpts)
}

// GetContract is a free data retrieval call binding the contract method 0x6ebc8c86.
//
// Solidity: function getContract(uint256 position) constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) GetContract(opts *bind.CallOpts, position *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "getContract", position)
	return *ret0, err
}

// GetContract is a free data retrieval call binding the contract method 0x6ebc8c86.
//
// Solidity: function getContract(uint256 position) constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) GetContract(position *big.Int) (common.Address, error) {
	return _BaseAccessControlGroup.Contract.GetContract(&_BaseAccessControlGroup.CallOpts, position)
}

// GetContract is a free data retrieval call binding the contract method 0x6ebc8c86.
//
// Solidity: function getContract(uint256 position) constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) GetContract(position *big.Int) (common.Address, error) {
	return _BaseAccessControlGroup.Contract.GetContract(&_BaseAccessControlGroup.CallOpts, position)
}

// GetContractRights is a free data retrieval call binding the contract method 0x08d865d7.
//
// Solidity: function getContractRights(address obj) constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) GetContractRights(opts *bind.CallOpts, obj common.Address) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "getContractRights", obj)
	return *ret0, err
}

// GetContractRights is a free data retrieval call binding the contract method 0x08d865d7.
//
// Solidity: function getContractRights(address obj) constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) GetContractRights(obj common.Address) (uint8, error) {
	return _BaseAccessControlGroup.Contract.GetContractRights(&_BaseAccessControlGroup.CallOpts, obj)
}

// GetContractRights is a free data retrieval call binding the contract method 0x08d865d7.
//
// Solidity: function getContractRights(address obj) constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) GetContractRights(obj common.Address) (uint8, error) {
	return _BaseAccessControlGroup.Contract.GetContractRights(&_BaseAccessControlGroup.CallOpts, obj)
}

// GetContractsLength is a free data retrieval call binding the contract method 0xfccc134f.
//
// Solidity: function getContractsLength() constant returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) GetContractsLength(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "getContractsLength")
	return *ret0, err
}

// GetContractsLength is a free data retrieval call binding the contract method 0xfccc134f.
//
// Solidity: function getContractsLength() constant returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) GetContractsLength() (*big.Int, error) {
	return _BaseAccessControlGroup.Contract.GetContractsLength(&_BaseAccessControlGroup.CallOpts)
}

// GetContractsLength is a free data retrieval call binding the contract method 0xfccc134f.
//
// Solidity: function getContractsLength() constant returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) GetContractsLength() (*big.Int, error) {
	return _BaseAccessControlGroup.Contract.GetContractsLength(&_BaseAccessControlGroup.CallOpts)
}

// GetCounter is a free data retrieval call binding the contract method 0xe1954b61.
//
// Solidity: function getCounter(bytes32 _ident, uint8 _ord) constant returns(uint32)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) GetCounter(opts *bind.CallOpts, _ident [32]byte, _ord uint8) (uint32, error) {
	var (
		ret0 = new(uint32)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "getCounter", _ident, _ord)
	return *ret0, err
}

// GetCounter is a free data retrieval call binding the contract method 0xe1954b61.
//
// Solidity: function getCounter(bytes32 _ident, uint8 _ord) constant returns(uint32)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) GetCounter(_ident [32]byte, _ord uint8) (uint32, error) {
	return _BaseAccessControlGroup.Contract.GetCounter(&_BaseAccessControlGroup.CallOpts, _ident, _ord)
}

// GetCounter is a free data retrieval call binding the contract method 0xe1954b61.
//
// Solidity: function getCounter(bytes32 _ident, uint8 _ord) constant returns(uint32)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) GetCounter(_ident [32]byte, _ord uint8) (uint32, error) {
	return _BaseAccessControlGroup.Contract.GetCounter(&_BaseAccessControlGroup.CallOpts, _ident, _ord)
}

// GetLibrariesLength is a free data retrieval call binding the contract method 0xcb86806d.
//
// Solidity: function getLibrariesLength() constant returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) GetLibrariesLength(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "getLibrariesLength")
	return *ret0, err
}

// GetLibrariesLength is a free data retrieval call binding the contract method 0xcb86806d.
//
// Solidity: function getLibrariesLength() constant returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) GetLibrariesLength() (*big.Int, error) {
	return _BaseAccessControlGroup.Contract.GetLibrariesLength(&_BaseAccessControlGroup.CallOpts)
}

// GetLibrariesLength is a free data retrieval call binding the contract method 0xcb86806d.
//
// Solidity: function getLibrariesLength() constant returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) GetLibrariesLength() (*big.Int, error) {
	return _BaseAccessControlGroup.Contract.GetLibrariesLength(&_BaseAccessControlGroup.CallOpts)
}

// GetLibrary is a free data retrieval call binding the contract method 0xd15d62a7.
//
// Solidity: function getLibrary(uint256 position) constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) GetLibrary(opts *bind.CallOpts, position *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "getLibrary", position)
	return *ret0, err
}

// GetLibrary is a free data retrieval call binding the contract method 0xd15d62a7.
//
// Solidity: function getLibrary(uint256 position) constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) GetLibrary(position *big.Int) (common.Address, error) {
	return _BaseAccessControlGroup.Contract.GetLibrary(&_BaseAccessControlGroup.CallOpts, position)
}

// GetLibrary is a free data retrieval call binding the contract method 0xd15d62a7.
//
// Solidity: function getLibrary(uint256 position) constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) GetLibrary(position *big.Int) (common.Address, error) {
	return _BaseAccessControlGroup.Contract.GetLibrary(&_BaseAccessControlGroup.CallOpts, position)
}

// GetLibraryRights is a free data retrieval call binding the contract method 0xfb52222c.
//
// Solidity: function getLibraryRights(address lib) constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) GetLibraryRights(opts *bind.CallOpts, lib common.Address) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "getLibraryRights", lib)
	return *ret0, err
}

// GetLibraryRights is a free data retrieval call binding the contract method 0xfb52222c.
//
// Solidity: function getLibraryRights(address lib) constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) GetLibraryRights(lib common.Address) (uint8, error) {
	return _BaseAccessControlGroup.Contract.GetLibraryRights(&_BaseAccessControlGroup.CallOpts, lib)
}

// GetLibraryRights is a free data retrieval call binding the contract method 0xfb52222c.
//
// Solidity: function getLibraryRights(address lib) constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) GetLibraryRights(lib common.Address) (uint8, error) {
	return _BaseAccessControlGroup.Contract.GetLibraryRights(&_BaseAccessControlGroup.CallOpts, lib)
}

// GetMeta is a free data retrieval call binding the contract method 0xac55c906.
//
// Solidity: function getMeta(bytes key) constant returns(bytes)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) GetMeta(opts *bind.CallOpts, key []byte) ([]byte, error) {
	var (
		ret0 = new([]byte)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "getMeta", key)
	return *ret0, err
}

// GetMeta is a free data retrieval call binding the contract method 0xac55c906.
//
// Solidity: function getMeta(bytes key) constant returns(bytes)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) GetMeta(key []byte) ([]byte, error) {
	return _BaseAccessControlGroup.Contract.GetMeta(&_BaseAccessControlGroup.CallOpts, key)
}

// GetMeta is a free data retrieval call binding the contract method 0xac55c906.
//
// Solidity: function getMeta(bytes key) constant returns(bytes)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) GetMeta(key []byte) ([]byte, error) {
	return _BaseAccessControlGroup.Contract.GetMeta(&_BaseAccessControlGroup.CallOpts, key)
}

// HasAccess is a free data retrieval call binding the contract method 0x95a078e8.
//
// Solidity: function hasAccess(address candidate) constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) HasAccess(opts *bind.CallOpts, candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "hasAccess", candidate)
	return *ret0, err
}

// HasAccess is a free data retrieval call binding the contract method 0x95a078e8.
//
// Solidity: function hasAccess(address candidate) constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) HasAccess(candidate common.Address) (bool, error) {
	return _BaseAccessControlGroup.Contract.HasAccess(&_BaseAccessControlGroup.CallOpts, candidate)
}

// HasAccess is a free data retrieval call binding the contract method 0x95a078e8.
//
// Solidity: function hasAccess(address candidate) constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) HasAccess(candidate common.Address) (bool, error) {
	return _BaseAccessControlGroup.Contract.HasAccess(&_BaseAccessControlGroup.CallOpts, candidate)
}

// HasAccessRight is a free data retrieval call binding the contract method 0xd8961c8d.
//
// Solidity: function hasAccessRight(address candidate, bool mgr) constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) HasAccessRight(opts *bind.CallOpts, candidate common.Address, mgr bool) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "hasAccessRight", candidate, mgr)
	return *ret0, err
}

// HasAccessRight is a free data retrieval call binding the contract method 0xd8961c8d.
//
// Solidity: function hasAccessRight(address candidate, bool mgr) constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) HasAccessRight(candidate common.Address, mgr bool) (bool, error) {
	return _BaseAccessControlGroup.Contract.HasAccessRight(&_BaseAccessControlGroup.CallOpts, candidate, mgr)
}

// HasAccessRight is a free data retrieval call binding the contract method 0xd8961c8d.
//
// Solidity: function hasAccessRight(address candidate, bool mgr) constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) HasAccessRight(candidate common.Address, mgr bool) (bool, error) {
	return _BaseAccessControlGroup.Contract.HasAccessRight(&_BaseAccessControlGroup.CallOpts, candidate, mgr)
}

// HasEditorRight is a free data retrieval call binding the contract method 0x67e5c3bf.
//
// Solidity: function hasEditorRight(address _candidate) constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) HasEditorRight(opts *bind.CallOpts, _candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "hasEditorRight", _candidate)
	return *ret0, err
}

// HasEditorRight is a free data retrieval call binding the contract method 0x67e5c3bf.
//
// Solidity: function hasEditorRight(address _candidate) constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) HasEditorRight(_candidate common.Address) (bool, error) {
	return _BaseAccessControlGroup.Contract.HasEditorRight(&_BaseAccessControlGroup.CallOpts, _candidate)
}

// HasEditorRight is a free data retrieval call binding the contract method 0x67e5c3bf.
//
// Solidity: function hasEditorRight(address _candidate) constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) HasEditorRight(_candidate common.Address) (bool, error) {
	return _BaseAccessControlGroup.Contract.HasEditorRight(&_BaseAccessControlGroup.CallOpts, _candidate)
}

// HasManagerAccess is a free data retrieval call binding the contract method 0x42e7ba7b.
//
// Solidity: function hasManagerAccess(address _candidate) constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) HasManagerAccess(opts *bind.CallOpts, _candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "hasManagerAccess", _candidate)
	return *ret0, err
}

// HasManagerAccess is a free data retrieval call binding the contract method 0x42e7ba7b.
//
// Solidity: function hasManagerAccess(address _candidate) constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) HasManagerAccess(_candidate common.Address) (bool, error) {
	return _BaseAccessControlGroup.Contract.HasManagerAccess(&_BaseAccessControlGroup.CallOpts, _candidate)
}

// HasManagerAccess is a free data retrieval call binding the contract method 0x42e7ba7b.
//
// Solidity: function hasManagerAccess(address _candidate) constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) HasManagerAccess(_candidate common.Address) (bool, error) {
	return _BaseAccessControlGroup.Contract.HasManagerAccess(&_BaseAccessControlGroup.CallOpts, _candidate)
}

// IndexCategory is a free data retrieval call binding the contract method 0x6380501f.
//
// Solidity: function indexCategory() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) IndexCategory(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "indexCategory")
	return *ret0, err
}

// IndexCategory is a free data retrieval call binding the contract method 0x6380501f.
//
// Solidity: function indexCategory() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) IndexCategory() (uint8, error) {
	return _BaseAccessControlGroup.Contract.IndexCategory(&_BaseAccessControlGroup.CallOpts)
}

// IndexCategory is a free data retrieval call binding the contract method 0x6380501f.
//
// Solidity: function indexCategory() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) IndexCategory() (uint8, error) {
	return _BaseAccessControlGroup.Contract.IndexCategory(&_BaseAccessControlGroup.CallOpts)
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(address _candidate) constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) IsAdmin(opts *bind.CallOpts, _candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "isAdmin", _candidate)
	return *ret0, err
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(address _candidate) constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) IsAdmin(_candidate common.Address) (bool, error) {
	return _BaseAccessControlGroup.Contract.IsAdmin(&_BaseAccessControlGroup.CallOpts, _candidate)
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(address _candidate) constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) IsAdmin(_candidate common.Address) (bool, error) {
	return _BaseAccessControlGroup.Contract.IsAdmin(&_BaseAccessControlGroup.CallOpts, _candidate)
}

// Libraries is a free data retrieval call binding the contract method 0xc4b1978d.
//
// Solidity: function libraries() constant returns(uint8 category, uint256 length)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) Libraries(opts *bind.CallOpts) (struct {
	Category uint8
	Length   *big.Int
}, error) {
	ret := new(struct {
		Category uint8
		Length   *big.Int
	})
	out := ret
	err := _BaseAccessControlGroup.contract.Call(opts, out, "libraries")
	return *ret, err
}

// Libraries is a free data retrieval call binding the contract method 0xc4b1978d.
//
// Solidity: function libraries() constant returns(uint8 category, uint256 length)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) Libraries() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _BaseAccessControlGroup.Contract.Libraries(&_BaseAccessControlGroup.CallOpts)
}

// Libraries is a free data retrieval call binding the contract method 0xc4b1978d.
//
// Solidity: function libraries() constant returns(uint8 category, uint256 length)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) Libraries() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _BaseAccessControlGroup.Contract.Libraries(&_BaseAccessControlGroup.CallOpts)
}

// ManagersList is a free data retrieval call binding the contract method 0x1fcd7794.
//
// Solidity: function managersList(uint256 ) constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) ManagersList(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "managersList", arg0)
	return *ret0, err
}

// ManagersList is a free data retrieval call binding the contract method 0x1fcd7794.
//
// Solidity: function managersList(uint256 ) constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) ManagersList(arg0 *big.Int) (common.Address, error) {
	return _BaseAccessControlGroup.Contract.ManagersList(&_BaseAccessControlGroup.CallOpts, arg0)
}

// ManagersList is a free data retrieval call binding the contract method 0x1fcd7794.
//
// Solidity: function managersList(uint256 ) constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) ManagersList(arg0 *big.Int) (common.Address, error) {
	return _BaseAccessControlGroup.Contract.ManagersList(&_BaseAccessControlGroup.CallOpts, arg0)
}

// ManagersNum is a free data retrieval call binding the contract method 0x638d0290.
//
// Solidity: function managersNum() constant returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) ManagersNum(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "managersNum")
	return *ret0, err
}

// ManagersNum is a free data retrieval call binding the contract method 0x638d0290.
//
// Solidity: function managersNum() constant returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) ManagersNum() (*big.Int, error) {
	return _BaseAccessControlGroup.Contract.ManagersNum(&_BaseAccessControlGroup.CallOpts)
}

// ManagersNum is a free data retrieval call binding the contract method 0x638d0290.
//
// Solidity: function managersNum() constant returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) ManagersNum() (*big.Int, error) {
	return _BaseAccessControlGroup.Contract.ManagersNum(&_BaseAccessControlGroup.CallOpts)
}

// MembersList is a free data retrieval call binding the contract method 0x13b8ad31.
//
// Solidity: function membersList(uint256 ) constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) MembersList(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "membersList", arg0)
	return *ret0, err
}

// MembersList is a free data retrieval call binding the contract method 0x13b8ad31.
//
// Solidity: function membersList(uint256 ) constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) MembersList(arg0 *big.Int) (common.Address, error) {
	return _BaseAccessControlGroup.Contract.MembersList(&_BaseAccessControlGroup.CallOpts, arg0)
}

// MembersList is a free data retrieval call binding the contract method 0x13b8ad31.
//
// Solidity: function membersList(uint256 ) constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) MembersList(arg0 *big.Int) (common.Address, error) {
	return _BaseAccessControlGroup.Contract.MembersList(&_BaseAccessControlGroup.CallOpts, arg0)
}

// MembersNum is a free data retrieval call binding the contract method 0x55277a5b.
//
// Solidity: function membersNum() constant returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) MembersNum(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "membersNum")
	return *ret0, err
}

// MembersNum is a free data retrieval call binding the contract method 0x55277a5b.
//
// Solidity: function membersNum() constant returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) MembersNum() (*big.Int, error) {
	return _BaseAccessControlGroup.Contract.MembersNum(&_BaseAccessControlGroup.CallOpts)
}

// MembersNum is a free data retrieval call binding the contract method 0x55277a5b.
//
// Solidity: function membersNum() constant returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) MembersNum() (*big.Int, error) {
	return _BaseAccessControlGroup.Contract.MembersNum(&_BaseAccessControlGroup.CallOpts)
}

// OauthEnabled is a free data retrieval call binding the contract method 0x12b39dd0.
//
// Solidity: function oauthEnabled() constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) OauthEnabled(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "oauthEnabled")
	return *ret0, err
}

// OauthEnabled is a free data retrieval call binding the contract method 0x12b39dd0.
//
// Solidity: function oauthEnabled() constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) OauthEnabled() (bool, error) {
	return _BaseAccessControlGroup.Contract.OauthEnabled(&_BaseAccessControlGroup.CallOpts)
}

// OauthEnabled is a free data retrieval call binding the contract method 0x12b39dd0.
//
// Solidity: function oauthEnabled() constant returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) OauthEnabled() (bool, error) {
	return _BaseAccessControlGroup.Contract.OauthEnabled(&_BaseAccessControlGroup.CallOpts)
}

// ObjectHash is a free data retrieval call binding the contract method 0xe02dd9c2.
//
// Solidity: function objectHash() constant returns(string)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) ObjectHash(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "objectHash")
	return *ret0, err
}

// ObjectHash is a free data retrieval call binding the contract method 0xe02dd9c2.
//
// Solidity: function objectHash() constant returns(string)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) ObjectHash() (string, error) {
	return _BaseAccessControlGroup.Contract.ObjectHash(&_BaseAccessControlGroup.CallOpts)
}

// ObjectHash is a free data retrieval call binding the contract method 0xe02dd9c2.
//
// Solidity: function objectHash() constant returns(string)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) ObjectHash() (string, error) {
	return _BaseAccessControlGroup.Contract.ObjectHash(&_BaseAccessControlGroup.CallOpts)
}

// ObjectTimestamp is a free data retrieval call binding the contract method 0x40b87a26.
//
// Solidity: function objectTimestamp() constant returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) ObjectTimestamp(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "objectTimestamp")
	return *ret0, err
}

// ObjectTimestamp is a free data retrieval call binding the contract method 0x40b87a26.
//
// Solidity: function objectTimestamp() constant returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) ObjectTimestamp() (*big.Int, error) {
	return _BaseAccessControlGroup.Contract.ObjectTimestamp(&_BaseAccessControlGroup.CallOpts)
}

// ObjectTimestamp is a free data retrieval call binding the contract method 0x40b87a26.
//
// Solidity: function objectTimestamp() constant returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) ObjectTimestamp() (*big.Int, error) {
	return _BaseAccessControlGroup.Contract.ObjectTimestamp(&_BaseAccessControlGroup.CallOpts)
}

// Others is a free data retrieval call binding the contract method 0x51a7fc87.
//
// Solidity: function others() constant returns(uint8 category, uint256 length)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) Others(opts *bind.CallOpts) (struct {
	Category uint8
	Length   *big.Int
}, error) {
	ret := new(struct {
		Category uint8
		Length   *big.Int
	})
	out := ret
	err := _BaseAccessControlGroup.contract.Call(opts, out, "others")
	return *ret, err
}

// Others is a free data retrieval call binding the contract method 0x51a7fc87.
//
// Solidity: function others() constant returns(uint8 category, uint256 length)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) Others() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _BaseAccessControlGroup.Contract.Others(&_BaseAccessControlGroup.CallOpts)
}

// Others is a free data retrieval call binding the contract method 0x51a7fc87.
//
// Solidity: function others() constant returns(uint8 category, uint256 length)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) Others() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _BaseAccessControlGroup.Contract.Others(&_BaseAccessControlGroup.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) Owner() (common.Address, error) {
	return _BaseAccessControlGroup.Contract.Owner(&_BaseAccessControlGroup.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) Owner() (common.Address, error) {
	return _BaseAccessControlGroup.Contract.Owner(&_BaseAccessControlGroup.CallOpts)
}

// ParentAddress is a free data retrieval call binding the contract method 0x00821de3.
//
// Solidity: function parentAddress() constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) ParentAddress(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "parentAddress")
	return *ret0, err
}

// ParentAddress is a free data retrieval call binding the contract method 0x00821de3.
//
// Solidity: function parentAddress() constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) ParentAddress() (common.Address, error) {
	return _BaseAccessControlGroup.Contract.ParentAddress(&_BaseAccessControlGroup.CallOpts)
}

// ParentAddress is a free data retrieval call binding the contract method 0x00821de3.
//
// Solidity: function parentAddress() constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) ParentAddress() (common.Address, error) {
	return _BaseAccessControlGroup.Contract.ParentAddress(&_BaseAccessControlGroup.CallOpts)
}

// PendingHash is a free data retrieval call binding the contract method 0x628449fd.
//
// Solidity: function pendingHash() constant returns(string)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) PendingHash(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "pendingHash")
	return *ret0, err
}

// PendingHash is a free data retrieval call binding the contract method 0x628449fd.
//
// Solidity: function pendingHash() constant returns(string)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) PendingHash() (string, error) {
	return _BaseAccessControlGroup.Contract.PendingHash(&_BaseAccessControlGroup.CallOpts)
}

// PendingHash is a free data retrieval call binding the contract method 0x628449fd.
//
// Solidity: function pendingHash() constant returns(string)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) PendingHash() (string, error) {
	return _BaseAccessControlGroup.Contract.PendingHash(&_BaseAccessControlGroup.CallOpts)
}

// Tenant is a free data retrieval call binding the contract method 0xadf07791.
//
// Solidity: function tenant() constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) Tenant(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "tenant")
	return *ret0, err
}

// Tenant is a free data retrieval call binding the contract method 0xadf07791.
//
// Solidity: function tenant() constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) Tenant() (common.Address, error) {
	return _BaseAccessControlGroup.Contract.Tenant(&_BaseAccessControlGroup.CallOpts)
}

// Tenant is a free data retrieval call binding the contract method 0xadf07791.
//
// Solidity: function tenant() constant returns(address)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) Tenant() (common.Address, error) {
	return _BaseAccessControlGroup.Contract.Tenant(&_BaseAccessControlGroup.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) Version(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) Version() ([32]byte, error) {
	return _BaseAccessControlGroup.Contract.Version(&_BaseAccessControlGroup.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) Version() ([32]byte, error) {
	return _BaseAccessControlGroup.Contract.Version(&_BaseAccessControlGroup.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) VersionAPI(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "versionAPI")
	return *ret0, err
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) VersionAPI() ([32]byte, error) {
	return _BaseAccessControlGroup.Contract.VersionAPI(&_BaseAccessControlGroup.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) VersionAPI() ([32]byte, error) {
	return _BaseAccessControlGroup.Contract.VersionAPI(&_BaseAccessControlGroup.CallOpts)
}

// VersionHashes is a free data retrieval call binding the contract method 0x7ca8f618.
//
// Solidity: function versionHashes(uint256 ) constant returns(string)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) VersionHashes(opts *bind.CallOpts, arg0 *big.Int) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "versionHashes", arg0)
	return *ret0, err
}

// VersionHashes is a free data retrieval call binding the contract method 0x7ca8f618.
//
// Solidity: function versionHashes(uint256 ) constant returns(string)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) VersionHashes(arg0 *big.Int) (string, error) {
	return _BaseAccessControlGroup.Contract.VersionHashes(&_BaseAccessControlGroup.CallOpts, arg0)
}

// VersionHashes is a free data retrieval call binding the contract method 0x7ca8f618.
//
// Solidity: function versionHashes(uint256 ) constant returns(string)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) VersionHashes(arg0 *big.Int) (string, error) {
	return _BaseAccessControlGroup.Contract.VersionHashes(&_BaseAccessControlGroup.CallOpts, arg0)
}

// VersionTimestamp is a free data retrieval call binding the contract method 0x7886f747.
//
// Solidity: function versionTimestamp(uint256 ) constant returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) VersionTimestamp(opts *bind.CallOpts, arg0 *big.Int) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "versionTimestamp", arg0)
	return *ret0, err
}

// VersionTimestamp is a free data retrieval call binding the contract method 0x7886f747.
//
// Solidity: function versionTimestamp(uint256 ) constant returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) VersionTimestamp(arg0 *big.Int) (*big.Int, error) {
	return _BaseAccessControlGroup.Contract.VersionTimestamp(&_BaseAccessControlGroup.CallOpts, arg0)
}

// VersionTimestamp is a free data retrieval call binding the contract method 0x7886f747.
//
// Solidity: function versionTimestamp(uint256 ) constant returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) VersionTimestamp(arg0 *big.Int) (*big.Int, error) {
	return _BaseAccessControlGroup.Contract.VersionTimestamp(&_BaseAccessControlGroup.CallOpts, arg0)
}

// Visibility is a free data retrieval call binding the contract method 0x29adec14.
//
// Solidity: function visibility() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCaller) Visibility(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessControlGroup.contract.Call(opts, out, "visibility")
	return *ret0, err
}

// Visibility is a free data retrieval call binding the contract method 0x29adec14.
//
// Solidity: function visibility() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) Visibility() (uint8, error) {
	return _BaseAccessControlGroup.Contract.Visibility(&_BaseAccessControlGroup.CallOpts)
}

// Visibility is a free data retrieval call binding the contract method 0x29adec14.
//
// Solidity: function visibility() constant returns(uint8)
func (_BaseAccessControlGroup *BaseAccessControlGroupCallerSession) Visibility() (uint8, error) {
	return _BaseAccessControlGroup.Contract.Visibility(&_BaseAccessControlGroup.CallOpts)
}

// AccessRequestV3 is a paid mutator transaction binding the contract method 0x1bf7a912.
//
// Solidity: function accessRequestV3(bytes32[] , address[] ) returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) AccessRequestV3(opts *bind.TransactOpts, arg0 [][32]byte, arg1 []common.Address) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "accessRequestV3", arg0, arg1)
}

// AccessRequestV3 is a paid mutator transaction binding the contract method 0x1bf7a912.
//
// Solidity: function accessRequestV3(bytes32[] , address[] ) returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) AccessRequestV3(arg0 [][32]byte, arg1 []common.Address) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.AccessRequestV3(&_BaseAccessControlGroup.TransactOpts, arg0, arg1)
}

// AccessRequestV3 is a paid mutator transaction binding the contract method 0x1bf7a912.
//
// Solidity: function accessRequestV3(bytes32[] , address[] ) returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) AccessRequestV3(arg0 [][32]byte, arg1 []common.Address) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.AccessRequestV3(&_BaseAccessControlGroup.TransactOpts, arg0, arg1)
}

// CleanUpAccessGroups is a paid mutator transaction binding the contract method 0xd30f8cd0.
//
// Solidity: function cleanUpAccessGroups() returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) CleanUpAccessGroups(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "cleanUpAccessGroups")
}

// CleanUpAccessGroups is a paid mutator transaction binding the contract method 0xd30f8cd0.
//
// Solidity: function cleanUpAccessGroups() returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) CleanUpAccessGroups() (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.CleanUpAccessGroups(&_BaseAccessControlGroup.TransactOpts)
}

// CleanUpAccessGroups is a paid mutator transaction binding the contract method 0xd30f8cd0.
//
// Solidity: function cleanUpAccessGroups() returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) CleanUpAccessGroups() (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.CleanUpAccessGroups(&_BaseAccessControlGroup.TransactOpts)
}

// CleanUpAll is a paid mutator transaction binding the contract method 0x2fa5c842.
//
// Solidity: function cleanUpAll() returns(uint256, uint256, uint256, uint256, uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) CleanUpAll(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "cleanUpAll")
}

// CleanUpAll is a paid mutator transaction binding the contract method 0x2fa5c842.
//
// Solidity: function cleanUpAll() returns(uint256, uint256, uint256, uint256, uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) CleanUpAll() (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.CleanUpAll(&_BaseAccessControlGroup.TransactOpts)
}

// CleanUpAll is a paid mutator transaction binding the contract method 0x2fa5c842.
//
// Solidity: function cleanUpAll() returns(uint256, uint256, uint256, uint256, uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) CleanUpAll() (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.CleanUpAll(&_BaseAccessControlGroup.TransactOpts)
}

// CleanUpContentObjects is a paid mutator transaction binding the contract method 0x048bd529.
//
// Solidity: function cleanUpContentObjects() returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) CleanUpContentObjects(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "cleanUpContentObjects")
}

// CleanUpContentObjects is a paid mutator transaction binding the contract method 0x048bd529.
//
// Solidity: function cleanUpContentObjects() returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) CleanUpContentObjects() (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.CleanUpContentObjects(&_BaseAccessControlGroup.TransactOpts)
}

// CleanUpContentObjects is a paid mutator transaction binding the contract method 0x048bd529.
//
// Solidity: function cleanUpContentObjects() returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) CleanUpContentObjects() (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.CleanUpContentObjects(&_BaseAccessControlGroup.TransactOpts)
}

// CleanUpContentTypes is a paid mutator transaction binding the contract method 0x85e0a200.
//
// Solidity: function cleanUpContentTypes() returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) CleanUpContentTypes(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "cleanUpContentTypes")
}

// CleanUpContentTypes is a paid mutator transaction binding the contract method 0x85e0a200.
//
// Solidity: function cleanUpContentTypes() returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) CleanUpContentTypes() (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.CleanUpContentTypes(&_BaseAccessControlGroup.TransactOpts)
}

// CleanUpContentTypes is a paid mutator transaction binding the contract method 0x85e0a200.
//
// Solidity: function cleanUpContentTypes() returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) CleanUpContentTypes() (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.CleanUpContentTypes(&_BaseAccessControlGroup.TransactOpts)
}

// CleanUpLibraries is a paid mutator transaction binding the contract method 0x92297d7b.
//
// Solidity: function cleanUpLibraries() returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) CleanUpLibraries(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "cleanUpLibraries")
}

// CleanUpLibraries is a paid mutator transaction binding the contract method 0x92297d7b.
//
// Solidity: function cleanUpLibraries() returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) CleanUpLibraries() (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.CleanUpLibraries(&_BaseAccessControlGroup.TransactOpts)
}

// CleanUpLibraries is a paid mutator transaction binding the contract method 0x92297d7b.
//
// Solidity: function cleanUpLibraries() returns(uint256)
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) CleanUpLibraries() (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.CleanUpLibraries(&_BaseAccessControlGroup.TransactOpts)
}

// ClearPending is a paid mutator transaction binding the contract method 0x5f6a1301.
//
// Solidity: function clearPending() returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) ClearPending(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "clearPending")
}

// ClearPending is a paid mutator transaction binding the contract method 0x5f6a1301.
//
// Solidity: function clearPending() returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) ClearPending() (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.ClearPending(&_BaseAccessControlGroup.TransactOpts)
}

// ClearPending is a paid mutator transaction binding the contract method 0x5f6a1301.
//
// Solidity: function clearPending() returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) ClearPending() (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.ClearPending(&_BaseAccessControlGroup.TransactOpts)
}

// Commit is a paid mutator transaction binding the contract method 0x9867db74.
//
// Solidity: function commit(string _objectHash) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) Commit(opts *bind.TransactOpts, _objectHash string) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "commit", _objectHash)
}

// Commit is a paid mutator transaction binding the contract method 0x9867db74.
//
// Solidity: function commit(string _objectHash) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) Commit(_objectHash string) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.Commit(&_BaseAccessControlGroup.TransactOpts, _objectHash)
}

// Commit is a paid mutator transaction binding the contract method 0x9867db74.
//
// Solidity: function commit(string _objectHash) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) Commit(_objectHash string) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.Commit(&_BaseAccessControlGroup.TransactOpts, _objectHash)
}

// ConfirmCommit is a paid mutator transaction binding the contract method 0x446e8826.
//
// Solidity: function confirmCommit() returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) ConfirmCommit(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "confirmCommit")
}

// ConfirmCommit is a paid mutator transaction binding the contract method 0x446e8826.
//
// Solidity: function confirmCommit() returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) ConfirmCommit() (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.ConfirmCommit(&_BaseAccessControlGroup.TransactOpts)
}

// ConfirmCommit is a paid mutator transaction binding the contract method 0x446e8826.
//
// Solidity: function confirmCommit() returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) ConfirmCommit() (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.ConfirmCommit(&_BaseAccessControlGroup.TransactOpts)
}

// DeleteGroup is a paid mutator transaction binding the contract method 0xe57097c9.
//
// Solidity: function deleteGroup(bytes32 _ident) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) DeleteGroup(opts *bind.TransactOpts, _ident [32]byte) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "deleteGroup", _ident)
}

// DeleteGroup is a paid mutator transaction binding the contract method 0xe57097c9.
//
// Solidity: function deleteGroup(bytes32 _ident) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) DeleteGroup(_ident [32]byte) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.DeleteGroup(&_BaseAccessControlGroup.TransactOpts, _ident)
}

// DeleteGroup is a paid mutator transaction binding the contract method 0xe57097c9.
//
// Solidity: function deleteGroup(bytes32 _ident) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) DeleteGroup(_ident [32]byte) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.DeleteGroup(&_BaseAccessControlGroup.TransactOpts, _ident)
}

// DeleteVersion is a paid mutator transaction binding the contract method 0xe1a70717.
//
// Solidity: function deleteVersion(string _versionHash) returns(int256)
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) DeleteVersion(opts *bind.TransactOpts, _versionHash string) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "deleteVersion", _versionHash)
}

// DeleteVersion is a paid mutator transaction binding the contract method 0xe1a70717.
//
// Solidity: function deleteVersion(string _versionHash) returns(int256)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) DeleteVersion(_versionHash string) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.DeleteVersion(&_BaseAccessControlGroup.TransactOpts, _versionHash)
}

// DeleteVersion is a paid mutator transaction binding the contract method 0xe1a70717.
//
// Solidity: function deleteVersion(string _versionHash) returns(int256)
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) DeleteVersion(_versionHash string) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.DeleteVersion(&_BaseAccessControlGroup.TransactOpts, _versionHash)
}

// GrantAccess is a paid mutator transaction binding the contract method 0x0ae5e739.
//
// Solidity: function grantAccess(address candidate) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) GrantAccess(opts *bind.TransactOpts, candidate common.Address) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "grantAccess", candidate)
}

// GrantAccess is a paid mutator transaction binding the contract method 0x0ae5e739.
//
// Solidity: function grantAccess(address candidate) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) GrantAccess(candidate common.Address) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.GrantAccess(&_BaseAccessControlGroup.TransactOpts, candidate)
}

// GrantAccess is a paid mutator transaction binding the contract method 0x0ae5e739.
//
// Solidity: function grantAccess(address candidate) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) GrantAccess(candidate common.Address) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.GrantAccess(&_BaseAccessControlGroup.TransactOpts, candidate)
}

// GrantManagerAccess is a paid mutator transaction binding the contract method 0x75861a95.
//
// Solidity: function grantManagerAccess(address manager) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) GrantManagerAccess(opts *bind.TransactOpts, manager common.Address) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "grantManagerAccess", manager)
}

// GrantManagerAccess is a paid mutator transaction binding the contract method 0x75861a95.
//
// Solidity: function grantManagerAccess(address manager) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) GrantManagerAccess(manager common.Address) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.GrantManagerAccess(&_BaseAccessControlGroup.TransactOpts, manager)
}

// GrantManagerAccess is a paid mutator transaction binding the contract method 0x75861a95.
//
// Solidity: function grantManagerAccess(address manager) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) GrantManagerAccess(manager common.Address) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.GrantManagerAccess(&_BaseAccessControlGroup.TransactOpts, manager)
}

// IncrementCounter is a paid mutator transaction binding the contract method 0x7558cbf0.
//
// Solidity: function incrementCounter(bytes32 _ident, uint8 _ord) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) IncrementCounter(opts *bind.TransactOpts, _ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "incrementCounter", _ident, _ord)
}

// IncrementCounter is a paid mutator transaction binding the contract method 0x7558cbf0.
//
// Solidity: function incrementCounter(bytes32 _ident, uint8 _ord) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) IncrementCounter(_ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.IncrementCounter(&_BaseAccessControlGroup.TransactOpts, _ident, _ord)
}

// IncrementCounter is a paid mutator transaction binding the contract method 0x7558cbf0.
//
// Solidity: function incrementCounter(bytes32 _ident, uint8 _ord) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) IncrementCounter(_ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.IncrementCounter(&_BaseAccessControlGroup.TransactOpts, _ident, _ord)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) Kill(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "kill")
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) Kill() (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.Kill(&_BaseAccessControlGroup.TransactOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) Kill() (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.Kill(&_BaseAccessControlGroup.TransactOpts)
}

// PutMeta is a paid mutator transaction binding the contract method 0xe542b7cb.
//
// Solidity: function putMeta(bytes key, bytes value) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) PutMeta(opts *bind.TransactOpts, key []byte, value []byte) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "putMeta", key, value)
}

// PutMeta is a paid mutator transaction binding the contract method 0xe542b7cb.
//
// Solidity: function putMeta(bytes key, bytes value) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) PutMeta(key []byte, value []byte) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.PutMeta(&_BaseAccessControlGroup.TransactOpts, key, value)
}

// PutMeta is a paid mutator transaction binding the contract method 0xe542b7cb.
//
// Solidity: function putMeta(bytes key, bytes value) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) PutMeta(key []byte, value []byte) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.PutMeta(&_BaseAccessControlGroup.TransactOpts, key, value)
}

// RevokeAccess is a paid mutator transaction binding the contract method 0x85e68531.
//
// Solidity: function revokeAccess(address candidate) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) RevokeAccess(opts *bind.TransactOpts, candidate common.Address) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "revokeAccess", candidate)
}

// RevokeAccess is a paid mutator transaction binding the contract method 0x85e68531.
//
// Solidity: function revokeAccess(address candidate) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) RevokeAccess(candidate common.Address) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.RevokeAccess(&_BaseAccessControlGroup.TransactOpts, candidate)
}

// RevokeAccess is a paid mutator transaction binding the contract method 0x85e68531.
//
// Solidity: function revokeAccess(address candidate) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) RevokeAccess(candidate common.Address) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.RevokeAccess(&_BaseAccessControlGroup.TransactOpts, candidate)
}

// RevokeManagerAccess is a paid mutator transaction binding the contract method 0xcdb849b7.
//
// Solidity: function revokeManagerAccess(address manager) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) RevokeManagerAccess(opts *bind.TransactOpts, manager common.Address) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "revokeManagerAccess", manager)
}

// RevokeManagerAccess is a paid mutator transaction binding the contract method 0xcdb849b7.
//
// Solidity: function revokeManagerAccess(address manager) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) RevokeManagerAccess(manager common.Address) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.RevokeManagerAccess(&_BaseAccessControlGroup.TransactOpts, manager)
}

// RevokeManagerAccess is a paid mutator transaction binding the contract method 0xcdb849b7.
//
// Solidity: function revokeManagerAccess(address manager) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) RevokeManagerAccess(manager common.Address) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.RevokeManagerAccess(&_BaseAccessControlGroup.TransactOpts, manager)
}

// SetAccessGroupRights is a paid mutator transaction binding the contract method 0xf17bda91.
//
// Solidity: function setAccessGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) SetAccessGroupRights(opts *bind.TransactOpts, group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "setAccessGroupRights", group, access_type, access)
}

// SetAccessGroupRights is a paid mutator transaction binding the contract method 0xf17bda91.
//
// Solidity: function setAccessGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) SetAccessGroupRights(group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.SetAccessGroupRights(&_BaseAccessControlGroup.TransactOpts, group, access_type, access)
}

// SetAccessGroupRights is a paid mutator transaction binding the contract method 0xf17bda91.
//
// Solidity: function setAccessGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) SetAccessGroupRights(group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.SetAccessGroupRights(&_BaseAccessControlGroup.TransactOpts, group, access_type, access)
}

// SetAccessRights is a paid mutator transaction binding the contract method 0xb8ff1dba.
//
// Solidity: function setAccessRights() returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) SetAccessRights(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "setAccessRights")
}

// SetAccessRights is a paid mutator transaction binding the contract method 0xb8ff1dba.
//
// Solidity: function setAccessRights() returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) SetAccessRights() (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.SetAccessRights(&_BaseAccessControlGroup.TransactOpts)
}

// SetAccessRights is a paid mutator transaction binding the contract method 0xb8ff1dba.
//
// Solidity: function setAccessRights() returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) SetAccessRights() (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.SetAccessRights(&_BaseAccessControlGroup.TransactOpts)
}

// SetAndGetBit is a paid mutator transaction binding the contract method 0x24d7c18d.
//
// Solidity: function setAndGetBit(bytes32 _ident, uint8 _ord) returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) SetAndGetBit(opts *bind.TransactOpts, _ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "setAndGetBit", _ident, _ord)
}

// SetAndGetBit is a paid mutator transaction binding the contract method 0x24d7c18d.
//
// Solidity: function setAndGetBit(bytes32 _ident, uint8 _ord) returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) SetAndGetBit(_ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.SetAndGetBit(&_BaseAccessControlGroup.TransactOpts, _ident, _ord)
}

// SetAndGetBit is a paid mutator transaction binding the contract method 0x24d7c18d.
//
// Solidity: function setAndGetBit(bytes32 _ident, uint8 _ord) returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) SetAndGetBit(_ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.SetAndGetBit(&_BaseAccessControlGroup.TransactOpts, _ident, _ord)
}

// SetAndGetBitInternal is a paid mutator transaction binding the contract method 0x33f12cf4.
//
// Solidity: function setAndGetBitInternal(bytes32 _ident, uint8 _ord) returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) SetAndGetBitInternal(opts *bind.TransactOpts, _ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "setAndGetBitInternal", _ident, _ord)
}

// SetAndGetBitInternal is a paid mutator transaction binding the contract method 0x33f12cf4.
//
// Solidity: function setAndGetBitInternal(bytes32 _ident, uint8 _ord) returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) SetAndGetBitInternal(_ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.SetAndGetBitInternal(&_BaseAccessControlGroup.TransactOpts, _ident, _ord)
}

// SetAndGetBitInternal is a paid mutator transaction binding the contract method 0x33f12cf4.
//
// Solidity: function setAndGetBitInternal(bytes32 _ident, uint8 _ord) returns(bool)
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) SetAndGetBitInternal(_ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.SetAndGetBitInternal(&_BaseAccessControlGroup.TransactOpts, _ident, _ord)
}

// SetContentObjectRights is a paid mutator transaction binding the contract method 0x3def5140.
//
// Solidity: function setContentObjectRights(address obj, uint8 access_type, uint8 access) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) SetContentObjectRights(opts *bind.TransactOpts, obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "setContentObjectRights", obj, access_type, access)
}

// SetContentObjectRights is a paid mutator transaction binding the contract method 0x3def5140.
//
// Solidity: function setContentObjectRights(address obj, uint8 access_type, uint8 access) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) SetContentObjectRights(obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.SetContentObjectRights(&_BaseAccessControlGroup.TransactOpts, obj, access_type, access)
}

// SetContentObjectRights is a paid mutator transaction binding the contract method 0x3def5140.
//
// Solidity: function setContentObjectRights(address obj, uint8 access_type, uint8 access) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) SetContentObjectRights(obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.SetContentObjectRights(&_BaseAccessControlGroup.TransactOpts, obj, access_type, access)
}

// SetContentSpace is a paid mutator transaction binding the contract method 0x055af48f.
//
// Solidity: function setContentSpace(address content_space) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) SetContentSpace(opts *bind.TransactOpts, content_space common.Address) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "setContentSpace", content_space)
}

// SetContentSpace is a paid mutator transaction binding the contract method 0x055af48f.
//
// Solidity: function setContentSpace(address content_space) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) SetContentSpace(content_space common.Address) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.SetContentSpace(&_BaseAccessControlGroup.TransactOpts, content_space)
}

// SetContentSpace is a paid mutator transaction binding the contract method 0x055af48f.
//
// Solidity: function setContentSpace(address content_space) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) SetContentSpace(content_space common.Address) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.SetContentSpace(&_BaseAccessControlGroup.TransactOpts, content_space)
}

// SetContentTypeRights is a paid mutator transaction binding the contract method 0x8635adb5.
//
// Solidity: function setContentTypeRights(address obj, uint8 access_type, uint8 access) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) SetContentTypeRights(opts *bind.TransactOpts, obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "setContentTypeRights", obj, access_type, access)
}

// SetContentTypeRights is a paid mutator transaction binding the contract method 0x8635adb5.
//
// Solidity: function setContentTypeRights(address obj, uint8 access_type, uint8 access) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) SetContentTypeRights(obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.SetContentTypeRights(&_BaseAccessControlGroup.TransactOpts, obj, access_type, access)
}

// SetContentTypeRights is a paid mutator transaction binding the contract method 0x8635adb5.
//
// Solidity: function setContentTypeRights(address obj, uint8 access_type, uint8 access) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) SetContentTypeRights(obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.SetContentTypeRights(&_BaseAccessControlGroup.TransactOpts, obj, access_type, access)
}

// SetContractRights is a paid mutator transaction binding the contract method 0x224dcba0.
//
// Solidity: function setContractRights(address obj, uint8 access_type, uint8 access) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) SetContractRights(opts *bind.TransactOpts, obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "setContractRights", obj, access_type, access)
}

// SetContractRights is a paid mutator transaction binding the contract method 0x224dcba0.
//
// Solidity: function setContractRights(address obj, uint8 access_type, uint8 access) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) SetContractRights(obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.SetContractRights(&_BaseAccessControlGroup.TransactOpts, obj, access_type, access)
}

// SetContractRights is a paid mutator transaction binding the contract method 0x224dcba0.
//
// Solidity: function setContractRights(address obj, uint8 access_type, uint8 access) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) SetContractRights(obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.SetContractRights(&_BaseAccessControlGroup.TransactOpts, obj, access_type, access)
}

// SetEntityRights is a paid mutator transaction binding the contract method 0x5d7cf830.
//
// Solidity: function setEntityRights(uint8 indexType, address obj, uint8 access_type, uint8 access) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) SetEntityRights(opts *bind.TransactOpts, indexType uint8, obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "setEntityRights", indexType, obj, access_type, access)
}

// SetEntityRights is a paid mutator transaction binding the contract method 0x5d7cf830.
//
// Solidity: function setEntityRights(uint8 indexType, address obj, uint8 access_type, uint8 access) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) SetEntityRights(indexType uint8, obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.SetEntityRights(&_BaseAccessControlGroup.TransactOpts, indexType, obj, access_type, access)
}

// SetEntityRights is a paid mutator transaction binding the contract method 0x5d7cf830.
//
// Solidity: function setEntityRights(uint8 indexType, address obj, uint8 access_type, uint8 access) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) SetEntityRights(indexType uint8, obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.SetEntityRights(&_BaseAccessControlGroup.TransactOpts, indexType, obj, access_type, access)
}

// SetGroupRights is a paid mutator transaction binding the contract method 0x22e564eb.
//
// Solidity: function setGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) SetGroupRights(opts *bind.TransactOpts, group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "setGroupRights", group, access_type, access)
}

// SetGroupRights is a paid mutator transaction binding the contract method 0x22e564eb.
//
// Solidity: function setGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) SetGroupRights(group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.SetGroupRights(&_BaseAccessControlGroup.TransactOpts, group, access_type, access)
}

// SetGroupRights is a paid mutator transaction binding the contract method 0x22e564eb.
//
// Solidity: function setGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) SetGroupRights(group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.SetGroupRights(&_BaseAccessControlGroup.TransactOpts, group, access_type, access)
}

// SetLibraryRights is a paid mutator transaction binding the contract method 0x7cbb7bf2.
//
// Solidity: function setLibraryRights(address lib, uint8 access_type, uint8 access) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) SetLibraryRights(opts *bind.TransactOpts, lib common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "setLibraryRights", lib, access_type, access)
}

// SetLibraryRights is a paid mutator transaction binding the contract method 0x7cbb7bf2.
//
// Solidity: function setLibraryRights(address lib, uint8 access_type, uint8 access) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) SetLibraryRights(lib common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.SetLibraryRights(&_BaseAccessControlGroup.TransactOpts, lib, access_type, access)
}

// SetLibraryRights is a paid mutator transaction binding the contract method 0x7cbb7bf2.
//
// Solidity: function setLibraryRights(address lib, uint8 access_type, uint8 access) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) SetLibraryRights(lib common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.SetLibraryRights(&_BaseAccessControlGroup.TransactOpts, lib, access_type, access)
}

// SetOAuthEnabled is a paid mutator transaction binding the contract method 0xfba3779a.
//
// Solidity: function setOAuthEnabled(bool _enabled) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) SetOAuthEnabled(opts *bind.TransactOpts, _enabled bool) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "setOAuthEnabled", _enabled)
}

// SetOAuthEnabled is a paid mutator transaction binding the contract method 0xfba3779a.
//
// Solidity: function setOAuthEnabled(bool _enabled) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) SetOAuthEnabled(_enabled bool) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.SetOAuthEnabled(&_BaseAccessControlGroup.TransactOpts, _enabled)
}

// SetOAuthEnabled is a paid mutator transaction binding the contract method 0xfba3779a.
//
// Solidity: function setOAuthEnabled(bool _enabled) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) SetOAuthEnabled(_enabled bool) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.SetOAuthEnabled(&_BaseAccessControlGroup.TransactOpts, _enabled)
}

// SetRights is a paid mutator transaction binding the contract method 0x0fe1b5a2.
//
// Solidity: function setRights(address stakeholder, uint8 access_type, uint8 access) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) SetRights(opts *bind.TransactOpts, stakeholder common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "setRights", stakeholder, access_type, access)
}

// SetRights is a paid mutator transaction binding the contract method 0x0fe1b5a2.
//
// Solidity: function setRights(address stakeholder, uint8 access_type, uint8 access) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) SetRights(stakeholder common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.SetRights(&_BaseAccessControlGroup.TransactOpts, stakeholder, access_type, access)
}

// SetRights is a paid mutator transaction binding the contract method 0x0fe1b5a2.
//
// Solidity: function setRights(address stakeholder, uint8 access_type, uint8 access) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) SetRights(stakeholder common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.SetRights(&_BaseAccessControlGroup.TransactOpts, stakeholder, access_type, access)
}

// SetTenant is a paid mutator transaction binding the contract method 0x2e74a4de.
//
// Solidity: function setTenant(address _tenantAddr) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) SetTenant(opts *bind.TransactOpts, _tenantAddr common.Address) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "setTenant", _tenantAddr)
}

// SetTenant is a paid mutator transaction binding the contract method 0x2e74a4de.
//
// Solidity: function setTenant(address _tenantAddr) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) SetTenant(_tenantAddr common.Address) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.SetTenant(&_BaseAccessControlGroup.TransactOpts, _tenantAddr)
}

// SetTenant is a paid mutator transaction binding the contract method 0x2e74a4de.
//
// Solidity: function setTenant(address _tenantAddr) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) SetTenant(_tenantAddr common.Address) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.SetTenant(&_BaseAccessControlGroup.TransactOpts, _tenantAddr)
}

// SetVisibility is a paid mutator transaction binding the contract method 0xaa024e8b.
//
// Solidity: function setVisibility(uint8 _visibility_code) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) SetVisibility(opts *bind.TransactOpts, _visibility_code uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "setVisibility", _visibility_code)
}

// SetVisibility is a paid mutator transaction binding the contract method 0xaa024e8b.
//
// Solidity: function setVisibility(uint8 _visibility_code) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) SetVisibility(_visibility_code uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.SetVisibility(&_BaseAccessControlGroup.TransactOpts, _visibility_code)
}

// SetVisibility is a paid mutator transaction binding the contract method 0xaa024e8b.
//
// Solidity: function setVisibility(uint8 _visibility_code) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) SetVisibility(_visibility_code uint8) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.SetVisibility(&_BaseAccessControlGroup.TransactOpts, _visibility_code)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) TransferCreatorship(opts *bind.TransactOpts, newCreator common.Address) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "transferCreatorship", newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.TransferCreatorship(&_BaseAccessControlGroup.TransactOpts, newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.TransferCreatorship(&_BaseAccessControlGroup.TransactOpts, newCreator)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.TransferOwnership(&_BaseAccessControlGroup.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.TransferOwnership(&_BaseAccessControlGroup.TransactOpts, newOwner)
}

// UpdateRequest is a paid mutator transaction binding the contract method 0xc287e0ed.
//
// Solidity: function updateRequest() returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactor) UpdateRequest(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseAccessControlGroup.contract.Transact(opts, "updateRequest")
}

// UpdateRequest is a paid mutator transaction binding the contract method 0xc287e0ed.
//
// Solidity: function updateRequest() returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupSession) UpdateRequest() (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.UpdateRequest(&_BaseAccessControlGroup.TransactOpts)
}

// UpdateRequest is a paid mutator transaction binding the contract method 0xc287e0ed.
//
// Solidity: function updateRequest() returns()
func (_BaseAccessControlGroup *BaseAccessControlGroupTransactorSession) UpdateRequest() (*types.Transaction, error) {
	return _BaseAccessControlGroup.Contract.UpdateRequest(&_BaseAccessControlGroup.TransactOpts)
}

// BaseAccessControlGroupAccessRequestV3Iterator is returned from FilterAccessRequestV3 and is used to iterate over the raw logs and unpacked data for AccessRequestV3 events raised by the BaseAccessControlGroup contract.
type BaseAccessControlGroupAccessRequestV3Iterator struct {
	Event *BaseAccessControlGroupAccessRequestV3 // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseAccessControlGroupAccessRequestV3Iterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseAccessControlGroupAccessRequestV3)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseAccessControlGroupAccessRequestV3)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseAccessControlGroupAccessRequestV3Iterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseAccessControlGroupAccessRequestV3Iterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseAccessControlGroupAccessRequestV3 represents a AccessRequestV3 event raised by the BaseAccessControlGroup contract.
type BaseAccessControlGroupAccessRequestV3 struct {
	RequestNonce     *big.Int
	ParentAddress    common.Address
	ContextHash      [32]byte
	Accessor         common.Address
	RequestTimestamp *big.Int
	Raw              types.Log // Blockchain specific contextual infos
}

// FilterAccessRequestV3 is a free log retrieval operation binding the contract event 0x545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c7.
//
// Solidity: event AccessRequestV3(uint256 requestNonce, address parentAddress, bytes32 contextHash, address accessor, uint256 requestTimestamp)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) FilterAccessRequestV3(opts *bind.FilterOpts) (*BaseAccessControlGroupAccessRequestV3Iterator, error) {

	logs, sub, err := _BaseAccessControlGroup.contract.FilterLogs(opts, "AccessRequestV3")
	if err != nil {
		return nil, err
	}
	return &BaseAccessControlGroupAccessRequestV3Iterator{contract: _BaseAccessControlGroup.contract, event: "AccessRequestV3", logs: logs, sub: sub}, nil
}

// WatchAccessRequestV3 is a free log subscription operation binding the contract event 0x545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c7.
//
// Solidity: event AccessRequestV3(uint256 requestNonce, address parentAddress, bytes32 contextHash, address accessor, uint256 requestTimestamp)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) WatchAccessRequestV3(opts *bind.WatchOpts, sink chan<- *BaseAccessControlGroupAccessRequestV3) (event.Subscription, error) {

	logs, sub, err := _BaseAccessControlGroup.contract.WatchLogs(opts, "AccessRequestV3")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseAccessControlGroupAccessRequestV3)
				if err := _BaseAccessControlGroup.contract.UnpackLog(event, "AccessRequestV3", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAccessRequestV3 is a log parse operation binding the contract event 0x545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c7.
//
// Solidity: event AccessRequestV3(uint256 requestNonce, address parentAddress, bytes32 contextHash, address accessor, uint256 requestTimestamp)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) ParseAccessRequestV3(log types.Log) (*BaseAccessControlGroupAccessRequestV3, error) {
	event := new(BaseAccessControlGroupAccessRequestV3)
	if err := _BaseAccessControlGroup.contract.UnpackLog(event, "AccessRequestV3", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseAccessControlGroupBitSetAndGetIterator is returned from FilterBitSetAndGet and is used to iterate over the raw logs and unpacked data for BitSetAndGet events raised by the BaseAccessControlGroup contract.
type BaseAccessControlGroupBitSetAndGetIterator struct {
	Event *BaseAccessControlGroupBitSetAndGet // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseAccessControlGroupBitSetAndGetIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseAccessControlGroupBitSetAndGet)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseAccessControlGroupBitSetAndGet)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseAccessControlGroupBitSetAndGetIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseAccessControlGroupBitSetAndGetIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseAccessControlGroupBitSetAndGet represents a BitSetAndGet event raised by the BaseAccessControlGroup contract.
type BaseAccessControlGroupBitSetAndGet struct {
	Ident [32]byte
	Ord   uint8
	Prev  bool
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterBitSetAndGet is a free log retrieval operation binding the contract event 0x4d04842102a74d85e502eec18f3048954c6d6e1d1c368c7bc49edcdcd45e9c3d.
//
// Solidity: event BitSetAndGet(bytes32 ident, uint8 ord, bool prev)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) FilterBitSetAndGet(opts *bind.FilterOpts) (*BaseAccessControlGroupBitSetAndGetIterator, error) {

	logs, sub, err := _BaseAccessControlGroup.contract.FilterLogs(opts, "BitSetAndGet")
	if err != nil {
		return nil, err
	}
	return &BaseAccessControlGroupBitSetAndGetIterator{contract: _BaseAccessControlGroup.contract, event: "BitSetAndGet", logs: logs, sub: sub}, nil
}

// WatchBitSetAndGet is a free log subscription operation binding the contract event 0x4d04842102a74d85e502eec18f3048954c6d6e1d1c368c7bc49edcdcd45e9c3d.
//
// Solidity: event BitSetAndGet(bytes32 ident, uint8 ord, bool prev)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) WatchBitSetAndGet(opts *bind.WatchOpts, sink chan<- *BaseAccessControlGroupBitSetAndGet) (event.Subscription, error) {

	logs, sub, err := _BaseAccessControlGroup.contract.WatchLogs(opts, "BitSetAndGet")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseAccessControlGroupBitSetAndGet)
				if err := _BaseAccessControlGroup.contract.UnpackLog(event, "BitSetAndGet", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseBitSetAndGet is a log parse operation binding the contract event 0x4d04842102a74d85e502eec18f3048954c6d6e1d1c368c7bc49edcdcd45e9c3d.
//
// Solidity: event BitSetAndGet(bytes32 ident, uint8 ord, bool prev)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) ParseBitSetAndGet(log types.Log) (*BaseAccessControlGroupBitSetAndGet, error) {
	event := new(BaseAccessControlGroupBitSetAndGet)
	if err := _BaseAccessControlGroup.contract.UnpackLog(event, "BitSetAndGet", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseAccessControlGroupCommitPendingIterator is returned from FilterCommitPending and is used to iterate over the raw logs and unpacked data for CommitPending events raised by the BaseAccessControlGroup contract.
type BaseAccessControlGroupCommitPendingIterator struct {
	Event *BaseAccessControlGroupCommitPending // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseAccessControlGroupCommitPendingIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseAccessControlGroupCommitPending)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseAccessControlGroupCommitPending)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseAccessControlGroupCommitPendingIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseAccessControlGroupCommitPendingIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseAccessControlGroupCommitPending represents a CommitPending event raised by the BaseAccessControlGroup contract.
type BaseAccessControlGroupCommitPending struct {
	SpaceAddress  common.Address
	ParentAddress common.Address
	ObjectHash    string
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterCommitPending is a free log retrieval operation binding the contract event 0xb3ac059d88af6016aca1aebb7b3e796f2e7420435c59c563687814e9b85daa75.
//
// Solidity: event CommitPending(address spaceAddress, address parentAddress, string objectHash)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) FilterCommitPending(opts *bind.FilterOpts) (*BaseAccessControlGroupCommitPendingIterator, error) {

	logs, sub, err := _BaseAccessControlGroup.contract.FilterLogs(opts, "CommitPending")
	if err != nil {
		return nil, err
	}
	return &BaseAccessControlGroupCommitPendingIterator{contract: _BaseAccessControlGroup.contract, event: "CommitPending", logs: logs, sub: sub}, nil
}

// WatchCommitPending is a free log subscription operation binding the contract event 0xb3ac059d88af6016aca1aebb7b3e796f2e7420435c59c563687814e9b85daa75.
//
// Solidity: event CommitPending(address spaceAddress, address parentAddress, string objectHash)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) WatchCommitPending(opts *bind.WatchOpts, sink chan<- *BaseAccessControlGroupCommitPending) (event.Subscription, error) {

	logs, sub, err := _BaseAccessControlGroup.contract.WatchLogs(opts, "CommitPending")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseAccessControlGroupCommitPending)
				if err := _BaseAccessControlGroup.contract.UnpackLog(event, "CommitPending", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseCommitPending is a log parse operation binding the contract event 0xb3ac059d88af6016aca1aebb7b3e796f2e7420435c59c563687814e9b85daa75.
//
// Solidity: event CommitPending(address spaceAddress, address parentAddress, string objectHash)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) ParseCommitPending(log types.Log) (*BaseAccessControlGroupCommitPending, error) {
	event := new(BaseAccessControlGroupCommitPending)
	if err := _BaseAccessControlGroup.contract.UnpackLog(event, "CommitPending", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseAccessControlGroupCounterIncrementedIterator is returned from FilterCounterIncremented and is used to iterate over the raw logs and unpacked data for CounterIncremented events raised by the BaseAccessControlGroup contract.
type BaseAccessControlGroupCounterIncrementedIterator struct {
	Event *BaseAccessControlGroupCounterIncremented // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseAccessControlGroupCounterIncrementedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseAccessControlGroupCounterIncremented)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseAccessControlGroupCounterIncremented)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseAccessControlGroupCounterIncrementedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseAccessControlGroupCounterIncrementedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseAccessControlGroupCounterIncremented represents a CounterIncremented event raised by the BaseAccessControlGroup contract.
type BaseAccessControlGroupCounterIncremented struct {
	Ident [32]byte
	Slot  uint8
	Val   uint32
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterCounterIncremented is a free log retrieval operation binding the contract event 0x77a2025a71f0f345cfd7e8a699b42215025b6ab4706dcfaa29393790aa63383f.
//
// Solidity: event CounterIncremented(bytes32 ident, uint8 slot, uint32 val)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) FilterCounterIncremented(opts *bind.FilterOpts) (*BaseAccessControlGroupCounterIncrementedIterator, error) {

	logs, sub, err := _BaseAccessControlGroup.contract.FilterLogs(opts, "CounterIncremented")
	if err != nil {
		return nil, err
	}
	return &BaseAccessControlGroupCounterIncrementedIterator{contract: _BaseAccessControlGroup.contract, event: "CounterIncremented", logs: logs, sub: sub}, nil
}

// WatchCounterIncremented is a free log subscription operation binding the contract event 0x77a2025a71f0f345cfd7e8a699b42215025b6ab4706dcfaa29393790aa63383f.
//
// Solidity: event CounterIncremented(bytes32 ident, uint8 slot, uint32 val)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) WatchCounterIncremented(opts *bind.WatchOpts, sink chan<- *BaseAccessControlGroupCounterIncremented) (event.Subscription, error) {

	logs, sub, err := _BaseAccessControlGroup.contract.WatchLogs(opts, "CounterIncremented")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseAccessControlGroupCounterIncremented)
				if err := _BaseAccessControlGroup.contract.UnpackLog(event, "CounterIncremented", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseCounterIncremented is a log parse operation binding the contract event 0x77a2025a71f0f345cfd7e8a699b42215025b6ab4706dcfaa29393790aa63383f.
//
// Solidity: event CounterIncremented(bytes32 ident, uint8 slot, uint32 val)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) ParseCounterIncremented(log types.Log) (*BaseAccessControlGroupCounterIncremented, error) {
	event := new(BaseAccessControlGroupCounterIncremented)
	if err := _BaseAccessControlGroup.contract.UnpackLog(event, "CounterIncremented", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseAccessControlGroupManagerAccessGrantedIterator is returned from FilterManagerAccessGranted and is used to iterate over the raw logs and unpacked data for ManagerAccessGranted events raised by the BaseAccessControlGroup contract.
type BaseAccessControlGroupManagerAccessGrantedIterator struct {
	Event *BaseAccessControlGroupManagerAccessGranted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseAccessControlGroupManagerAccessGrantedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseAccessControlGroupManagerAccessGranted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseAccessControlGroupManagerAccessGranted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseAccessControlGroupManagerAccessGrantedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseAccessControlGroupManagerAccessGrantedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseAccessControlGroupManagerAccessGranted represents a ManagerAccessGranted event raised by the BaseAccessControlGroup contract.
type BaseAccessControlGroupManagerAccessGranted struct {
	Candidate common.Address
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterManagerAccessGranted is a free log retrieval operation binding the contract event 0x93bcaab179551bde429187645251f8e1fb8ac85801fcb1cf91eb2c9043d61117.
//
// Solidity: event ManagerAccessGranted(address candidate)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) FilterManagerAccessGranted(opts *bind.FilterOpts) (*BaseAccessControlGroupManagerAccessGrantedIterator, error) {

	logs, sub, err := _BaseAccessControlGroup.contract.FilterLogs(opts, "ManagerAccessGranted")
	if err != nil {
		return nil, err
	}
	return &BaseAccessControlGroupManagerAccessGrantedIterator{contract: _BaseAccessControlGroup.contract, event: "ManagerAccessGranted", logs: logs, sub: sub}, nil
}

// WatchManagerAccessGranted is a free log subscription operation binding the contract event 0x93bcaab179551bde429187645251f8e1fb8ac85801fcb1cf91eb2c9043d61117.
//
// Solidity: event ManagerAccessGranted(address candidate)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) WatchManagerAccessGranted(opts *bind.WatchOpts, sink chan<- *BaseAccessControlGroupManagerAccessGranted) (event.Subscription, error) {

	logs, sub, err := _BaseAccessControlGroup.contract.WatchLogs(opts, "ManagerAccessGranted")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseAccessControlGroupManagerAccessGranted)
				if err := _BaseAccessControlGroup.contract.UnpackLog(event, "ManagerAccessGranted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseManagerAccessGranted is a log parse operation binding the contract event 0x93bcaab179551bde429187645251f8e1fb8ac85801fcb1cf91eb2c9043d61117.
//
// Solidity: event ManagerAccessGranted(address candidate)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) ParseManagerAccessGranted(log types.Log) (*BaseAccessControlGroupManagerAccessGranted, error) {
	event := new(BaseAccessControlGroupManagerAccessGranted)
	if err := _BaseAccessControlGroup.contract.UnpackLog(event, "ManagerAccessGranted", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseAccessControlGroupManagerAccessRevokedIterator is returned from FilterManagerAccessRevoked and is used to iterate over the raw logs and unpacked data for ManagerAccessRevoked events raised by the BaseAccessControlGroup contract.
type BaseAccessControlGroupManagerAccessRevokedIterator struct {
	Event *BaseAccessControlGroupManagerAccessRevoked // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseAccessControlGroupManagerAccessRevokedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseAccessControlGroupManagerAccessRevoked)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseAccessControlGroupManagerAccessRevoked)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseAccessControlGroupManagerAccessRevokedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseAccessControlGroupManagerAccessRevokedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseAccessControlGroupManagerAccessRevoked represents a ManagerAccessRevoked event raised by the BaseAccessControlGroup contract.
type BaseAccessControlGroupManagerAccessRevoked struct {
	Candidate common.Address
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterManagerAccessRevoked is a free log retrieval operation binding the contract event 0x2d6aa1a9629d125e23a0cf692cda7cd6795dff1652eedd4673b38ec31e387b95.
//
// Solidity: event ManagerAccessRevoked(address candidate)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) FilterManagerAccessRevoked(opts *bind.FilterOpts) (*BaseAccessControlGroupManagerAccessRevokedIterator, error) {

	logs, sub, err := _BaseAccessControlGroup.contract.FilterLogs(opts, "ManagerAccessRevoked")
	if err != nil {
		return nil, err
	}
	return &BaseAccessControlGroupManagerAccessRevokedIterator{contract: _BaseAccessControlGroup.contract, event: "ManagerAccessRevoked", logs: logs, sub: sub}, nil
}

// WatchManagerAccessRevoked is a free log subscription operation binding the contract event 0x2d6aa1a9629d125e23a0cf692cda7cd6795dff1652eedd4673b38ec31e387b95.
//
// Solidity: event ManagerAccessRevoked(address candidate)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) WatchManagerAccessRevoked(opts *bind.WatchOpts, sink chan<- *BaseAccessControlGroupManagerAccessRevoked) (event.Subscription, error) {

	logs, sub, err := _BaseAccessControlGroup.contract.WatchLogs(opts, "ManagerAccessRevoked")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseAccessControlGroupManagerAccessRevoked)
				if err := _BaseAccessControlGroup.contract.UnpackLog(event, "ManagerAccessRevoked", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseManagerAccessRevoked is a log parse operation binding the contract event 0x2d6aa1a9629d125e23a0cf692cda7cd6795dff1652eedd4673b38ec31e387b95.
//
// Solidity: event ManagerAccessRevoked(address candidate)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) ParseManagerAccessRevoked(log types.Log) (*BaseAccessControlGroupManagerAccessRevoked, error) {
	event := new(BaseAccessControlGroupManagerAccessRevoked)
	if err := _BaseAccessControlGroup.contract.UnpackLog(event, "ManagerAccessRevoked", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseAccessControlGroupMemberAddedIterator is returned from FilterMemberAdded and is used to iterate over the raw logs and unpacked data for MemberAdded events raised by the BaseAccessControlGroup contract.
type BaseAccessControlGroupMemberAddedIterator struct {
	Event *BaseAccessControlGroupMemberAdded // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseAccessControlGroupMemberAddedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseAccessControlGroupMemberAdded)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseAccessControlGroupMemberAdded)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseAccessControlGroupMemberAddedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseAccessControlGroupMemberAddedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseAccessControlGroupMemberAdded represents a MemberAdded event raised by the BaseAccessControlGroup contract.
type BaseAccessControlGroupMemberAdded struct {
	Candidate common.Address
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterMemberAdded is a free log retrieval operation binding the contract event 0xb251eb052afc73ffd02ffe85ad79990a8b3fed60d76dbc2fa2fdd7123dffd914.
//
// Solidity: event MemberAdded(address candidate)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) FilterMemberAdded(opts *bind.FilterOpts) (*BaseAccessControlGroupMemberAddedIterator, error) {

	logs, sub, err := _BaseAccessControlGroup.contract.FilterLogs(opts, "MemberAdded")
	if err != nil {
		return nil, err
	}
	return &BaseAccessControlGroupMemberAddedIterator{contract: _BaseAccessControlGroup.contract, event: "MemberAdded", logs: logs, sub: sub}, nil
}

// WatchMemberAdded is a free log subscription operation binding the contract event 0xb251eb052afc73ffd02ffe85ad79990a8b3fed60d76dbc2fa2fdd7123dffd914.
//
// Solidity: event MemberAdded(address candidate)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) WatchMemberAdded(opts *bind.WatchOpts, sink chan<- *BaseAccessControlGroupMemberAdded) (event.Subscription, error) {

	logs, sub, err := _BaseAccessControlGroup.contract.WatchLogs(opts, "MemberAdded")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseAccessControlGroupMemberAdded)
				if err := _BaseAccessControlGroup.contract.UnpackLog(event, "MemberAdded", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseMemberAdded is a log parse operation binding the contract event 0xb251eb052afc73ffd02ffe85ad79990a8b3fed60d76dbc2fa2fdd7123dffd914.
//
// Solidity: event MemberAdded(address candidate)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) ParseMemberAdded(log types.Log) (*BaseAccessControlGroupMemberAdded, error) {
	event := new(BaseAccessControlGroupMemberAdded)
	if err := _BaseAccessControlGroup.contract.UnpackLog(event, "MemberAdded", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseAccessControlGroupMemberRevokedIterator is returned from FilterMemberRevoked and is used to iterate over the raw logs and unpacked data for MemberRevoked events raised by the BaseAccessControlGroup contract.
type BaseAccessControlGroupMemberRevokedIterator struct {
	Event *BaseAccessControlGroupMemberRevoked // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseAccessControlGroupMemberRevokedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseAccessControlGroupMemberRevoked)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseAccessControlGroupMemberRevoked)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseAccessControlGroupMemberRevokedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseAccessControlGroupMemberRevokedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseAccessControlGroupMemberRevoked represents a MemberRevoked event raised by the BaseAccessControlGroup contract.
type BaseAccessControlGroupMemberRevoked struct {
	Candidate common.Address
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterMemberRevoked is a free log retrieval operation binding the contract event 0x745cd29407db644ed93e3ceb61cbcab96d1dfb496989ac5d5bf514fc5a9fab9c.
//
// Solidity: event MemberRevoked(address candidate)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) FilterMemberRevoked(opts *bind.FilterOpts) (*BaseAccessControlGroupMemberRevokedIterator, error) {

	logs, sub, err := _BaseAccessControlGroup.contract.FilterLogs(opts, "MemberRevoked")
	if err != nil {
		return nil, err
	}
	return &BaseAccessControlGroupMemberRevokedIterator{contract: _BaseAccessControlGroup.contract, event: "MemberRevoked", logs: logs, sub: sub}, nil
}

// WatchMemberRevoked is a free log subscription operation binding the contract event 0x745cd29407db644ed93e3ceb61cbcab96d1dfb496989ac5d5bf514fc5a9fab9c.
//
// Solidity: event MemberRevoked(address candidate)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) WatchMemberRevoked(opts *bind.WatchOpts, sink chan<- *BaseAccessControlGroupMemberRevoked) (event.Subscription, error) {

	logs, sub, err := _BaseAccessControlGroup.contract.WatchLogs(opts, "MemberRevoked")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseAccessControlGroupMemberRevoked)
				if err := _BaseAccessControlGroup.contract.UnpackLog(event, "MemberRevoked", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseMemberRevoked is a log parse operation binding the contract event 0x745cd29407db644ed93e3ceb61cbcab96d1dfb496989ac5d5bf514fc5a9fab9c.
//
// Solidity: event MemberRevoked(address candidate)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) ParseMemberRevoked(log types.Log) (*BaseAccessControlGroupMemberRevoked, error) {
	event := new(BaseAccessControlGroupMemberRevoked)
	if err := _BaseAccessControlGroup.contract.UnpackLog(event, "MemberRevoked", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseAccessControlGroupOAuthStatusChangedIterator is returned from FilterOAuthStatusChanged and is used to iterate over the raw logs and unpacked data for OAuthStatusChanged events raised by the BaseAccessControlGroup contract.
type BaseAccessControlGroupOAuthStatusChangedIterator struct {
	Event *BaseAccessControlGroupOAuthStatusChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseAccessControlGroupOAuthStatusChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseAccessControlGroupOAuthStatusChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseAccessControlGroupOAuthStatusChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseAccessControlGroupOAuthStatusChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseAccessControlGroupOAuthStatusChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseAccessControlGroupOAuthStatusChanged represents a OAuthStatusChanged event raised by the BaseAccessControlGroup contract.
type BaseAccessControlGroupOAuthStatusChanged struct {
	Enabled bool
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterOAuthStatusChanged is a free log retrieval operation binding the contract event 0x04c71e53d136838eea703132a77007b0526b9a7691cdb7a6017a93673f865cbb.
//
// Solidity: event OAuthStatusChanged(bool enabled)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) FilterOAuthStatusChanged(opts *bind.FilterOpts) (*BaseAccessControlGroupOAuthStatusChangedIterator, error) {

	logs, sub, err := _BaseAccessControlGroup.contract.FilterLogs(opts, "OAuthStatusChanged")
	if err != nil {
		return nil, err
	}
	return &BaseAccessControlGroupOAuthStatusChangedIterator{contract: _BaseAccessControlGroup.contract, event: "OAuthStatusChanged", logs: logs, sub: sub}, nil
}

// WatchOAuthStatusChanged is a free log subscription operation binding the contract event 0x04c71e53d136838eea703132a77007b0526b9a7691cdb7a6017a93673f865cbb.
//
// Solidity: event OAuthStatusChanged(bool enabled)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) WatchOAuthStatusChanged(opts *bind.WatchOpts, sink chan<- *BaseAccessControlGroupOAuthStatusChanged) (event.Subscription, error) {

	logs, sub, err := _BaseAccessControlGroup.contract.WatchLogs(opts, "OAuthStatusChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseAccessControlGroupOAuthStatusChanged)
				if err := _BaseAccessControlGroup.contract.UnpackLog(event, "OAuthStatusChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOAuthStatusChanged is a log parse operation binding the contract event 0x04c71e53d136838eea703132a77007b0526b9a7691cdb7a6017a93673f865cbb.
//
// Solidity: event OAuthStatusChanged(bool enabled)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) ParseOAuthStatusChanged(log types.Log) (*BaseAccessControlGroupOAuthStatusChanged, error) {
	event := new(BaseAccessControlGroupOAuthStatusChanged)
	if err := _BaseAccessControlGroup.contract.UnpackLog(event, "OAuthStatusChanged", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseAccessControlGroupObjectMetaChangedIterator is returned from FilterObjectMetaChanged and is used to iterate over the raw logs and unpacked data for ObjectMetaChanged events raised by the BaseAccessControlGroup contract.
type BaseAccessControlGroupObjectMetaChangedIterator struct {
	Event *BaseAccessControlGroupObjectMetaChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseAccessControlGroupObjectMetaChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseAccessControlGroupObjectMetaChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseAccessControlGroupObjectMetaChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseAccessControlGroupObjectMetaChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseAccessControlGroupObjectMetaChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseAccessControlGroupObjectMetaChanged represents a ObjectMetaChanged event raised by the BaseAccessControlGroup contract.
type BaseAccessControlGroupObjectMetaChanged struct {
	Key []byte
	Raw types.Log // Blockchain specific contextual infos
}

// FilterObjectMetaChanged is a free log retrieval operation binding the contract event 0xe2b310ec9dabdc05229a748e07666c3bc9c46c6ef465cce30d0aa3aa64a0644c.
//
// Solidity: event ObjectMetaChanged(bytes key)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) FilterObjectMetaChanged(opts *bind.FilterOpts) (*BaseAccessControlGroupObjectMetaChangedIterator, error) {

	logs, sub, err := _BaseAccessControlGroup.contract.FilterLogs(opts, "ObjectMetaChanged")
	if err != nil {
		return nil, err
	}
	return &BaseAccessControlGroupObjectMetaChangedIterator{contract: _BaseAccessControlGroup.contract, event: "ObjectMetaChanged", logs: logs, sub: sub}, nil
}

// WatchObjectMetaChanged is a free log subscription operation binding the contract event 0xe2b310ec9dabdc05229a748e07666c3bc9c46c6ef465cce30d0aa3aa64a0644c.
//
// Solidity: event ObjectMetaChanged(bytes key)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) WatchObjectMetaChanged(opts *bind.WatchOpts, sink chan<- *BaseAccessControlGroupObjectMetaChanged) (event.Subscription, error) {

	logs, sub, err := _BaseAccessControlGroup.contract.WatchLogs(opts, "ObjectMetaChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseAccessControlGroupObjectMetaChanged)
				if err := _BaseAccessControlGroup.contract.UnpackLog(event, "ObjectMetaChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseObjectMetaChanged is a log parse operation binding the contract event 0xe2b310ec9dabdc05229a748e07666c3bc9c46c6ef465cce30d0aa3aa64a0644c.
//
// Solidity: event ObjectMetaChanged(bytes key)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) ParseObjectMetaChanged(log types.Log) (*BaseAccessControlGroupObjectMetaChanged, error) {
	event := new(BaseAccessControlGroupObjectMetaChanged)
	if err := _BaseAccessControlGroup.contract.UnpackLog(event, "ObjectMetaChanged", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseAccessControlGroupRightsChangedIterator is returned from FilterRightsChanged and is used to iterate over the raw logs and unpacked data for RightsChanged events raised by the BaseAccessControlGroup contract.
type BaseAccessControlGroupRightsChangedIterator struct {
	Event *BaseAccessControlGroupRightsChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseAccessControlGroupRightsChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseAccessControlGroupRightsChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseAccessControlGroupRightsChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseAccessControlGroupRightsChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseAccessControlGroupRightsChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseAccessControlGroupRightsChanged represents a RightsChanged event raised by the BaseAccessControlGroup contract.
type BaseAccessControlGroupRightsChanged struct {
	Principal common.Address
	Entity    common.Address
	Aggregate uint8
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterRightsChanged is a free log retrieval operation binding the contract event 0x23dcae6acc296731e3679d01e7cd963988e5a372850a0a1db2b9b01539e19ff4.
//
// Solidity: event RightsChanged(address principal, address entity, uint8 aggregate)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) FilterRightsChanged(opts *bind.FilterOpts) (*BaseAccessControlGroupRightsChangedIterator, error) {

	logs, sub, err := _BaseAccessControlGroup.contract.FilterLogs(opts, "RightsChanged")
	if err != nil {
		return nil, err
	}
	return &BaseAccessControlGroupRightsChangedIterator{contract: _BaseAccessControlGroup.contract, event: "RightsChanged", logs: logs, sub: sub}, nil
}

// WatchRightsChanged is a free log subscription operation binding the contract event 0x23dcae6acc296731e3679d01e7cd963988e5a372850a0a1db2b9b01539e19ff4.
//
// Solidity: event RightsChanged(address principal, address entity, uint8 aggregate)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) WatchRightsChanged(opts *bind.WatchOpts, sink chan<- *BaseAccessControlGroupRightsChanged) (event.Subscription, error) {

	logs, sub, err := _BaseAccessControlGroup.contract.WatchLogs(opts, "RightsChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseAccessControlGroupRightsChanged)
				if err := _BaseAccessControlGroup.contract.UnpackLog(event, "RightsChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRightsChanged is a log parse operation binding the contract event 0x23dcae6acc296731e3679d01e7cd963988e5a372850a0a1db2b9b01539e19ff4.
//
// Solidity: event RightsChanged(address principal, address entity, uint8 aggregate)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) ParseRightsChanged(log types.Log) (*BaseAccessControlGroupRightsChanged, error) {
	event := new(BaseAccessControlGroupRightsChanged)
	if err := _BaseAccessControlGroup.contract.UnpackLog(event, "RightsChanged", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseAccessControlGroupUnauthorizedOperationIterator is returned from FilterUnauthorizedOperation and is used to iterate over the raw logs and unpacked data for UnauthorizedOperation events raised by the BaseAccessControlGroup contract.
type BaseAccessControlGroupUnauthorizedOperationIterator struct {
	Event *BaseAccessControlGroupUnauthorizedOperation // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseAccessControlGroupUnauthorizedOperationIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseAccessControlGroupUnauthorizedOperation)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseAccessControlGroupUnauthorizedOperation)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseAccessControlGroupUnauthorizedOperationIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseAccessControlGroupUnauthorizedOperationIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseAccessControlGroupUnauthorizedOperation represents a UnauthorizedOperation event raised by the BaseAccessControlGroup contract.
type BaseAccessControlGroupUnauthorizedOperation struct {
	OperationCode *big.Int
	Candidate     common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterUnauthorizedOperation is a free log retrieval operation binding the contract event 0x23de2adc3e22f171f66b3e5a333e17feb9dc30ba9570933bd259cb6c13ef7ab7.
//
// Solidity: event UnauthorizedOperation(uint256 operationCode, address candidate)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) FilterUnauthorizedOperation(opts *bind.FilterOpts) (*BaseAccessControlGroupUnauthorizedOperationIterator, error) {

	logs, sub, err := _BaseAccessControlGroup.contract.FilterLogs(opts, "UnauthorizedOperation")
	if err != nil {
		return nil, err
	}
	return &BaseAccessControlGroupUnauthorizedOperationIterator{contract: _BaseAccessControlGroup.contract, event: "UnauthorizedOperation", logs: logs, sub: sub}, nil
}

// WatchUnauthorizedOperation is a free log subscription operation binding the contract event 0x23de2adc3e22f171f66b3e5a333e17feb9dc30ba9570933bd259cb6c13ef7ab7.
//
// Solidity: event UnauthorizedOperation(uint256 operationCode, address candidate)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) WatchUnauthorizedOperation(opts *bind.WatchOpts, sink chan<- *BaseAccessControlGroupUnauthorizedOperation) (event.Subscription, error) {

	logs, sub, err := _BaseAccessControlGroup.contract.WatchLogs(opts, "UnauthorizedOperation")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseAccessControlGroupUnauthorizedOperation)
				if err := _BaseAccessControlGroup.contract.UnpackLog(event, "UnauthorizedOperation", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseUnauthorizedOperation is a log parse operation binding the contract event 0x23de2adc3e22f171f66b3e5a333e17feb9dc30ba9570933bd259cb6c13ef7ab7.
//
// Solidity: event UnauthorizedOperation(uint256 operationCode, address candidate)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) ParseUnauthorizedOperation(log types.Log) (*BaseAccessControlGroupUnauthorizedOperation, error) {
	event := new(BaseAccessControlGroupUnauthorizedOperation)
	if err := _BaseAccessControlGroup.contract.UnpackLog(event, "UnauthorizedOperation", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseAccessControlGroupUpdateRequestIterator is returned from FilterUpdateRequest and is used to iterate over the raw logs and unpacked data for UpdateRequest events raised by the BaseAccessControlGroup contract.
type BaseAccessControlGroupUpdateRequestIterator struct {
	Event *BaseAccessControlGroupUpdateRequest // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseAccessControlGroupUpdateRequestIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseAccessControlGroupUpdateRequest)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseAccessControlGroupUpdateRequest)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseAccessControlGroupUpdateRequestIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseAccessControlGroupUpdateRequestIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseAccessControlGroupUpdateRequest represents a UpdateRequest event raised by the BaseAccessControlGroup contract.
type BaseAccessControlGroupUpdateRequest struct {
	ObjectHash string
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterUpdateRequest is a free log retrieval operation binding the contract event 0x403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b65.
//
// Solidity: event UpdateRequest(string objectHash)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) FilterUpdateRequest(opts *bind.FilterOpts) (*BaseAccessControlGroupUpdateRequestIterator, error) {

	logs, sub, err := _BaseAccessControlGroup.contract.FilterLogs(opts, "UpdateRequest")
	if err != nil {
		return nil, err
	}
	return &BaseAccessControlGroupUpdateRequestIterator{contract: _BaseAccessControlGroup.contract, event: "UpdateRequest", logs: logs, sub: sub}, nil
}

// WatchUpdateRequest is a free log subscription operation binding the contract event 0x403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b65.
//
// Solidity: event UpdateRequest(string objectHash)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) WatchUpdateRequest(opts *bind.WatchOpts, sink chan<- *BaseAccessControlGroupUpdateRequest) (event.Subscription, error) {

	logs, sub, err := _BaseAccessControlGroup.contract.WatchLogs(opts, "UpdateRequest")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseAccessControlGroupUpdateRequest)
				if err := _BaseAccessControlGroup.contract.UnpackLog(event, "UpdateRequest", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseUpdateRequest is a log parse operation binding the contract event 0x403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b65.
//
// Solidity: event UpdateRequest(string objectHash)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) ParseUpdateRequest(log types.Log) (*BaseAccessControlGroupUpdateRequest, error) {
	event := new(BaseAccessControlGroupUpdateRequest)
	if err := _BaseAccessControlGroup.contract.UnpackLog(event, "UpdateRequest", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseAccessControlGroupVersionConfirmIterator is returned from FilterVersionConfirm and is used to iterate over the raw logs and unpacked data for VersionConfirm events raised by the BaseAccessControlGroup contract.
type BaseAccessControlGroupVersionConfirmIterator struct {
	Event *BaseAccessControlGroupVersionConfirm // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseAccessControlGroupVersionConfirmIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseAccessControlGroupVersionConfirm)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseAccessControlGroupVersionConfirm)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseAccessControlGroupVersionConfirmIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseAccessControlGroupVersionConfirmIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseAccessControlGroupVersionConfirm represents a VersionConfirm event raised by the BaseAccessControlGroup contract.
type BaseAccessControlGroupVersionConfirm struct {
	SpaceAddress  common.Address
	ParentAddress common.Address
	ObjectHash    string
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterVersionConfirm is a free log retrieval operation binding the contract event 0xbdaffceabaaa783aa187fea6c2e815541d29e2290bf3f7d3c4fc53672b68f7df.
//
// Solidity: event VersionConfirm(address spaceAddress, address parentAddress, string objectHash)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) FilterVersionConfirm(opts *bind.FilterOpts) (*BaseAccessControlGroupVersionConfirmIterator, error) {

	logs, sub, err := _BaseAccessControlGroup.contract.FilterLogs(opts, "VersionConfirm")
	if err != nil {
		return nil, err
	}
	return &BaseAccessControlGroupVersionConfirmIterator{contract: _BaseAccessControlGroup.contract, event: "VersionConfirm", logs: logs, sub: sub}, nil
}

// WatchVersionConfirm is a free log subscription operation binding the contract event 0xbdaffceabaaa783aa187fea6c2e815541d29e2290bf3f7d3c4fc53672b68f7df.
//
// Solidity: event VersionConfirm(address spaceAddress, address parentAddress, string objectHash)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) WatchVersionConfirm(opts *bind.WatchOpts, sink chan<- *BaseAccessControlGroupVersionConfirm) (event.Subscription, error) {

	logs, sub, err := _BaseAccessControlGroup.contract.WatchLogs(opts, "VersionConfirm")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseAccessControlGroupVersionConfirm)
				if err := _BaseAccessControlGroup.contract.UnpackLog(event, "VersionConfirm", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseVersionConfirm is a log parse operation binding the contract event 0xbdaffceabaaa783aa187fea6c2e815541d29e2290bf3f7d3c4fc53672b68f7df.
//
// Solidity: event VersionConfirm(address spaceAddress, address parentAddress, string objectHash)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) ParseVersionConfirm(log types.Log) (*BaseAccessControlGroupVersionConfirm, error) {
	event := new(BaseAccessControlGroupVersionConfirm)
	if err := _BaseAccessControlGroup.contract.UnpackLog(event, "VersionConfirm", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseAccessControlGroupVersionDeleteIterator is returned from FilterVersionDelete and is used to iterate over the raw logs and unpacked data for VersionDelete events raised by the BaseAccessControlGroup contract.
type BaseAccessControlGroupVersionDeleteIterator struct {
	Event *BaseAccessControlGroupVersionDelete // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseAccessControlGroupVersionDeleteIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseAccessControlGroupVersionDelete)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseAccessControlGroupVersionDelete)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseAccessControlGroupVersionDeleteIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseAccessControlGroupVersionDeleteIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseAccessControlGroupVersionDelete represents a VersionDelete event raised by the BaseAccessControlGroup contract.
type BaseAccessControlGroupVersionDelete struct {
	SpaceAddress common.Address
	VersionHash  string
	Index        *big.Int
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterVersionDelete is a free log retrieval operation binding the contract event 0x238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51.
//
// Solidity: event VersionDelete(address spaceAddress, string versionHash, int256 index)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) FilterVersionDelete(opts *bind.FilterOpts) (*BaseAccessControlGroupVersionDeleteIterator, error) {

	logs, sub, err := _BaseAccessControlGroup.contract.FilterLogs(opts, "VersionDelete")
	if err != nil {
		return nil, err
	}
	return &BaseAccessControlGroupVersionDeleteIterator{contract: _BaseAccessControlGroup.contract, event: "VersionDelete", logs: logs, sub: sub}, nil
}

// WatchVersionDelete is a free log subscription operation binding the contract event 0x238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51.
//
// Solidity: event VersionDelete(address spaceAddress, string versionHash, int256 index)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) WatchVersionDelete(opts *bind.WatchOpts, sink chan<- *BaseAccessControlGroupVersionDelete) (event.Subscription, error) {

	logs, sub, err := _BaseAccessControlGroup.contract.WatchLogs(opts, "VersionDelete")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseAccessControlGroupVersionDelete)
				if err := _BaseAccessControlGroup.contract.UnpackLog(event, "VersionDelete", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseVersionDelete is a log parse operation binding the contract event 0x238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51.
//
// Solidity: event VersionDelete(address spaceAddress, string versionHash, int256 index)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) ParseVersionDelete(log types.Log) (*BaseAccessControlGroupVersionDelete, error) {
	event := new(BaseAccessControlGroupVersionDelete)
	if err := _BaseAccessControlGroup.contract.UnpackLog(event, "VersionDelete", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseAccessControlGroupVisibilityChangedIterator is returned from FilterVisibilityChanged and is used to iterate over the raw logs and unpacked data for VisibilityChanged events raised by the BaseAccessControlGroup contract.
type BaseAccessControlGroupVisibilityChangedIterator struct {
	Event *BaseAccessControlGroupVisibilityChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseAccessControlGroupVisibilityChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseAccessControlGroupVisibilityChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseAccessControlGroupVisibilityChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseAccessControlGroupVisibilityChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseAccessControlGroupVisibilityChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseAccessControlGroupVisibilityChanged represents a VisibilityChanged event raised by the BaseAccessControlGroup contract.
type BaseAccessControlGroupVisibilityChanged struct {
	ContentSpace  common.Address
	ParentAddress common.Address
	Visibility    uint8
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterVisibilityChanged is a free log retrieval operation binding the contract event 0x369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500.
//
// Solidity: event VisibilityChanged(address contentSpace, address parentAddress, uint8 visibility)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) FilterVisibilityChanged(opts *bind.FilterOpts) (*BaseAccessControlGroupVisibilityChangedIterator, error) {

	logs, sub, err := _BaseAccessControlGroup.contract.FilterLogs(opts, "VisibilityChanged")
	if err != nil {
		return nil, err
	}
	return &BaseAccessControlGroupVisibilityChangedIterator{contract: _BaseAccessControlGroup.contract, event: "VisibilityChanged", logs: logs, sub: sub}, nil
}

// WatchVisibilityChanged is a free log subscription operation binding the contract event 0x369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500.
//
// Solidity: event VisibilityChanged(address contentSpace, address parentAddress, uint8 visibility)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) WatchVisibilityChanged(opts *bind.WatchOpts, sink chan<- *BaseAccessControlGroupVisibilityChanged) (event.Subscription, error) {

	logs, sub, err := _BaseAccessControlGroup.contract.WatchLogs(opts, "VisibilityChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseAccessControlGroupVisibilityChanged)
				if err := _BaseAccessControlGroup.contract.UnpackLog(event, "VisibilityChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseVisibilityChanged is a log parse operation binding the contract event 0x369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500.
//
// Solidity: event VisibilityChanged(address contentSpace, address parentAddress, uint8 visibility)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) ParseVisibilityChanged(log types.Log) (*BaseAccessControlGroupVisibilityChanged, error) {
	event := new(BaseAccessControlGroupVisibilityChanged)
	if err := _BaseAccessControlGroup.contract.UnpackLog(event, "VisibilityChanged", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseAccessControlGroupWordGroupDeletedIterator is returned from FilterWordGroupDeleted and is used to iterate over the raw logs and unpacked data for WordGroupDeleted events raised by the BaseAccessControlGroup contract.
type BaseAccessControlGroupWordGroupDeletedIterator struct {
	Event *BaseAccessControlGroupWordGroupDeleted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseAccessControlGroupWordGroupDeletedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseAccessControlGroupWordGroupDeleted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseAccessControlGroupWordGroupDeleted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseAccessControlGroupWordGroupDeletedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseAccessControlGroupWordGroupDeletedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseAccessControlGroupWordGroupDeleted represents a WordGroupDeleted event raised by the BaseAccessControlGroup contract.
type BaseAccessControlGroupWordGroupDeleted struct {
	Ident [32]byte
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterWordGroupDeleted is a free log retrieval operation binding the contract event 0x87d0c300430cf9ba25931ff8bf37f633abe097e533463927bbfdc1e9ae1d0e9f.
//
// Solidity: event WordGroupDeleted(bytes32 ident)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) FilterWordGroupDeleted(opts *bind.FilterOpts) (*BaseAccessControlGroupWordGroupDeletedIterator, error) {

	logs, sub, err := _BaseAccessControlGroup.contract.FilterLogs(opts, "WordGroupDeleted")
	if err != nil {
		return nil, err
	}
	return &BaseAccessControlGroupWordGroupDeletedIterator{contract: _BaseAccessControlGroup.contract, event: "WordGroupDeleted", logs: logs, sub: sub}, nil
}

// WatchWordGroupDeleted is a free log subscription operation binding the contract event 0x87d0c300430cf9ba25931ff8bf37f633abe097e533463927bbfdc1e9ae1d0e9f.
//
// Solidity: event WordGroupDeleted(bytes32 ident)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) WatchWordGroupDeleted(opts *bind.WatchOpts, sink chan<- *BaseAccessControlGroupWordGroupDeleted) (event.Subscription, error) {

	logs, sub, err := _BaseAccessControlGroup.contract.WatchLogs(opts, "WordGroupDeleted")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseAccessControlGroupWordGroupDeleted)
				if err := _BaseAccessControlGroup.contract.UnpackLog(event, "WordGroupDeleted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseWordGroupDeleted is a log parse operation binding the contract event 0x87d0c300430cf9ba25931ff8bf37f633abe097e533463927bbfdc1e9ae1d0e9f.
//
// Solidity: event WordGroupDeleted(bytes32 ident)
func (_BaseAccessControlGroup *BaseAccessControlGroupFilterer) ParseWordGroupDeleted(log types.Log) (*BaseAccessControlGroupWordGroupDeleted, error) {
	event := new(BaseAccessControlGroupWordGroupDeleted)
	if err := _BaseAccessControlGroup.contract.UnpackLog(event, "WordGroupDeleted", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseAccessWalletABI is the input ABI used to generate the binding from.
const BaseAccessWalletABI = "[{\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"content_space\",\"type\":\"address\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"contextHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestTimestamp\",\"type\":\"uint256\"}],\"name\":\"AccessRequestV3\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spaceAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"objectHash\",\"type\":\"string\"}],\"name\":\"CommitPending\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contentType\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contentContract\",\"type\":\"address\"}],\"name\":\"ContentTypeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contentType\",\"type\":\"address\"}],\"name\":\"ContentTypeRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"guarantor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"code\",\"type\":\"int256\"}],\"name\":\"ExecStatus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"ObjectMetaChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"principal\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"entity\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"aggregate\",\"type\":\"uint8\"}],\"name\":\"RightsChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"objectHash\",\"type\":\"string\"}],\"name\":\"UpdateRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spaceAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"objectHash\",\"type\":\"string\"}],\"name\":\"VersionConfirm\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spaceAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"versionHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"index\",\"type\":\"int256\"}],\"name\":\"VersionDelete\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contentSpace\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"visibility\",\"type\":\"uint8\"}],\"name\":\"VisibilityChanged\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"ACCESS_CONFIRMED\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ACCESS_NONE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ACCESS_TENTATIVE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CAN_ACCESS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CAN_EDIT\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CAN_SEE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CATEGORY_CONTENT_OBJECT\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CATEGORY_CONTENT_TYPE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CATEGORY_CONTRACT\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CATEGORY_GROUP\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CATEGORY_LIBRARY\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TYPE_ACCESS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TYPE_EDIT\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TYPE_SEE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"accessGroups\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"category\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"addresspayable[]\",\"name\":\"\",\"type\":\"address[]\"}],\"name\":\"accessRequestV3\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"content_type\",\"type\":\"address\"},{\"internalType\":\"addresspayable\",\"name\":\"content_contract\",\"type\":\"address\"}],\"name\":\"addContentType\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"addressKMS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canCommit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canConfirm\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"canContribute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canEdit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"canPublish\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"canReview\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index_type\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"obj\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"}],\"name\":\"checkDirectRights\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index_type\",\"type\":\"uint8\"},{\"internalType\":\"addresspayable\",\"name\":\"obj\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"}],\"name\":\"checkRights\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cleanUpAccessGroups\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cleanUpAll\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cleanUpContentObjects\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cleanUpContentTypes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cleanUpLibraries\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"clearPending\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_objectHash\",\"type\":\"string\"}],\"name\":\"commit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"commitPending\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"confirmCommit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentObjects\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"category\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentSpace\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contentTypeContracts\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contentTypes\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentTypes\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"category\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentTypesLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"contractExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contracts\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"category\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"countVersionHashes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_versionHash\",\"type\":\"string\"}],\"name\":\"deleteVersion\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"execStatusBalanceFail\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"execStatusNonceFail\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"execStatusOk\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"execStatusSendFail\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"execStatusSigFail\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_guarantor\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"},{\"internalType\":\"addresspayable\",\"name\":\"_dest\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ts\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"typeHash\",\"type\":\"bytes32\"}],\"name\":\"findTypeByHash\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"position\",\"type\":\"uint256\"}],\"name\":\"getAccessGroup\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"group\",\"type\":\"address\"}],\"name\":\"getAccessGroupRights\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAccessGroupsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"position\",\"type\":\"uint256\"}],\"name\":\"getContentObject\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"obj\",\"type\":\"address\"}],\"name\":\"getContentObjectRights\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getContentObjectsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"position\",\"type\":\"uint256\"}],\"name\":\"getContentType\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"obj\",\"type\":\"address\"}],\"name\":\"getContentTypeRights\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getContentTypesLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"position\",\"type\":\"uint256\"}],\"name\":\"getContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"obj\",\"type\":\"address\"}],\"name\":\"getContractRights\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getContractsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLibrariesLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"position\",\"type\":\"uint256\"}],\"name\":\"getLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"lib\",\"type\":\"address\"}],\"name\":\"getLibraryRights\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"getMeta\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"hasAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"hasEditorRight\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"hasManagerAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"indexCategory\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"libraries\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"category\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"objectHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"objectTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"others\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"category\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"parentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"contentObj\",\"type\":\"address\"}],\"name\":\"publish\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"putMeta\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"content_type\",\"type\":\"address\"}],\"name\":\"removeContentType\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"requiresReview\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"group\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setAccessGroupRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setAccessRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"address_KMS\",\"type\":\"address\"}],\"name\":\"setAddressKMS\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"obj\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setContentObjectRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"content_space\",\"type\":\"address\"}],\"name\":\"setContentSpace\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"obj\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setContentTypeRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"obj\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setContractRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"indexType\",\"type\":\"uint8\"},{\"internalType\":\"addresspayable\",\"name\":\"obj\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setEntityRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"group\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setGroupRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setLibraryRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"stakeholder\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_visibility_code\",\"type\":\"uint8\"}],\"name\":\"setVisibility\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newCreator\",\"type\":\"address\"}],\"name\":\"transferCreatorship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"updateRequest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"content_type\",\"type\":\"address\"}],\"name\":\"validType\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ts\",\"type\":\"uint256\"}],\"name\":\"validateTimestamp\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_dest\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ts\",\"type\":\"uint256\"}],\"name\":\"validateTransaction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"versionAPI\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"versionHashes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"versionTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"visibility\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"content_type\",\"type\":\"address\"}],\"name\":\"whitelistedType\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// BaseAccessWalletFuncSigs maps the 4-byte function signature to its string representation.
var BaseAccessWalletFuncSigs = map[string]string{
	"18689733": "ACCESS_CONFIRMED()",
	"8232f3f1": "ACCESS_NONE()",
	"479a0c51": "ACCESS_TENTATIVE()",
	"97ac4fd2": "CAN_ACCESS()",
	"ef1d7dc2": "CAN_EDIT()",
	"100508a2": "CAN_SEE()",
	"091600e6": "CATEGORY_CONTENT_OBJECT()",
	"68a0469a": "CATEGORY_CONTENT_TYPE()",
	"6373a411": "CATEGORY_CONTRACT()",
	"12915a30": "CATEGORY_GROUP()",
	"16aed232": "CATEGORY_LIBRARY()",
	"d1aeb651": "TYPE_ACCESS()",
	"5d97b6c2": "TYPE_EDIT()",
	"96eba03d": "TYPE_SEE()",
	"30e66949": "accessGroups()",
	"1bf7a912": "accessRequestV3(bytes32[],address[])",
	"0f58a786": "addContentType(address,address)",
	"32eaf21b": "addressKMS()",
	"6e375427": "canCommit()",
	"14cfabb3": "canConfirm()",
	"0eaec2c5": "canContribute(address)",
	"81beeb64": "canEdit()",
	"9b55f901": "canPublish(address)",
	"29d00219": "canReview(address)",
	"a00b38c4": "checkDirectRights(uint8,address,uint8)",
	"7fb52f1a": "checkRights(uint8,address,uint8)",
	"d30f8cd0": "cleanUpAccessGroups()",
	"2fa5c842": "cleanUpAll()",
	"048bd529": "cleanUpContentObjects()",
	"85e0a200": "cleanUpContentTypes()",
	"92297d7b": "cleanUpLibraries()",
	"5f6a1301": "clearPending()",
	"9867db74": "commit(string)",
	"375a6e7c": "commitPending()",
	"446e8826": "confirmCommit()",
	"a980892d": "contentObjects()",
	"af570c04": "contentSpace()",
	"1cdbee5a": "contentTypeContracts(address)",
	"9f46133e": "contentTypes()",
	"991a3a7c": "contentTypes(uint256)",
	"c65bcbe2": "contentTypesLength()",
	"7709bc78": "contractExists(address)",
	"6c0f79b6": "contracts()",
	"331b86c0": "countVersionHashes()",
	"02d05d3f": "creator()",
	"1e2ff94f": "currentTimestamp()",
	"e1a70717": "deleteVersion(string)",
	"9476c478": "execStatusBalanceFail()",
	"04f55daf": "execStatusNonceFail()",
	"95ba60ba": "execStatusOk()",
	"07a08237": "execStatusSendFail()",
	"eb23b7aa": "execStatusSigFail()",
	"508ad278": "execute(address,uint8,bytes32,bytes32,address,uint256,uint256)",
	"1f2caaec": "findTypeByHash(bytes32)",
	"2d474cbd": "getAccessGroup(uint256)",
	"304f4a7b": "getAccessGroupRights(address)",
	"0dc10d3f": "getAccessGroupsLength()",
	"cf8a7503": "getContentObject(uint256)",
	"69881c0c": "getContentObjectRights(address)",
	"ebe9314e": "getContentObjectsLength()",
	"aa3f6952": "getContentType(uint256)",
	"a4081d62": "getContentTypeRights(address)",
	"5c1d3059": "getContentTypesLength()",
	"6ebc8c86": "getContract(uint256)",
	"08d865d7": "getContractRights(address)",
	"fccc134f": "getContractsLength()",
	"cb86806d": "getLibrariesLength()",
	"d15d62a7": "getLibrary(uint256)",
	"fb52222c": "getLibraryRights(address)",
	"ac55c906": "getMeta(bytes)",
	"95a078e8": "hasAccess(address)",
	"67e5c3bf": "hasEditorRight(address)",
	"42e7ba7b": "hasManagerAccess(address)",
	"6380501f": "indexCategory()",
	"24d7806c": "isAdmin(address)",
	"41c0e1b5": "kill()",
	"c4b1978d": "libraries()",
	"e02dd9c2": "objectHash()",
	"40b87a26": "objectTimestamp()",
	"51a7fc87": "others()",
	"8da5cb5b": "owner()",
	"00821de3": "parentAddress()",
	"628449fd": "pendingHash()",
	"2cf99422": "publish(address)",
	"e542b7cb": "putMeta(bytes,bytes)",
	"fd089196": "removeContentType(address)",
	"3dd71d99": "requiresReview()",
	"f17bda91": "setAccessGroupRights(address,uint8,uint8)",
	"b8ff1dba": "setAccessRights()",
	"c9e8e72d": "setAddressKMS(address)",
	"3def5140": "setContentObjectRights(address,uint8,uint8)",
	"055af48f": "setContentSpace(address)",
	"8635adb5": "setContentTypeRights(address,uint8,uint8)",
	"224dcba0": "setContractRights(address,uint8,uint8)",
	"5d7cf830": "setEntityRights(uint8,address,uint8,uint8)",
	"22e564eb": "setGroupRights(address,uint8,uint8)",
	"7cbb7bf2": "setLibraryRights(address,uint8,uint8)",
	"0fe1b5a2": "setRights(address,uint8,uint8)",
	"aa024e8b": "setVisibility(uint8)",
	"6d2e4b1b": "transferCreatorship(address)",
	"f2fde38b": "transferOwnership(address)",
	"c287e0ed": "updateRequest()",
	"29dedde5": "validType(address)",
	"f50b2efe": "validateTimestamp(uint256)",
	"763d5ee6": "validateTransaction(uint8,bytes32,bytes32,address,uint256,uint256)",
	"54fd4d50": "version()",
	"5f4fcae1": "versionAPI()",
	"7ca8f618": "versionHashes(uint256)",
	"7886f747": "versionTimestamp(uint256)",
	"29adec14": "visibility()",
	"9cb121ba": "whitelistedType(address)",
}

// BaseAccessWalletBin is the compiled bytecode used for deploying new contracts.
var BaseAccessWalletBin = ""

// DeployBaseAccessWallet deploys a new Ethereum contract, binding an instance of BaseAccessWallet to it.
func DeployBaseAccessWallet(auth *bind.TransactOpts, backend bind.ContractBackend, content_space common.Address) (common.Address, *types.Transaction, *BaseAccessWallet, error) {
	parsed, err := abi.JSON(strings.NewReader(BaseAccessWalletABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(BaseAccessWalletBin), backend, content_space)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &BaseAccessWallet{BaseAccessWalletCaller: BaseAccessWalletCaller{contract: contract}, BaseAccessWalletTransactor: BaseAccessWalletTransactor{contract: contract}, BaseAccessWalletFilterer: BaseAccessWalletFilterer{contract: contract}}, nil
}

// BaseAccessWallet is an auto generated Go binding around an Ethereum contract.
type BaseAccessWallet struct {
	BaseAccessWalletCaller     // Read-only binding to the contract
	BaseAccessWalletTransactor // Write-only binding to the contract
	BaseAccessWalletFilterer   // Log filterer for contract events
}

// BaseAccessWalletCaller is an auto generated read-only Go binding around an Ethereum contract.
type BaseAccessWalletCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseAccessWalletTransactor is an auto generated write-only Go binding around an Ethereum contract.
type BaseAccessWalletTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseAccessWalletFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type BaseAccessWalletFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseAccessWalletSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type BaseAccessWalletSession struct {
	Contract     *BaseAccessWallet // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// BaseAccessWalletCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type BaseAccessWalletCallerSession struct {
	Contract *BaseAccessWalletCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts           // Call options to use throughout this session
}

// BaseAccessWalletTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type BaseAccessWalletTransactorSession struct {
	Contract     *BaseAccessWalletTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts           // Transaction auth options to use throughout this session
}

// BaseAccessWalletRaw is an auto generated low-level Go binding around an Ethereum contract.
type BaseAccessWalletRaw struct {
	Contract *BaseAccessWallet // Generic contract binding to access the raw methods on
}

// BaseAccessWalletCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type BaseAccessWalletCallerRaw struct {
	Contract *BaseAccessWalletCaller // Generic read-only contract binding to access the raw methods on
}

// BaseAccessWalletTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type BaseAccessWalletTransactorRaw struct {
	Contract *BaseAccessWalletTransactor // Generic write-only contract binding to access the raw methods on
}

// NewBaseAccessWallet creates a new instance of BaseAccessWallet, bound to a specific deployed contract.
func NewBaseAccessWallet(address common.Address, backend bind.ContractBackend) (*BaseAccessWallet, error) {
	contract, err := bindBaseAccessWallet(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &BaseAccessWallet{BaseAccessWalletCaller: BaseAccessWalletCaller{contract: contract}, BaseAccessWalletTransactor: BaseAccessWalletTransactor{contract: contract}, BaseAccessWalletFilterer: BaseAccessWalletFilterer{contract: contract}}, nil
}

// NewBaseAccessWalletCaller creates a new read-only instance of BaseAccessWallet, bound to a specific deployed contract.
func NewBaseAccessWalletCaller(address common.Address, caller bind.ContractCaller) (*BaseAccessWalletCaller, error) {
	contract, err := bindBaseAccessWallet(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &BaseAccessWalletCaller{contract: contract}, nil
}

// NewBaseAccessWalletTransactor creates a new write-only instance of BaseAccessWallet, bound to a specific deployed contract.
func NewBaseAccessWalletTransactor(address common.Address, transactor bind.ContractTransactor) (*BaseAccessWalletTransactor, error) {
	contract, err := bindBaseAccessWallet(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &BaseAccessWalletTransactor{contract: contract}, nil
}

// NewBaseAccessWalletFilterer creates a new log filterer instance of BaseAccessWallet, bound to a specific deployed contract.
func NewBaseAccessWalletFilterer(address common.Address, filterer bind.ContractFilterer) (*BaseAccessWalletFilterer, error) {
	contract, err := bindBaseAccessWallet(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &BaseAccessWalletFilterer{contract: contract}, nil
}

// bindBaseAccessWallet binds a generic wrapper to an already deployed contract.
func bindBaseAccessWallet(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(BaseAccessWalletABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BaseAccessWallet *BaseAccessWalletRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BaseAccessWallet.Contract.BaseAccessWalletCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BaseAccessWallet *BaseAccessWalletRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.BaseAccessWalletTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BaseAccessWallet *BaseAccessWalletRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.BaseAccessWalletTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BaseAccessWallet *BaseAccessWalletCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BaseAccessWallet.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BaseAccessWallet *BaseAccessWalletTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BaseAccessWallet *BaseAccessWalletTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.contract.Transact(opts, method, params...)
}

// ACCESSCONFIRMED is a free data retrieval call binding the contract method 0x18689733.
//
// Solidity: function ACCESS_CONFIRMED() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCaller) ACCESSCONFIRMED(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "ACCESS_CONFIRMED")
	return *ret0, err
}

// ACCESSCONFIRMED is a free data retrieval call binding the contract method 0x18689733.
//
// Solidity: function ACCESS_CONFIRMED() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletSession) ACCESSCONFIRMED() (uint8, error) {
	return _BaseAccessWallet.Contract.ACCESSCONFIRMED(&_BaseAccessWallet.CallOpts)
}

// ACCESSCONFIRMED is a free data retrieval call binding the contract method 0x18689733.
//
// Solidity: function ACCESS_CONFIRMED() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) ACCESSCONFIRMED() (uint8, error) {
	return _BaseAccessWallet.Contract.ACCESSCONFIRMED(&_BaseAccessWallet.CallOpts)
}

// ACCESSNONE is a free data retrieval call binding the contract method 0x8232f3f1.
//
// Solidity: function ACCESS_NONE() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCaller) ACCESSNONE(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "ACCESS_NONE")
	return *ret0, err
}

// ACCESSNONE is a free data retrieval call binding the contract method 0x8232f3f1.
//
// Solidity: function ACCESS_NONE() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletSession) ACCESSNONE() (uint8, error) {
	return _BaseAccessWallet.Contract.ACCESSNONE(&_BaseAccessWallet.CallOpts)
}

// ACCESSNONE is a free data retrieval call binding the contract method 0x8232f3f1.
//
// Solidity: function ACCESS_NONE() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) ACCESSNONE() (uint8, error) {
	return _BaseAccessWallet.Contract.ACCESSNONE(&_BaseAccessWallet.CallOpts)
}

// ACCESSTENTATIVE is a free data retrieval call binding the contract method 0x479a0c51.
//
// Solidity: function ACCESS_TENTATIVE() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCaller) ACCESSTENTATIVE(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "ACCESS_TENTATIVE")
	return *ret0, err
}

// ACCESSTENTATIVE is a free data retrieval call binding the contract method 0x479a0c51.
//
// Solidity: function ACCESS_TENTATIVE() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletSession) ACCESSTENTATIVE() (uint8, error) {
	return _BaseAccessWallet.Contract.ACCESSTENTATIVE(&_BaseAccessWallet.CallOpts)
}

// ACCESSTENTATIVE is a free data retrieval call binding the contract method 0x479a0c51.
//
// Solidity: function ACCESS_TENTATIVE() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) ACCESSTENTATIVE() (uint8, error) {
	return _BaseAccessWallet.Contract.ACCESSTENTATIVE(&_BaseAccessWallet.CallOpts)
}

// CANACCESS is a free data retrieval call binding the contract method 0x97ac4fd2.
//
// Solidity: function CAN_ACCESS() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCaller) CANACCESS(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "CAN_ACCESS")
	return *ret0, err
}

// CANACCESS is a free data retrieval call binding the contract method 0x97ac4fd2.
//
// Solidity: function CAN_ACCESS() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletSession) CANACCESS() (uint8, error) {
	return _BaseAccessWallet.Contract.CANACCESS(&_BaseAccessWallet.CallOpts)
}

// CANACCESS is a free data retrieval call binding the contract method 0x97ac4fd2.
//
// Solidity: function CAN_ACCESS() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) CANACCESS() (uint8, error) {
	return _BaseAccessWallet.Contract.CANACCESS(&_BaseAccessWallet.CallOpts)
}

// CANEDIT is a free data retrieval call binding the contract method 0xef1d7dc2.
//
// Solidity: function CAN_EDIT() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCaller) CANEDIT(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "CAN_EDIT")
	return *ret0, err
}

// CANEDIT is a free data retrieval call binding the contract method 0xef1d7dc2.
//
// Solidity: function CAN_EDIT() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletSession) CANEDIT() (uint8, error) {
	return _BaseAccessWallet.Contract.CANEDIT(&_BaseAccessWallet.CallOpts)
}

// CANEDIT is a free data retrieval call binding the contract method 0xef1d7dc2.
//
// Solidity: function CAN_EDIT() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) CANEDIT() (uint8, error) {
	return _BaseAccessWallet.Contract.CANEDIT(&_BaseAccessWallet.CallOpts)
}

// CANSEE is a free data retrieval call binding the contract method 0x100508a2.
//
// Solidity: function CAN_SEE() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCaller) CANSEE(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "CAN_SEE")
	return *ret0, err
}

// CANSEE is a free data retrieval call binding the contract method 0x100508a2.
//
// Solidity: function CAN_SEE() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletSession) CANSEE() (uint8, error) {
	return _BaseAccessWallet.Contract.CANSEE(&_BaseAccessWallet.CallOpts)
}

// CANSEE is a free data retrieval call binding the contract method 0x100508a2.
//
// Solidity: function CAN_SEE() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) CANSEE() (uint8, error) {
	return _BaseAccessWallet.Contract.CANSEE(&_BaseAccessWallet.CallOpts)
}

// CATEGORYCONTENTOBJECT is a free data retrieval call binding the contract method 0x091600e6.
//
// Solidity: function CATEGORY_CONTENT_OBJECT() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCaller) CATEGORYCONTENTOBJECT(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "CATEGORY_CONTENT_OBJECT")
	return *ret0, err
}

// CATEGORYCONTENTOBJECT is a free data retrieval call binding the contract method 0x091600e6.
//
// Solidity: function CATEGORY_CONTENT_OBJECT() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletSession) CATEGORYCONTENTOBJECT() (uint8, error) {
	return _BaseAccessWallet.Contract.CATEGORYCONTENTOBJECT(&_BaseAccessWallet.CallOpts)
}

// CATEGORYCONTENTOBJECT is a free data retrieval call binding the contract method 0x091600e6.
//
// Solidity: function CATEGORY_CONTENT_OBJECT() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) CATEGORYCONTENTOBJECT() (uint8, error) {
	return _BaseAccessWallet.Contract.CATEGORYCONTENTOBJECT(&_BaseAccessWallet.CallOpts)
}

// CATEGORYCONTENTTYPE is a free data retrieval call binding the contract method 0x68a0469a.
//
// Solidity: function CATEGORY_CONTENT_TYPE() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCaller) CATEGORYCONTENTTYPE(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "CATEGORY_CONTENT_TYPE")
	return *ret0, err
}

// CATEGORYCONTENTTYPE is a free data retrieval call binding the contract method 0x68a0469a.
//
// Solidity: function CATEGORY_CONTENT_TYPE() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletSession) CATEGORYCONTENTTYPE() (uint8, error) {
	return _BaseAccessWallet.Contract.CATEGORYCONTENTTYPE(&_BaseAccessWallet.CallOpts)
}

// CATEGORYCONTENTTYPE is a free data retrieval call binding the contract method 0x68a0469a.
//
// Solidity: function CATEGORY_CONTENT_TYPE() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) CATEGORYCONTENTTYPE() (uint8, error) {
	return _BaseAccessWallet.Contract.CATEGORYCONTENTTYPE(&_BaseAccessWallet.CallOpts)
}

// CATEGORYCONTRACT is a free data retrieval call binding the contract method 0x6373a411.
//
// Solidity: function CATEGORY_CONTRACT() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCaller) CATEGORYCONTRACT(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "CATEGORY_CONTRACT")
	return *ret0, err
}

// CATEGORYCONTRACT is a free data retrieval call binding the contract method 0x6373a411.
//
// Solidity: function CATEGORY_CONTRACT() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletSession) CATEGORYCONTRACT() (uint8, error) {
	return _BaseAccessWallet.Contract.CATEGORYCONTRACT(&_BaseAccessWallet.CallOpts)
}

// CATEGORYCONTRACT is a free data retrieval call binding the contract method 0x6373a411.
//
// Solidity: function CATEGORY_CONTRACT() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) CATEGORYCONTRACT() (uint8, error) {
	return _BaseAccessWallet.Contract.CATEGORYCONTRACT(&_BaseAccessWallet.CallOpts)
}

// CATEGORYGROUP is a free data retrieval call binding the contract method 0x12915a30.
//
// Solidity: function CATEGORY_GROUP() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCaller) CATEGORYGROUP(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "CATEGORY_GROUP")
	return *ret0, err
}

// CATEGORYGROUP is a free data retrieval call binding the contract method 0x12915a30.
//
// Solidity: function CATEGORY_GROUP() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletSession) CATEGORYGROUP() (uint8, error) {
	return _BaseAccessWallet.Contract.CATEGORYGROUP(&_BaseAccessWallet.CallOpts)
}

// CATEGORYGROUP is a free data retrieval call binding the contract method 0x12915a30.
//
// Solidity: function CATEGORY_GROUP() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) CATEGORYGROUP() (uint8, error) {
	return _BaseAccessWallet.Contract.CATEGORYGROUP(&_BaseAccessWallet.CallOpts)
}

// CATEGORYLIBRARY is a free data retrieval call binding the contract method 0x16aed232.
//
// Solidity: function CATEGORY_LIBRARY() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCaller) CATEGORYLIBRARY(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "CATEGORY_LIBRARY")
	return *ret0, err
}

// CATEGORYLIBRARY is a free data retrieval call binding the contract method 0x16aed232.
//
// Solidity: function CATEGORY_LIBRARY() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletSession) CATEGORYLIBRARY() (uint8, error) {
	return _BaseAccessWallet.Contract.CATEGORYLIBRARY(&_BaseAccessWallet.CallOpts)
}

// CATEGORYLIBRARY is a free data retrieval call binding the contract method 0x16aed232.
//
// Solidity: function CATEGORY_LIBRARY() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) CATEGORYLIBRARY() (uint8, error) {
	return _BaseAccessWallet.Contract.CATEGORYLIBRARY(&_BaseAccessWallet.CallOpts)
}

// TYPEACCESS is a free data retrieval call binding the contract method 0xd1aeb651.
//
// Solidity: function TYPE_ACCESS() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCaller) TYPEACCESS(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "TYPE_ACCESS")
	return *ret0, err
}

// TYPEACCESS is a free data retrieval call binding the contract method 0xd1aeb651.
//
// Solidity: function TYPE_ACCESS() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletSession) TYPEACCESS() (uint8, error) {
	return _BaseAccessWallet.Contract.TYPEACCESS(&_BaseAccessWallet.CallOpts)
}

// TYPEACCESS is a free data retrieval call binding the contract method 0xd1aeb651.
//
// Solidity: function TYPE_ACCESS() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) TYPEACCESS() (uint8, error) {
	return _BaseAccessWallet.Contract.TYPEACCESS(&_BaseAccessWallet.CallOpts)
}

// TYPEEDIT is a free data retrieval call binding the contract method 0x5d97b6c2.
//
// Solidity: function TYPE_EDIT() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCaller) TYPEEDIT(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "TYPE_EDIT")
	return *ret0, err
}

// TYPEEDIT is a free data retrieval call binding the contract method 0x5d97b6c2.
//
// Solidity: function TYPE_EDIT() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletSession) TYPEEDIT() (uint8, error) {
	return _BaseAccessWallet.Contract.TYPEEDIT(&_BaseAccessWallet.CallOpts)
}

// TYPEEDIT is a free data retrieval call binding the contract method 0x5d97b6c2.
//
// Solidity: function TYPE_EDIT() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) TYPEEDIT() (uint8, error) {
	return _BaseAccessWallet.Contract.TYPEEDIT(&_BaseAccessWallet.CallOpts)
}

// TYPESEE is a free data retrieval call binding the contract method 0x96eba03d.
//
// Solidity: function TYPE_SEE() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCaller) TYPESEE(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "TYPE_SEE")
	return *ret0, err
}

// TYPESEE is a free data retrieval call binding the contract method 0x96eba03d.
//
// Solidity: function TYPE_SEE() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletSession) TYPESEE() (uint8, error) {
	return _BaseAccessWallet.Contract.TYPESEE(&_BaseAccessWallet.CallOpts)
}

// TYPESEE is a free data retrieval call binding the contract method 0x96eba03d.
//
// Solidity: function TYPE_SEE() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) TYPESEE() (uint8, error) {
	return _BaseAccessWallet.Contract.TYPESEE(&_BaseAccessWallet.CallOpts)
}

// AccessGroups is a free data retrieval call binding the contract method 0x30e66949.
//
// Solidity: function accessGroups() constant returns(uint8 category, uint256 length)
func (_BaseAccessWallet *BaseAccessWalletCaller) AccessGroups(opts *bind.CallOpts) (struct {
	Category uint8
	Length   *big.Int
}, error) {
	ret := new(struct {
		Category uint8
		Length   *big.Int
	})
	out := ret
	err := _BaseAccessWallet.contract.Call(opts, out, "accessGroups")
	return *ret, err
}

// AccessGroups is a free data retrieval call binding the contract method 0x30e66949.
//
// Solidity: function accessGroups() constant returns(uint8 category, uint256 length)
func (_BaseAccessWallet *BaseAccessWalletSession) AccessGroups() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _BaseAccessWallet.Contract.AccessGroups(&_BaseAccessWallet.CallOpts)
}

// AccessGroups is a free data retrieval call binding the contract method 0x30e66949.
//
// Solidity: function accessGroups() constant returns(uint8 category, uint256 length)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) AccessGroups() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _BaseAccessWallet.Contract.AccessGroups(&_BaseAccessWallet.CallOpts)
}

// AddressKMS is a free data retrieval call binding the contract method 0x32eaf21b.
//
// Solidity: function addressKMS() constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletCaller) AddressKMS(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "addressKMS")
	return *ret0, err
}

// AddressKMS is a free data retrieval call binding the contract method 0x32eaf21b.
//
// Solidity: function addressKMS() constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletSession) AddressKMS() (common.Address, error) {
	return _BaseAccessWallet.Contract.AddressKMS(&_BaseAccessWallet.CallOpts)
}

// AddressKMS is a free data retrieval call binding the contract method 0x32eaf21b.
//
// Solidity: function addressKMS() constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) AddressKMS() (common.Address, error) {
	return _BaseAccessWallet.Contract.AddressKMS(&_BaseAccessWallet.CallOpts)
}

// CanCommit is a free data retrieval call binding the contract method 0x6e375427.
//
// Solidity: function canCommit() constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCaller) CanCommit(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "canCommit")
	return *ret0, err
}

// CanCommit is a free data retrieval call binding the contract method 0x6e375427.
//
// Solidity: function canCommit() constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletSession) CanCommit() (bool, error) {
	return _BaseAccessWallet.Contract.CanCommit(&_BaseAccessWallet.CallOpts)
}

// CanCommit is a free data retrieval call binding the contract method 0x6e375427.
//
// Solidity: function canCommit() constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) CanCommit() (bool, error) {
	return _BaseAccessWallet.Contract.CanCommit(&_BaseAccessWallet.CallOpts)
}

// CanConfirm is a free data retrieval call binding the contract method 0x14cfabb3.
//
// Solidity: function canConfirm() constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCaller) CanConfirm(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "canConfirm")
	return *ret0, err
}

// CanConfirm is a free data retrieval call binding the contract method 0x14cfabb3.
//
// Solidity: function canConfirm() constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletSession) CanConfirm() (bool, error) {
	return _BaseAccessWallet.Contract.CanConfirm(&_BaseAccessWallet.CallOpts)
}

// CanConfirm is a free data retrieval call binding the contract method 0x14cfabb3.
//
// Solidity: function canConfirm() constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) CanConfirm() (bool, error) {
	return _BaseAccessWallet.Contract.CanConfirm(&_BaseAccessWallet.CallOpts)
}

// CanContribute is a free data retrieval call binding the contract method 0x0eaec2c5.
//
// Solidity: function canContribute(address _candidate) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCaller) CanContribute(opts *bind.CallOpts, _candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "canContribute", _candidate)
	return *ret0, err
}

// CanContribute is a free data retrieval call binding the contract method 0x0eaec2c5.
//
// Solidity: function canContribute(address _candidate) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletSession) CanContribute(_candidate common.Address) (bool, error) {
	return _BaseAccessWallet.Contract.CanContribute(&_BaseAccessWallet.CallOpts, _candidate)
}

// CanContribute is a free data retrieval call binding the contract method 0x0eaec2c5.
//
// Solidity: function canContribute(address _candidate) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) CanContribute(_candidate common.Address) (bool, error) {
	return _BaseAccessWallet.Contract.CanContribute(&_BaseAccessWallet.CallOpts, _candidate)
}

// CanEdit is a free data retrieval call binding the contract method 0x81beeb64.
//
// Solidity: function canEdit() constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCaller) CanEdit(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "canEdit")
	return *ret0, err
}

// CanEdit is a free data retrieval call binding the contract method 0x81beeb64.
//
// Solidity: function canEdit() constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletSession) CanEdit() (bool, error) {
	return _BaseAccessWallet.Contract.CanEdit(&_BaseAccessWallet.CallOpts)
}

// CanEdit is a free data retrieval call binding the contract method 0x81beeb64.
//
// Solidity: function canEdit() constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) CanEdit() (bool, error) {
	return _BaseAccessWallet.Contract.CanEdit(&_BaseAccessWallet.CallOpts)
}

// CanPublish is a free data retrieval call binding the contract method 0x9b55f901.
//
// Solidity: function canPublish(address _candidate) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCaller) CanPublish(opts *bind.CallOpts, _candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "canPublish", _candidate)
	return *ret0, err
}

// CanPublish is a free data retrieval call binding the contract method 0x9b55f901.
//
// Solidity: function canPublish(address _candidate) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletSession) CanPublish(_candidate common.Address) (bool, error) {
	return _BaseAccessWallet.Contract.CanPublish(&_BaseAccessWallet.CallOpts, _candidate)
}

// CanPublish is a free data retrieval call binding the contract method 0x9b55f901.
//
// Solidity: function canPublish(address _candidate) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) CanPublish(_candidate common.Address) (bool, error) {
	return _BaseAccessWallet.Contract.CanPublish(&_BaseAccessWallet.CallOpts, _candidate)
}

// CanReview is a free data retrieval call binding the contract method 0x29d00219.
//
// Solidity: function canReview(address ) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCaller) CanReview(opts *bind.CallOpts, arg0 common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "canReview", arg0)
	return *ret0, err
}

// CanReview is a free data retrieval call binding the contract method 0x29d00219.
//
// Solidity: function canReview(address ) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletSession) CanReview(arg0 common.Address) (bool, error) {
	return _BaseAccessWallet.Contract.CanReview(&_BaseAccessWallet.CallOpts, arg0)
}

// CanReview is a free data retrieval call binding the contract method 0x29d00219.
//
// Solidity: function canReview(address ) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) CanReview(arg0 common.Address) (bool, error) {
	return _BaseAccessWallet.Contract.CanReview(&_BaseAccessWallet.CallOpts, arg0)
}

// CheckDirectRights is a free data retrieval call binding the contract method 0xa00b38c4.
//
// Solidity: function checkDirectRights(uint8 index_type, address obj, uint8 access_type) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCaller) CheckDirectRights(opts *bind.CallOpts, index_type uint8, obj common.Address, access_type uint8) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "checkDirectRights", index_type, obj, access_type)
	return *ret0, err
}

// CheckDirectRights is a free data retrieval call binding the contract method 0xa00b38c4.
//
// Solidity: function checkDirectRights(uint8 index_type, address obj, uint8 access_type) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletSession) CheckDirectRights(index_type uint8, obj common.Address, access_type uint8) (bool, error) {
	return _BaseAccessWallet.Contract.CheckDirectRights(&_BaseAccessWallet.CallOpts, index_type, obj, access_type)
}

// CheckDirectRights is a free data retrieval call binding the contract method 0xa00b38c4.
//
// Solidity: function checkDirectRights(uint8 index_type, address obj, uint8 access_type) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) CheckDirectRights(index_type uint8, obj common.Address, access_type uint8) (bool, error) {
	return _BaseAccessWallet.Contract.CheckDirectRights(&_BaseAccessWallet.CallOpts, index_type, obj, access_type)
}

// CheckRights is a free data retrieval call binding the contract method 0x7fb52f1a.
//
// Solidity: function checkRights(uint8 index_type, address obj, uint8 access_type) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCaller) CheckRights(opts *bind.CallOpts, index_type uint8, obj common.Address, access_type uint8) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "checkRights", index_type, obj, access_type)
	return *ret0, err
}

// CheckRights is a free data retrieval call binding the contract method 0x7fb52f1a.
//
// Solidity: function checkRights(uint8 index_type, address obj, uint8 access_type) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletSession) CheckRights(index_type uint8, obj common.Address, access_type uint8) (bool, error) {
	return _BaseAccessWallet.Contract.CheckRights(&_BaseAccessWallet.CallOpts, index_type, obj, access_type)
}

// CheckRights is a free data retrieval call binding the contract method 0x7fb52f1a.
//
// Solidity: function checkRights(uint8 index_type, address obj, uint8 access_type) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) CheckRights(index_type uint8, obj common.Address, access_type uint8) (bool, error) {
	return _BaseAccessWallet.Contract.CheckRights(&_BaseAccessWallet.CallOpts, index_type, obj, access_type)
}

// CommitPending is a free data retrieval call binding the contract method 0x375a6e7c.
//
// Solidity: function commitPending() constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCaller) CommitPending(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "commitPending")
	return *ret0, err
}

// CommitPending is a free data retrieval call binding the contract method 0x375a6e7c.
//
// Solidity: function commitPending() constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletSession) CommitPending() (bool, error) {
	return _BaseAccessWallet.Contract.CommitPending(&_BaseAccessWallet.CallOpts)
}

// CommitPending is a free data retrieval call binding the contract method 0x375a6e7c.
//
// Solidity: function commitPending() constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) CommitPending() (bool, error) {
	return _BaseAccessWallet.Contract.CommitPending(&_BaseAccessWallet.CallOpts)
}

// ContentObjects is a free data retrieval call binding the contract method 0xa980892d.
//
// Solidity: function contentObjects() constant returns(uint8 category, uint256 length)
func (_BaseAccessWallet *BaseAccessWalletCaller) ContentObjects(opts *bind.CallOpts) (struct {
	Category uint8
	Length   *big.Int
}, error) {
	ret := new(struct {
		Category uint8
		Length   *big.Int
	})
	out := ret
	err := _BaseAccessWallet.contract.Call(opts, out, "contentObjects")
	return *ret, err
}

// ContentObjects is a free data retrieval call binding the contract method 0xa980892d.
//
// Solidity: function contentObjects() constant returns(uint8 category, uint256 length)
func (_BaseAccessWallet *BaseAccessWalletSession) ContentObjects() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _BaseAccessWallet.Contract.ContentObjects(&_BaseAccessWallet.CallOpts)
}

// ContentObjects is a free data retrieval call binding the contract method 0xa980892d.
//
// Solidity: function contentObjects() constant returns(uint8 category, uint256 length)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) ContentObjects() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _BaseAccessWallet.Contract.ContentObjects(&_BaseAccessWallet.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletCaller) ContentSpace(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "contentSpace")
	return *ret0, err
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletSession) ContentSpace() (common.Address, error) {
	return _BaseAccessWallet.Contract.ContentSpace(&_BaseAccessWallet.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) ContentSpace() (common.Address, error) {
	return _BaseAccessWallet.Contract.ContentSpace(&_BaseAccessWallet.CallOpts)
}

// ContentTypeContracts is a free data retrieval call binding the contract method 0x1cdbee5a.
//
// Solidity: function contentTypeContracts(address ) constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletCaller) ContentTypeContracts(opts *bind.CallOpts, arg0 common.Address) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "contentTypeContracts", arg0)
	return *ret0, err
}

// ContentTypeContracts is a free data retrieval call binding the contract method 0x1cdbee5a.
//
// Solidity: function contentTypeContracts(address ) constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletSession) ContentTypeContracts(arg0 common.Address) (common.Address, error) {
	return _BaseAccessWallet.Contract.ContentTypeContracts(&_BaseAccessWallet.CallOpts, arg0)
}

// ContentTypeContracts is a free data retrieval call binding the contract method 0x1cdbee5a.
//
// Solidity: function contentTypeContracts(address ) constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) ContentTypeContracts(arg0 common.Address) (common.Address, error) {
	return _BaseAccessWallet.Contract.ContentTypeContracts(&_BaseAccessWallet.CallOpts, arg0)
}

// ContentTypes is a free data retrieval call binding the contract method 0x991a3a7c.
//
// Solidity: function contentTypes(uint256 ) constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletCaller) ContentTypes(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "contentTypes", arg0)
	return *ret0, err
}

// ContentTypes is a free data retrieval call binding the contract method 0x991a3a7c.
//
// Solidity: function contentTypes(uint256 ) constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletSession) ContentTypes(arg0 *big.Int) (common.Address, error) {
	return _BaseAccessWallet.Contract.ContentTypes(&_BaseAccessWallet.CallOpts, arg0)
}

// ContentTypes is a free data retrieval call binding the contract method 0x991a3a7c.
//
// Solidity: function contentTypes(uint256 ) constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) ContentTypes(arg0 *big.Int) (common.Address, error) {
	return _BaseAccessWallet.Contract.ContentTypes(&_BaseAccessWallet.CallOpts, arg0)
}

// ContentTypes0 is a free data retrieval call binding the contract method 0x9f46133e.
//
// Solidity: function contentTypes() constant returns(uint8 category, uint256 length)
func (_BaseAccessWallet *BaseAccessWalletCaller) ContentTypes0(opts *bind.CallOpts) (struct {
	Category uint8
	Length   *big.Int
}, error) {
	ret := new(struct {
		Category uint8
		Length   *big.Int
	})
	out := ret
	err := _BaseAccessWallet.contract.Call(opts, out, "contentTypes0")
	return *ret, err
}

// ContentTypes0 is a free data retrieval call binding the contract method 0x9f46133e.
//
// Solidity: function contentTypes() constant returns(uint8 category, uint256 length)
func (_BaseAccessWallet *BaseAccessWalletSession) ContentTypes0() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _BaseAccessWallet.Contract.ContentTypes0(&_BaseAccessWallet.CallOpts)
}

// ContentTypes0 is a free data retrieval call binding the contract method 0x9f46133e.
//
// Solidity: function contentTypes() constant returns(uint8 category, uint256 length)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) ContentTypes0() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _BaseAccessWallet.Contract.ContentTypes0(&_BaseAccessWallet.CallOpts)
}

// ContentTypesLength is a free data retrieval call binding the contract method 0xc65bcbe2.
//
// Solidity: function contentTypesLength() constant returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletCaller) ContentTypesLength(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "contentTypesLength")
	return *ret0, err
}

// ContentTypesLength is a free data retrieval call binding the contract method 0xc65bcbe2.
//
// Solidity: function contentTypesLength() constant returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletSession) ContentTypesLength() (*big.Int, error) {
	return _BaseAccessWallet.Contract.ContentTypesLength(&_BaseAccessWallet.CallOpts)
}

// ContentTypesLength is a free data retrieval call binding the contract method 0xc65bcbe2.
//
// Solidity: function contentTypesLength() constant returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) ContentTypesLength() (*big.Int, error) {
	return _BaseAccessWallet.Contract.ContentTypesLength(&_BaseAccessWallet.CallOpts)
}

// ContractExists is a free data retrieval call binding the contract method 0x7709bc78.
//
// Solidity: function contractExists(address addr) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCaller) ContractExists(opts *bind.CallOpts, addr common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "contractExists", addr)
	return *ret0, err
}

// ContractExists is a free data retrieval call binding the contract method 0x7709bc78.
//
// Solidity: function contractExists(address addr) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletSession) ContractExists(addr common.Address) (bool, error) {
	return _BaseAccessWallet.Contract.ContractExists(&_BaseAccessWallet.CallOpts, addr)
}

// ContractExists is a free data retrieval call binding the contract method 0x7709bc78.
//
// Solidity: function contractExists(address addr) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) ContractExists(addr common.Address) (bool, error) {
	return _BaseAccessWallet.Contract.ContractExists(&_BaseAccessWallet.CallOpts, addr)
}

// Contracts is a free data retrieval call binding the contract method 0x6c0f79b6.
//
// Solidity: function contracts() constant returns(uint8 category, uint256 length)
func (_BaseAccessWallet *BaseAccessWalletCaller) Contracts(opts *bind.CallOpts) (struct {
	Category uint8
	Length   *big.Int
}, error) {
	ret := new(struct {
		Category uint8
		Length   *big.Int
	})
	out := ret
	err := _BaseAccessWallet.contract.Call(opts, out, "contracts")
	return *ret, err
}

// Contracts is a free data retrieval call binding the contract method 0x6c0f79b6.
//
// Solidity: function contracts() constant returns(uint8 category, uint256 length)
func (_BaseAccessWallet *BaseAccessWalletSession) Contracts() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _BaseAccessWallet.Contract.Contracts(&_BaseAccessWallet.CallOpts)
}

// Contracts is a free data retrieval call binding the contract method 0x6c0f79b6.
//
// Solidity: function contracts() constant returns(uint8 category, uint256 length)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) Contracts() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _BaseAccessWallet.Contract.Contracts(&_BaseAccessWallet.CallOpts)
}

// CountVersionHashes is a free data retrieval call binding the contract method 0x331b86c0.
//
// Solidity: function countVersionHashes() constant returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletCaller) CountVersionHashes(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "countVersionHashes")
	return *ret0, err
}

// CountVersionHashes is a free data retrieval call binding the contract method 0x331b86c0.
//
// Solidity: function countVersionHashes() constant returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletSession) CountVersionHashes() (*big.Int, error) {
	return _BaseAccessWallet.Contract.CountVersionHashes(&_BaseAccessWallet.CallOpts)
}

// CountVersionHashes is a free data retrieval call binding the contract method 0x331b86c0.
//
// Solidity: function countVersionHashes() constant returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) CountVersionHashes() (*big.Int, error) {
	return _BaseAccessWallet.Contract.CountVersionHashes(&_BaseAccessWallet.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletCaller) Creator(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "creator")
	return *ret0, err
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletSession) Creator() (common.Address, error) {
	return _BaseAccessWallet.Contract.Creator(&_BaseAccessWallet.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) Creator() (common.Address, error) {
	return _BaseAccessWallet.Contract.Creator(&_BaseAccessWallet.CallOpts)
}

// CurrentTimestamp is a free data retrieval call binding the contract method 0x1e2ff94f.
//
// Solidity: function currentTimestamp() constant returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletCaller) CurrentTimestamp(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "currentTimestamp")
	return *ret0, err
}

// CurrentTimestamp is a free data retrieval call binding the contract method 0x1e2ff94f.
//
// Solidity: function currentTimestamp() constant returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletSession) CurrentTimestamp() (*big.Int, error) {
	return _BaseAccessWallet.Contract.CurrentTimestamp(&_BaseAccessWallet.CallOpts)
}

// CurrentTimestamp is a free data retrieval call binding the contract method 0x1e2ff94f.
//
// Solidity: function currentTimestamp() constant returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) CurrentTimestamp() (*big.Int, error) {
	return _BaseAccessWallet.Contract.CurrentTimestamp(&_BaseAccessWallet.CallOpts)
}

// ExecStatusBalanceFail is a free data retrieval call binding the contract method 0x9476c478.
//
// Solidity: function execStatusBalanceFail() constant returns(int256)
func (_BaseAccessWallet *BaseAccessWalletCaller) ExecStatusBalanceFail(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "execStatusBalanceFail")
	return *ret0, err
}

// ExecStatusBalanceFail is a free data retrieval call binding the contract method 0x9476c478.
//
// Solidity: function execStatusBalanceFail() constant returns(int256)
func (_BaseAccessWallet *BaseAccessWalletSession) ExecStatusBalanceFail() (*big.Int, error) {
	return _BaseAccessWallet.Contract.ExecStatusBalanceFail(&_BaseAccessWallet.CallOpts)
}

// ExecStatusBalanceFail is a free data retrieval call binding the contract method 0x9476c478.
//
// Solidity: function execStatusBalanceFail() constant returns(int256)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) ExecStatusBalanceFail() (*big.Int, error) {
	return _BaseAccessWallet.Contract.ExecStatusBalanceFail(&_BaseAccessWallet.CallOpts)
}

// ExecStatusNonceFail is a free data retrieval call binding the contract method 0x04f55daf.
//
// Solidity: function execStatusNonceFail() constant returns(int256)
func (_BaseAccessWallet *BaseAccessWalletCaller) ExecStatusNonceFail(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "execStatusNonceFail")
	return *ret0, err
}

// ExecStatusNonceFail is a free data retrieval call binding the contract method 0x04f55daf.
//
// Solidity: function execStatusNonceFail() constant returns(int256)
func (_BaseAccessWallet *BaseAccessWalletSession) ExecStatusNonceFail() (*big.Int, error) {
	return _BaseAccessWallet.Contract.ExecStatusNonceFail(&_BaseAccessWallet.CallOpts)
}

// ExecStatusNonceFail is a free data retrieval call binding the contract method 0x04f55daf.
//
// Solidity: function execStatusNonceFail() constant returns(int256)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) ExecStatusNonceFail() (*big.Int, error) {
	return _BaseAccessWallet.Contract.ExecStatusNonceFail(&_BaseAccessWallet.CallOpts)
}

// ExecStatusOk is a free data retrieval call binding the contract method 0x95ba60ba.
//
// Solidity: function execStatusOk() constant returns(int256)
func (_BaseAccessWallet *BaseAccessWalletCaller) ExecStatusOk(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "execStatusOk")
	return *ret0, err
}

// ExecStatusOk is a free data retrieval call binding the contract method 0x95ba60ba.
//
// Solidity: function execStatusOk() constant returns(int256)
func (_BaseAccessWallet *BaseAccessWalletSession) ExecStatusOk() (*big.Int, error) {
	return _BaseAccessWallet.Contract.ExecStatusOk(&_BaseAccessWallet.CallOpts)
}

// ExecStatusOk is a free data retrieval call binding the contract method 0x95ba60ba.
//
// Solidity: function execStatusOk() constant returns(int256)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) ExecStatusOk() (*big.Int, error) {
	return _BaseAccessWallet.Contract.ExecStatusOk(&_BaseAccessWallet.CallOpts)
}

// ExecStatusSendFail is a free data retrieval call binding the contract method 0x07a08237.
//
// Solidity: function execStatusSendFail() constant returns(int256)
func (_BaseAccessWallet *BaseAccessWalletCaller) ExecStatusSendFail(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "execStatusSendFail")
	return *ret0, err
}

// ExecStatusSendFail is a free data retrieval call binding the contract method 0x07a08237.
//
// Solidity: function execStatusSendFail() constant returns(int256)
func (_BaseAccessWallet *BaseAccessWalletSession) ExecStatusSendFail() (*big.Int, error) {
	return _BaseAccessWallet.Contract.ExecStatusSendFail(&_BaseAccessWallet.CallOpts)
}

// ExecStatusSendFail is a free data retrieval call binding the contract method 0x07a08237.
//
// Solidity: function execStatusSendFail() constant returns(int256)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) ExecStatusSendFail() (*big.Int, error) {
	return _BaseAccessWallet.Contract.ExecStatusSendFail(&_BaseAccessWallet.CallOpts)
}

// ExecStatusSigFail is a free data retrieval call binding the contract method 0xeb23b7aa.
//
// Solidity: function execStatusSigFail() constant returns(int256)
func (_BaseAccessWallet *BaseAccessWalletCaller) ExecStatusSigFail(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "execStatusSigFail")
	return *ret0, err
}

// ExecStatusSigFail is a free data retrieval call binding the contract method 0xeb23b7aa.
//
// Solidity: function execStatusSigFail() constant returns(int256)
func (_BaseAccessWallet *BaseAccessWalletSession) ExecStatusSigFail() (*big.Int, error) {
	return _BaseAccessWallet.Contract.ExecStatusSigFail(&_BaseAccessWallet.CallOpts)
}

// ExecStatusSigFail is a free data retrieval call binding the contract method 0xeb23b7aa.
//
// Solidity: function execStatusSigFail() constant returns(int256)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) ExecStatusSigFail() (*big.Int, error) {
	return _BaseAccessWallet.Contract.ExecStatusSigFail(&_BaseAccessWallet.CallOpts)
}

// FindTypeByHash is a free data retrieval call binding the contract method 0x1f2caaec.
//
// Solidity: function findTypeByHash(bytes32 typeHash) constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletCaller) FindTypeByHash(opts *bind.CallOpts, typeHash [32]byte) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "findTypeByHash", typeHash)
	return *ret0, err
}

// FindTypeByHash is a free data retrieval call binding the contract method 0x1f2caaec.
//
// Solidity: function findTypeByHash(bytes32 typeHash) constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletSession) FindTypeByHash(typeHash [32]byte) (common.Address, error) {
	return _BaseAccessWallet.Contract.FindTypeByHash(&_BaseAccessWallet.CallOpts, typeHash)
}

// FindTypeByHash is a free data retrieval call binding the contract method 0x1f2caaec.
//
// Solidity: function findTypeByHash(bytes32 typeHash) constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) FindTypeByHash(typeHash [32]byte) (common.Address, error) {
	return _BaseAccessWallet.Contract.FindTypeByHash(&_BaseAccessWallet.CallOpts, typeHash)
}

// GetAccessGroup is a free data retrieval call binding the contract method 0x2d474cbd.
//
// Solidity: function getAccessGroup(uint256 position) constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletCaller) GetAccessGroup(opts *bind.CallOpts, position *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "getAccessGroup", position)
	return *ret0, err
}

// GetAccessGroup is a free data retrieval call binding the contract method 0x2d474cbd.
//
// Solidity: function getAccessGroup(uint256 position) constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletSession) GetAccessGroup(position *big.Int) (common.Address, error) {
	return _BaseAccessWallet.Contract.GetAccessGroup(&_BaseAccessWallet.CallOpts, position)
}

// GetAccessGroup is a free data retrieval call binding the contract method 0x2d474cbd.
//
// Solidity: function getAccessGroup(uint256 position) constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) GetAccessGroup(position *big.Int) (common.Address, error) {
	return _BaseAccessWallet.Contract.GetAccessGroup(&_BaseAccessWallet.CallOpts, position)
}

// GetAccessGroupRights is a free data retrieval call binding the contract method 0x304f4a7b.
//
// Solidity: function getAccessGroupRights(address group) constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCaller) GetAccessGroupRights(opts *bind.CallOpts, group common.Address) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "getAccessGroupRights", group)
	return *ret0, err
}

// GetAccessGroupRights is a free data retrieval call binding the contract method 0x304f4a7b.
//
// Solidity: function getAccessGroupRights(address group) constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletSession) GetAccessGroupRights(group common.Address) (uint8, error) {
	return _BaseAccessWallet.Contract.GetAccessGroupRights(&_BaseAccessWallet.CallOpts, group)
}

// GetAccessGroupRights is a free data retrieval call binding the contract method 0x304f4a7b.
//
// Solidity: function getAccessGroupRights(address group) constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) GetAccessGroupRights(group common.Address) (uint8, error) {
	return _BaseAccessWallet.Contract.GetAccessGroupRights(&_BaseAccessWallet.CallOpts, group)
}

// GetAccessGroupsLength is a free data retrieval call binding the contract method 0x0dc10d3f.
//
// Solidity: function getAccessGroupsLength() constant returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletCaller) GetAccessGroupsLength(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "getAccessGroupsLength")
	return *ret0, err
}

// GetAccessGroupsLength is a free data retrieval call binding the contract method 0x0dc10d3f.
//
// Solidity: function getAccessGroupsLength() constant returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletSession) GetAccessGroupsLength() (*big.Int, error) {
	return _BaseAccessWallet.Contract.GetAccessGroupsLength(&_BaseAccessWallet.CallOpts)
}

// GetAccessGroupsLength is a free data retrieval call binding the contract method 0x0dc10d3f.
//
// Solidity: function getAccessGroupsLength() constant returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) GetAccessGroupsLength() (*big.Int, error) {
	return _BaseAccessWallet.Contract.GetAccessGroupsLength(&_BaseAccessWallet.CallOpts)
}

// GetContentObject is a free data retrieval call binding the contract method 0xcf8a7503.
//
// Solidity: function getContentObject(uint256 position) constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletCaller) GetContentObject(opts *bind.CallOpts, position *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "getContentObject", position)
	return *ret0, err
}

// GetContentObject is a free data retrieval call binding the contract method 0xcf8a7503.
//
// Solidity: function getContentObject(uint256 position) constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletSession) GetContentObject(position *big.Int) (common.Address, error) {
	return _BaseAccessWallet.Contract.GetContentObject(&_BaseAccessWallet.CallOpts, position)
}

// GetContentObject is a free data retrieval call binding the contract method 0xcf8a7503.
//
// Solidity: function getContentObject(uint256 position) constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) GetContentObject(position *big.Int) (common.Address, error) {
	return _BaseAccessWallet.Contract.GetContentObject(&_BaseAccessWallet.CallOpts, position)
}

// GetContentObjectRights is a free data retrieval call binding the contract method 0x69881c0c.
//
// Solidity: function getContentObjectRights(address obj) constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCaller) GetContentObjectRights(opts *bind.CallOpts, obj common.Address) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "getContentObjectRights", obj)
	return *ret0, err
}

// GetContentObjectRights is a free data retrieval call binding the contract method 0x69881c0c.
//
// Solidity: function getContentObjectRights(address obj) constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletSession) GetContentObjectRights(obj common.Address) (uint8, error) {
	return _BaseAccessWallet.Contract.GetContentObjectRights(&_BaseAccessWallet.CallOpts, obj)
}

// GetContentObjectRights is a free data retrieval call binding the contract method 0x69881c0c.
//
// Solidity: function getContentObjectRights(address obj) constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) GetContentObjectRights(obj common.Address) (uint8, error) {
	return _BaseAccessWallet.Contract.GetContentObjectRights(&_BaseAccessWallet.CallOpts, obj)
}

// GetContentObjectsLength is a free data retrieval call binding the contract method 0xebe9314e.
//
// Solidity: function getContentObjectsLength() constant returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletCaller) GetContentObjectsLength(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "getContentObjectsLength")
	return *ret0, err
}

// GetContentObjectsLength is a free data retrieval call binding the contract method 0xebe9314e.
//
// Solidity: function getContentObjectsLength() constant returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletSession) GetContentObjectsLength() (*big.Int, error) {
	return _BaseAccessWallet.Contract.GetContentObjectsLength(&_BaseAccessWallet.CallOpts)
}

// GetContentObjectsLength is a free data retrieval call binding the contract method 0xebe9314e.
//
// Solidity: function getContentObjectsLength() constant returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) GetContentObjectsLength() (*big.Int, error) {
	return _BaseAccessWallet.Contract.GetContentObjectsLength(&_BaseAccessWallet.CallOpts)
}

// GetContentType is a free data retrieval call binding the contract method 0xaa3f6952.
//
// Solidity: function getContentType(uint256 position) constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletCaller) GetContentType(opts *bind.CallOpts, position *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "getContentType", position)
	return *ret0, err
}

// GetContentType is a free data retrieval call binding the contract method 0xaa3f6952.
//
// Solidity: function getContentType(uint256 position) constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletSession) GetContentType(position *big.Int) (common.Address, error) {
	return _BaseAccessWallet.Contract.GetContentType(&_BaseAccessWallet.CallOpts, position)
}

// GetContentType is a free data retrieval call binding the contract method 0xaa3f6952.
//
// Solidity: function getContentType(uint256 position) constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) GetContentType(position *big.Int) (common.Address, error) {
	return _BaseAccessWallet.Contract.GetContentType(&_BaseAccessWallet.CallOpts, position)
}

// GetContentTypeRights is a free data retrieval call binding the contract method 0xa4081d62.
//
// Solidity: function getContentTypeRights(address obj) constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCaller) GetContentTypeRights(opts *bind.CallOpts, obj common.Address) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "getContentTypeRights", obj)
	return *ret0, err
}

// GetContentTypeRights is a free data retrieval call binding the contract method 0xa4081d62.
//
// Solidity: function getContentTypeRights(address obj) constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletSession) GetContentTypeRights(obj common.Address) (uint8, error) {
	return _BaseAccessWallet.Contract.GetContentTypeRights(&_BaseAccessWallet.CallOpts, obj)
}

// GetContentTypeRights is a free data retrieval call binding the contract method 0xa4081d62.
//
// Solidity: function getContentTypeRights(address obj) constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) GetContentTypeRights(obj common.Address) (uint8, error) {
	return _BaseAccessWallet.Contract.GetContentTypeRights(&_BaseAccessWallet.CallOpts, obj)
}

// GetContentTypesLength is a free data retrieval call binding the contract method 0x5c1d3059.
//
// Solidity: function getContentTypesLength() constant returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletCaller) GetContentTypesLength(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "getContentTypesLength")
	return *ret0, err
}

// GetContentTypesLength is a free data retrieval call binding the contract method 0x5c1d3059.
//
// Solidity: function getContentTypesLength() constant returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletSession) GetContentTypesLength() (*big.Int, error) {
	return _BaseAccessWallet.Contract.GetContentTypesLength(&_BaseAccessWallet.CallOpts)
}

// GetContentTypesLength is a free data retrieval call binding the contract method 0x5c1d3059.
//
// Solidity: function getContentTypesLength() constant returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) GetContentTypesLength() (*big.Int, error) {
	return _BaseAccessWallet.Contract.GetContentTypesLength(&_BaseAccessWallet.CallOpts)
}

// GetContract is a free data retrieval call binding the contract method 0x6ebc8c86.
//
// Solidity: function getContract(uint256 position) constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletCaller) GetContract(opts *bind.CallOpts, position *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "getContract", position)
	return *ret0, err
}

// GetContract is a free data retrieval call binding the contract method 0x6ebc8c86.
//
// Solidity: function getContract(uint256 position) constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletSession) GetContract(position *big.Int) (common.Address, error) {
	return _BaseAccessWallet.Contract.GetContract(&_BaseAccessWallet.CallOpts, position)
}

// GetContract is a free data retrieval call binding the contract method 0x6ebc8c86.
//
// Solidity: function getContract(uint256 position) constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) GetContract(position *big.Int) (common.Address, error) {
	return _BaseAccessWallet.Contract.GetContract(&_BaseAccessWallet.CallOpts, position)
}

// GetContractRights is a free data retrieval call binding the contract method 0x08d865d7.
//
// Solidity: function getContractRights(address obj) constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCaller) GetContractRights(opts *bind.CallOpts, obj common.Address) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "getContractRights", obj)
	return *ret0, err
}

// GetContractRights is a free data retrieval call binding the contract method 0x08d865d7.
//
// Solidity: function getContractRights(address obj) constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletSession) GetContractRights(obj common.Address) (uint8, error) {
	return _BaseAccessWallet.Contract.GetContractRights(&_BaseAccessWallet.CallOpts, obj)
}

// GetContractRights is a free data retrieval call binding the contract method 0x08d865d7.
//
// Solidity: function getContractRights(address obj) constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) GetContractRights(obj common.Address) (uint8, error) {
	return _BaseAccessWallet.Contract.GetContractRights(&_BaseAccessWallet.CallOpts, obj)
}

// GetContractsLength is a free data retrieval call binding the contract method 0xfccc134f.
//
// Solidity: function getContractsLength() constant returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletCaller) GetContractsLength(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "getContractsLength")
	return *ret0, err
}

// GetContractsLength is a free data retrieval call binding the contract method 0xfccc134f.
//
// Solidity: function getContractsLength() constant returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletSession) GetContractsLength() (*big.Int, error) {
	return _BaseAccessWallet.Contract.GetContractsLength(&_BaseAccessWallet.CallOpts)
}

// GetContractsLength is a free data retrieval call binding the contract method 0xfccc134f.
//
// Solidity: function getContractsLength() constant returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) GetContractsLength() (*big.Int, error) {
	return _BaseAccessWallet.Contract.GetContractsLength(&_BaseAccessWallet.CallOpts)
}

// GetLibrariesLength is a free data retrieval call binding the contract method 0xcb86806d.
//
// Solidity: function getLibrariesLength() constant returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletCaller) GetLibrariesLength(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "getLibrariesLength")
	return *ret0, err
}

// GetLibrariesLength is a free data retrieval call binding the contract method 0xcb86806d.
//
// Solidity: function getLibrariesLength() constant returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletSession) GetLibrariesLength() (*big.Int, error) {
	return _BaseAccessWallet.Contract.GetLibrariesLength(&_BaseAccessWallet.CallOpts)
}

// GetLibrariesLength is a free data retrieval call binding the contract method 0xcb86806d.
//
// Solidity: function getLibrariesLength() constant returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) GetLibrariesLength() (*big.Int, error) {
	return _BaseAccessWallet.Contract.GetLibrariesLength(&_BaseAccessWallet.CallOpts)
}

// GetLibrary is a free data retrieval call binding the contract method 0xd15d62a7.
//
// Solidity: function getLibrary(uint256 position) constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletCaller) GetLibrary(opts *bind.CallOpts, position *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "getLibrary", position)
	return *ret0, err
}

// GetLibrary is a free data retrieval call binding the contract method 0xd15d62a7.
//
// Solidity: function getLibrary(uint256 position) constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletSession) GetLibrary(position *big.Int) (common.Address, error) {
	return _BaseAccessWallet.Contract.GetLibrary(&_BaseAccessWallet.CallOpts, position)
}

// GetLibrary is a free data retrieval call binding the contract method 0xd15d62a7.
//
// Solidity: function getLibrary(uint256 position) constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) GetLibrary(position *big.Int) (common.Address, error) {
	return _BaseAccessWallet.Contract.GetLibrary(&_BaseAccessWallet.CallOpts, position)
}

// GetLibraryRights is a free data retrieval call binding the contract method 0xfb52222c.
//
// Solidity: function getLibraryRights(address lib) constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCaller) GetLibraryRights(opts *bind.CallOpts, lib common.Address) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "getLibraryRights", lib)
	return *ret0, err
}

// GetLibraryRights is a free data retrieval call binding the contract method 0xfb52222c.
//
// Solidity: function getLibraryRights(address lib) constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletSession) GetLibraryRights(lib common.Address) (uint8, error) {
	return _BaseAccessWallet.Contract.GetLibraryRights(&_BaseAccessWallet.CallOpts, lib)
}

// GetLibraryRights is a free data retrieval call binding the contract method 0xfb52222c.
//
// Solidity: function getLibraryRights(address lib) constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) GetLibraryRights(lib common.Address) (uint8, error) {
	return _BaseAccessWallet.Contract.GetLibraryRights(&_BaseAccessWallet.CallOpts, lib)
}

// GetMeta is a free data retrieval call binding the contract method 0xac55c906.
//
// Solidity: function getMeta(bytes key) constant returns(bytes)
func (_BaseAccessWallet *BaseAccessWalletCaller) GetMeta(opts *bind.CallOpts, key []byte) ([]byte, error) {
	var (
		ret0 = new([]byte)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "getMeta", key)
	return *ret0, err
}

// GetMeta is a free data retrieval call binding the contract method 0xac55c906.
//
// Solidity: function getMeta(bytes key) constant returns(bytes)
func (_BaseAccessWallet *BaseAccessWalletSession) GetMeta(key []byte) ([]byte, error) {
	return _BaseAccessWallet.Contract.GetMeta(&_BaseAccessWallet.CallOpts, key)
}

// GetMeta is a free data retrieval call binding the contract method 0xac55c906.
//
// Solidity: function getMeta(bytes key) constant returns(bytes)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) GetMeta(key []byte) ([]byte, error) {
	return _BaseAccessWallet.Contract.GetMeta(&_BaseAccessWallet.CallOpts, key)
}

// HasAccess is a free data retrieval call binding the contract method 0x95a078e8.
//
// Solidity: function hasAccess(address candidate) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCaller) HasAccess(opts *bind.CallOpts, candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "hasAccess", candidate)
	return *ret0, err
}

// HasAccess is a free data retrieval call binding the contract method 0x95a078e8.
//
// Solidity: function hasAccess(address candidate) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletSession) HasAccess(candidate common.Address) (bool, error) {
	return _BaseAccessWallet.Contract.HasAccess(&_BaseAccessWallet.CallOpts, candidate)
}

// HasAccess is a free data retrieval call binding the contract method 0x95a078e8.
//
// Solidity: function hasAccess(address candidate) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) HasAccess(candidate common.Address) (bool, error) {
	return _BaseAccessWallet.Contract.HasAccess(&_BaseAccessWallet.CallOpts, candidate)
}

// HasEditorRight is a free data retrieval call binding the contract method 0x67e5c3bf.
//
// Solidity: function hasEditorRight(address candidate) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCaller) HasEditorRight(opts *bind.CallOpts, candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "hasEditorRight", candidate)
	return *ret0, err
}

// HasEditorRight is a free data retrieval call binding the contract method 0x67e5c3bf.
//
// Solidity: function hasEditorRight(address candidate) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletSession) HasEditorRight(candidate common.Address) (bool, error) {
	return _BaseAccessWallet.Contract.HasEditorRight(&_BaseAccessWallet.CallOpts, candidate)
}

// HasEditorRight is a free data retrieval call binding the contract method 0x67e5c3bf.
//
// Solidity: function hasEditorRight(address candidate) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) HasEditorRight(candidate common.Address) (bool, error) {
	return _BaseAccessWallet.Contract.HasEditorRight(&_BaseAccessWallet.CallOpts, candidate)
}

// HasManagerAccess is a free data retrieval call binding the contract method 0x42e7ba7b.
//
// Solidity: function hasManagerAccess(address candidate) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCaller) HasManagerAccess(opts *bind.CallOpts, candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "hasManagerAccess", candidate)
	return *ret0, err
}

// HasManagerAccess is a free data retrieval call binding the contract method 0x42e7ba7b.
//
// Solidity: function hasManagerAccess(address candidate) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletSession) HasManagerAccess(candidate common.Address) (bool, error) {
	return _BaseAccessWallet.Contract.HasManagerAccess(&_BaseAccessWallet.CallOpts, candidate)
}

// HasManagerAccess is a free data retrieval call binding the contract method 0x42e7ba7b.
//
// Solidity: function hasManagerAccess(address candidate) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) HasManagerAccess(candidate common.Address) (bool, error) {
	return _BaseAccessWallet.Contract.HasManagerAccess(&_BaseAccessWallet.CallOpts, candidate)
}

// IndexCategory is a free data retrieval call binding the contract method 0x6380501f.
//
// Solidity: function indexCategory() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCaller) IndexCategory(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "indexCategory")
	return *ret0, err
}

// IndexCategory is a free data retrieval call binding the contract method 0x6380501f.
//
// Solidity: function indexCategory() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletSession) IndexCategory() (uint8, error) {
	return _BaseAccessWallet.Contract.IndexCategory(&_BaseAccessWallet.CallOpts)
}

// IndexCategory is a free data retrieval call binding the contract method 0x6380501f.
//
// Solidity: function indexCategory() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) IndexCategory() (uint8, error) {
	return _BaseAccessWallet.Contract.IndexCategory(&_BaseAccessWallet.CallOpts)
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(address _candidate) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCaller) IsAdmin(opts *bind.CallOpts, _candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "isAdmin", _candidate)
	return *ret0, err
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(address _candidate) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletSession) IsAdmin(_candidate common.Address) (bool, error) {
	return _BaseAccessWallet.Contract.IsAdmin(&_BaseAccessWallet.CallOpts, _candidate)
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(address _candidate) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) IsAdmin(_candidate common.Address) (bool, error) {
	return _BaseAccessWallet.Contract.IsAdmin(&_BaseAccessWallet.CallOpts, _candidate)
}

// Libraries is a free data retrieval call binding the contract method 0xc4b1978d.
//
// Solidity: function libraries() constant returns(uint8 category, uint256 length)
func (_BaseAccessWallet *BaseAccessWalletCaller) Libraries(opts *bind.CallOpts) (struct {
	Category uint8
	Length   *big.Int
}, error) {
	ret := new(struct {
		Category uint8
		Length   *big.Int
	})
	out := ret
	err := _BaseAccessWallet.contract.Call(opts, out, "libraries")
	return *ret, err
}

// Libraries is a free data retrieval call binding the contract method 0xc4b1978d.
//
// Solidity: function libraries() constant returns(uint8 category, uint256 length)
func (_BaseAccessWallet *BaseAccessWalletSession) Libraries() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _BaseAccessWallet.Contract.Libraries(&_BaseAccessWallet.CallOpts)
}

// Libraries is a free data retrieval call binding the contract method 0xc4b1978d.
//
// Solidity: function libraries() constant returns(uint8 category, uint256 length)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) Libraries() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _BaseAccessWallet.Contract.Libraries(&_BaseAccessWallet.CallOpts)
}

// ObjectHash is a free data retrieval call binding the contract method 0xe02dd9c2.
//
// Solidity: function objectHash() constant returns(string)
func (_BaseAccessWallet *BaseAccessWalletCaller) ObjectHash(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "objectHash")
	return *ret0, err
}

// ObjectHash is a free data retrieval call binding the contract method 0xe02dd9c2.
//
// Solidity: function objectHash() constant returns(string)
func (_BaseAccessWallet *BaseAccessWalletSession) ObjectHash() (string, error) {
	return _BaseAccessWallet.Contract.ObjectHash(&_BaseAccessWallet.CallOpts)
}

// ObjectHash is a free data retrieval call binding the contract method 0xe02dd9c2.
//
// Solidity: function objectHash() constant returns(string)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) ObjectHash() (string, error) {
	return _BaseAccessWallet.Contract.ObjectHash(&_BaseAccessWallet.CallOpts)
}

// ObjectTimestamp is a free data retrieval call binding the contract method 0x40b87a26.
//
// Solidity: function objectTimestamp() constant returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletCaller) ObjectTimestamp(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "objectTimestamp")
	return *ret0, err
}

// ObjectTimestamp is a free data retrieval call binding the contract method 0x40b87a26.
//
// Solidity: function objectTimestamp() constant returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletSession) ObjectTimestamp() (*big.Int, error) {
	return _BaseAccessWallet.Contract.ObjectTimestamp(&_BaseAccessWallet.CallOpts)
}

// ObjectTimestamp is a free data retrieval call binding the contract method 0x40b87a26.
//
// Solidity: function objectTimestamp() constant returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) ObjectTimestamp() (*big.Int, error) {
	return _BaseAccessWallet.Contract.ObjectTimestamp(&_BaseAccessWallet.CallOpts)
}

// Others is a free data retrieval call binding the contract method 0x51a7fc87.
//
// Solidity: function others() constant returns(uint8 category, uint256 length)
func (_BaseAccessWallet *BaseAccessWalletCaller) Others(opts *bind.CallOpts) (struct {
	Category uint8
	Length   *big.Int
}, error) {
	ret := new(struct {
		Category uint8
		Length   *big.Int
	})
	out := ret
	err := _BaseAccessWallet.contract.Call(opts, out, "others")
	return *ret, err
}

// Others is a free data retrieval call binding the contract method 0x51a7fc87.
//
// Solidity: function others() constant returns(uint8 category, uint256 length)
func (_BaseAccessWallet *BaseAccessWalletSession) Others() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _BaseAccessWallet.Contract.Others(&_BaseAccessWallet.CallOpts)
}

// Others is a free data retrieval call binding the contract method 0x51a7fc87.
//
// Solidity: function others() constant returns(uint8 category, uint256 length)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) Others() (struct {
	Category uint8
	Length   *big.Int
}, error) {
	return _BaseAccessWallet.Contract.Others(&_BaseAccessWallet.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletSession) Owner() (common.Address, error) {
	return _BaseAccessWallet.Contract.Owner(&_BaseAccessWallet.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) Owner() (common.Address, error) {
	return _BaseAccessWallet.Contract.Owner(&_BaseAccessWallet.CallOpts)
}

// ParentAddress is a free data retrieval call binding the contract method 0x00821de3.
//
// Solidity: function parentAddress() constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletCaller) ParentAddress(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "parentAddress")
	return *ret0, err
}

// ParentAddress is a free data retrieval call binding the contract method 0x00821de3.
//
// Solidity: function parentAddress() constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletSession) ParentAddress() (common.Address, error) {
	return _BaseAccessWallet.Contract.ParentAddress(&_BaseAccessWallet.CallOpts)
}

// ParentAddress is a free data retrieval call binding the contract method 0x00821de3.
//
// Solidity: function parentAddress() constant returns(address)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) ParentAddress() (common.Address, error) {
	return _BaseAccessWallet.Contract.ParentAddress(&_BaseAccessWallet.CallOpts)
}

// PendingHash is a free data retrieval call binding the contract method 0x628449fd.
//
// Solidity: function pendingHash() constant returns(string)
func (_BaseAccessWallet *BaseAccessWalletCaller) PendingHash(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "pendingHash")
	return *ret0, err
}

// PendingHash is a free data retrieval call binding the contract method 0x628449fd.
//
// Solidity: function pendingHash() constant returns(string)
func (_BaseAccessWallet *BaseAccessWalletSession) PendingHash() (string, error) {
	return _BaseAccessWallet.Contract.PendingHash(&_BaseAccessWallet.CallOpts)
}

// PendingHash is a free data retrieval call binding the contract method 0x628449fd.
//
// Solidity: function pendingHash() constant returns(string)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) PendingHash() (string, error) {
	return _BaseAccessWallet.Contract.PendingHash(&_BaseAccessWallet.CallOpts)
}

// RequiresReview is a free data retrieval call binding the contract method 0x3dd71d99.
//
// Solidity: function requiresReview() constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCaller) RequiresReview(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "requiresReview")
	return *ret0, err
}

// RequiresReview is a free data retrieval call binding the contract method 0x3dd71d99.
//
// Solidity: function requiresReview() constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletSession) RequiresReview() (bool, error) {
	return _BaseAccessWallet.Contract.RequiresReview(&_BaseAccessWallet.CallOpts)
}

// RequiresReview is a free data retrieval call binding the contract method 0x3dd71d99.
//
// Solidity: function requiresReview() constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) RequiresReview() (bool, error) {
	return _BaseAccessWallet.Contract.RequiresReview(&_BaseAccessWallet.CallOpts)
}

// ValidType is a free data retrieval call binding the contract method 0x29dedde5.
//
// Solidity: function validType(address content_type) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCaller) ValidType(opts *bind.CallOpts, content_type common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "validType", content_type)
	return *ret0, err
}

// ValidType is a free data retrieval call binding the contract method 0x29dedde5.
//
// Solidity: function validType(address content_type) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletSession) ValidType(content_type common.Address) (bool, error) {
	return _BaseAccessWallet.Contract.ValidType(&_BaseAccessWallet.CallOpts, content_type)
}

// ValidType is a free data retrieval call binding the contract method 0x29dedde5.
//
// Solidity: function validType(address content_type) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) ValidType(content_type common.Address) (bool, error) {
	return _BaseAccessWallet.Contract.ValidType(&_BaseAccessWallet.CallOpts, content_type)
}

// ValidateTimestamp is a free data retrieval call binding the contract method 0xf50b2efe.
//
// Solidity: function validateTimestamp(uint256 _ts) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCaller) ValidateTimestamp(opts *bind.CallOpts, _ts *big.Int) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "validateTimestamp", _ts)
	return *ret0, err
}

// ValidateTimestamp is a free data retrieval call binding the contract method 0xf50b2efe.
//
// Solidity: function validateTimestamp(uint256 _ts) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletSession) ValidateTimestamp(_ts *big.Int) (bool, error) {
	return _BaseAccessWallet.Contract.ValidateTimestamp(&_BaseAccessWallet.CallOpts, _ts)
}

// ValidateTimestamp is a free data retrieval call binding the contract method 0xf50b2efe.
//
// Solidity: function validateTimestamp(uint256 _ts) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) ValidateTimestamp(_ts *big.Int) (bool, error) {
	return _BaseAccessWallet.Contract.ValidateTimestamp(&_BaseAccessWallet.CallOpts, _ts)
}

// ValidateTransaction is a free data retrieval call binding the contract method 0x763d5ee6.
//
// Solidity: function validateTransaction(uint8 _v, bytes32 _r, bytes32 _s, address _dest, uint256 _value, uint256 _ts) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCaller) ValidateTransaction(opts *bind.CallOpts, _v uint8, _r [32]byte, _s [32]byte, _dest common.Address, _value *big.Int, _ts *big.Int) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "validateTransaction", _v, _r, _s, _dest, _value, _ts)
	return *ret0, err
}

// ValidateTransaction is a free data retrieval call binding the contract method 0x763d5ee6.
//
// Solidity: function validateTransaction(uint8 _v, bytes32 _r, bytes32 _s, address _dest, uint256 _value, uint256 _ts) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletSession) ValidateTransaction(_v uint8, _r [32]byte, _s [32]byte, _dest common.Address, _value *big.Int, _ts *big.Int) (bool, error) {
	return _BaseAccessWallet.Contract.ValidateTransaction(&_BaseAccessWallet.CallOpts, _v, _r, _s, _dest, _value, _ts)
}

// ValidateTransaction is a free data retrieval call binding the contract method 0x763d5ee6.
//
// Solidity: function validateTransaction(uint8 _v, bytes32 _r, bytes32 _s, address _dest, uint256 _value, uint256 _ts) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) ValidateTransaction(_v uint8, _r [32]byte, _s [32]byte, _dest common.Address, _value *big.Int, _ts *big.Int) (bool, error) {
	return _BaseAccessWallet.Contract.ValidateTransaction(&_BaseAccessWallet.CallOpts, _v, _r, _s, _dest, _value, _ts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseAccessWallet *BaseAccessWalletCaller) Version(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseAccessWallet *BaseAccessWalletSession) Version() ([32]byte, error) {
	return _BaseAccessWallet.Contract.Version(&_BaseAccessWallet.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) Version() ([32]byte, error) {
	return _BaseAccessWallet.Contract.Version(&_BaseAccessWallet.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseAccessWallet *BaseAccessWalletCaller) VersionAPI(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "versionAPI")
	return *ret0, err
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseAccessWallet *BaseAccessWalletSession) VersionAPI() ([32]byte, error) {
	return _BaseAccessWallet.Contract.VersionAPI(&_BaseAccessWallet.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) VersionAPI() ([32]byte, error) {
	return _BaseAccessWallet.Contract.VersionAPI(&_BaseAccessWallet.CallOpts)
}

// VersionHashes is a free data retrieval call binding the contract method 0x7ca8f618.
//
// Solidity: function versionHashes(uint256 ) constant returns(string)
func (_BaseAccessWallet *BaseAccessWalletCaller) VersionHashes(opts *bind.CallOpts, arg0 *big.Int) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "versionHashes", arg0)
	return *ret0, err
}

// VersionHashes is a free data retrieval call binding the contract method 0x7ca8f618.
//
// Solidity: function versionHashes(uint256 ) constant returns(string)
func (_BaseAccessWallet *BaseAccessWalletSession) VersionHashes(arg0 *big.Int) (string, error) {
	return _BaseAccessWallet.Contract.VersionHashes(&_BaseAccessWallet.CallOpts, arg0)
}

// VersionHashes is a free data retrieval call binding the contract method 0x7ca8f618.
//
// Solidity: function versionHashes(uint256 ) constant returns(string)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) VersionHashes(arg0 *big.Int) (string, error) {
	return _BaseAccessWallet.Contract.VersionHashes(&_BaseAccessWallet.CallOpts, arg0)
}

// VersionTimestamp is a free data retrieval call binding the contract method 0x7886f747.
//
// Solidity: function versionTimestamp(uint256 ) constant returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletCaller) VersionTimestamp(opts *bind.CallOpts, arg0 *big.Int) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "versionTimestamp", arg0)
	return *ret0, err
}

// VersionTimestamp is a free data retrieval call binding the contract method 0x7886f747.
//
// Solidity: function versionTimestamp(uint256 ) constant returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletSession) VersionTimestamp(arg0 *big.Int) (*big.Int, error) {
	return _BaseAccessWallet.Contract.VersionTimestamp(&_BaseAccessWallet.CallOpts, arg0)
}

// VersionTimestamp is a free data retrieval call binding the contract method 0x7886f747.
//
// Solidity: function versionTimestamp(uint256 ) constant returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) VersionTimestamp(arg0 *big.Int) (*big.Int, error) {
	return _BaseAccessWallet.Contract.VersionTimestamp(&_BaseAccessWallet.CallOpts, arg0)
}

// Visibility is a free data retrieval call binding the contract method 0x29adec14.
//
// Solidity: function visibility() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCaller) Visibility(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "visibility")
	return *ret0, err
}

// Visibility is a free data retrieval call binding the contract method 0x29adec14.
//
// Solidity: function visibility() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletSession) Visibility() (uint8, error) {
	return _BaseAccessWallet.Contract.Visibility(&_BaseAccessWallet.CallOpts)
}

// Visibility is a free data retrieval call binding the contract method 0x29adec14.
//
// Solidity: function visibility() constant returns(uint8)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) Visibility() (uint8, error) {
	return _BaseAccessWallet.Contract.Visibility(&_BaseAccessWallet.CallOpts)
}

// WhitelistedType is a free data retrieval call binding the contract method 0x9cb121ba.
//
// Solidity: function whitelistedType(address content_type) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCaller) WhitelistedType(opts *bind.CallOpts, content_type common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseAccessWallet.contract.Call(opts, out, "whitelistedType", content_type)
	return *ret0, err
}

// WhitelistedType is a free data retrieval call binding the contract method 0x9cb121ba.
//
// Solidity: function whitelistedType(address content_type) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletSession) WhitelistedType(content_type common.Address) (bool, error) {
	return _BaseAccessWallet.Contract.WhitelistedType(&_BaseAccessWallet.CallOpts, content_type)
}

// WhitelistedType is a free data retrieval call binding the contract method 0x9cb121ba.
//
// Solidity: function whitelistedType(address content_type) constant returns(bool)
func (_BaseAccessWallet *BaseAccessWalletCallerSession) WhitelistedType(content_type common.Address) (bool, error) {
	return _BaseAccessWallet.Contract.WhitelistedType(&_BaseAccessWallet.CallOpts, content_type)
}

// AccessRequestV3 is a paid mutator transaction binding the contract method 0x1bf7a912.
//
// Solidity: function accessRequestV3(bytes32[] , address[] ) returns(bool)
func (_BaseAccessWallet *BaseAccessWalletTransactor) AccessRequestV3(opts *bind.TransactOpts, arg0 [][32]byte, arg1 []common.Address) (*types.Transaction, error) {
	return _BaseAccessWallet.contract.Transact(opts, "accessRequestV3", arg0, arg1)
}

// AccessRequestV3 is a paid mutator transaction binding the contract method 0x1bf7a912.
//
// Solidity: function accessRequestV3(bytes32[] , address[] ) returns(bool)
func (_BaseAccessWallet *BaseAccessWalletSession) AccessRequestV3(arg0 [][32]byte, arg1 []common.Address) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.AccessRequestV3(&_BaseAccessWallet.TransactOpts, arg0, arg1)
}

// AccessRequestV3 is a paid mutator transaction binding the contract method 0x1bf7a912.
//
// Solidity: function accessRequestV3(bytes32[] , address[] ) returns(bool)
func (_BaseAccessWallet *BaseAccessWalletTransactorSession) AccessRequestV3(arg0 [][32]byte, arg1 []common.Address) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.AccessRequestV3(&_BaseAccessWallet.TransactOpts, arg0, arg1)
}

// AddContentType is a paid mutator transaction binding the contract method 0x0f58a786.
//
// Solidity: function addContentType(address content_type, address content_contract) returns()
func (_BaseAccessWallet *BaseAccessWalletTransactor) AddContentType(opts *bind.TransactOpts, content_type common.Address, content_contract common.Address) (*types.Transaction, error) {
	return _BaseAccessWallet.contract.Transact(opts, "addContentType", content_type, content_contract)
}

// AddContentType is a paid mutator transaction binding the contract method 0x0f58a786.
//
// Solidity: function addContentType(address content_type, address content_contract) returns()
func (_BaseAccessWallet *BaseAccessWalletSession) AddContentType(content_type common.Address, content_contract common.Address) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.AddContentType(&_BaseAccessWallet.TransactOpts, content_type, content_contract)
}

// AddContentType is a paid mutator transaction binding the contract method 0x0f58a786.
//
// Solidity: function addContentType(address content_type, address content_contract) returns()
func (_BaseAccessWallet *BaseAccessWalletTransactorSession) AddContentType(content_type common.Address, content_contract common.Address) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.AddContentType(&_BaseAccessWallet.TransactOpts, content_type, content_contract)
}

// CleanUpAccessGroups is a paid mutator transaction binding the contract method 0xd30f8cd0.
//
// Solidity: function cleanUpAccessGroups() returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletTransactor) CleanUpAccessGroups(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseAccessWallet.contract.Transact(opts, "cleanUpAccessGroups")
}

// CleanUpAccessGroups is a paid mutator transaction binding the contract method 0xd30f8cd0.
//
// Solidity: function cleanUpAccessGroups() returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletSession) CleanUpAccessGroups() (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.CleanUpAccessGroups(&_BaseAccessWallet.TransactOpts)
}

// CleanUpAccessGroups is a paid mutator transaction binding the contract method 0xd30f8cd0.
//
// Solidity: function cleanUpAccessGroups() returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletTransactorSession) CleanUpAccessGroups() (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.CleanUpAccessGroups(&_BaseAccessWallet.TransactOpts)
}

// CleanUpAll is a paid mutator transaction binding the contract method 0x2fa5c842.
//
// Solidity: function cleanUpAll() returns(uint256, uint256, uint256, uint256, uint256)
func (_BaseAccessWallet *BaseAccessWalletTransactor) CleanUpAll(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseAccessWallet.contract.Transact(opts, "cleanUpAll")
}

// CleanUpAll is a paid mutator transaction binding the contract method 0x2fa5c842.
//
// Solidity: function cleanUpAll() returns(uint256, uint256, uint256, uint256, uint256)
func (_BaseAccessWallet *BaseAccessWalletSession) CleanUpAll() (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.CleanUpAll(&_BaseAccessWallet.TransactOpts)
}

// CleanUpAll is a paid mutator transaction binding the contract method 0x2fa5c842.
//
// Solidity: function cleanUpAll() returns(uint256, uint256, uint256, uint256, uint256)
func (_BaseAccessWallet *BaseAccessWalletTransactorSession) CleanUpAll() (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.CleanUpAll(&_BaseAccessWallet.TransactOpts)
}

// CleanUpContentObjects is a paid mutator transaction binding the contract method 0x048bd529.
//
// Solidity: function cleanUpContentObjects() returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletTransactor) CleanUpContentObjects(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseAccessWallet.contract.Transact(opts, "cleanUpContentObjects")
}

// CleanUpContentObjects is a paid mutator transaction binding the contract method 0x048bd529.
//
// Solidity: function cleanUpContentObjects() returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletSession) CleanUpContentObjects() (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.CleanUpContentObjects(&_BaseAccessWallet.TransactOpts)
}

// CleanUpContentObjects is a paid mutator transaction binding the contract method 0x048bd529.
//
// Solidity: function cleanUpContentObjects() returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletTransactorSession) CleanUpContentObjects() (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.CleanUpContentObjects(&_BaseAccessWallet.TransactOpts)
}

// CleanUpContentTypes is a paid mutator transaction binding the contract method 0x85e0a200.
//
// Solidity: function cleanUpContentTypes() returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletTransactor) CleanUpContentTypes(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseAccessWallet.contract.Transact(opts, "cleanUpContentTypes")
}

// CleanUpContentTypes is a paid mutator transaction binding the contract method 0x85e0a200.
//
// Solidity: function cleanUpContentTypes() returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletSession) CleanUpContentTypes() (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.CleanUpContentTypes(&_BaseAccessWallet.TransactOpts)
}

// CleanUpContentTypes is a paid mutator transaction binding the contract method 0x85e0a200.
//
// Solidity: function cleanUpContentTypes() returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletTransactorSession) CleanUpContentTypes() (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.CleanUpContentTypes(&_BaseAccessWallet.TransactOpts)
}

// CleanUpLibraries is a paid mutator transaction binding the contract method 0x92297d7b.
//
// Solidity: function cleanUpLibraries() returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletTransactor) CleanUpLibraries(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseAccessWallet.contract.Transact(opts, "cleanUpLibraries")
}

// CleanUpLibraries is a paid mutator transaction binding the contract method 0x92297d7b.
//
// Solidity: function cleanUpLibraries() returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletSession) CleanUpLibraries() (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.CleanUpLibraries(&_BaseAccessWallet.TransactOpts)
}

// CleanUpLibraries is a paid mutator transaction binding the contract method 0x92297d7b.
//
// Solidity: function cleanUpLibraries() returns(uint256)
func (_BaseAccessWallet *BaseAccessWalletTransactorSession) CleanUpLibraries() (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.CleanUpLibraries(&_BaseAccessWallet.TransactOpts)
}

// ClearPending is a paid mutator transaction binding the contract method 0x5f6a1301.
//
// Solidity: function clearPending() returns()
func (_BaseAccessWallet *BaseAccessWalletTransactor) ClearPending(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseAccessWallet.contract.Transact(opts, "clearPending")
}

// ClearPending is a paid mutator transaction binding the contract method 0x5f6a1301.
//
// Solidity: function clearPending() returns()
func (_BaseAccessWallet *BaseAccessWalletSession) ClearPending() (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.ClearPending(&_BaseAccessWallet.TransactOpts)
}

// ClearPending is a paid mutator transaction binding the contract method 0x5f6a1301.
//
// Solidity: function clearPending() returns()
func (_BaseAccessWallet *BaseAccessWalletTransactorSession) ClearPending() (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.ClearPending(&_BaseAccessWallet.TransactOpts)
}

// Commit is a paid mutator transaction binding the contract method 0x9867db74.
//
// Solidity: function commit(string _objectHash) returns()
func (_BaseAccessWallet *BaseAccessWalletTransactor) Commit(opts *bind.TransactOpts, _objectHash string) (*types.Transaction, error) {
	return _BaseAccessWallet.contract.Transact(opts, "commit", _objectHash)
}

// Commit is a paid mutator transaction binding the contract method 0x9867db74.
//
// Solidity: function commit(string _objectHash) returns()
func (_BaseAccessWallet *BaseAccessWalletSession) Commit(_objectHash string) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.Commit(&_BaseAccessWallet.TransactOpts, _objectHash)
}

// Commit is a paid mutator transaction binding the contract method 0x9867db74.
//
// Solidity: function commit(string _objectHash) returns()
func (_BaseAccessWallet *BaseAccessWalletTransactorSession) Commit(_objectHash string) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.Commit(&_BaseAccessWallet.TransactOpts, _objectHash)
}

// ConfirmCommit is a paid mutator transaction binding the contract method 0x446e8826.
//
// Solidity: function confirmCommit() returns(bool)
func (_BaseAccessWallet *BaseAccessWalletTransactor) ConfirmCommit(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseAccessWallet.contract.Transact(opts, "confirmCommit")
}

// ConfirmCommit is a paid mutator transaction binding the contract method 0x446e8826.
//
// Solidity: function confirmCommit() returns(bool)
func (_BaseAccessWallet *BaseAccessWalletSession) ConfirmCommit() (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.ConfirmCommit(&_BaseAccessWallet.TransactOpts)
}

// ConfirmCommit is a paid mutator transaction binding the contract method 0x446e8826.
//
// Solidity: function confirmCommit() returns(bool)
func (_BaseAccessWallet *BaseAccessWalletTransactorSession) ConfirmCommit() (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.ConfirmCommit(&_BaseAccessWallet.TransactOpts)
}

// DeleteVersion is a paid mutator transaction binding the contract method 0xe1a70717.
//
// Solidity: function deleteVersion(string _versionHash) returns(int256)
func (_BaseAccessWallet *BaseAccessWalletTransactor) DeleteVersion(opts *bind.TransactOpts, _versionHash string) (*types.Transaction, error) {
	return _BaseAccessWallet.contract.Transact(opts, "deleteVersion", _versionHash)
}

// DeleteVersion is a paid mutator transaction binding the contract method 0xe1a70717.
//
// Solidity: function deleteVersion(string _versionHash) returns(int256)
func (_BaseAccessWallet *BaseAccessWalletSession) DeleteVersion(_versionHash string) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.DeleteVersion(&_BaseAccessWallet.TransactOpts, _versionHash)
}

// DeleteVersion is a paid mutator transaction binding the contract method 0xe1a70717.
//
// Solidity: function deleteVersion(string _versionHash) returns(int256)
func (_BaseAccessWallet *BaseAccessWalletTransactorSession) DeleteVersion(_versionHash string) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.DeleteVersion(&_BaseAccessWallet.TransactOpts, _versionHash)
}

// Execute is a paid mutator transaction binding the contract method 0x508ad278.
//
// Solidity: function execute(address _guarantor, uint8 _v, bytes32 _r, bytes32 _s, address _dest, uint256 _value, uint256 _ts) returns(bool)
func (_BaseAccessWallet *BaseAccessWalletTransactor) Execute(opts *bind.TransactOpts, _guarantor common.Address, _v uint8, _r [32]byte, _s [32]byte, _dest common.Address, _value *big.Int, _ts *big.Int) (*types.Transaction, error) {
	return _BaseAccessWallet.contract.Transact(opts, "execute", _guarantor, _v, _r, _s, _dest, _value, _ts)
}

// Execute is a paid mutator transaction binding the contract method 0x508ad278.
//
// Solidity: function execute(address _guarantor, uint8 _v, bytes32 _r, bytes32 _s, address _dest, uint256 _value, uint256 _ts) returns(bool)
func (_BaseAccessWallet *BaseAccessWalletSession) Execute(_guarantor common.Address, _v uint8, _r [32]byte, _s [32]byte, _dest common.Address, _value *big.Int, _ts *big.Int) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.Execute(&_BaseAccessWallet.TransactOpts, _guarantor, _v, _r, _s, _dest, _value, _ts)
}

// Execute is a paid mutator transaction binding the contract method 0x508ad278.
//
// Solidity: function execute(address _guarantor, uint8 _v, bytes32 _r, bytes32 _s, address _dest, uint256 _value, uint256 _ts) returns(bool)
func (_BaseAccessWallet *BaseAccessWalletTransactorSession) Execute(_guarantor common.Address, _v uint8, _r [32]byte, _s [32]byte, _dest common.Address, _value *big.Int, _ts *big.Int) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.Execute(&_BaseAccessWallet.TransactOpts, _guarantor, _v, _r, _s, _dest, _value, _ts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseAccessWallet *BaseAccessWalletTransactor) Kill(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseAccessWallet.contract.Transact(opts, "kill")
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseAccessWallet *BaseAccessWalletSession) Kill() (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.Kill(&_BaseAccessWallet.TransactOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseAccessWallet *BaseAccessWalletTransactorSession) Kill() (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.Kill(&_BaseAccessWallet.TransactOpts)
}

// Publish is a paid mutator transaction binding the contract method 0x2cf99422.
//
// Solidity: function publish(address contentObj) returns(bool)
func (_BaseAccessWallet *BaseAccessWalletTransactor) Publish(opts *bind.TransactOpts, contentObj common.Address) (*types.Transaction, error) {
	return _BaseAccessWallet.contract.Transact(opts, "publish", contentObj)
}

// Publish is a paid mutator transaction binding the contract method 0x2cf99422.
//
// Solidity: function publish(address contentObj) returns(bool)
func (_BaseAccessWallet *BaseAccessWalletSession) Publish(contentObj common.Address) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.Publish(&_BaseAccessWallet.TransactOpts, contentObj)
}

// Publish is a paid mutator transaction binding the contract method 0x2cf99422.
//
// Solidity: function publish(address contentObj) returns(bool)
func (_BaseAccessWallet *BaseAccessWalletTransactorSession) Publish(contentObj common.Address) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.Publish(&_BaseAccessWallet.TransactOpts, contentObj)
}

// PutMeta is a paid mutator transaction binding the contract method 0xe542b7cb.
//
// Solidity: function putMeta(bytes key, bytes value) returns()
func (_BaseAccessWallet *BaseAccessWalletTransactor) PutMeta(opts *bind.TransactOpts, key []byte, value []byte) (*types.Transaction, error) {
	return _BaseAccessWallet.contract.Transact(opts, "putMeta", key, value)
}

// PutMeta is a paid mutator transaction binding the contract method 0xe542b7cb.
//
// Solidity: function putMeta(bytes key, bytes value) returns()
func (_BaseAccessWallet *BaseAccessWalletSession) PutMeta(key []byte, value []byte) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.PutMeta(&_BaseAccessWallet.TransactOpts, key, value)
}

// PutMeta is a paid mutator transaction binding the contract method 0xe542b7cb.
//
// Solidity: function putMeta(bytes key, bytes value) returns()
func (_BaseAccessWallet *BaseAccessWalletTransactorSession) PutMeta(key []byte, value []byte) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.PutMeta(&_BaseAccessWallet.TransactOpts, key, value)
}

// RemoveContentType is a paid mutator transaction binding the contract method 0xfd089196.
//
// Solidity: function removeContentType(address content_type) returns(bool)
func (_BaseAccessWallet *BaseAccessWalletTransactor) RemoveContentType(opts *bind.TransactOpts, content_type common.Address) (*types.Transaction, error) {
	return _BaseAccessWallet.contract.Transact(opts, "removeContentType", content_type)
}

// RemoveContentType is a paid mutator transaction binding the contract method 0xfd089196.
//
// Solidity: function removeContentType(address content_type) returns(bool)
func (_BaseAccessWallet *BaseAccessWalletSession) RemoveContentType(content_type common.Address) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.RemoveContentType(&_BaseAccessWallet.TransactOpts, content_type)
}

// RemoveContentType is a paid mutator transaction binding the contract method 0xfd089196.
//
// Solidity: function removeContentType(address content_type) returns(bool)
func (_BaseAccessWallet *BaseAccessWalletTransactorSession) RemoveContentType(content_type common.Address) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.RemoveContentType(&_BaseAccessWallet.TransactOpts, content_type)
}

// SetAccessGroupRights is a paid mutator transaction binding the contract method 0xf17bda91.
//
// Solidity: function setAccessGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_BaseAccessWallet *BaseAccessWalletTransactor) SetAccessGroupRights(opts *bind.TransactOpts, group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessWallet.contract.Transact(opts, "setAccessGroupRights", group, access_type, access)
}

// SetAccessGroupRights is a paid mutator transaction binding the contract method 0xf17bda91.
//
// Solidity: function setAccessGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_BaseAccessWallet *BaseAccessWalletSession) SetAccessGroupRights(group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.SetAccessGroupRights(&_BaseAccessWallet.TransactOpts, group, access_type, access)
}

// SetAccessGroupRights is a paid mutator transaction binding the contract method 0xf17bda91.
//
// Solidity: function setAccessGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_BaseAccessWallet *BaseAccessWalletTransactorSession) SetAccessGroupRights(group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.SetAccessGroupRights(&_BaseAccessWallet.TransactOpts, group, access_type, access)
}

// SetAccessRights is a paid mutator transaction binding the contract method 0xb8ff1dba.
//
// Solidity: function setAccessRights() returns()
func (_BaseAccessWallet *BaseAccessWalletTransactor) SetAccessRights(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseAccessWallet.contract.Transact(opts, "setAccessRights")
}

// SetAccessRights is a paid mutator transaction binding the contract method 0xb8ff1dba.
//
// Solidity: function setAccessRights() returns()
func (_BaseAccessWallet *BaseAccessWalletSession) SetAccessRights() (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.SetAccessRights(&_BaseAccessWallet.TransactOpts)
}

// SetAccessRights is a paid mutator transaction binding the contract method 0xb8ff1dba.
//
// Solidity: function setAccessRights() returns()
func (_BaseAccessWallet *BaseAccessWalletTransactorSession) SetAccessRights() (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.SetAccessRights(&_BaseAccessWallet.TransactOpts)
}

// SetAddressKMS is a paid mutator transaction binding the contract method 0xc9e8e72d.
//
// Solidity: function setAddressKMS(address address_KMS) returns()
func (_BaseAccessWallet *BaseAccessWalletTransactor) SetAddressKMS(opts *bind.TransactOpts, address_KMS common.Address) (*types.Transaction, error) {
	return _BaseAccessWallet.contract.Transact(opts, "setAddressKMS", address_KMS)
}

// SetAddressKMS is a paid mutator transaction binding the contract method 0xc9e8e72d.
//
// Solidity: function setAddressKMS(address address_KMS) returns()
func (_BaseAccessWallet *BaseAccessWalletSession) SetAddressKMS(address_KMS common.Address) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.SetAddressKMS(&_BaseAccessWallet.TransactOpts, address_KMS)
}

// SetAddressKMS is a paid mutator transaction binding the contract method 0xc9e8e72d.
//
// Solidity: function setAddressKMS(address address_KMS) returns()
func (_BaseAccessWallet *BaseAccessWalletTransactorSession) SetAddressKMS(address_KMS common.Address) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.SetAddressKMS(&_BaseAccessWallet.TransactOpts, address_KMS)
}

// SetContentObjectRights is a paid mutator transaction binding the contract method 0x3def5140.
//
// Solidity: function setContentObjectRights(address obj, uint8 access_type, uint8 access) returns()
func (_BaseAccessWallet *BaseAccessWalletTransactor) SetContentObjectRights(opts *bind.TransactOpts, obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessWallet.contract.Transact(opts, "setContentObjectRights", obj, access_type, access)
}

// SetContentObjectRights is a paid mutator transaction binding the contract method 0x3def5140.
//
// Solidity: function setContentObjectRights(address obj, uint8 access_type, uint8 access) returns()
func (_BaseAccessWallet *BaseAccessWalletSession) SetContentObjectRights(obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.SetContentObjectRights(&_BaseAccessWallet.TransactOpts, obj, access_type, access)
}

// SetContentObjectRights is a paid mutator transaction binding the contract method 0x3def5140.
//
// Solidity: function setContentObjectRights(address obj, uint8 access_type, uint8 access) returns()
func (_BaseAccessWallet *BaseAccessWalletTransactorSession) SetContentObjectRights(obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.SetContentObjectRights(&_BaseAccessWallet.TransactOpts, obj, access_type, access)
}

// SetContentSpace is a paid mutator transaction binding the contract method 0x055af48f.
//
// Solidity: function setContentSpace(address content_space) returns()
func (_BaseAccessWallet *BaseAccessWalletTransactor) SetContentSpace(opts *bind.TransactOpts, content_space common.Address) (*types.Transaction, error) {
	return _BaseAccessWallet.contract.Transact(opts, "setContentSpace", content_space)
}

// SetContentSpace is a paid mutator transaction binding the contract method 0x055af48f.
//
// Solidity: function setContentSpace(address content_space) returns()
func (_BaseAccessWallet *BaseAccessWalletSession) SetContentSpace(content_space common.Address) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.SetContentSpace(&_BaseAccessWallet.TransactOpts, content_space)
}

// SetContentSpace is a paid mutator transaction binding the contract method 0x055af48f.
//
// Solidity: function setContentSpace(address content_space) returns()
func (_BaseAccessWallet *BaseAccessWalletTransactorSession) SetContentSpace(content_space common.Address) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.SetContentSpace(&_BaseAccessWallet.TransactOpts, content_space)
}

// SetContentTypeRights is a paid mutator transaction binding the contract method 0x8635adb5.
//
// Solidity: function setContentTypeRights(address obj, uint8 access_type, uint8 access) returns()
func (_BaseAccessWallet *BaseAccessWalletTransactor) SetContentTypeRights(opts *bind.TransactOpts, obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessWallet.contract.Transact(opts, "setContentTypeRights", obj, access_type, access)
}

// SetContentTypeRights is a paid mutator transaction binding the contract method 0x8635adb5.
//
// Solidity: function setContentTypeRights(address obj, uint8 access_type, uint8 access) returns()
func (_BaseAccessWallet *BaseAccessWalletSession) SetContentTypeRights(obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.SetContentTypeRights(&_BaseAccessWallet.TransactOpts, obj, access_type, access)
}

// SetContentTypeRights is a paid mutator transaction binding the contract method 0x8635adb5.
//
// Solidity: function setContentTypeRights(address obj, uint8 access_type, uint8 access) returns()
func (_BaseAccessWallet *BaseAccessWalletTransactorSession) SetContentTypeRights(obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.SetContentTypeRights(&_BaseAccessWallet.TransactOpts, obj, access_type, access)
}

// SetContractRights is a paid mutator transaction binding the contract method 0x224dcba0.
//
// Solidity: function setContractRights(address obj, uint8 access_type, uint8 access) returns()
func (_BaseAccessWallet *BaseAccessWalletTransactor) SetContractRights(opts *bind.TransactOpts, obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessWallet.contract.Transact(opts, "setContractRights", obj, access_type, access)
}

// SetContractRights is a paid mutator transaction binding the contract method 0x224dcba0.
//
// Solidity: function setContractRights(address obj, uint8 access_type, uint8 access) returns()
func (_BaseAccessWallet *BaseAccessWalletSession) SetContractRights(obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.SetContractRights(&_BaseAccessWallet.TransactOpts, obj, access_type, access)
}

// SetContractRights is a paid mutator transaction binding the contract method 0x224dcba0.
//
// Solidity: function setContractRights(address obj, uint8 access_type, uint8 access) returns()
func (_BaseAccessWallet *BaseAccessWalletTransactorSession) SetContractRights(obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.SetContractRights(&_BaseAccessWallet.TransactOpts, obj, access_type, access)
}

// SetEntityRights is a paid mutator transaction binding the contract method 0x5d7cf830.
//
// Solidity: function setEntityRights(uint8 indexType, address obj, uint8 access_type, uint8 access) returns()
func (_BaseAccessWallet *BaseAccessWalletTransactor) SetEntityRights(opts *bind.TransactOpts, indexType uint8, obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessWallet.contract.Transact(opts, "setEntityRights", indexType, obj, access_type, access)
}

// SetEntityRights is a paid mutator transaction binding the contract method 0x5d7cf830.
//
// Solidity: function setEntityRights(uint8 indexType, address obj, uint8 access_type, uint8 access) returns()
func (_BaseAccessWallet *BaseAccessWalletSession) SetEntityRights(indexType uint8, obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.SetEntityRights(&_BaseAccessWallet.TransactOpts, indexType, obj, access_type, access)
}

// SetEntityRights is a paid mutator transaction binding the contract method 0x5d7cf830.
//
// Solidity: function setEntityRights(uint8 indexType, address obj, uint8 access_type, uint8 access) returns()
func (_BaseAccessWallet *BaseAccessWalletTransactorSession) SetEntityRights(indexType uint8, obj common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.SetEntityRights(&_BaseAccessWallet.TransactOpts, indexType, obj, access_type, access)
}

// SetGroupRights is a paid mutator transaction binding the contract method 0x22e564eb.
//
// Solidity: function setGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_BaseAccessWallet *BaseAccessWalletTransactor) SetGroupRights(opts *bind.TransactOpts, group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessWallet.contract.Transact(opts, "setGroupRights", group, access_type, access)
}

// SetGroupRights is a paid mutator transaction binding the contract method 0x22e564eb.
//
// Solidity: function setGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_BaseAccessWallet *BaseAccessWalletSession) SetGroupRights(group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.SetGroupRights(&_BaseAccessWallet.TransactOpts, group, access_type, access)
}

// SetGroupRights is a paid mutator transaction binding the contract method 0x22e564eb.
//
// Solidity: function setGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_BaseAccessWallet *BaseAccessWalletTransactorSession) SetGroupRights(group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.SetGroupRights(&_BaseAccessWallet.TransactOpts, group, access_type, access)
}

// SetLibraryRights is a paid mutator transaction binding the contract method 0x7cbb7bf2.
//
// Solidity: function setLibraryRights(address lib, uint8 access_type, uint8 access) returns()
func (_BaseAccessWallet *BaseAccessWalletTransactor) SetLibraryRights(opts *bind.TransactOpts, lib common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessWallet.contract.Transact(opts, "setLibraryRights", lib, access_type, access)
}

// SetLibraryRights is a paid mutator transaction binding the contract method 0x7cbb7bf2.
//
// Solidity: function setLibraryRights(address lib, uint8 access_type, uint8 access) returns()
func (_BaseAccessWallet *BaseAccessWalletSession) SetLibraryRights(lib common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.SetLibraryRights(&_BaseAccessWallet.TransactOpts, lib, access_type, access)
}

// SetLibraryRights is a paid mutator transaction binding the contract method 0x7cbb7bf2.
//
// Solidity: function setLibraryRights(address lib, uint8 access_type, uint8 access) returns()
func (_BaseAccessWallet *BaseAccessWalletTransactorSession) SetLibraryRights(lib common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.SetLibraryRights(&_BaseAccessWallet.TransactOpts, lib, access_type, access)
}

// SetRights is a paid mutator transaction binding the contract method 0x0fe1b5a2.
//
// Solidity: function setRights(address stakeholder, uint8 access_type, uint8 access) returns()
func (_BaseAccessWallet *BaseAccessWalletTransactor) SetRights(opts *bind.TransactOpts, stakeholder common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessWallet.contract.Transact(opts, "setRights", stakeholder, access_type, access)
}

// SetRights is a paid mutator transaction binding the contract method 0x0fe1b5a2.
//
// Solidity: function setRights(address stakeholder, uint8 access_type, uint8 access) returns()
func (_BaseAccessWallet *BaseAccessWalletSession) SetRights(stakeholder common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.SetRights(&_BaseAccessWallet.TransactOpts, stakeholder, access_type, access)
}

// SetRights is a paid mutator transaction binding the contract method 0x0fe1b5a2.
//
// Solidity: function setRights(address stakeholder, uint8 access_type, uint8 access) returns()
func (_BaseAccessWallet *BaseAccessWalletTransactorSession) SetRights(stakeholder common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.SetRights(&_BaseAccessWallet.TransactOpts, stakeholder, access_type, access)
}

// SetVisibility is a paid mutator transaction binding the contract method 0xaa024e8b.
//
// Solidity: function setVisibility(uint8 _visibility_code) returns()
func (_BaseAccessWallet *BaseAccessWalletTransactor) SetVisibility(opts *bind.TransactOpts, _visibility_code uint8) (*types.Transaction, error) {
	return _BaseAccessWallet.contract.Transact(opts, "setVisibility", _visibility_code)
}

// SetVisibility is a paid mutator transaction binding the contract method 0xaa024e8b.
//
// Solidity: function setVisibility(uint8 _visibility_code) returns()
func (_BaseAccessWallet *BaseAccessWalletSession) SetVisibility(_visibility_code uint8) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.SetVisibility(&_BaseAccessWallet.TransactOpts, _visibility_code)
}

// SetVisibility is a paid mutator transaction binding the contract method 0xaa024e8b.
//
// Solidity: function setVisibility(uint8 _visibility_code) returns()
func (_BaseAccessWallet *BaseAccessWalletTransactorSession) SetVisibility(_visibility_code uint8) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.SetVisibility(&_BaseAccessWallet.TransactOpts, _visibility_code)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseAccessWallet *BaseAccessWalletTransactor) TransferCreatorship(opts *bind.TransactOpts, newCreator common.Address) (*types.Transaction, error) {
	return _BaseAccessWallet.contract.Transact(opts, "transferCreatorship", newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseAccessWallet *BaseAccessWalletSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.TransferCreatorship(&_BaseAccessWallet.TransactOpts, newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseAccessWallet *BaseAccessWalletTransactorSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.TransferCreatorship(&_BaseAccessWallet.TransactOpts, newCreator)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseAccessWallet *BaseAccessWalletTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _BaseAccessWallet.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseAccessWallet *BaseAccessWalletSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.TransferOwnership(&_BaseAccessWallet.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseAccessWallet *BaseAccessWalletTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.TransferOwnership(&_BaseAccessWallet.TransactOpts, newOwner)
}

// UpdateRequest is a paid mutator transaction binding the contract method 0xc287e0ed.
//
// Solidity: function updateRequest() returns()
func (_BaseAccessWallet *BaseAccessWalletTransactor) UpdateRequest(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseAccessWallet.contract.Transact(opts, "updateRequest")
}

// UpdateRequest is a paid mutator transaction binding the contract method 0xc287e0ed.
//
// Solidity: function updateRequest() returns()
func (_BaseAccessWallet *BaseAccessWalletSession) UpdateRequest() (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.UpdateRequest(&_BaseAccessWallet.TransactOpts)
}

// UpdateRequest is a paid mutator transaction binding the contract method 0xc287e0ed.
//
// Solidity: function updateRequest() returns()
func (_BaseAccessWallet *BaseAccessWalletTransactorSession) UpdateRequest() (*types.Transaction, error) {
	return _BaseAccessWallet.Contract.UpdateRequest(&_BaseAccessWallet.TransactOpts)
}

// BaseAccessWalletAccessRequestV3Iterator is returned from FilterAccessRequestV3 and is used to iterate over the raw logs and unpacked data for AccessRequestV3 events raised by the BaseAccessWallet contract.
type BaseAccessWalletAccessRequestV3Iterator struct {
	Event *BaseAccessWalletAccessRequestV3 // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseAccessWalletAccessRequestV3Iterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseAccessWalletAccessRequestV3)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseAccessWalletAccessRequestV3)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseAccessWalletAccessRequestV3Iterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseAccessWalletAccessRequestV3Iterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseAccessWalletAccessRequestV3 represents a AccessRequestV3 event raised by the BaseAccessWallet contract.
type BaseAccessWalletAccessRequestV3 struct {
	RequestNonce     *big.Int
	ParentAddress    common.Address
	ContextHash      [32]byte
	Accessor         common.Address
	RequestTimestamp *big.Int
	Raw              types.Log // Blockchain specific contextual infos
}

// FilterAccessRequestV3 is a free log retrieval operation binding the contract event 0x545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c7.
//
// Solidity: event AccessRequestV3(uint256 requestNonce, address parentAddress, bytes32 contextHash, address accessor, uint256 requestTimestamp)
func (_BaseAccessWallet *BaseAccessWalletFilterer) FilterAccessRequestV3(opts *bind.FilterOpts) (*BaseAccessWalletAccessRequestV3Iterator, error) {

	logs, sub, err := _BaseAccessWallet.contract.FilterLogs(opts, "AccessRequestV3")
	if err != nil {
		return nil, err
	}
	return &BaseAccessWalletAccessRequestV3Iterator{contract: _BaseAccessWallet.contract, event: "AccessRequestV3", logs: logs, sub: sub}, nil
}

// WatchAccessRequestV3 is a free log subscription operation binding the contract event 0x545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c7.
//
// Solidity: event AccessRequestV3(uint256 requestNonce, address parentAddress, bytes32 contextHash, address accessor, uint256 requestTimestamp)
func (_BaseAccessWallet *BaseAccessWalletFilterer) WatchAccessRequestV3(opts *bind.WatchOpts, sink chan<- *BaseAccessWalletAccessRequestV3) (event.Subscription, error) {

	logs, sub, err := _BaseAccessWallet.contract.WatchLogs(opts, "AccessRequestV3")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseAccessWalletAccessRequestV3)
				if err := _BaseAccessWallet.contract.UnpackLog(event, "AccessRequestV3", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAccessRequestV3 is a log parse operation binding the contract event 0x545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c7.
//
// Solidity: event AccessRequestV3(uint256 requestNonce, address parentAddress, bytes32 contextHash, address accessor, uint256 requestTimestamp)
func (_BaseAccessWallet *BaseAccessWalletFilterer) ParseAccessRequestV3(log types.Log) (*BaseAccessWalletAccessRequestV3, error) {
	event := new(BaseAccessWalletAccessRequestV3)
	if err := _BaseAccessWallet.contract.UnpackLog(event, "AccessRequestV3", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseAccessWalletCommitPendingIterator is returned from FilterCommitPending and is used to iterate over the raw logs and unpacked data for CommitPending events raised by the BaseAccessWallet contract.
type BaseAccessWalletCommitPendingIterator struct {
	Event *BaseAccessWalletCommitPending // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseAccessWalletCommitPendingIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseAccessWalletCommitPending)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseAccessWalletCommitPending)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseAccessWalletCommitPendingIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseAccessWalletCommitPendingIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseAccessWalletCommitPending represents a CommitPending event raised by the BaseAccessWallet contract.
type BaseAccessWalletCommitPending struct {
	SpaceAddress  common.Address
	ParentAddress common.Address
	ObjectHash    string
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterCommitPending is a free log retrieval operation binding the contract event 0xb3ac059d88af6016aca1aebb7b3e796f2e7420435c59c563687814e9b85daa75.
//
// Solidity: event CommitPending(address spaceAddress, address parentAddress, string objectHash)
func (_BaseAccessWallet *BaseAccessWalletFilterer) FilterCommitPending(opts *bind.FilterOpts) (*BaseAccessWalletCommitPendingIterator, error) {

	logs, sub, err := _BaseAccessWallet.contract.FilterLogs(opts, "CommitPending")
	if err != nil {
		return nil, err
	}
	return &BaseAccessWalletCommitPendingIterator{contract: _BaseAccessWallet.contract, event: "CommitPending", logs: logs, sub: sub}, nil
}

// WatchCommitPending is a free log subscription operation binding the contract event 0xb3ac059d88af6016aca1aebb7b3e796f2e7420435c59c563687814e9b85daa75.
//
// Solidity: event CommitPending(address spaceAddress, address parentAddress, string objectHash)
func (_BaseAccessWallet *BaseAccessWalletFilterer) WatchCommitPending(opts *bind.WatchOpts, sink chan<- *BaseAccessWalletCommitPending) (event.Subscription, error) {

	logs, sub, err := _BaseAccessWallet.contract.WatchLogs(opts, "CommitPending")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseAccessWalletCommitPending)
				if err := _BaseAccessWallet.contract.UnpackLog(event, "CommitPending", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseCommitPending is a log parse operation binding the contract event 0xb3ac059d88af6016aca1aebb7b3e796f2e7420435c59c563687814e9b85daa75.
//
// Solidity: event CommitPending(address spaceAddress, address parentAddress, string objectHash)
func (_BaseAccessWallet *BaseAccessWalletFilterer) ParseCommitPending(log types.Log) (*BaseAccessWalletCommitPending, error) {
	event := new(BaseAccessWalletCommitPending)
	if err := _BaseAccessWallet.contract.UnpackLog(event, "CommitPending", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseAccessWalletContentTypeAddedIterator is returned from FilterContentTypeAdded and is used to iterate over the raw logs and unpacked data for ContentTypeAdded events raised by the BaseAccessWallet contract.
type BaseAccessWalletContentTypeAddedIterator struct {
	Event *BaseAccessWalletContentTypeAdded // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseAccessWalletContentTypeAddedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseAccessWalletContentTypeAdded)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseAccessWalletContentTypeAdded)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseAccessWalletContentTypeAddedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseAccessWalletContentTypeAddedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseAccessWalletContentTypeAdded represents a ContentTypeAdded event raised by the BaseAccessWallet contract.
type BaseAccessWalletContentTypeAdded struct {
	ContentType     common.Address
	ContentContract common.Address
	Raw             types.Log // Blockchain specific contextual infos
}

// FilterContentTypeAdded is a free log retrieval operation binding the contract event 0x280016f7418306a55542432120fd1a239ef9fcc1a92694d8d44ca76be0249ea7.
//
// Solidity: event ContentTypeAdded(address contentType, address contentContract)
func (_BaseAccessWallet *BaseAccessWalletFilterer) FilterContentTypeAdded(opts *bind.FilterOpts) (*BaseAccessWalletContentTypeAddedIterator, error) {

	logs, sub, err := _BaseAccessWallet.contract.FilterLogs(opts, "ContentTypeAdded")
	if err != nil {
		return nil, err
	}
	return &BaseAccessWalletContentTypeAddedIterator{contract: _BaseAccessWallet.contract, event: "ContentTypeAdded", logs: logs, sub: sub}, nil
}

// WatchContentTypeAdded is a free log subscription operation binding the contract event 0x280016f7418306a55542432120fd1a239ef9fcc1a92694d8d44ca76be0249ea7.
//
// Solidity: event ContentTypeAdded(address contentType, address contentContract)
func (_BaseAccessWallet *BaseAccessWalletFilterer) WatchContentTypeAdded(opts *bind.WatchOpts, sink chan<- *BaseAccessWalletContentTypeAdded) (event.Subscription, error) {

	logs, sub, err := _BaseAccessWallet.contract.WatchLogs(opts, "ContentTypeAdded")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseAccessWalletContentTypeAdded)
				if err := _BaseAccessWallet.contract.UnpackLog(event, "ContentTypeAdded", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseContentTypeAdded is a log parse operation binding the contract event 0x280016f7418306a55542432120fd1a239ef9fcc1a92694d8d44ca76be0249ea7.
//
// Solidity: event ContentTypeAdded(address contentType, address contentContract)
func (_BaseAccessWallet *BaseAccessWalletFilterer) ParseContentTypeAdded(log types.Log) (*BaseAccessWalletContentTypeAdded, error) {
	event := new(BaseAccessWalletContentTypeAdded)
	if err := _BaseAccessWallet.contract.UnpackLog(event, "ContentTypeAdded", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseAccessWalletContentTypeRemovedIterator is returned from FilterContentTypeRemoved and is used to iterate over the raw logs and unpacked data for ContentTypeRemoved events raised by the BaseAccessWallet contract.
type BaseAccessWalletContentTypeRemovedIterator struct {
	Event *BaseAccessWalletContentTypeRemoved // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseAccessWalletContentTypeRemovedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseAccessWalletContentTypeRemoved)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseAccessWalletContentTypeRemoved)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseAccessWalletContentTypeRemovedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseAccessWalletContentTypeRemovedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseAccessWalletContentTypeRemoved represents a ContentTypeRemoved event raised by the BaseAccessWallet contract.
type BaseAccessWalletContentTypeRemoved struct {
	ContentType common.Address
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterContentTypeRemoved is a free log retrieval operation binding the contract event 0xd41375b9d347dfe722f90a780731abd23b7855f9cf14ea7063c4cab5f9ae58e2.
//
// Solidity: event ContentTypeRemoved(address contentType)
func (_BaseAccessWallet *BaseAccessWalletFilterer) FilterContentTypeRemoved(opts *bind.FilterOpts) (*BaseAccessWalletContentTypeRemovedIterator, error) {

	logs, sub, err := _BaseAccessWallet.contract.FilterLogs(opts, "ContentTypeRemoved")
	if err != nil {
		return nil, err
	}
	return &BaseAccessWalletContentTypeRemovedIterator{contract: _BaseAccessWallet.contract, event: "ContentTypeRemoved", logs: logs, sub: sub}, nil
}

// WatchContentTypeRemoved is a free log subscription operation binding the contract event 0xd41375b9d347dfe722f90a780731abd23b7855f9cf14ea7063c4cab5f9ae58e2.
//
// Solidity: event ContentTypeRemoved(address contentType)
func (_BaseAccessWallet *BaseAccessWalletFilterer) WatchContentTypeRemoved(opts *bind.WatchOpts, sink chan<- *BaseAccessWalletContentTypeRemoved) (event.Subscription, error) {

	logs, sub, err := _BaseAccessWallet.contract.WatchLogs(opts, "ContentTypeRemoved")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseAccessWalletContentTypeRemoved)
				if err := _BaseAccessWallet.contract.UnpackLog(event, "ContentTypeRemoved", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseContentTypeRemoved is a log parse operation binding the contract event 0xd41375b9d347dfe722f90a780731abd23b7855f9cf14ea7063c4cab5f9ae58e2.
//
// Solidity: event ContentTypeRemoved(address contentType)
func (_BaseAccessWallet *BaseAccessWalletFilterer) ParseContentTypeRemoved(log types.Log) (*BaseAccessWalletContentTypeRemoved, error) {
	event := new(BaseAccessWalletContentTypeRemoved)
	if err := _BaseAccessWallet.contract.UnpackLog(event, "ContentTypeRemoved", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseAccessWalletExecStatusIterator is returned from FilterExecStatus and is used to iterate over the raw logs and unpacked data for ExecStatus events raised by the BaseAccessWallet contract.
type BaseAccessWalletExecStatusIterator struct {
	Event *BaseAccessWalletExecStatus // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseAccessWalletExecStatusIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseAccessWalletExecStatus)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseAccessWalletExecStatus)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseAccessWalletExecStatusIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseAccessWalletExecStatusIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseAccessWalletExecStatus represents a ExecStatus event raised by the BaseAccessWallet contract.
type BaseAccessWalletExecStatus struct {
	Guarantor common.Address
	Code      *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterExecStatus is a free log retrieval operation binding the contract event 0x583d8312ef7016406c7ea8ba9796b9e55ac1fdc22455754cbc93869509faefad.
//
// Solidity: event ExecStatus(address guarantor, int256 code)
func (_BaseAccessWallet *BaseAccessWalletFilterer) FilterExecStatus(opts *bind.FilterOpts) (*BaseAccessWalletExecStatusIterator, error) {

	logs, sub, err := _BaseAccessWallet.contract.FilterLogs(opts, "ExecStatus")
	if err != nil {
		return nil, err
	}
	return &BaseAccessWalletExecStatusIterator{contract: _BaseAccessWallet.contract, event: "ExecStatus", logs: logs, sub: sub}, nil
}

// WatchExecStatus is a free log subscription operation binding the contract event 0x583d8312ef7016406c7ea8ba9796b9e55ac1fdc22455754cbc93869509faefad.
//
// Solidity: event ExecStatus(address guarantor, int256 code)
func (_BaseAccessWallet *BaseAccessWalletFilterer) WatchExecStatus(opts *bind.WatchOpts, sink chan<- *BaseAccessWalletExecStatus) (event.Subscription, error) {

	logs, sub, err := _BaseAccessWallet.contract.WatchLogs(opts, "ExecStatus")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseAccessWalletExecStatus)
				if err := _BaseAccessWallet.contract.UnpackLog(event, "ExecStatus", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseExecStatus is a log parse operation binding the contract event 0x583d8312ef7016406c7ea8ba9796b9e55ac1fdc22455754cbc93869509faefad.
//
// Solidity: event ExecStatus(address guarantor, int256 code)
func (_BaseAccessWallet *BaseAccessWalletFilterer) ParseExecStatus(log types.Log) (*BaseAccessWalletExecStatus, error) {
	event := new(BaseAccessWalletExecStatus)
	if err := _BaseAccessWallet.contract.UnpackLog(event, "ExecStatus", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseAccessWalletObjectMetaChangedIterator is returned from FilterObjectMetaChanged and is used to iterate over the raw logs and unpacked data for ObjectMetaChanged events raised by the BaseAccessWallet contract.
type BaseAccessWalletObjectMetaChangedIterator struct {
	Event *BaseAccessWalletObjectMetaChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseAccessWalletObjectMetaChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseAccessWalletObjectMetaChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseAccessWalletObjectMetaChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseAccessWalletObjectMetaChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseAccessWalletObjectMetaChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseAccessWalletObjectMetaChanged represents a ObjectMetaChanged event raised by the BaseAccessWallet contract.
type BaseAccessWalletObjectMetaChanged struct {
	Key []byte
	Raw types.Log // Blockchain specific contextual infos
}

// FilterObjectMetaChanged is a free log retrieval operation binding the contract event 0xe2b310ec9dabdc05229a748e07666c3bc9c46c6ef465cce30d0aa3aa64a0644c.
//
// Solidity: event ObjectMetaChanged(bytes key)
func (_BaseAccessWallet *BaseAccessWalletFilterer) FilterObjectMetaChanged(opts *bind.FilterOpts) (*BaseAccessWalletObjectMetaChangedIterator, error) {

	logs, sub, err := _BaseAccessWallet.contract.FilterLogs(opts, "ObjectMetaChanged")
	if err != nil {
		return nil, err
	}
	return &BaseAccessWalletObjectMetaChangedIterator{contract: _BaseAccessWallet.contract, event: "ObjectMetaChanged", logs: logs, sub: sub}, nil
}

// WatchObjectMetaChanged is a free log subscription operation binding the contract event 0xe2b310ec9dabdc05229a748e07666c3bc9c46c6ef465cce30d0aa3aa64a0644c.
//
// Solidity: event ObjectMetaChanged(bytes key)
func (_BaseAccessWallet *BaseAccessWalletFilterer) WatchObjectMetaChanged(opts *bind.WatchOpts, sink chan<- *BaseAccessWalletObjectMetaChanged) (event.Subscription, error) {

	logs, sub, err := _BaseAccessWallet.contract.WatchLogs(opts, "ObjectMetaChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseAccessWalletObjectMetaChanged)
				if err := _BaseAccessWallet.contract.UnpackLog(event, "ObjectMetaChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseObjectMetaChanged is a log parse operation binding the contract event 0xe2b310ec9dabdc05229a748e07666c3bc9c46c6ef465cce30d0aa3aa64a0644c.
//
// Solidity: event ObjectMetaChanged(bytes key)
func (_BaseAccessWallet *BaseAccessWalletFilterer) ParseObjectMetaChanged(log types.Log) (*BaseAccessWalletObjectMetaChanged, error) {
	event := new(BaseAccessWalletObjectMetaChanged)
	if err := _BaseAccessWallet.contract.UnpackLog(event, "ObjectMetaChanged", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseAccessWalletRightsChangedIterator is returned from FilterRightsChanged and is used to iterate over the raw logs and unpacked data for RightsChanged events raised by the BaseAccessWallet contract.
type BaseAccessWalletRightsChangedIterator struct {
	Event *BaseAccessWalletRightsChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseAccessWalletRightsChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseAccessWalletRightsChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseAccessWalletRightsChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseAccessWalletRightsChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseAccessWalletRightsChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseAccessWalletRightsChanged represents a RightsChanged event raised by the BaseAccessWallet contract.
type BaseAccessWalletRightsChanged struct {
	Principal common.Address
	Entity    common.Address
	Aggregate uint8
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterRightsChanged is a free log retrieval operation binding the contract event 0x23dcae6acc296731e3679d01e7cd963988e5a372850a0a1db2b9b01539e19ff4.
//
// Solidity: event RightsChanged(address principal, address entity, uint8 aggregate)
func (_BaseAccessWallet *BaseAccessWalletFilterer) FilterRightsChanged(opts *bind.FilterOpts) (*BaseAccessWalletRightsChangedIterator, error) {

	logs, sub, err := _BaseAccessWallet.contract.FilterLogs(opts, "RightsChanged")
	if err != nil {
		return nil, err
	}
	return &BaseAccessWalletRightsChangedIterator{contract: _BaseAccessWallet.contract, event: "RightsChanged", logs: logs, sub: sub}, nil
}

// WatchRightsChanged is a free log subscription operation binding the contract event 0x23dcae6acc296731e3679d01e7cd963988e5a372850a0a1db2b9b01539e19ff4.
//
// Solidity: event RightsChanged(address principal, address entity, uint8 aggregate)
func (_BaseAccessWallet *BaseAccessWalletFilterer) WatchRightsChanged(opts *bind.WatchOpts, sink chan<- *BaseAccessWalletRightsChanged) (event.Subscription, error) {

	logs, sub, err := _BaseAccessWallet.contract.WatchLogs(opts, "RightsChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseAccessWalletRightsChanged)
				if err := _BaseAccessWallet.contract.UnpackLog(event, "RightsChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRightsChanged is a log parse operation binding the contract event 0x23dcae6acc296731e3679d01e7cd963988e5a372850a0a1db2b9b01539e19ff4.
//
// Solidity: event RightsChanged(address principal, address entity, uint8 aggregate)
func (_BaseAccessWallet *BaseAccessWalletFilterer) ParseRightsChanged(log types.Log) (*BaseAccessWalletRightsChanged, error) {
	event := new(BaseAccessWalletRightsChanged)
	if err := _BaseAccessWallet.contract.UnpackLog(event, "RightsChanged", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseAccessWalletUpdateRequestIterator is returned from FilterUpdateRequest and is used to iterate over the raw logs and unpacked data for UpdateRequest events raised by the BaseAccessWallet contract.
type BaseAccessWalletUpdateRequestIterator struct {
	Event *BaseAccessWalletUpdateRequest // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseAccessWalletUpdateRequestIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseAccessWalletUpdateRequest)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseAccessWalletUpdateRequest)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseAccessWalletUpdateRequestIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseAccessWalletUpdateRequestIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseAccessWalletUpdateRequest represents a UpdateRequest event raised by the BaseAccessWallet contract.
type BaseAccessWalletUpdateRequest struct {
	ObjectHash string
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterUpdateRequest is a free log retrieval operation binding the contract event 0x403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b65.
//
// Solidity: event UpdateRequest(string objectHash)
func (_BaseAccessWallet *BaseAccessWalletFilterer) FilterUpdateRequest(opts *bind.FilterOpts) (*BaseAccessWalletUpdateRequestIterator, error) {

	logs, sub, err := _BaseAccessWallet.contract.FilterLogs(opts, "UpdateRequest")
	if err != nil {
		return nil, err
	}
	return &BaseAccessWalletUpdateRequestIterator{contract: _BaseAccessWallet.contract, event: "UpdateRequest", logs: logs, sub: sub}, nil
}

// WatchUpdateRequest is a free log subscription operation binding the contract event 0x403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b65.
//
// Solidity: event UpdateRequest(string objectHash)
func (_BaseAccessWallet *BaseAccessWalletFilterer) WatchUpdateRequest(opts *bind.WatchOpts, sink chan<- *BaseAccessWalletUpdateRequest) (event.Subscription, error) {

	logs, sub, err := _BaseAccessWallet.contract.WatchLogs(opts, "UpdateRequest")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseAccessWalletUpdateRequest)
				if err := _BaseAccessWallet.contract.UnpackLog(event, "UpdateRequest", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseUpdateRequest is a log parse operation binding the contract event 0x403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b65.
//
// Solidity: event UpdateRequest(string objectHash)
func (_BaseAccessWallet *BaseAccessWalletFilterer) ParseUpdateRequest(log types.Log) (*BaseAccessWalletUpdateRequest, error) {
	event := new(BaseAccessWalletUpdateRequest)
	if err := _BaseAccessWallet.contract.UnpackLog(event, "UpdateRequest", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseAccessWalletVersionConfirmIterator is returned from FilterVersionConfirm and is used to iterate over the raw logs and unpacked data for VersionConfirm events raised by the BaseAccessWallet contract.
type BaseAccessWalletVersionConfirmIterator struct {
	Event *BaseAccessWalletVersionConfirm // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseAccessWalletVersionConfirmIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseAccessWalletVersionConfirm)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseAccessWalletVersionConfirm)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseAccessWalletVersionConfirmIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseAccessWalletVersionConfirmIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseAccessWalletVersionConfirm represents a VersionConfirm event raised by the BaseAccessWallet contract.
type BaseAccessWalletVersionConfirm struct {
	SpaceAddress  common.Address
	ParentAddress common.Address
	ObjectHash    string
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterVersionConfirm is a free log retrieval operation binding the contract event 0xbdaffceabaaa783aa187fea6c2e815541d29e2290bf3f7d3c4fc53672b68f7df.
//
// Solidity: event VersionConfirm(address spaceAddress, address parentAddress, string objectHash)
func (_BaseAccessWallet *BaseAccessWalletFilterer) FilterVersionConfirm(opts *bind.FilterOpts) (*BaseAccessWalletVersionConfirmIterator, error) {

	logs, sub, err := _BaseAccessWallet.contract.FilterLogs(opts, "VersionConfirm")
	if err != nil {
		return nil, err
	}
	return &BaseAccessWalletVersionConfirmIterator{contract: _BaseAccessWallet.contract, event: "VersionConfirm", logs: logs, sub: sub}, nil
}

// WatchVersionConfirm is a free log subscription operation binding the contract event 0xbdaffceabaaa783aa187fea6c2e815541d29e2290bf3f7d3c4fc53672b68f7df.
//
// Solidity: event VersionConfirm(address spaceAddress, address parentAddress, string objectHash)
func (_BaseAccessWallet *BaseAccessWalletFilterer) WatchVersionConfirm(opts *bind.WatchOpts, sink chan<- *BaseAccessWalletVersionConfirm) (event.Subscription, error) {

	logs, sub, err := _BaseAccessWallet.contract.WatchLogs(opts, "VersionConfirm")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseAccessWalletVersionConfirm)
				if err := _BaseAccessWallet.contract.UnpackLog(event, "VersionConfirm", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseVersionConfirm is a log parse operation binding the contract event 0xbdaffceabaaa783aa187fea6c2e815541d29e2290bf3f7d3c4fc53672b68f7df.
//
// Solidity: event VersionConfirm(address spaceAddress, address parentAddress, string objectHash)
func (_BaseAccessWallet *BaseAccessWalletFilterer) ParseVersionConfirm(log types.Log) (*BaseAccessWalletVersionConfirm, error) {
	event := new(BaseAccessWalletVersionConfirm)
	if err := _BaseAccessWallet.contract.UnpackLog(event, "VersionConfirm", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseAccessWalletVersionDeleteIterator is returned from FilterVersionDelete and is used to iterate over the raw logs and unpacked data for VersionDelete events raised by the BaseAccessWallet contract.
type BaseAccessWalletVersionDeleteIterator struct {
	Event *BaseAccessWalletVersionDelete // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseAccessWalletVersionDeleteIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseAccessWalletVersionDelete)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseAccessWalletVersionDelete)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseAccessWalletVersionDeleteIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseAccessWalletVersionDeleteIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseAccessWalletVersionDelete represents a VersionDelete event raised by the BaseAccessWallet contract.
type BaseAccessWalletVersionDelete struct {
	SpaceAddress common.Address
	VersionHash  string
	Index        *big.Int
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterVersionDelete is a free log retrieval operation binding the contract event 0x238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51.
//
// Solidity: event VersionDelete(address spaceAddress, string versionHash, int256 index)
func (_BaseAccessWallet *BaseAccessWalletFilterer) FilterVersionDelete(opts *bind.FilterOpts) (*BaseAccessWalletVersionDeleteIterator, error) {

	logs, sub, err := _BaseAccessWallet.contract.FilterLogs(opts, "VersionDelete")
	if err != nil {
		return nil, err
	}
	return &BaseAccessWalletVersionDeleteIterator{contract: _BaseAccessWallet.contract, event: "VersionDelete", logs: logs, sub: sub}, nil
}

// WatchVersionDelete is a free log subscription operation binding the contract event 0x238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51.
//
// Solidity: event VersionDelete(address spaceAddress, string versionHash, int256 index)
func (_BaseAccessWallet *BaseAccessWalletFilterer) WatchVersionDelete(opts *bind.WatchOpts, sink chan<- *BaseAccessWalletVersionDelete) (event.Subscription, error) {

	logs, sub, err := _BaseAccessWallet.contract.WatchLogs(opts, "VersionDelete")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseAccessWalletVersionDelete)
				if err := _BaseAccessWallet.contract.UnpackLog(event, "VersionDelete", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseVersionDelete is a log parse operation binding the contract event 0x238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51.
//
// Solidity: event VersionDelete(address spaceAddress, string versionHash, int256 index)
func (_BaseAccessWallet *BaseAccessWalletFilterer) ParseVersionDelete(log types.Log) (*BaseAccessWalletVersionDelete, error) {
	event := new(BaseAccessWalletVersionDelete)
	if err := _BaseAccessWallet.contract.UnpackLog(event, "VersionDelete", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseAccessWalletVisibilityChangedIterator is returned from FilterVisibilityChanged and is used to iterate over the raw logs and unpacked data for VisibilityChanged events raised by the BaseAccessWallet contract.
type BaseAccessWalletVisibilityChangedIterator struct {
	Event *BaseAccessWalletVisibilityChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseAccessWalletVisibilityChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseAccessWalletVisibilityChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseAccessWalletVisibilityChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseAccessWalletVisibilityChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseAccessWalletVisibilityChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseAccessWalletVisibilityChanged represents a VisibilityChanged event raised by the BaseAccessWallet contract.
type BaseAccessWalletVisibilityChanged struct {
	ContentSpace  common.Address
	ParentAddress common.Address
	Visibility    uint8
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterVisibilityChanged is a free log retrieval operation binding the contract event 0x369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500.
//
// Solidity: event VisibilityChanged(address contentSpace, address parentAddress, uint8 visibility)
func (_BaseAccessWallet *BaseAccessWalletFilterer) FilterVisibilityChanged(opts *bind.FilterOpts) (*BaseAccessWalletVisibilityChangedIterator, error) {

	logs, sub, err := _BaseAccessWallet.contract.FilterLogs(opts, "VisibilityChanged")
	if err != nil {
		return nil, err
	}
	return &BaseAccessWalletVisibilityChangedIterator{contract: _BaseAccessWallet.contract, event: "VisibilityChanged", logs: logs, sub: sub}, nil
}

// WatchVisibilityChanged is a free log subscription operation binding the contract event 0x369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500.
//
// Solidity: event VisibilityChanged(address contentSpace, address parentAddress, uint8 visibility)
func (_BaseAccessWallet *BaseAccessWalletFilterer) WatchVisibilityChanged(opts *bind.WatchOpts, sink chan<- *BaseAccessWalletVisibilityChanged) (event.Subscription, error) {

	logs, sub, err := _BaseAccessWallet.contract.WatchLogs(opts, "VisibilityChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseAccessWalletVisibilityChanged)
				if err := _BaseAccessWallet.contract.UnpackLog(event, "VisibilityChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseVisibilityChanged is a log parse operation binding the contract event 0x369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500.
//
// Solidity: event VisibilityChanged(address contentSpace, address parentAddress, uint8 visibility)
func (_BaseAccessWallet *BaseAccessWalletFilterer) ParseVisibilityChanged(log types.Log) (*BaseAccessWalletVisibilityChanged, error) {
	event := new(BaseAccessWalletVisibilityChanged)
	if err := _BaseAccessWallet.contract.UnpackLog(event, "VisibilityChanged", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseAccessWalletFactoryABI is the input ABI used to generate the binding from.
const BaseAccessWalletFactoryABI = "[{\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"_spaceAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentSpace\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createAccessWallet\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newCreator\",\"type\":\"address\"}],\"name\":\"transferCreatorship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"versionAPI\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// BaseAccessWalletFactoryFuncSigs maps the 4-byte function signature to its string representation.
var BaseAccessWalletFactoryFuncSigs = map[string]string{
	"af570c04": "contentSpace()",
	"7708bc41": "createAccessWallet()",
	"02d05d3f": "creator()",
	"41c0e1b5": "kill()",
	"8da5cb5b": "owner()",
	"6d2e4b1b": "transferCreatorship(address)",
	"f2fde38b": "transferOwnership(address)",
	"54fd4d50": "version()",
	"5f4fcae1": "versionAPI()",
}

// BaseAccessWalletFactoryBin is the compiled bytecode used for deploying new contracts.
var BaseAccessWalletFactoryBin = ""

// DeployBaseAccessWalletFactory deploys a new Ethereum contract, binding an instance of BaseAccessWalletFactory to it.
func DeployBaseAccessWalletFactory(auth *bind.TransactOpts, backend bind.ContractBackend, _spaceAddr common.Address) (common.Address, *types.Transaction, *BaseAccessWalletFactory, error) {
	parsed, err := abi.JSON(strings.NewReader(BaseAccessWalletFactoryABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(BaseAccessWalletFactoryBin), backend, _spaceAddr)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &BaseAccessWalletFactory{BaseAccessWalletFactoryCaller: BaseAccessWalletFactoryCaller{contract: contract}, BaseAccessWalletFactoryTransactor: BaseAccessWalletFactoryTransactor{contract: contract}, BaseAccessWalletFactoryFilterer: BaseAccessWalletFactoryFilterer{contract: contract}}, nil
}

// BaseAccessWalletFactory is an auto generated Go binding around an Ethereum contract.
type BaseAccessWalletFactory struct {
	BaseAccessWalletFactoryCaller     // Read-only binding to the contract
	BaseAccessWalletFactoryTransactor // Write-only binding to the contract
	BaseAccessWalletFactoryFilterer   // Log filterer for contract events
}

// BaseAccessWalletFactoryCaller is an auto generated read-only Go binding around an Ethereum contract.
type BaseAccessWalletFactoryCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseAccessWalletFactoryTransactor is an auto generated write-only Go binding around an Ethereum contract.
type BaseAccessWalletFactoryTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseAccessWalletFactoryFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type BaseAccessWalletFactoryFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseAccessWalletFactorySession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type BaseAccessWalletFactorySession struct {
	Contract     *BaseAccessWalletFactory // Generic contract binding to set the session for
	CallOpts     bind.CallOpts            // Call options to use throughout this session
	TransactOpts bind.TransactOpts        // Transaction auth options to use throughout this session
}

// BaseAccessWalletFactoryCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type BaseAccessWalletFactoryCallerSession struct {
	Contract *BaseAccessWalletFactoryCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                  // Call options to use throughout this session
}

// BaseAccessWalletFactoryTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type BaseAccessWalletFactoryTransactorSession struct {
	Contract     *BaseAccessWalletFactoryTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                  // Transaction auth options to use throughout this session
}

// BaseAccessWalletFactoryRaw is an auto generated low-level Go binding around an Ethereum contract.
type BaseAccessWalletFactoryRaw struct {
	Contract *BaseAccessWalletFactory // Generic contract binding to access the raw methods on
}

// BaseAccessWalletFactoryCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type BaseAccessWalletFactoryCallerRaw struct {
	Contract *BaseAccessWalletFactoryCaller // Generic read-only contract binding to access the raw methods on
}

// BaseAccessWalletFactoryTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type BaseAccessWalletFactoryTransactorRaw struct {
	Contract *BaseAccessWalletFactoryTransactor // Generic write-only contract binding to access the raw methods on
}

// NewBaseAccessWalletFactory creates a new instance of BaseAccessWalletFactory, bound to a specific deployed contract.
func NewBaseAccessWalletFactory(address common.Address, backend bind.ContractBackend) (*BaseAccessWalletFactory, error) {
	contract, err := bindBaseAccessWalletFactory(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &BaseAccessWalletFactory{BaseAccessWalletFactoryCaller: BaseAccessWalletFactoryCaller{contract: contract}, BaseAccessWalletFactoryTransactor: BaseAccessWalletFactoryTransactor{contract: contract}, BaseAccessWalletFactoryFilterer: BaseAccessWalletFactoryFilterer{contract: contract}}, nil
}

// NewBaseAccessWalletFactoryCaller creates a new read-only instance of BaseAccessWalletFactory, bound to a specific deployed contract.
func NewBaseAccessWalletFactoryCaller(address common.Address, caller bind.ContractCaller) (*BaseAccessWalletFactoryCaller, error) {
	contract, err := bindBaseAccessWalletFactory(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &BaseAccessWalletFactoryCaller{contract: contract}, nil
}

// NewBaseAccessWalletFactoryTransactor creates a new write-only instance of BaseAccessWalletFactory, bound to a specific deployed contract.
func NewBaseAccessWalletFactoryTransactor(address common.Address, transactor bind.ContractTransactor) (*BaseAccessWalletFactoryTransactor, error) {
	contract, err := bindBaseAccessWalletFactory(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &BaseAccessWalletFactoryTransactor{contract: contract}, nil
}

// NewBaseAccessWalletFactoryFilterer creates a new log filterer instance of BaseAccessWalletFactory, bound to a specific deployed contract.
func NewBaseAccessWalletFactoryFilterer(address common.Address, filterer bind.ContractFilterer) (*BaseAccessWalletFactoryFilterer, error) {
	contract, err := bindBaseAccessWalletFactory(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &BaseAccessWalletFactoryFilterer{contract: contract}, nil
}

// bindBaseAccessWalletFactory binds a generic wrapper to an already deployed contract.
func bindBaseAccessWalletFactory(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(BaseAccessWalletFactoryABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BaseAccessWalletFactory *BaseAccessWalletFactoryRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BaseAccessWalletFactory.Contract.BaseAccessWalletFactoryCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BaseAccessWalletFactory *BaseAccessWalletFactoryRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseAccessWalletFactory.Contract.BaseAccessWalletFactoryTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BaseAccessWalletFactory *BaseAccessWalletFactoryRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BaseAccessWalletFactory.Contract.BaseAccessWalletFactoryTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BaseAccessWalletFactory *BaseAccessWalletFactoryCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BaseAccessWalletFactory.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BaseAccessWalletFactory *BaseAccessWalletFactoryTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseAccessWalletFactory.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BaseAccessWalletFactory *BaseAccessWalletFactoryTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BaseAccessWalletFactory.Contract.contract.Transact(opts, method, params...)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseAccessWalletFactory *BaseAccessWalletFactoryCaller) ContentSpace(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseAccessWalletFactory.contract.Call(opts, out, "contentSpace")
	return *ret0, err
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseAccessWalletFactory *BaseAccessWalletFactorySession) ContentSpace() (common.Address, error) {
	return _BaseAccessWalletFactory.Contract.ContentSpace(&_BaseAccessWalletFactory.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseAccessWalletFactory *BaseAccessWalletFactoryCallerSession) ContentSpace() (common.Address, error) {
	return _BaseAccessWalletFactory.Contract.ContentSpace(&_BaseAccessWalletFactory.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseAccessWalletFactory *BaseAccessWalletFactoryCaller) Creator(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseAccessWalletFactory.contract.Call(opts, out, "creator")
	return *ret0, err
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseAccessWalletFactory *BaseAccessWalletFactorySession) Creator() (common.Address, error) {
	return _BaseAccessWalletFactory.Contract.Creator(&_BaseAccessWalletFactory.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseAccessWalletFactory *BaseAccessWalletFactoryCallerSession) Creator() (common.Address, error) {
	return _BaseAccessWalletFactory.Contract.Creator(&_BaseAccessWalletFactory.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseAccessWalletFactory *BaseAccessWalletFactoryCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseAccessWalletFactory.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseAccessWalletFactory *BaseAccessWalletFactorySession) Owner() (common.Address, error) {
	return _BaseAccessWalletFactory.Contract.Owner(&_BaseAccessWalletFactory.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseAccessWalletFactory *BaseAccessWalletFactoryCallerSession) Owner() (common.Address, error) {
	return _BaseAccessWalletFactory.Contract.Owner(&_BaseAccessWalletFactory.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseAccessWalletFactory *BaseAccessWalletFactoryCaller) Version(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _BaseAccessWalletFactory.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseAccessWalletFactory *BaseAccessWalletFactorySession) Version() ([32]byte, error) {
	return _BaseAccessWalletFactory.Contract.Version(&_BaseAccessWalletFactory.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseAccessWalletFactory *BaseAccessWalletFactoryCallerSession) Version() ([32]byte, error) {
	return _BaseAccessWalletFactory.Contract.Version(&_BaseAccessWalletFactory.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseAccessWalletFactory *BaseAccessWalletFactoryCaller) VersionAPI(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _BaseAccessWalletFactory.contract.Call(opts, out, "versionAPI")
	return *ret0, err
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseAccessWalletFactory *BaseAccessWalletFactorySession) VersionAPI() ([32]byte, error) {
	return _BaseAccessWalletFactory.Contract.VersionAPI(&_BaseAccessWalletFactory.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseAccessWalletFactory *BaseAccessWalletFactoryCallerSession) VersionAPI() ([32]byte, error) {
	return _BaseAccessWalletFactory.Contract.VersionAPI(&_BaseAccessWalletFactory.CallOpts)
}

// CreateAccessWallet is a paid mutator transaction binding the contract method 0x7708bc41.
//
// Solidity: function createAccessWallet() returns(address)
func (_BaseAccessWalletFactory *BaseAccessWalletFactoryTransactor) CreateAccessWallet(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseAccessWalletFactory.contract.Transact(opts, "createAccessWallet")
}

// CreateAccessWallet is a paid mutator transaction binding the contract method 0x7708bc41.
//
// Solidity: function createAccessWallet() returns(address)
func (_BaseAccessWalletFactory *BaseAccessWalletFactorySession) CreateAccessWallet() (*types.Transaction, error) {
	return _BaseAccessWalletFactory.Contract.CreateAccessWallet(&_BaseAccessWalletFactory.TransactOpts)
}

// CreateAccessWallet is a paid mutator transaction binding the contract method 0x7708bc41.
//
// Solidity: function createAccessWallet() returns(address)
func (_BaseAccessWalletFactory *BaseAccessWalletFactoryTransactorSession) CreateAccessWallet() (*types.Transaction, error) {
	return _BaseAccessWalletFactory.Contract.CreateAccessWallet(&_BaseAccessWalletFactory.TransactOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseAccessWalletFactory *BaseAccessWalletFactoryTransactor) Kill(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseAccessWalletFactory.contract.Transact(opts, "kill")
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseAccessWalletFactory *BaseAccessWalletFactorySession) Kill() (*types.Transaction, error) {
	return _BaseAccessWalletFactory.Contract.Kill(&_BaseAccessWalletFactory.TransactOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseAccessWalletFactory *BaseAccessWalletFactoryTransactorSession) Kill() (*types.Transaction, error) {
	return _BaseAccessWalletFactory.Contract.Kill(&_BaseAccessWalletFactory.TransactOpts)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseAccessWalletFactory *BaseAccessWalletFactoryTransactor) TransferCreatorship(opts *bind.TransactOpts, newCreator common.Address) (*types.Transaction, error) {
	return _BaseAccessWalletFactory.contract.Transact(opts, "transferCreatorship", newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseAccessWalletFactory *BaseAccessWalletFactorySession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _BaseAccessWalletFactory.Contract.TransferCreatorship(&_BaseAccessWalletFactory.TransactOpts, newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseAccessWalletFactory *BaseAccessWalletFactoryTransactorSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _BaseAccessWalletFactory.Contract.TransferCreatorship(&_BaseAccessWalletFactory.TransactOpts, newCreator)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseAccessWalletFactory *BaseAccessWalletFactoryTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _BaseAccessWalletFactory.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseAccessWalletFactory *BaseAccessWalletFactorySession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _BaseAccessWalletFactory.Contract.TransferOwnership(&_BaseAccessWalletFactory.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseAccessWalletFactory *BaseAccessWalletFactoryTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _BaseAccessWalletFactory.Contract.TransferOwnership(&_BaseAccessWalletFactory.TransactOpts, newOwner)
}

// BaseContentABI is the input ABI used to generate the binding from.
const BaseContentABI = "[{\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"content_space\",\"type\":\"address\"},{\"internalType\":\"addresspayable\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"addresspayable\",\"name\":\"content_type\",\"type\":\"address\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scorePct\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"customContractResult\",\"type\":\"bool\"}],\"name\":\"AccessComplete\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"customContractResult\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"contextHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"request_timestamp\",\"type\":\"uint256\"}],\"name\":\"AccessCompleteV3\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"contentHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"pkeRequestor\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"pkeAFGH\",\"type\":\"string\"}],\"name\":\"AccessRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"stakeholder\",\"type\":\"address\"}],\"name\":\"AccessRequestStakeholder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"contextHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestTimestamp\",\"type\":\"uint256\"}],\"name\":\"AccessRequestV3\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"customValue\",\"type\":\"bytes32\"}],\"name\":\"AccessRequestValue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spaceAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"objectHash\",\"type\":\"string\"}],\"name\":\"CommitPending\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"containingLibrary\",\"type\":\"address\"}],\"name\":\"ContentObjectCreate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"accessCharge\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountProvided\",\"type\":\"uint256\"}],\"name\":\"InsufficientFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LogPayment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"ObjectMetaChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"requestStatus\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"statusCode\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"objectHash\",\"type\":\"string\"}],\"name\":\"Publish\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"accessCharge\",\"type\":\"uint256\"}],\"name\":\"SetAccessCharge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contentContractAddress\",\"type\":\"address\"}],\"name\":\"SetContentContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contentType\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contentContractAddress\",\"type\":\"address\"}],\"name\":\"SetContentType\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"statusCode\",\"type\":\"int256\"}],\"name\":\"SetStatusCode\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"objectHash\",\"type\":\"string\"}],\"name\":\"UpdateRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spaceAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"objectHash\",\"type\":\"string\"}],\"name\":\"VersionConfirm\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spaceAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"versionHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"index\",\"type\":\"int256\"}],\"name\":\"VersionDelete\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contentSpace\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"visibility\",\"type\":\"uint8\"}],\"name\":\"VisibilityChanged\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"CAN_ACCESS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CAN_EDIT\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CAN_SEE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"accessCharge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"request_ID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"score_pct\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"accessComplete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestNonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_contextHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_accessor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_request_timestamp\",\"type\":\"uint256\"}],\"name\":\"accessCompleteContext\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestNonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"customValues\",\"type\":\"bytes32[]\"},{\"internalType\":\"address[]\",\"name\":\"stakeholders\",\"type\":\"address[]\"}],\"name\":\"accessCompleteInternal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestNonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"customValues\",\"type\":\"bytes32[]\"},{\"internalType\":\"address[]\",\"name\":\"stakeholders\",\"type\":\"address[]\"}],\"name\":\"accessCompleteV3\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"pkeRequestor\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"pkeAFGH\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"customValues\",\"type\":\"bytes32[]\"},{\"internalType\":\"addresspayable[]\",\"name\":\"stakeholders\",\"type\":\"address[]\"}],\"name\":\"accessRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestNonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"contextHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"request_timestamp\",\"type\":\"uint256\"}],\"name\":\"accessRequestContext\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"customValues\",\"type\":\"bytes32[]\"},{\"internalType\":\"addresspayable[]\",\"name\":\"stakeholders\",\"type\":\"address[]\"}],\"name\":\"accessRequestV3\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"addressKMS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canCommit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canConfirm\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canEdit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canPublish\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"clearPending\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_objectHash\",\"type\":\"string\"}],\"name\":\"commit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"commitPending\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"confirmCommit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentContractAddress\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentSpace\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentType\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"countVersionHashes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_versionHash\",\"type\":\"string\"}],\"name\":\"deleteVersion\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"bytes32[]\",\"name\":\"customValues\",\"type\":\"bytes32[]\"},{\"internalType\":\"addresspayable[]\",\"name\":\"stakeholders\",\"type\":\"address[]\"}],\"name\":\"getAccessInfo\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"customValues\",\"type\":\"bytes32[]\"},{\"internalType\":\"addresspayable[]\",\"name\":\"stakeholders\",\"type\":\"address[]\"}],\"name\":\"getAccessInfoV3\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"customValues\",\"type\":\"bytes32[]\"},{\"internalType\":\"addresspayable[]\",\"name\":\"stakeholders\",\"type\":\"address[]\"}],\"name\":\"getCustomInfo\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"prefix\",\"type\":\"bytes\"}],\"name\":\"getKMSInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"getMeta\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"hasAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"hasEditorRight\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"indexCategory\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"libraryAddress\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"objectHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"objectTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"parentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestNonce\",\"type\":\"uint256\"},{\"internalType\":\"addresspayable\",\"name\":\"payee\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"processRequestPayment\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"publish\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"putMeta\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"requestID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"requestMap\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"originator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountPaid\",\"type\":\"uint256\"},{\"internalType\":\"int8\",\"name\":\"status\",\"type\":\"int8\"},{\"internalType\":\"uint256\",\"name\":\"settled\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"charge\",\"type\":\"uint256\"}],\"name\":\"setAccessCharge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"address_KMS\",\"type\":\"address\"}],\"name\":\"setAddressKMS\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setContentContractAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"group\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setGroupRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"stakeholder\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"int256\",\"name\":\"status_code\",\"type\":\"int256\"}],\"name\":\"setStatusCode\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_visibility_code\",\"type\":\"uint8\"}],\"name\":\"setVisibility\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"statusCode\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newCreator\",\"type\":\"address\"}],\"name\":\"transferCreatorship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"updateRequest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"int256\",\"name\":\"status_code\",\"type\":\"int256\"}],\"name\":\"updateStatus\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"versionAPI\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"versionHashes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"versionTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"visibility\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// BaseContentFuncSigs maps the 4-byte function signature to its string representation.
var BaseContentFuncSigs = map[string]string{
	"97ac4fd2": "CAN_ACCESS()",
	"ef1d7dc2": "CAN_EDIT()",
	"100508a2": "CAN_SEE()",
	"64ade32b": "accessCharge()",
	"0593e335": "accessComplete(uint256,uint256,uint256)",
	"bc7dba33": "accessCompleteContext(uint256,bytes32,address,uint256)",
	"484f4b3b": "accessCompleteInternal(uint256,bytes32[],address[])",
	"45155f6e": "accessCompleteV3(uint256,bytes32[],address[])",
	"a1ff106e": "accessRequest(uint8,string,string,bytes32[],address[])",
	"78f52ffb": "accessRequestContext(uint256,bytes32,address,uint256)",
	"1bf7a912": "accessRequestV3(bytes32[],address[])",
	"32eaf21b": "addressKMS()",
	"6e375427": "canCommit()",
	"14cfabb3": "canConfirm()",
	"81beeb64": "canEdit()",
	"cbcd4461": "canPublish()",
	"5f6a1301": "clearPending()",
	"9867db74": "commit(string)",
	"375a6e7c": "commitPending()",
	"446e8826": "confirmCommit()",
	"2310167f": "contentContractAddress()",
	"af570c04": "contentSpace()",
	"36ebffca": "contentType()",
	"331b86c0": "countVersionHashes()",
	"02d05d3f": "creator()",
	"e1a70717": "deleteVersion(string)",
	"38d0f504": "getAccessInfo(uint8,bytes32[],address[])",
	"7ddc2c56": "getAccessInfoV3(address,bytes32[],address[])",
	"c26484a6": "getCustomInfo(address,bytes32[],address[])",
	"a8d4160e": "getKMSInfo(bytes)",
	"ac55c906": "getMeta(bytes)",
	"95a078e8": "hasAccess(address)",
	"67e5c3bf": "hasEditorRight(address)",
	"6380501f": "indexCategory()",
	"24d7806c": "isAdmin(address)",
	"41c0e1b5": "kill()",
	"b816f513": "libraryAddress()",
	"e02dd9c2": "objectHash()",
	"40b87a26": "objectTimestamp()",
	"8da5cb5b": "owner()",
	"00821de3": "parentAddress()",
	"628449fd": "pendingHash()",
	"0c6d3f93": "processRequestPayment(uint256,address,string,uint256)",
	"075d4782": "publish()",
	"e542b7cb": "putMeta(bytes,bytes)",
	"8f779201": "requestID()",
	"1a735f18": "requestMap(uint256)",
	"f4d9bae8": "setAccessCharge(uint256)",
	"c9e8e72d": "setAddressKMS(address)",
	"e5385303": "setContentContractAddress(address)",
	"22e564eb": "setGroupRights(address,uint8,uint8)",
	"0fe1b5a2": "setRights(address,uint8,uint8)",
	"5267db44": "setStatusCode(int256)",
	"aa024e8b": "setVisibility(uint8)",
	"27c1c21d": "statusCode()",
	"6d2e4b1b": "transferCreatorship(address)",
	"f2fde38b": "transferOwnership(address)",
	"c287e0ed": "updateRequest()",
	"8280dd8f": "updateStatus(int256)",
	"54fd4d50": "version()",
	"5f4fcae1": "versionAPI()",
	"7ca8f618": "versionHashes(uint256)",
	"7886f747": "versionTimestamp(uint256)",
	"29adec14": "visibility()",
}

// BaseContentBin is the compiled bytecode used for deploying new contracts.
var BaseContentBin = "0x608060408190527f4f776e61626c653230323030393238313130303030504f0000000000000000006000908155620332e360ec1b60019081557f41636365737369626c653230323030363236313231363030504f0000000000006007556008805460ff191690911761ff00191690557f4564697461626c653230323030393238313130303030504f00000000000000006009557f42617365436f6e74656e743230323030393238313130303030504f000000000060105560175561561b38819003908190833981810160405260608110156100d957600080fd5b50805160208083015160409384015160028054326001600160a01b03199182161790915560038054339083161790556004805482166001600160a01b0380881691909117909155601480548316828616179081905560001960165560118054909316828516179092556008805461010061ffff1990911617905586519116815294519394919390927fc3decc188980e855666b70498ca85e8fa284d97d30483d828fa126f7303d7d19928290030190a15050506154808061019b6000396000f3fe6080604052600436106103c25760003560e01c806367e5c3bf116101f2578063aa024e8b1161010d578063cbcd4461116100a0578063e542b7cb1161006f578063e542b7cb1461187f578063ef1d7dc2146119b5578063f2fde38b146119ca578063f4d9bae8146119fd576103c2565b8063cbcd446114611771578063e02dd9c214611786578063e1a707171461179b578063e53853031461184c576103c2565b8063bc7dba33116100dc578063bc7dba33146115b1578063c26484a6146115e9578063c287e0ed14611729578063c9e8e72d1461173e576103c2565b8063aa024e8b146114a9578063ac55c906146114d6578063af570c0414611587578063b816f5131461159c576103c2565b80638280dd8f1161018557806397ac4fd21161015457806397ac4fd21461101d5780639867db7414611032578063a1ff106e146110e3578063a8d4160e1461131a576103c2565b80638280dd8f14610f965780638da5cb5b14610fc05780638f77920114610fd557806395a078e814610fea576103c2565b806378f52ffb116101c157806378f52ffb14610ddf5780637ca8f61814610e175780637ddc2c5614610e4157806381beeb6414610f81576103c2565b806367e5c3bf14610d3a5780636d2e4b1b14610d6d5780636e37542714610da05780637886f74714610db5576103c2565b8063331b86c0116102e2578063484f4b3b116102755780635f6a1301116102445780635f6a130114610c71578063628449fd14610c865780636380501f14610d1057806364ade32b14610d25576103c2565b8063484f4b3b14610af35780635267db4414610c1d57806354fd4d5014610c475780635f4fcae114610c5c576103c2565b806340b87a26116102b157806340b87a261461099757806341c0e1b5146109ac578063446e8826146109c157806345155f6e146109c9576103c2565b8063331b86c0146107fa57806336ebffca1461080f578063375a6e7c1461082457806338d0f50414610839576103c2565b80631a735f181161035a57806324d7806c1161032957806324d7806c1461077657806327c1c21d146107a957806329adec14146107d057806332eaf21b146107e5576103c2565b80631a735f181461059b5780631bf7a912146105fa57806322e564eb1461071d5780632310167f14610761576103c2565b80630c6d3f93116103965780630c6d3f931461044f5780630fe1b5a214610517578063100508a21461055b57806314cfabb314610586576103c2565b8062821de3146103c457806302d05d3f146103f55780630593e3351461040a578063075d478214610447575b005b3480156103d057600080fd5b506103d9611a27565b604080516001600160a01b039092168252519081900360200190f35b34801561040157600080fd5b506103d9611a37565b6104336004803603606081101561042057600080fd5b5080359060208101359060400135611a46565b604080519115158252519081900360200190f35b610433611ab6565b34801561045b57600080fd5b506104336004803603608081101561047257600080fd5b8135916001600160a01b0360208201351691810190606081016040820135600160201b8111156104a157600080fd5b8201836020820111156104b357600080fd5b803590602001918460018302840111600160201b831117156104d457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505091359250611c0e915050565b34801561052357600080fd5b506103c26004803603606081101561053a57600080fd5b506001600160a01b038135169060ff60208201358116916040013516611c53565b34801561056757600080fd5b50610570611d18565b6040805160ff9092168252519081900360200190f35b34801561059257600080fd5b50610433611d1d565b3480156105a757600080fd5b506105c5600480360360208110156105be57600080fd5b5035611da1565b604080516001600160a01b0390951685526020850193909352600091820b90910b838301526060830152519081900360800190f35b6104336004803603604081101561061057600080fd5b810190602081018135600160201b81111561062a57600080fd5b82018360208201111561063c57600080fd5b803590602001918460208302840111600160201b8311171561065d57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156106ac57600080fd5b8201836020820111156106be57600080fd5b803590602001918460208302840111600160201b831117156106df57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611dd5945050505050565b34801561072957600080fd5b506103c26004803603606081101561074057600080fd5b506001600160a01b038135169060ff60208201358116916040013516611e95565b34801561076d57600080fd5b506103d96122db565b34801561078257600080fd5b506104336004803603602081101561079957600080fd5b50356001600160a01b03166122ea565b3480156107b557600080fd5b506107be612314565b60408051918252519081900360200190f35b3480156107dc57600080fd5b5061057061231a565b3480156107f157600080fd5b506103d9612323565b34801561080657600080fd5b506107be612332565b34801561081b57600080fd5b506103d9612338565b34801561083057600080fd5b50610433612347565b34801561084557600080fd5b506109736004803603606081101561085c57600080fd5b60ff8235169190810190604081016020820135600160201b81111561088057600080fd5b82018360208201111561089257600080fd5b803590602001918460208302840111600160201b831117156108b357600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561090257600080fd5b82018360208201111561091457600080fd5b803590602001918460208302840111600160201b8311171561093557600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550612350945050505050565b6040805160ff94851681529290931660208301528183015290519081900360600190f35b3480156109a357600080fd5b506107be612370565b3480156109b857600080fd5b506103c2612376565b6104336124da565b610433600480360360608110156109df57600080fd5b81359190810190604081016020820135600160201b811115610a0057600080fd5b820183602082011115610a1257600080fd5b803590602001918460208302840111600160201b83111715610a3357600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610a8257600080fd5b820183602082011115610a9457600080fd5b803590602001918460208302840111600160201b83111715610ab557600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506126d6945050505050565b61043360048036036060811015610b0957600080fd5b81359190810190604081016020820135600160201b811115610b2a57600080fd5b820183602082011115610b3c57600080fd5b803590602001918460208302840111600160201b83111715610b5d57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610bac57600080fd5b820183602082011115610bbe57600080fd5b803590602001918460208302840111600160201b83111715610bdf57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506128ca945050505050565b348015610c2957600080fd5b506107be60048036036020811015610c4057600080fd5b5035612a03565b348015610c5357600080fd5b506107be612a98565b348015610c6857600080fd5b506107be612a9e565b348015610c7d57600080fd5b506103c2612aa4565b348015610c9257600080fd5b50610c9b612ae0565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610cd5578181015183820152602001610cbd565b50505050905090810190601f168015610d025780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610d1c57600080fd5b50610570612b6e565b348015610d3157600080fd5b506107be612b7c565b348015610d4657600080fd5b5061043360048036036020811015610d5d57600080fd5b50356001600160a01b0316612b82565b348015610d7957600080fd5b506103c260048036036020811015610d9057600080fd5b50356001600160a01b0316612ce3565b348015610dac57600080fd5b50610433612d2f565b348015610dc157600080fd5b506107be60048036036020811015610dd857600080fd5b5035612d3e565b6107be60048036036080811015610df557600080fd5b508035906020810135906001600160a01b036040820135169060600135612d5c565b348015610e2357600080fd5b50610c9b60048036036020811015610e3a57600080fd5b5035612d92565b348015610e4d57600080fd5b5061097360048036036060811015610e6457600080fd5b6001600160a01b038235169190810190604081016020820135600160201b811115610e8e57600080fd5b820183602082011115610ea057600080fd5b803590602001918460208302840111600160201b83111715610ec157600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610f1057600080fd5b820183602082011115610f2257600080fd5b803590602001918460208302840111600160201b83111715610f4357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550612e05945050505050565b348015610f8d57600080fd5b50610433612fd6565b348015610fa257600080fd5b506107be60048036036020811015610fb957600080fd5b5035612fe1565b348015610fcc57600080fd5b506103d96130cf565b348015610fe157600080fd5b506107be6130de565b348015610ff657600080fd5b506104336004803603602081101561100d57600080fd5b50356001600160a01b03166130e4565b34801561102957600080fd5b50610570613208565b34801561103e57600080fd5b506103c26004803603602081101561105557600080fd5b810190602081018135600160201b81111561106f57600080fd5b82018360208201111561108157600080fd5b803590602001918460018302840111600160201b831117156110a257600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061320d945050505050565b6107be600480360360a08110156110f957600080fd5b60ff8235169190810190604081016020820135600160201b81111561111d57600080fd5b82018360208201111561112f57600080fd5b803590602001918460018302840111600160201b8311171561115057600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156111a257600080fd5b8201836020820111156111b457600080fd5b803590602001918460018302840111600160201b831117156111d557600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561122757600080fd5b82018360208201111561123957600080fd5b803590602001918460208302840111600160201b8311171561125a57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156112a957600080fd5b8201836020820111156112bb57600080fd5b803590602001918460208302840111600160201b831117156112dc57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550613338945050505050565b34801561132657600080fd5b506113cb6004803603602081101561133d57600080fd5b810190602081018135600160201b81111561135757600080fd5b82018360208201111561136957600080fd5b803590602001918460018302840111600160201b8311171561138a57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506134e8945050505050565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b8381101561140c5781810151838201526020016113f4565b50505050905090810190601f1680156114395780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b8381101561146c578181015183820152602001611454565b50505050905090810190601f1680156114995780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b3480156114b557600080fd5b506103c2600480360360208110156114cc57600080fd5b503560ff16613988565b3480156114e257600080fd5b50610c9b600480360360208110156114f957600080fd5b810190602081018135600160201b81111561151357600080fd5b82018360208201111561152557600080fd5b803590602001918460018302840111600160201b8311171561154657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550613a06945050505050565b34801561159357600080fd5b506103d9613bad565b3480156115a857600080fd5b506103d9613bbc565b610433600480360360808110156115c757600080fd5b508035906020810135906001600160a01b036040820135169060600135613bcb565b3480156115f557600080fd5b506109736004803603606081101561160c57600080fd5b6001600160a01b038235169190810190604081016020820135600160201b81111561163657600080fd5b82018360208201111561164857600080fd5b803590602001918460208302840111600160201b8311171561166957600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156116b857600080fd5b8201836020820111156116ca57600080fd5b803590602001918460208302840111600160201b831117156116eb57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550613c66945050505050565b34801561173557600080fd5b506103c2613e6c565b34801561174a57600080fd5b506103c26004803603602081101561176157600080fd5b50356001600160a01b0316613fd6565b34801561177d57600080fd5b50610433614009565b34801561179257600080fd5b50610c9b614028565b3480156117a757600080fd5b506107be600480360360208110156117be57600080fd5b810190602081018135600160201b8111156117d857600080fd5b8201836020820111156117ea57600080fd5b803590602001918460018302840111600160201b8311171561180b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550614083945050505050565b34801561185857600080fd5b506103c26004803603602081101561186f57600080fd5b50356001600160a01b03166144e9565b34801561188b57600080fd5b506103c2600480360360408110156118a257600080fd5b810190602081018135600160201b8111156118bc57600080fd5b8201836020820111156118ce57600080fd5b803590602001918460018302840111600160201b831117156118ef57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561194157600080fd5b82018360208201111561195357600080fd5b803590602001918460018302840111600160201b8311171561197457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506146f8945050505050565b3480156119c157600080fd5b506105706148e7565b3480156119d657600080fd5b506103c2600480360360208110156119ed57600080fd5b50356001600160a01b03166148ec565b348015611a0957600080fd5b506107be60048036036020811015611a2057600080fd5b5035614938565b6014546001600160a01b03165b90565b6002546001600160a01b031681565b600080611a5460175461498b565b90506060806000611a668484846126d6565b604080518a8152602081018a90528215158183015290519192507f2c49ac638ee7bf3341004c40512c79847bb7fb8f17fb53151ff576a35630ac06919081900360600190a1979650505050505050565b6000611ac0612fd6565b611ac957600080fd5b6014546040805163167cca1160e11b815230600482015290516000926001600160a01b031691632cf9942291602480830192602092919082900301818787803b158015611b1557600080fd5b505af1158015611b29573d6000803e3d6000fd5b505050506040513d6020811015611b3f57600080fd5b5051601654604080518315158152602081018390526060918101828152600a8054600260001961010060018416150201909116049383018490529495507fad9c5eacc073b2e1767affc883e050347e1dd379c9799cb5ac0a17bde80f5cf49486949390929190608083019084908015611bf95780601f10611bce57610100808354040283529160200191611bf9565b820191906000526020600020905b815481529060010190602001808311611bdc57829003601f168201915b505094505050505060405180910390a1905090565b6013546000906001600160a01b031615801590611c3557506013546001600160a01b031633145b611c3e57600080fd5b611c4a858585856149ba565b95945050505050565b611c5b612fd6565b611c6457600080fd5b60048054604080516363e6ffdd60e01b81526001600160a01b03878116948201949094529051929091169160009183916363e6ffdd91602480820192602092909190829003018186803b158015611cba57600080fd5b505afa158015611cce573d6000803e3d6000fd5b505050506040513d6020811015611ce457600080fd5b505190506001600160a01b038116611d0657611d01858585611e95565b611d11565b611d11818585611e95565b5050505050565b600181565b600480546040805163099a0f8560e21b81523393810193909352516000926001600160a01b039092169182916326683e1491602480820192602092909190829003018186803b158015611d6f57600080fd5b505afa158015611d83573d6000803e3d6000fd5b505050506040513d6020811015611d9957600080fd5b505191505090565b60186020526000908152604081208054600182015460028301546003909301546001600160a01b03909216939092900b9084565b60006017546001016017819055506000611df060175461498b565b9050611e058185856000336103e84202614aef565b50611e0e61523d565b50604080516080810182523381523460208083019182526000838501818152606085018281529682526018909252938420925183546001600160a01b03919091166001600160a01b0319909116178355905160018084019190915590516002830180549190940b60ff1660ff19909116179092559151600390920191909155905092915050565b6000839050806001600160a01b031663091600e66040518163ffffffff1660e01b815260040160206040518083038186803b158015611ed357600080fd5b505afa158015611ee7573d6000803e3d6000fd5b505050506040513d6020811015611efd57600080fd5b5051600854610100900460ff90811691161415611f88576040805162f7bd4560e61b815230600482015260ff80861660248301528416604482015290516001600160a01b03831691633def514091606480830192600092919082900301818387803b158015611f6b57600080fd5b505af1158015611f7f573d6000803e3d6000fd5b505050506122d5565b806001600160a01b03166312915a306040518163ffffffff1660e01b815260040160206040518083038186803b158015611fc157600080fd5b505afa158015611fd5573d6000803e3d6000fd5b505050506040513d6020811015611feb57600080fd5b5051600854610100900460ff9081169116141561205a576040805163f17bda9160e01b815230600482015260ff80861660248301528416604482015290516001600160a01b0383169163f17bda9191606480830192600092919082900301818387803b158015611f6b57600080fd5b806001600160a01b03166316aed2326040518163ffffffff1660e01b815260040160206040518083038186803b15801561209357600080fd5b505afa1580156120a7573d6000803e3d6000fd5b505050506040513d60208110156120bd57600080fd5b5051600854610100900460ff9081169116141561212c5760408051633e5dbdf960e11b815230600482015260ff80861660248301528416604482015290516001600160a01b03831691637cbb7bf291606480830192600092919082900301818387803b158015611f6b57600080fd5b806001600160a01b03166368a0469a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561216557600080fd5b505afa158015612179573d6000803e3d6000fd5b505050506040513d602081101561218f57600080fd5b5051600854610100900460ff908116911614156121fe5760408051638635adb560e01b815230600482015260ff80861660248301528416604482015290516001600160a01b03831691638635adb591606480830192600092919082900301818387803b158015611f6b57600080fd5b806001600160a01b0316636373a4116040518163ffffffff1660e01b815260040160206040518083038186803b15801561223757600080fd5b505afa15801561224b573d6000803e3d6000fd5b505050506040513d602081101561226157600080fd5b5051600854610100900460ff908116911614156122d057604080516301126e5d60e51b815230600482015260ff80861660248301528416604482015290516001600160a01b0383169163224dcba091606480830192600092919082900301818387803b158015611f6b57600080fd5b600080fd5b50505050565b6013546001600160a01b031681565b6003546000906001600160a01b038381169116141561230b5750600161230f565b5060005b919050565b60165481565b60085460ff1681565b6012546001600160a01b031681565b600c5490565b6011546001600160a01b031681565b600f5460ff1681565b6000806000612360338686612e05565b9250925092505b93509350939050565b600b5481565b6014546001600160a01b0316331461238d57600080fd5b6013546000906001600160a01b03161561242057601360009054906101000a90046001600160a01b03166001600160a01b031663860b24926040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156123f157600080fd5b505af1158015612405573d6000803e3d6000fd5b505050506040513d602081101561241b57600080fd5b505190505b80158061242d5750806064145b806124395750806103e8145b8061244557508061044c145b61244e57600080fd5b806064148061245e57508061044c145b156124cc57601360009054906101000a90046001600160a01b03166001600160a01b0316632de3ecd16040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156124b357600080fd5b505af11580156124c7573d6000803e3d6000fd5b505050505b6003546001600160a01b0316ff5b60006124e4611d1d565b6124ed57600080fd5b600f5460ff166124fc57600080fd5b600a5460026000196101006001841615020190911604156125a757600c80546001818101808455600093909352600a805461256e937fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c70192600261010091831615919091026000190190911604615270565b5050600b54600d80546001810182556000919091527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb501555b600e80546125ca91600a9160026000196101006001841615020190911604615270565b5042600b556040805160208101918290526000908190526125ed91600e916152f5565b50600f805460ff191690556004547fbdaffceabaaa783aa187fea6c2e815541d29e2290bf3f7d3c4fc53672b68f7df906001600160a01b031661262e611a27565b604080516001600160a01b038085168252831660208201526060918101828152600a805460026000196101006001841615020190911604938301849052926080830190849080156126c05780601f10612695576101008083540402835291602001916126c0565b820191906000526020600020905b8154815290600101906020018083116126a357829003601f168201915b505094505050505060405180910390a150600190565b600083815260186020526040812080546001600160a01b03161580159061271a575080546001600160a01b031633148061271a57506003546001600160a01b031633145b61272357600080fd5b60006127308686866128ca565b82549091506001600160a01b0316331415612770578015612760576002828101805460ff19169091179055612770565b60028201805460ff191660fe1790555b816001015482600301541015612826576002820154600090810b810b136127da5781546040805180820190915260068152651c99599d5b9960d21b6020820152600384015460018501546127d4938a936001600160a01b03909116929091036149ba565b50612826565b6003805460408051808201909152600e81526d72656c6561736520657363726f7760901b6020820152918401546001850154612824938a936001600160a01b0316929091036149ba565b505b600086815260186020908152604080832080546001600160a01b03191681556001810184905560028101805460ff1916905560030183905560145481518a8152851515938101939093526001600160a01b03168282015260608201929092523360808201526103e8420260a082015290517fd3e5b1d14681444d8159fa85b57104b685f47fb9164fd82b7fafe4e123dcc3a19181900360c00190a195945050505050565b6013546000906001906001600160a01b0316156129fb57601354604051631a485ccd60e01b81526004810187815233606483018190526080602484019081528851608485015288516001600160a01b03909516946000948694631a485ccd948d948d948d94929392604481019160a490910190602080890191028083838f5b83811015612961578181015183820152602001612949565b50505050905001838103825285818151815260200191508051906020019060200280838360005b838110156129a0578181015183820152602001612988565b505050509050019650505050505050602060405180830381600087803b1580156129c957600080fd5b505af11580156129dd573d6000803e3d6000fd5b505050506040513d60208110156129f357600080fd5b505115925050505b949350505050565b6003546000906001600160a01b031633148015612a3757506000821280612a375750600082138015612a3757506000601654125b15612a425760168290555b6014546001600160a01b0316331415612a5b5760168290555b60165460408051918252517fda4f34b30fa0ba8a73fedb922f4d28e2a10a5d68e53cf8e942abce3ac09158a29181900360200190a1505060165490565b60105481565b60015481565b612aac612d2f565b612ab557600080fd5b604080516020810191829052600090819052612ad391600e916152f5565b50600f805460ff19169055565b600e805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015612b665780601f10612b3b57610100808354040283529160200191612b66565b820191906000526020600020905b815481529060010190602001808311612b4957829003601f168201915b505050505081565b600854610100900460ff1681565b60155481565b6003546000906001600160a01b0383811691161480612ba95750600854606460ff90911610155b15612bb65750600161230f565b600854610100900460ff1615612cdb5760048054604080516363e6ffdd60e01b81526001600160a01b03868116948201949094529051600093909216916363e6ffdd91602480820192602092909190829003018186803b158015612c1957600080fd5b505afa158015612c2d573d6000803e3d6000fd5b505050506040513d6020811015612c4357600080fd5b505160085460408051633fda978d60e11b815261010090920460ff16600483015230602483015260026044830152519192506001600160a01b03831691637fb52f1a91606480820192602092909190829003018186803b158015612ca657600080fd5b505afa158015612cba573d6000803e3d6000fd5b505050506040513d6020811015612cd057600080fd5b5051915061230f9050565b50600061230f565b6002546001600160a01b03163314612cfa57600080fd5b6001600160a01b038116612d0d57600080fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000612d39612fd6565b905090565b600d8181548110612d4b57fe5b600091825260209091200154905081565b6012546000906001600160a01b03163314612d7657600080fd5b606080612d87878383898989614aef565b979650505050505050565b600c8181548110612d9f57fe5b600091825260209182902001805460408051601f6002600019610100600187161502019094169390930492830185900485028101850190915281815293509091830182828015612b665780601f10612b3b57610100808354040283529160200191612b66565b6000806000601654600014612e2857612e1d86614db5565b925092509250612367565b6000806000612e38898989613c66565b9450909250905060ff8083161480612e5357508060ff1660ff145b15612fc75760048054604080516363e6ffdd60e01b81526001600160a01b038d8116948201949094529051929091169160009183916363e6ffdd91602480820192602092909190829003018186803b158015612eae57600080fd5b505afa158015612ec2573d6000803e3d6000fd5b505050506040513d6020811015612ed857600080fd5b505190506001600160a01b03811615612fc4578360ff1660ff1415612f8f5760085460408051633fda978d60e11b815261010090920460ff16600483015230602483015260006044830152516001600160a01b03831691637fb52f1a916064808301926020929190829003018186803b158015612f5457600080fd5b505afa158015612f68573d6000803e3d6000fd5b505050506040513d6020811015612f7e57600080fd5b5051151560011415612f8f57600093505b60ff8416612fc4578260ff1660ff1415612fc457612fac8b6130e4565b151560011415612fbf5760009250612fc4565b606492505b50505b90989097509095509350505050565b6000612d3933612b82565b6000612feb614009565b612ff457600080fd5b6013546000906001600160a01b031661300e57508161308d565b60135460408051633513a80560e01b81526004810186905290516001600160a01b03909216918291633513a8059160248083019260209291908290030181600087803b15801561305d57600080fd5b505af1158015613071573d6000803e3d6000fd5b505050506040513d602081101561308757600080fd5b50519150505b60168190556040805182815290517fda4f34b30fa0ba8a73fedb922f4d28e2a10a5d68e53cf8e942abce3ac09158a29181900360200190a15050601654919050565b6003546001600160a01b031681565b60175481565b6003546000906001600160a01b038381169116148061310b5750600854600a60ff90911610155b156131185750600161230f565b600854610100900460ff1615612cdb5760048054604080516363e6ffdd60e01b81526001600160a01b03868116948201949094529051600093909216916363e6ffdd91602480820192602092909190829003018186803b15801561317b57600080fd5b505afa15801561318f573d6000803e3d6000fd5b505050506040513d60208110156131a557600080fd5b505160085460408051633fda978d60e11b815261010090920460ff16600483015230602483015260016044830152519192506001600160a01b03831691637fb52f1a91606480820192602092909190829003018186803b158015612ca657600080fd5b600a81565b613215612d2f565b61321e57600080fd5b600f5460ff161561322e57600080fd5b608081511061323c57600080fd5b805161324f90600e9060208401906152f5565b50600f805460ff191660011790556004547fb3ac059d88af6016aca1aebb7b3e796f2e7420435c59c563687814e9b85daa75906001600160a01b0316613293611a27565b604080516001600160a01b038085168252831660208201526060918101828152600e805460026000196101006001841615020190911604938301849052926080830190849080156133255780601f106132fa57610100808354040283529160200191613325565b820191906000526020600020905b81548152906001019060200180831161330857829003601f168201915b505094505050505060405180910390a150565b60006133448383611dd5565b506017546040805182815260006020820181905260a0928201838152600a8054600260001961010060018416150201909116049484018590527f50f423e39e8beb25bb2da38a63e3d33b5368f261522813712756733eaf569a069594929390928b928b92916060830190608084019060c0850190889080156134075780601f106133dc57610100808354040283529160200191613407565b820191906000526020600020905b8154815290600101906020018083116133ea57829003601f168201915b5050848103835286518152865160209182019188019080838360005b8381101561343b578181015183820152602001613423565b50505050905090810190601f1680156134685780820380516001836020036101000a031916815260200191505b50848103825285518152855160209182019187019080838360005b8381101561349b578181015183820152602001613483565b50505050905090810190601f1680156134c85780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a15060175495945050505050565b60045460125460609182916001600160a01b039182169116158061358257506012546040805163d6be0f4960e01b81526001600160a01b03928316600482015290519183169163d6be0f4991602480820192602092909190829003018186803b15801561355457600080fd5b505afa158015613568573d6000803e3d6000fd5b505050506040513d602081101561357e57600080fd5b5051155b156135ab5750506040805160208082018352600080835283519182019093529182529150613983565b6012546040805163589aafc160e01b81526001600160a01b03928316600482015290519183169163268bfac491839163589aafc191602480820192600092909190829003018186803b15801561360057600080fd5b505afa158015613614573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561363d57600080fd5b8101908080516040519392919084600160201b82111561365c57600080fd5b90830190602082018581111561367157600080fd5b8251600160201b81118282018810171561368a57600080fd5b82525081516020918201929091019080838360005b838110156136b757818101518382015260200161369f565b50505050905090810190601f1680156136e45780820380516001836020036101000a031916815260200191505b50604052505050866040518363ffffffff1660e01b8152600401808060200180602001838103835285818151815260200191508051906020019080838360005b8381101561373c578181015183820152602001613724565b50505050905090810190601f1680156137695780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b8381101561379c578181015183820152602001613784565b50505050905090810190601f1680156137c95780820380516001836020036101000a031916815260200191505b5094505050505060006040518083038186803b1580156137e857600080fd5b505afa1580156137fc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604090815281101561382557600080fd5b8101908080516040519392919084600160201b82111561384457600080fd5b90830190602082018581111561385957600080fd5b8251600160201b81118282018810171561387257600080fd5b82525081516020918201929091019080838360005b8381101561389f578181015183820152602001613887565b50505050905090810190601f1680156138cc5780820380516001836020036101000a031916815260200191505b5060405260200180516040519392919084600160201b8211156138ee57600080fd5b90830190602082018581111561390357600080fd5b8251600160201b81118282018810171561391c57600080fd5b82525081516020918201929091019080838360005b83811015613949578181015183820152602001613931565b50505050905090810190601f1680156139765780820380516001836020036101000a031916815260200191505b5060405250505092509250505b915091565b613990612fd6565b61399957600080fd5b6008805460ff80841660ff199092169190911791829055600454601454604080516001600160a01b0393841681529190921660208201529290911682820152517f369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e5025009181900360600190a150565b60606020825111613abb5781518083015160008181526005602090815260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084529394939091830182828015613aad5780601f10613a8257610100808354040283529160200191613aad565b820191906000526020600020905b815481529060010190602001808311613a9057829003601f168201915b50505050509250505061230f565b6006826040518082805190602001908083835b60208310613aed5780518252601f199092019160209182019101613ace565b518151600019602094850361010090810a820192831692199390931691909117909252949092019687526040805197889003820188208054601f6002600183161590980290950116959095049283018290048202880182019052818752929450925050830182828015613ba15780601f10613b7657610100808354040283529160200191613ba1565b820191906000526020600020905b815481529060010190602001808311613b8457829003601f168201915b50505050509050919050565b6004546001600160a01b031681565b6014546001600160a01b031681565b6012546000906001600160a01b03163314613be557600080fd5b6060806000613bf58884846128ca565b601454604080518b815283151560208201526001600160a01b0392831681830152606081018b9052918916608083015260a08201889052519192507fd3e5b1d14681444d8159fa85b57104b685f47fb9164fd82b7fafe4e123dcc3a1919081900360c00190a1979650505050505050565b6000806000806015549050613c79615363565b600854600160ff9091161015613c905760ff613c93565b60005b60ff9081168252600854600a91161015613cae5760ff613cb1565b60005b60ff1660208201526013546001600160a01b031615613e5557600080600080601360009054906101000a90046001600160a01b03166001600160a01b03166374ba46098c8c8f6040518463ffffffff1660e01b8152600401808060200180602001846001600160a01b03166001600160a01b03168152602001838103835286818151815260200191508051906020019060200280838360005b83811015613d62578181015183820152602001613d4a565b50505050905001838103825285818151815260200191508051906020019060200280838360005b83811015613da1578181015183820152602001613d89565b505050509050019550505050505060806040518083038186803b158015613dc757600080fd5b505afa158015613ddb573d6000803e3d6000fd5b505050506040513d6080811015613df157600080fd5b50805160208201516040830151606090930151601554929750909550919350909150811115613e235760648552613e50565b60018416613e325760ff831685525b60028416613e445760ff821660208601525b60048416613e50578095505b505050505b805160209091015190989097509095509350505050565b6013546001600160a01b0316613e8957613e84614f5a565b613fd4565b6013546040805163327cf65360e21b815290516001600160a01b0390921691600091839163c9f3d94c9160048082019260209290919082900301818787803b158015613ed457600080fd5b505af1158015613ee8573d6000803e3d6000fd5b505050506040513d6020811015613efe57600080fd5b505190506064811415613f1857613f13614f5a565b613fd1565b8015613f2357600080fd5b604080516020808252600a8054600260001961010060018416150201909116049183018290527f403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b6593909291829182019084908015613fc25780601f10613f9757610100808354040283529160200191613fc2565b820191906000526020600020905b815481529060010190602001808311613fa557829003601f168201915b50509250505060405180910390a15b50505b565b613fde612fd6565b613fe757600080fd5b601280546001600160a01b0319166001600160a01b0392909216919091179055565b6014546000906001600160a01b0316331480612d395750612d39612fd6565b600a805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015612b665780601f10612b3b57610100808354040283529160200191612b66565b600061408d612d2f565b61409657600080fd5b6000826040516020018082805190602001908083835b602083106140cb5780518252601f1990920191602091820191016140ac565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012090506000600a604051602001808280546001816001161561010002031660029004801561416a5780601f1061414857610100808354040283529182019161416a565b820191906000526020600020905b815481529060010190602001808311614156575b50509150506040516020818303038152906040528051906020012090508082141561433a57600c546141bf576040805160208101918290526000908190526141b491600a916152f5565b506000600b5561425e565b600080805b600c548110156142135781600d82815481106141dc57fe5b9060005260206000200154111561420b57809250600d81815481106141fd57fe5b906000526020600020015491505b6001016141c4565b50600c828154811061422157fe5b90600052602060002001600a908054600181600116156101000203166002900461424c929190615270565b50600b81905561425b8261501a565b50505b7f238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51600460009054906101000a90046001600160a01b031685600060405180846001600160a01b03166001600160a01b0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b838110156142f35781810151838201526020016142db565b50505050905090810190601f1680156143205780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a160009250505061230f565b60001960005b600c54811015614401576000600c828154811061435957fe5b9060005260206000200160405160200180828054600181600116156101000203166002900480156143c15780601f1061439f5761010080835404028352918201916143c1565b820191906000526020600020905b8154815290600101906020018083116143ad575b5050915050604051602081830303815290604052805190602001209050808514156143f8576143ef8261501a565b81925050614401565b50600101614340565b5080600019141561441157600080fd5b7f238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51600460009054906101000a90046001600160a01b0316868360405180846001600160a01b03166001600160a01b0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b838110156144a557818101518382015260200161448d565b50505050905090810190601f1680156144d25780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1949350505050565b6144f1612fd6565b6144fa57600080fd5b6013546000906001600160a01b03161561461757601360009054906101000a90046001600160a01b031690506000816001600160a01b031663860b24926040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561456357600080fd5b505af1158015614577573d6000803e3d6000fd5b505050506040513d602081101561458d57600080fd5b5051905060648114806145a157508061044c145b156145fe57816001600160a01b0316632de3ecd16040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156145e157600080fd5b505af11580156145f5573d6000803e3d6000fd5b50505050614615565b80158061460c5750806103e8145b61461557600080fd5b505b601380546001600160a01b0319166001600160a01b038416908117909155156146b5578190506000816001600160a01b0316637b1cdb3e6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561467a57600080fd5b505af115801561468e573d6000803e3d6000fd5b505050506040513d60208110156146a457600080fd5b5051905080156146b357600080fd5b505b601354604080516001600160a01b039092168252517fa6f2e38f0cfebf27212317fced3ac40bc62e00bd33f38d69603710740c69acb79181900360200190a15050565b614701336122ea565b61470a57600080fd5b602082511161476257815180830151600081815260056020526040812091929161473391615381565b82511561475b5760008281526005602090815260409091208451614759928601906152f5565b505b505061484a565b6006826040518082805190602001908083835b602083106147945780518252601f199092019160209182019101614775565b51815160209384036101000a600019018019909216911617905292019485525060405193849003019092206147cd925090506000615381565b80511561484a57806006836040518082805190602001908083835b602083106148075780518252601f1990920191602091820191016147e8565b51815160209384036101000a6000190180199092169116179052920194855250604051938490038101909320845161484895919491909101925090506152f5565b505b7fe2b310ec9dabdc05229a748e07666c3bc9c46c6ef465cce30d0aa3aa64a0644c826040518080602001828103825283818151815260200191508051906020019080838360005b838110156148a9578181015183820152602001614891565b50505050905090810190601f1680156148d65780820380516001836020036101000a031916815260200191505b509250505060405180910390a15050565b606481565b6003546001600160a01b0316331461490357600080fd5b6001600160a01b03811661491657600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000614942612fd6565b61494b57600080fd5b60158290556040805183815290517f4114f8ef80b6de2161db580cbefa14e1892d15d3ebe2062c9914e4a5773114a39181900360200190a1505060155490565b604080516020808201939093523060601b81830152815180820360340181526054909101909152805191012090565b600084815260186020526040812060018101546003820154840111614ae3576040516001600160a01b0386169084156108fc029085906000818181858888f19350505050158015614a0f573d6000803e3d6000fd5b508281600301540181600301819055507fad58d18ea7292f887da6f15bb4f0badddaa33d169713d09cf49710acc7c3a5b9868587866040518085815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019080838360005b83811015614aa5578181015183820152602001614a8d565b50505050905090810190601f168015614ad25780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a15b50600195945050505050565b6000614afc838787615116565b6013546001600160a01b031615614c3457601354604051637cda550160e11b8152600481018981526001600160a01b0386811660648401526080602484019081528a5160848501528a519190941693600093859363f9b4aa02938e938e938e938d93909291604481019160a490910190602080890191028083838f5b83811015614b90578181015183820152602001614b78565b50505050905001838103825285818151815260200191508051906020019060200280838360005b83811015614bcf578181015183820152602001614bb7565b505050509050019650505050505050602060405180830381600087803b158015614bf857600080fd5b505af1158015614c0c573d6000803e3d6000fd5b505050506040513d6020811015614c2257600080fd5b505190508015614c3157600080fd5b50505b601454604080518981526001600160a01b039283166020820152808201879052918516606083015260808201849052517f545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c79181900360a00190a160005b8651811015614d0a57868181518110614ca657fe5b60200260200101516000801b14614d02577f515e0a48b385fce2a8e4d9f169a97c4f6ea669a752358f5e6ab37cc3c2e84c38878281518110614ce457fe5b60200260200101516040518082815260200191505060405180910390a15b600101614c91565b5060005b8551811015614da95760006001600160a01b0316868281518110614d2e57fe5b60200260200101516001600160a01b031614614da1577fb6e3239e521a6c66920ae634f8e921a37e6991d520ac44d52f8516397f41b684868281518110614d7157fe5b602002602001015160405180826001600160a01b03166001600160a01b0316815260200191505060405180910390a15b600101614d0e565b50959695505050505050565b600354600090819081906001600160a01b0385811691161480614de05750600854600a60ff90911610155b15614df5575050601554600091508190614f53565b60048054604080516363e6ffdd60e01b81526001600160a01b03888116948201949094529051929091169160009183916363e6ffdd91602480820192602092909190829003018186803b158015614e4b57600080fd5b505afa158015614e5f573d6000803e3d6000fd5b505050506040513d6020811015614e7557600080fd5b505190506001600160a01b03811615614eae57614e91866130e4565b151560011415614eae575050601554600093508392509050614f53565b601454604080516329d0021960e01b81526001600160a01b038981166004830152915191909216916329d00219916024808301926020929190829003018186803b158015614efb57600080fd5b505afa158015614f0f573d6000803e3d6000fd5b505050506040513d6020811015614f2557600080fd5b5051151560011415614f44575050601554600093508392509050614f53565b5050601554600a935083925090505b9193909250565b614f62612fd6565b614f6b57600080fd5b604080516020808252600a8054600260001961010060018416150201909116049183018290527f403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b659390929182918201908490801561500a5780601f10614fdf5761010080835404028352916020019161500a565b820191906000526020600020905b815481529060010190602001808311614fed57829003601f168201915b50509250505060405180910390a1565b600c818154811061502757fe5b90600052602060002001600061503d9190615381565b600d818154811061504a57fe5b6000918252602082200155600c546000190181146150ec57600c8054600019810190811061507457fe5b90600052602060002001600c828154811061508b57fe5b9060005260206000200190805460018160011615610100020316600290046150b4929190615270565b50600d805460001981019081106150c757fe5b9060005260206000200154600d82815481106150df57fe5b6000918252602090912001555b600c8054906150ff9060001983016153c5565b50600d805490613fd19060001983016153ee565b50565b6000806000615126868686612e05565b94509092509050606460ff82161415615152578234101561514657600080fd5b61514e615168565b5060005b60ff81161561516057600080fd5b505050505050565b60048054604080516363e6ffdd60e01b81523393810193909352516000926001600160a01b03909216916363e6ffdd916024808301926020929190829003018186803b1580156151b757600080fd5b505afa1580156151cb573d6000803e3d6000fd5b505050506040513d60208110156151e157600080fd5b505160408051635c7f8edd60e11b8152905191925082916001600160a01b0383169163b8ff1dba91600480830192600092919082900301818387803b15801561522957600080fd5b505af1158015615160573d6000803e3d6000fd5b604051806080016040528060006001600160a01b03168152602001600081526020016000800b8152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106152a957805485556152e5565b828001600101855582156152e557600052602060002091601f016020900482015b828111156152e55782548255916001019190600101906152ca565b506152f192915061540e565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061533657805160ff19168380011785556152e5565b828001600101855582156152e5579182015b828111156152e5578251825591602001919060010190615348565b60405180604001604052806002906020820280388339509192915050565b50805460018160011615610100020316600290046000825580601f106153a75750615113565b601f016020900490600052602060002090810190615113919061540e565b8154818355818111156153e9576000838152602090206153e9918101908301615428565b505050565b8154818355818111156153e9576000838152602090206153e99181019083015b611a3491905b808211156152f15760008155600101615414565b611a3491905b808211156152f15760006154428282615381565b5060010161542e56fea265627a7a72315820c00a2b89d6d223f5552870792af4c0f56e6333876014ea12c676e73bbe44b14864736f6c63430005110032"

// DeployBaseContent deploys a new Ethereum contract, binding an instance of BaseContent to it.
func DeployBaseContent(auth *bind.TransactOpts, backend bind.ContractBackend, content_space common.Address, lib common.Address, content_type common.Address) (common.Address, *types.Transaction, *BaseContent, error) {
	parsed, err := abi.JSON(strings.NewReader(BaseContentABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(BaseContentBin), backend, content_space, lib, content_type)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &BaseContent{BaseContentCaller: BaseContentCaller{contract: contract}, BaseContentTransactor: BaseContentTransactor{contract: contract}, BaseContentFilterer: BaseContentFilterer{contract: contract}}, nil
}

// BaseContent is an auto generated Go binding around an Ethereum contract.
type BaseContent struct {
	BaseContentCaller     // Read-only binding to the contract
	BaseContentTransactor // Write-only binding to the contract
	BaseContentFilterer   // Log filterer for contract events
}

// BaseContentCaller is an auto generated read-only Go binding around an Ethereum contract.
type BaseContentCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseContentTransactor is an auto generated write-only Go binding around an Ethereum contract.
type BaseContentTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseContentFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type BaseContentFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseContentSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type BaseContentSession struct {
	Contract     *BaseContent      // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// BaseContentCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type BaseContentCallerSession struct {
	Contract *BaseContentCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts      // Call options to use throughout this session
}

// BaseContentTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type BaseContentTransactorSession struct {
	Contract     *BaseContentTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts      // Transaction auth options to use throughout this session
}

// BaseContentRaw is an auto generated low-level Go binding around an Ethereum contract.
type BaseContentRaw struct {
	Contract *BaseContent // Generic contract binding to access the raw methods on
}

// BaseContentCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type BaseContentCallerRaw struct {
	Contract *BaseContentCaller // Generic read-only contract binding to access the raw methods on
}

// BaseContentTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type BaseContentTransactorRaw struct {
	Contract *BaseContentTransactor // Generic write-only contract binding to access the raw methods on
}

// NewBaseContent creates a new instance of BaseContent, bound to a specific deployed contract.
func NewBaseContent(address common.Address, backend bind.ContractBackend) (*BaseContent, error) {
	contract, err := bindBaseContent(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &BaseContent{BaseContentCaller: BaseContentCaller{contract: contract}, BaseContentTransactor: BaseContentTransactor{contract: contract}, BaseContentFilterer: BaseContentFilterer{contract: contract}}, nil
}

// NewBaseContentCaller creates a new read-only instance of BaseContent, bound to a specific deployed contract.
func NewBaseContentCaller(address common.Address, caller bind.ContractCaller) (*BaseContentCaller, error) {
	contract, err := bindBaseContent(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &BaseContentCaller{contract: contract}, nil
}

// NewBaseContentTransactor creates a new write-only instance of BaseContent, bound to a specific deployed contract.
func NewBaseContentTransactor(address common.Address, transactor bind.ContractTransactor) (*BaseContentTransactor, error) {
	contract, err := bindBaseContent(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &BaseContentTransactor{contract: contract}, nil
}

// NewBaseContentFilterer creates a new log filterer instance of BaseContent, bound to a specific deployed contract.
func NewBaseContentFilterer(address common.Address, filterer bind.ContractFilterer) (*BaseContentFilterer, error) {
	contract, err := bindBaseContent(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &BaseContentFilterer{contract: contract}, nil
}

// bindBaseContent binds a generic wrapper to an already deployed contract.
func bindBaseContent(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(BaseContentABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BaseContent *BaseContentRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BaseContent.Contract.BaseContentCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BaseContent *BaseContentRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseContent.Contract.BaseContentTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BaseContent *BaseContentRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BaseContent.Contract.BaseContentTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BaseContent *BaseContentCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BaseContent.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BaseContent *BaseContentTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseContent.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BaseContent *BaseContentTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BaseContent.Contract.contract.Transact(opts, method, params...)
}

// CANACCESS is a free data retrieval call binding the contract method 0x97ac4fd2.
//
// Solidity: function CAN_ACCESS() constant returns(uint8)
func (_BaseContent *BaseContentCaller) CANACCESS(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseContent.contract.Call(opts, out, "CAN_ACCESS")
	return *ret0, err
}

// CANACCESS is a free data retrieval call binding the contract method 0x97ac4fd2.
//
// Solidity: function CAN_ACCESS() constant returns(uint8)
func (_BaseContent *BaseContentSession) CANACCESS() (uint8, error) {
	return _BaseContent.Contract.CANACCESS(&_BaseContent.CallOpts)
}

// CANACCESS is a free data retrieval call binding the contract method 0x97ac4fd2.
//
// Solidity: function CAN_ACCESS() constant returns(uint8)
func (_BaseContent *BaseContentCallerSession) CANACCESS() (uint8, error) {
	return _BaseContent.Contract.CANACCESS(&_BaseContent.CallOpts)
}

// CANEDIT is a free data retrieval call binding the contract method 0xef1d7dc2.
//
// Solidity: function CAN_EDIT() constant returns(uint8)
func (_BaseContent *BaseContentCaller) CANEDIT(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseContent.contract.Call(opts, out, "CAN_EDIT")
	return *ret0, err
}

// CANEDIT is a free data retrieval call binding the contract method 0xef1d7dc2.
//
// Solidity: function CAN_EDIT() constant returns(uint8)
func (_BaseContent *BaseContentSession) CANEDIT() (uint8, error) {
	return _BaseContent.Contract.CANEDIT(&_BaseContent.CallOpts)
}

// CANEDIT is a free data retrieval call binding the contract method 0xef1d7dc2.
//
// Solidity: function CAN_EDIT() constant returns(uint8)
func (_BaseContent *BaseContentCallerSession) CANEDIT() (uint8, error) {
	return _BaseContent.Contract.CANEDIT(&_BaseContent.CallOpts)
}

// CANSEE is a free data retrieval call binding the contract method 0x100508a2.
//
// Solidity: function CAN_SEE() constant returns(uint8)
func (_BaseContent *BaseContentCaller) CANSEE(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseContent.contract.Call(opts, out, "CAN_SEE")
	return *ret0, err
}

// CANSEE is a free data retrieval call binding the contract method 0x100508a2.
//
// Solidity: function CAN_SEE() constant returns(uint8)
func (_BaseContent *BaseContentSession) CANSEE() (uint8, error) {
	return _BaseContent.Contract.CANSEE(&_BaseContent.CallOpts)
}

// CANSEE is a free data retrieval call binding the contract method 0x100508a2.
//
// Solidity: function CAN_SEE() constant returns(uint8)
func (_BaseContent *BaseContentCallerSession) CANSEE() (uint8, error) {
	return _BaseContent.Contract.CANSEE(&_BaseContent.CallOpts)
}

// AccessCharge is a free data retrieval call binding the contract method 0x64ade32b.
//
// Solidity: function accessCharge() constant returns(uint256)
func (_BaseContent *BaseContentCaller) AccessCharge(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseContent.contract.Call(opts, out, "accessCharge")
	return *ret0, err
}

// AccessCharge is a free data retrieval call binding the contract method 0x64ade32b.
//
// Solidity: function accessCharge() constant returns(uint256)
func (_BaseContent *BaseContentSession) AccessCharge() (*big.Int, error) {
	return _BaseContent.Contract.AccessCharge(&_BaseContent.CallOpts)
}

// AccessCharge is a free data retrieval call binding the contract method 0x64ade32b.
//
// Solidity: function accessCharge() constant returns(uint256)
func (_BaseContent *BaseContentCallerSession) AccessCharge() (*big.Int, error) {
	return _BaseContent.Contract.AccessCharge(&_BaseContent.CallOpts)
}

// AddressKMS is a free data retrieval call binding the contract method 0x32eaf21b.
//
// Solidity: function addressKMS() constant returns(address)
func (_BaseContent *BaseContentCaller) AddressKMS(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseContent.contract.Call(opts, out, "addressKMS")
	return *ret0, err
}

// AddressKMS is a free data retrieval call binding the contract method 0x32eaf21b.
//
// Solidity: function addressKMS() constant returns(address)
func (_BaseContent *BaseContentSession) AddressKMS() (common.Address, error) {
	return _BaseContent.Contract.AddressKMS(&_BaseContent.CallOpts)
}

// AddressKMS is a free data retrieval call binding the contract method 0x32eaf21b.
//
// Solidity: function addressKMS() constant returns(address)
func (_BaseContent *BaseContentCallerSession) AddressKMS() (common.Address, error) {
	return _BaseContent.Contract.AddressKMS(&_BaseContent.CallOpts)
}

// CanCommit is a free data retrieval call binding the contract method 0x6e375427.
//
// Solidity: function canCommit() constant returns(bool)
func (_BaseContent *BaseContentCaller) CanCommit(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseContent.contract.Call(opts, out, "canCommit")
	return *ret0, err
}

// CanCommit is a free data retrieval call binding the contract method 0x6e375427.
//
// Solidity: function canCommit() constant returns(bool)
func (_BaseContent *BaseContentSession) CanCommit() (bool, error) {
	return _BaseContent.Contract.CanCommit(&_BaseContent.CallOpts)
}

// CanCommit is a free data retrieval call binding the contract method 0x6e375427.
//
// Solidity: function canCommit() constant returns(bool)
func (_BaseContent *BaseContentCallerSession) CanCommit() (bool, error) {
	return _BaseContent.Contract.CanCommit(&_BaseContent.CallOpts)
}

// CanConfirm is a free data retrieval call binding the contract method 0x14cfabb3.
//
// Solidity: function canConfirm() constant returns(bool)
func (_BaseContent *BaseContentCaller) CanConfirm(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseContent.contract.Call(opts, out, "canConfirm")
	return *ret0, err
}

// CanConfirm is a free data retrieval call binding the contract method 0x14cfabb3.
//
// Solidity: function canConfirm() constant returns(bool)
func (_BaseContent *BaseContentSession) CanConfirm() (bool, error) {
	return _BaseContent.Contract.CanConfirm(&_BaseContent.CallOpts)
}

// CanConfirm is a free data retrieval call binding the contract method 0x14cfabb3.
//
// Solidity: function canConfirm() constant returns(bool)
func (_BaseContent *BaseContentCallerSession) CanConfirm() (bool, error) {
	return _BaseContent.Contract.CanConfirm(&_BaseContent.CallOpts)
}

// CanEdit is a free data retrieval call binding the contract method 0x81beeb64.
//
// Solidity: function canEdit() constant returns(bool)
func (_BaseContent *BaseContentCaller) CanEdit(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseContent.contract.Call(opts, out, "canEdit")
	return *ret0, err
}

// CanEdit is a free data retrieval call binding the contract method 0x81beeb64.
//
// Solidity: function canEdit() constant returns(bool)
func (_BaseContent *BaseContentSession) CanEdit() (bool, error) {
	return _BaseContent.Contract.CanEdit(&_BaseContent.CallOpts)
}

// CanEdit is a free data retrieval call binding the contract method 0x81beeb64.
//
// Solidity: function canEdit() constant returns(bool)
func (_BaseContent *BaseContentCallerSession) CanEdit() (bool, error) {
	return _BaseContent.Contract.CanEdit(&_BaseContent.CallOpts)
}

// CanPublish is a free data retrieval call binding the contract method 0xcbcd4461.
//
// Solidity: function canPublish() constant returns(bool)
func (_BaseContent *BaseContentCaller) CanPublish(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseContent.contract.Call(opts, out, "canPublish")
	return *ret0, err
}

// CanPublish is a free data retrieval call binding the contract method 0xcbcd4461.
//
// Solidity: function canPublish() constant returns(bool)
func (_BaseContent *BaseContentSession) CanPublish() (bool, error) {
	return _BaseContent.Contract.CanPublish(&_BaseContent.CallOpts)
}

// CanPublish is a free data retrieval call binding the contract method 0xcbcd4461.
//
// Solidity: function canPublish() constant returns(bool)
func (_BaseContent *BaseContentCallerSession) CanPublish() (bool, error) {
	return _BaseContent.Contract.CanPublish(&_BaseContent.CallOpts)
}

// CommitPending is a free data retrieval call binding the contract method 0x375a6e7c.
//
// Solidity: function commitPending() constant returns(bool)
func (_BaseContent *BaseContentCaller) CommitPending(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseContent.contract.Call(opts, out, "commitPending")
	return *ret0, err
}

// CommitPending is a free data retrieval call binding the contract method 0x375a6e7c.
//
// Solidity: function commitPending() constant returns(bool)
func (_BaseContent *BaseContentSession) CommitPending() (bool, error) {
	return _BaseContent.Contract.CommitPending(&_BaseContent.CallOpts)
}

// CommitPending is a free data retrieval call binding the contract method 0x375a6e7c.
//
// Solidity: function commitPending() constant returns(bool)
func (_BaseContent *BaseContentCallerSession) CommitPending() (bool, error) {
	return _BaseContent.Contract.CommitPending(&_BaseContent.CallOpts)
}

// ContentContractAddress is a free data retrieval call binding the contract method 0x2310167f.
//
// Solidity: function contentContractAddress() constant returns(address)
func (_BaseContent *BaseContentCaller) ContentContractAddress(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseContent.contract.Call(opts, out, "contentContractAddress")
	return *ret0, err
}

// ContentContractAddress is a free data retrieval call binding the contract method 0x2310167f.
//
// Solidity: function contentContractAddress() constant returns(address)
func (_BaseContent *BaseContentSession) ContentContractAddress() (common.Address, error) {
	return _BaseContent.Contract.ContentContractAddress(&_BaseContent.CallOpts)
}

// ContentContractAddress is a free data retrieval call binding the contract method 0x2310167f.
//
// Solidity: function contentContractAddress() constant returns(address)
func (_BaseContent *BaseContentCallerSession) ContentContractAddress() (common.Address, error) {
	return _BaseContent.Contract.ContentContractAddress(&_BaseContent.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseContent *BaseContentCaller) ContentSpace(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseContent.contract.Call(opts, out, "contentSpace")
	return *ret0, err
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseContent *BaseContentSession) ContentSpace() (common.Address, error) {
	return _BaseContent.Contract.ContentSpace(&_BaseContent.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseContent *BaseContentCallerSession) ContentSpace() (common.Address, error) {
	return _BaseContent.Contract.ContentSpace(&_BaseContent.CallOpts)
}

// ContentType is a free data retrieval call binding the contract method 0x36ebffca.
//
// Solidity: function contentType() constant returns(address)
func (_BaseContent *BaseContentCaller) ContentType(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseContent.contract.Call(opts, out, "contentType")
	return *ret0, err
}

// ContentType is a free data retrieval call binding the contract method 0x36ebffca.
//
// Solidity: function contentType() constant returns(address)
func (_BaseContent *BaseContentSession) ContentType() (common.Address, error) {
	return _BaseContent.Contract.ContentType(&_BaseContent.CallOpts)
}

// ContentType is a free data retrieval call binding the contract method 0x36ebffca.
//
// Solidity: function contentType() constant returns(address)
func (_BaseContent *BaseContentCallerSession) ContentType() (common.Address, error) {
	return _BaseContent.Contract.ContentType(&_BaseContent.CallOpts)
}

// CountVersionHashes is a free data retrieval call binding the contract method 0x331b86c0.
//
// Solidity: function countVersionHashes() constant returns(uint256)
func (_BaseContent *BaseContentCaller) CountVersionHashes(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseContent.contract.Call(opts, out, "countVersionHashes")
	return *ret0, err
}

// CountVersionHashes is a free data retrieval call binding the contract method 0x331b86c0.
//
// Solidity: function countVersionHashes() constant returns(uint256)
func (_BaseContent *BaseContentSession) CountVersionHashes() (*big.Int, error) {
	return _BaseContent.Contract.CountVersionHashes(&_BaseContent.CallOpts)
}

// CountVersionHashes is a free data retrieval call binding the contract method 0x331b86c0.
//
// Solidity: function countVersionHashes() constant returns(uint256)
func (_BaseContent *BaseContentCallerSession) CountVersionHashes() (*big.Int, error) {
	return _BaseContent.Contract.CountVersionHashes(&_BaseContent.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseContent *BaseContentCaller) Creator(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseContent.contract.Call(opts, out, "creator")
	return *ret0, err
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseContent *BaseContentSession) Creator() (common.Address, error) {
	return _BaseContent.Contract.Creator(&_BaseContent.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseContent *BaseContentCallerSession) Creator() (common.Address, error) {
	return _BaseContent.Contract.Creator(&_BaseContent.CallOpts)
}

// GetAccessInfo is a free data retrieval call binding the contract method 0x38d0f504.
//
// Solidity: function getAccessInfo(uint8 , bytes32[] customValues, address[] stakeholders) constant returns(uint8, uint8, uint256)
func (_BaseContent *BaseContentCaller) GetAccessInfo(opts *bind.CallOpts, arg0 uint8, customValues [][32]byte, stakeholders []common.Address) (uint8, uint8, *big.Int, error) {
	var (
		ret0 = new(uint8)
		ret1 = new(uint8)
		ret2 = new(*big.Int)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
	}
	err := _BaseContent.contract.Call(opts, out, "getAccessInfo", arg0, customValues, stakeholders)
	return *ret0, *ret1, *ret2, err
}

// GetAccessInfo is a free data retrieval call binding the contract method 0x38d0f504.
//
// Solidity: function getAccessInfo(uint8 , bytes32[] customValues, address[] stakeholders) constant returns(uint8, uint8, uint256)
func (_BaseContent *BaseContentSession) GetAccessInfo(arg0 uint8, customValues [][32]byte, stakeholders []common.Address) (uint8, uint8, *big.Int, error) {
	return _BaseContent.Contract.GetAccessInfo(&_BaseContent.CallOpts, arg0, customValues, stakeholders)
}

// GetAccessInfo is a free data retrieval call binding the contract method 0x38d0f504.
//
// Solidity: function getAccessInfo(uint8 , bytes32[] customValues, address[] stakeholders) constant returns(uint8, uint8, uint256)
func (_BaseContent *BaseContentCallerSession) GetAccessInfo(arg0 uint8, customValues [][32]byte, stakeholders []common.Address) (uint8, uint8, *big.Int, error) {
	return _BaseContent.Contract.GetAccessInfo(&_BaseContent.CallOpts, arg0, customValues, stakeholders)
}

// GetAccessInfoV3 is a free data retrieval call binding the contract method 0x7ddc2c56.
//
// Solidity: function getAccessInfoV3(address accessor, bytes32[] customValues, address[] stakeholders) constant returns(uint8, uint8, uint256)
func (_BaseContent *BaseContentCaller) GetAccessInfoV3(opts *bind.CallOpts, accessor common.Address, customValues [][32]byte, stakeholders []common.Address) (uint8, uint8, *big.Int, error) {
	var (
		ret0 = new(uint8)
		ret1 = new(uint8)
		ret2 = new(*big.Int)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
	}
	err := _BaseContent.contract.Call(opts, out, "getAccessInfoV3", accessor, customValues, stakeholders)
	return *ret0, *ret1, *ret2, err
}

// GetAccessInfoV3 is a free data retrieval call binding the contract method 0x7ddc2c56.
//
// Solidity: function getAccessInfoV3(address accessor, bytes32[] customValues, address[] stakeholders) constant returns(uint8, uint8, uint256)
func (_BaseContent *BaseContentSession) GetAccessInfoV3(accessor common.Address, customValues [][32]byte, stakeholders []common.Address) (uint8, uint8, *big.Int, error) {
	return _BaseContent.Contract.GetAccessInfoV3(&_BaseContent.CallOpts, accessor, customValues, stakeholders)
}

// GetAccessInfoV3 is a free data retrieval call binding the contract method 0x7ddc2c56.
//
// Solidity: function getAccessInfoV3(address accessor, bytes32[] customValues, address[] stakeholders) constant returns(uint8, uint8, uint256)
func (_BaseContent *BaseContentCallerSession) GetAccessInfoV3(accessor common.Address, customValues [][32]byte, stakeholders []common.Address) (uint8, uint8, *big.Int, error) {
	return _BaseContent.Contract.GetAccessInfoV3(&_BaseContent.CallOpts, accessor, customValues, stakeholders)
}

// GetCustomInfo is a free data retrieval call binding the contract method 0xc26484a6.
//
// Solidity: function getCustomInfo(address accessor, bytes32[] customValues, address[] stakeholders) constant returns(uint8, uint8, uint256)
func (_BaseContent *BaseContentCaller) GetCustomInfo(opts *bind.CallOpts, accessor common.Address, customValues [][32]byte, stakeholders []common.Address) (uint8, uint8, *big.Int, error) {
	var (
		ret0 = new(uint8)
		ret1 = new(uint8)
		ret2 = new(*big.Int)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
	}
	err := _BaseContent.contract.Call(opts, out, "getCustomInfo", accessor, customValues, stakeholders)
	return *ret0, *ret1, *ret2, err
}

// GetCustomInfo is a free data retrieval call binding the contract method 0xc26484a6.
//
// Solidity: function getCustomInfo(address accessor, bytes32[] customValues, address[] stakeholders) constant returns(uint8, uint8, uint256)
func (_BaseContent *BaseContentSession) GetCustomInfo(accessor common.Address, customValues [][32]byte, stakeholders []common.Address) (uint8, uint8, *big.Int, error) {
	return _BaseContent.Contract.GetCustomInfo(&_BaseContent.CallOpts, accessor, customValues, stakeholders)
}

// GetCustomInfo is a free data retrieval call binding the contract method 0xc26484a6.
//
// Solidity: function getCustomInfo(address accessor, bytes32[] customValues, address[] stakeholders) constant returns(uint8, uint8, uint256)
func (_BaseContent *BaseContentCallerSession) GetCustomInfo(accessor common.Address, customValues [][32]byte, stakeholders []common.Address) (uint8, uint8, *big.Int, error) {
	return _BaseContent.Contract.GetCustomInfo(&_BaseContent.CallOpts, accessor, customValues, stakeholders)
}

// GetKMSInfo is a free data retrieval call binding the contract method 0xa8d4160e.
//
// Solidity: function getKMSInfo(bytes prefix) constant returns(string, string)
func (_BaseContent *BaseContentCaller) GetKMSInfo(opts *bind.CallOpts, prefix []byte) (string, string, error) {
	var (
		ret0 = new(string)
		ret1 = new(string)
	)
	out := &[]interface{}{
		ret0,
		ret1,
	}
	err := _BaseContent.contract.Call(opts, out, "getKMSInfo", prefix)
	return *ret0, *ret1, err
}

// GetKMSInfo is a free data retrieval call binding the contract method 0xa8d4160e.
//
// Solidity: function getKMSInfo(bytes prefix) constant returns(string, string)
func (_BaseContent *BaseContentSession) GetKMSInfo(prefix []byte) (string, string, error) {
	return _BaseContent.Contract.GetKMSInfo(&_BaseContent.CallOpts, prefix)
}

// GetKMSInfo is a free data retrieval call binding the contract method 0xa8d4160e.
//
// Solidity: function getKMSInfo(bytes prefix) constant returns(string, string)
func (_BaseContent *BaseContentCallerSession) GetKMSInfo(prefix []byte) (string, string, error) {
	return _BaseContent.Contract.GetKMSInfo(&_BaseContent.CallOpts, prefix)
}

// GetMeta is a free data retrieval call binding the contract method 0xac55c906.
//
// Solidity: function getMeta(bytes key) constant returns(bytes)
func (_BaseContent *BaseContentCaller) GetMeta(opts *bind.CallOpts, key []byte) ([]byte, error) {
	var (
		ret0 = new([]byte)
	)
	out := ret0
	err := _BaseContent.contract.Call(opts, out, "getMeta", key)
	return *ret0, err
}

// GetMeta is a free data retrieval call binding the contract method 0xac55c906.
//
// Solidity: function getMeta(bytes key) constant returns(bytes)
func (_BaseContent *BaseContentSession) GetMeta(key []byte) ([]byte, error) {
	return _BaseContent.Contract.GetMeta(&_BaseContent.CallOpts, key)
}

// GetMeta is a free data retrieval call binding the contract method 0xac55c906.
//
// Solidity: function getMeta(bytes key) constant returns(bytes)
func (_BaseContent *BaseContentCallerSession) GetMeta(key []byte) ([]byte, error) {
	return _BaseContent.Contract.GetMeta(&_BaseContent.CallOpts, key)
}

// HasAccess is a free data retrieval call binding the contract method 0x95a078e8.
//
// Solidity: function hasAccess(address candidate) constant returns(bool)
func (_BaseContent *BaseContentCaller) HasAccess(opts *bind.CallOpts, candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseContent.contract.Call(opts, out, "hasAccess", candidate)
	return *ret0, err
}

// HasAccess is a free data retrieval call binding the contract method 0x95a078e8.
//
// Solidity: function hasAccess(address candidate) constant returns(bool)
func (_BaseContent *BaseContentSession) HasAccess(candidate common.Address) (bool, error) {
	return _BaseContent.Contract.HasAccess(&_BaseContent.CallOpts, candidate)
}

// HasAccess is a free data retrieval call binding the contract method 0x95a078e8.
//
// Solidity: function hasAccess(address candidate) constant returns(bool)
func (_BaseContent *BaseContentCallerSession) HasAccess(candidate common.Address) (bool, error) {
	return _BaseContent.Contract.HasAccess(&_BaseContent.CallOpts, candidate)
}

// HasEditorRight is a free data retrieval call binding the contract method 0x67e5c3bf.
//
// Solidity: function hasEditorRight(address candidate) constant returns(bool)
func (_BaseContent *BaseContentCaller) HasEditorRight(opts *bind.CallOpts, candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseContent.contract.Call(opts, out, "hasEditorRight", candidate)
	return *ret0, err
}

// HasEditorRight is a free data retrieval call binding the contract method 0x67e5c3bf.
//
// Solidity: function hasEditorRight(address candidate) constant returns(bool)
func (_BaseContent *BaseContentSession) HasEditorRight(candidate common.Address) (bool, error) {
	return _BaseContent.Contract.HasEditorRight(&_BaseContent.CallOpts, candidate)
}

// HasEditorRight is a free data retrieval call binding the contract method 0x67e5c3bf.
//
// Solidity: function hasEditorRight(address candidate) constant returns(bool)
func (_BaseContent *BaseContentCallerSession) HasEditorRight(candidate common.Address) (bool, error) {
	return _BaseContent.Contract.HasEditorRight(&_BaseContent.CallOpts, candidate)
}

// IndexCategory is a free data retrieval call binding the contract method 0x6380501f.
//
// Solidity: function indexCategory() constant returns(uint8)
func (_BaseContent *BaseContentCaller) IndexCategory(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseContent.contract.Call(opts, out, "indexCategory")
	return *ret0, err
}

// IndexCategory is a free data retrieval call binding the contract method 0x6380501f.
//
// Solidity: function indexCategory() constant returns(uint8)
func (_BaseContent *BaseContentSession) IndexCategory() (uint8, error) {
	return _BaseContent.Contract.IndexCategory(&_BaseContent.CallOpts)
}

// IndexCategory is a free data retrieval call binding the contract method 0x6380501f.
//
// Solidity: function indexCategory() constant returns(uint8)
func (_BaseContent *BaseContentCallerSession) IndexCategory() (uint8, error) {
	return _BaseContent.Contract.IndexCategory(&_BaseContent.CallOpts)
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(address _candidate) constant returns(bool)
func (_BaseContent *BaseContentCaller) IsAdmin(opts *bind.CallOpts, _candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseContent.contract.Call(opts, out, "isAdmin", _candidate)
	return *ret0, err
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(address _candidate) constant returns(bool)
func (_BaseContent *BaseContentSession) IsAdmin(_candidate common.Address) (bool, error) {
	return _BaseContent.Contract.IsAdmin(&_BaseContent.CallOpts, _candidate)
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(address _candidate) constant returns(bool)
func (_BaseContent *BaseContentCallerSession) IsAdmin(_candidate common.Address) (bool, error) {
	return _BaseContent.Contract.IsAdmin(&_BaseContent.CallOpts, _candidate)
}

// LibraryAddress is a free data retrieval call binding the contract method 0xb816f513.
//
// Solidity: function libraryAddress() constant returns(address)
func (_BaseContent *BaseContentCaller) LibraryAddress(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseContent.contract.Call(opts, out, "libraryAddress")
	return *ret0, err
}

// LibraryAddress is a free data retrieval call binding the contract method 0xb816f513.
//
// Solidity: function libraryAddress() constant returns(address)
func (_BaseContent *BaseContentSession) LibraryAddress() (common.Address, error) {
	return _BaseContent.Contract.LibraryAddress(&_BaseContent.CallOpts)
}

// LibraryAddress is a free data retrieval call binding the contract method 0xb816f513.
//
// Solidity: function libraryAddress() constant returns(address)
func (_BaseContent *BaseContentCallerSession) LibraryAddress() (common.Address, error) {
	return _BaseContent.Contract.LibraryAddress(&_BaseContent.CallOpts)
}

// ObjectHash is a free data retrieval call binding the contract method 0xe02dd9c2.
//
// Solidity: function objectHash() constant returns(string)
func (_BaseContent *BaseContentCaller) ObjectHash(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BaseContent.contract.Call(opts, out, "objectHash")
	return *ret0, err
}

// ObjectHash is a free data retrieval call binding the contract method 0xe02dd9c2.
//
// Solidity: function objectHash() constant returns(string)
func (_BaseContent *BaseContentSession) ObjectHash() (string, error) {
	return _BaseContent.Contract.ObjectHash(&_BaseContent.CallOpts)
}

// ObjectHash is a free data retrieval call binding the contract method 0xe02dd9c2.
//
// Solidity: function objectHash() constant returns(string)
func (_BaseContent *BaseContentCallerSession) ObjectHash() (string, error) {
	return _BaseContent.Contract.ObjectHash(&_BaseContent.CallOpts)
}

// ObjectTimestamp is a free data retrieval call binding the contract method 0x40b87a26.
//
// Solidity: function objectTimestamp() constant returns(uint256)
func (_BaseContent *BaseContentCaller) ObjectTimestamp(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseContent.contract.Call(opts, out, "objectTimestamp")
	return *ret0, err
}

// ObjectTimestamp is a free data retrieval call binding the contract method 0x40b87a26.
//
// Solidity: function objectTimestamp() constant returns(uint256)
func (_BaseContent *BaseContentSession) ObjectTimestamp() (*big.Int, error) {
	return _BaseContent.Contract.ObjectTimestamp(&_BaseContent.CallOpts)
}

// ObjectTimestamp is a free data retrieval call binding the contract method 0x40b87a26.
//
// Solidity: function objectTimestamp() constant returns(uint256)
func (_BaseContent *BaseContentCallerSession) ObjectTimestamp() (*big.Int, error) {
	return _BaseContent.Contract.ObjectTimestamp(&_BaseContent.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseContent *BaseContentCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseContent.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseContent *BaseContentSession) Owner() (common.Address, error) {
	return _BaseContent.Contract.Owner(&_BaseContent.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseContent *BaseContentCallerSession) Owner() (common.Address, error) {
	return _BaseContent.Contract.Owner(&_BaseContent.CallOpts)
}

// ParentAddress is a free data retrieval call binding the contract method 0x00821de3.
//
// Solidity: function parentAddress() constant returns(address)
func (_BaseContent *BaseContentCaller) ParentAddress(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseContent.contract.Call(opts, out, "parentAddress")
	return *ret0, err
}

// ParentAddress is a free data retrieval call binding the contract method 0x00821de3.
//
// Solidity: function parentAddress() constant returns(address)
func (_BaseContent *BaseContentSession) ParentAddress() (common.Address, error) {
	return _BaseContent.Contract.ParentAddress(&_BaseContent.CallOpts)
}

// ParentAddress is a free data retrieval call binding the contract method 0x00821de3.
//
// Solidity: function parentAddress() constant returns(address)
func (_BaseContent *BaseContentCallerSession) ParentAddress() (common.Address, error) {
	return _BaseContent.Contract.ParentAddress(&_BaseContent.CallOpts)
}

// PendingHash is a free data retrieval call binding the contract method 0x628449fd.
//
// Solidity: function pendingHash() constant returns(string)
func (_BaseContent *BaseContentCaller) PendingHash(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BaseContent.contract.Call(opts, out, "pendingHash")
	return *ret0, err
}

// PendingHash is a free data retrieval call binding the contract method 0x628449fd.
//
// Solidity: function pendingHash() constant returns(string)
func (_BaseContent *BaseContentSession) PendingHash() (string, error) {
	return _BaseContent.Contract.PendingHash(&_BaseContent.CallOpts)
}

// PendingHash is a free data retrieval call binding the contract method 0x628449fd.
//
// Solidity: function pendingHash() constant returns(string)
func (_BaseContent *BaseContentCallerSession) PendingHash() (string, error) {
	return _BaseContent.Contract.PendingHash(&_BaseContent.CallOpts)
}

// RequestID is a free data retrieval call binding the contract method 0x8f779201.
//
// Solidity: function requestID() constant returns(uint256)
func (_BaseContent *BaseContentCaller) RequestID(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseContent.contract.Call(opts, out, "requestID")
	return *ret0, err
}

// RequestID is a free data retrieval call binding the contract method 0x8f779201.
//
// Solidity: function requestID() constant returns(uint256)
func (_BaseContent *BaseContentSession) RequestID() (*big.Int, error) {
	return _BaseContent.Contract.RequestID(&_BaseContent.CallOpts)
}

// RequestID is a free data retrieval call binding the contract method 0x8f779201.
//
// Solidity: function requestID() constant returns(uint256)
func (_BaseContent *BaseContentCallerSession) RequestID() (*big.Int, error) {
	return _BaseContent.Contract.RequestID(&_BaseContent.CallOpts)
}

// RequestMap is a free data retrieval call binding the contract method 0x1a735f18.
//
// Solidity: function requestMap(uint256 ) constant returns(address originator, uint256 amountPaid, int8 status, uint256 settled)
func (_BaseContent *BaseContentCaller) RequestMap(opts *bind.CallOpts, arg0 *big.Int) (struct {
	Originator common.Address
	AmountPaid *big.Int
	Status     int8
	Settled    *big.Int
}, error) {
	ret := new(struct {
		Originator common.Address
		AmountPaid *big.Int
		Status     int8
		Settled    *big.Int
	})
	out := ret
	err := _BaseContent.contract.Call(opts, out, "requestMap", arg0)
	return *ret, err
}

// RequestMap is a free data retrieval call binding the contract method 0x1a735f18.
//
// Solidity: function requestMap(uint256 ) constant returns(address originator, uint256 amountPaid, int8 status, uint256 settled)
func (_BaseContent *BaseContentSession) RequestMap(arg0 *big.Int) (struct {
	Originator common.Address
	AmountPaid *big.Int
	Status     int8
	Settled    *big.Int
}, error) {
	return _BaseContent.Contract.RequestMap(&_BaseContent.CallOpts, arg0)
}

// RequestMap is a free data retrieval call binding the contract method 0x1a735f18.
//
// Solidity: function requestMap(uint256 ) constant returns(address originator, uint256 amountPaid, int8 status, uint256 settled)
func (_BaseContent *BaseContentCallerSession) RequestMap(arg0 *big.Int) (struct {
	Originator common.Address
	AmountPaid *big.Int
	Status     int8
	Settled    *big.Int
}, error) {
	return _BaseContent.Contract.RequestMap(&_BaseContent.CallOpts, arg0)
}

// StatusCode is a free data retrieval call binding the contract method 0x27c1c21d.
//
// Solidity: function statusCode() constant returns(int256)
func (_BaseContent *BaseContentCaller) StatusCode(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseContent.contract.Call(opts, out, "statusCode")
	return *ret0, err
}

// StatusCode is a free data retrieval call binding the contract method 0x27c1c21d.
//
// Solidity: function statusCode() constant returns(int256)
func (_BaseContent *BaseContentSession) StatusCode() (*big.Int, error) {
	return _BaseContent.Contract.StatusCode(&_BaseContent.CallOpts)
}

// StatusCode is a free data retrieval call binding the contract method 0x27c1c21d.
//
// Solidity: function statusCode() constant returns(int256)
func (_BaseContent *BaseContentCallerSession) StatusCode() (*big.Int, error) {
	return _BaseContent.Contract.StatusCode(&_BaseContent.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseContent *BaseContentCaller) Version(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _BaseContent.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseContent *BaseContentSession) Version() ([32]byte, error) {
	return _BaseContent.Contract.Version(&_BaseContent.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseContent *BaseContentCallerSession) Version() ([32]byte, error) {
	return _BaseContent.Contract.Version(&_BaseContent.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseContent *BaseContentCaller) VersionAPI(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _BaseContent.contract.Call(opts, out, "versionAPI")
	return *ret0, err
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseContent *BaseContentSession) VersionAPI() ([32]byte, error) {
	return _BaseContent.Contract.VersionAPI(&_BaseContent.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseContent *BaseContentCallerSession) VersionAPI() ([32]byte, error) {
	return _BaseContent.Contract.VersionAPI(&_BaseContent.CallOpts)
}

// VersionHashes is a free data retrieval call binding the contract method 0x7ca8f618.
//
// Solidity: function versionHashes(uint256 ) constant returns(string)
func (_BaseContent *BaseContentCaller) VersionHashes(opts *bind.CallOpts, arg0 *big.Int) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BaseContent.contract.Call(opts, out, "versionHashes", arg0)
	return *ret0, err
}

// VersionHashes is a free data retrieval call binding the contract method 0x7ca8f618.
//
// Solidity: function versionHashes(uint256 ) constant returns(string)
func (_BaseContent *BaseContentSession) VersionHashes(arg0 *big.Int) (string, error) {
	return _BaseContent.Contract.VersionHashes(&_BaseContent.CallOpts, arg0)
}

// VersionHashes is a free data retrieval call binding the contract method 0x7ca8f618.
//
// Solidity: function versionHashes(uint256 ) constant returns(string)
func (_BaseContent *BaseContentCallerSession) VersionHashes(arg0 *big.Int) (string, error) {
	return _BaseContent.Contract.VersionHashes(&_BaseContent.CallOpts, arg0)
}

// VersionTimestamp is a free data retrieval call binding the contract method 0x7886f747.
//
// Solidity: function versionTimestamp(uint256 ) constant returns(uint256)
func (_BaseContent *BaseContentCaller) VersionTimestamp(opts *bind.CallOpts, arg0 *big.Int) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseContent.contract.Call(opts, out, "versionTimestamp", arg0)
	return *ret0, err
}

// VersionTimestamp is a free data retrieval call binding the contract method 0x7886f747.
//
// Solidity: function versionTimestamp(uint256 ) constant returns(uint256)
func (_BaseContent *BaseContentSession) VersionTimestamp(arg0 *big.Int) (*big.Int, error) {
	return _BaseContent.Contract.VersionTimestamp(&_BaseContent.CallOpts, arg0)
}

// VersionTimestamp is a free data retrieval call binding the contract method 0x7886f747.
//
// Solidity: function versionTimestamp(uint256 ) constant returns(uint256)
func (_BaseContent *BaseContentCallerSession) VersionTimestamp(arg0 *big.Int) (*big.Int, error) {
	return _BaseContent.Contract.VersionTimestamp(&_BaseContent.CallOpts, arg0)
}

// Visibility is a free data retrieval call binding the contract method 0x29adec14.
//
// Solidity: function visibility() constant returns(uint8)
func (_BaseContent *BaseContentCaller) Visibility(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseContent.contract.Call(opts, out, "visibility")
	return *ret0, err
}

// Visibility is a free data retrieval call binding the contract method 0x29adec14.
//
// Solidity: function visibility() constant returns(uint8)
func (_BaseContent *BaseContentSession) Visibility() (uint8, error) {
	return _BaseContent.Contract.Visibility(&_BaseContent.CallOpts)
}

// Visibility is a free data retrieval call binding the contract method 0x29adec14.
//
// Solidity: function visibility() constant returns(uint8)
func (_BaseContent *BaseContentCallerSession) Visibility() (uint8, error) {
	return _BaseContent.Contract.Visibility(&_BaseContent.CallOpts)
}

// AccessComplete is a paid mutator transaction binding the contract method 0x0593e335.
//
// Solidity: function accessComplete(uint256 request_ID, uint256 score_pct, uint256 ) returns(bool)
func (_BaseContent *BaseContentTransactor) AccessComplete(opts *bind.TransactOpts, request_ID *big.Int, score_pct *big.Int, arg2 *big.Int) (*types.Transaction, error) {
	return _BaseContent.contract.Transact(opts, "accessComplete", request_ID, score_pct, arg2)
}

// AccessComplete is a paid mutator transaction binding the contract method 0x0593e335.
//
// Solidity: function accessComplete(uint256 request_ID, uint256 score_pct, uint256 ) returns(bool)
func (_BaseContent *BaseContentSession) AccessComplete(request_ID *big.Int, score_pct *big.Int, arg2 *big.Int) (*types.Transaction, error) {
	return _BaseContent.Contract.AccessComplete(&_BaseContent.TransactOpts, request_ID, score_pct, arg2)
}

// AccessComplete is a paid mutator transaction binding the contract method 0x0593e335.
//
// Solidity: function accessComplete(uint256 request_ID, uint256 score_pct, uint256 ) returns(bool)
func (_BaseContent *BaseContentTransactorSession) AccessComplete(request_ID *big.Int, score_pct *big.Int, arg2 *big.Int) (*types.Transaction, error) {
	return _BaseContent.Contract.AccessComplete(&_BaseContent.TransactOpts, request_ID, score_pct, arg2)
}

// AccessCompleteContext is a paid mutator transaction binding the contract method 0xbc7dba33.
//
// Solidity: function accessCompleteContext(uint256 _requestNonce, bytes32 _contextHash, address _accessor, uint256 _request_timestamp) returns(bool)
func (_BaseContent *BaseContentTransactor) AccessCompleteContext(opts *bind.TransactOpts, _requestNonce *big.Int, _contextHash [32]byte, _accessor common.Address, _request_timestamp *big.Int) (*types.Transaction, error) {
	return _BaseContent.contract.Transact(opts, "accessCompleteContext", _requestNonce, _contextHash, _accessor, _request_timestamp)
}

// AccessCompleteContext is a paid mutator transaction binding the contract method 0xbc7dba33.
//
// Solidity: function accessCompleteContext(uint256 _requestNonce, bytes32 _contextHash, address _accessor, uint256 _request_timestamp) returns(bool)
func (_BaseContent *BaseContentSession) AccessCompleteContext(_requestNonce *big.Int, _contextHash [32]byte, _accessor common.Address, _request_timestamp *big.Int) (*types.Transaction, error) {
	return _BaseContent.Contract.AccessCompleteContext(&_BaseContent.TransactOpts, _requestNonce, _contextHash, _accessor, _request_timestamp)
}

// AccessCompleteContext is a paid mutator transaction binding the contract method 0xbc7dba33.
//
// Solidity: function accessCompleteContext(uint256 _requestNonce, bytes32 _contextHash, address _accessor, uint256 _request_timestamp) returns(bool)
func (_BaseContent *BaseContentTransactorSession) AccessCompleteContext(_requestNonce *big.Int, _contextHash [32]byte, _accessor common.Address, _request_timestamp *big.Int) (*types.Transaction, error) {
	return _BaseContent.Contract.AccessCompleteContext(&_BaseContent.TransactOpts, _requestNonce, _contextHash, _accessor, _request_timestamp)
}

// AccessCompleteInternal is a paid mutator transaction binding the contract method 0x484f4b3b.
//
// Solidity: function accessCompleteInternal(uint256 requestNonce, bytes32[] customValues, address[] stakeholders) returns(bool)
func (_BaseContent *BaseContentTransactor) AccessCompleteInternal(opts *bind.TransactOpts, requestNonce *big.Int, customValues [][32]byte, stakeholders []common.Address) (*types.Transaction, error) {
	return _BaseContent.contract.Transact(opts, "accessCompleteInternal", requestNonce, customValues, stakeholders)
}

// AccessCompleteInternal is a paid mutator transaction binding the contract method 0x484f4b3b.
//
// Solidity: function accessCompleteInternal(uint256 requestNonce, bytes32[] customValues, address[] stakeholders) returns(bool)
func (_BaseContent *BaseContentSession) AccessCompleteInternal(requestNonce *big.Int, customValues [][32]byte, stakeholders []common.Address) (*types.Transaction, error) {
	return _BaseContent.Contract.AccessCompleteInternal(&_BaseContent.TransactOpts, requestNonce, customValues, stakeholders)
}

// AccessCompleteInternal is a paid mutator transaction binding the contract method 0x484f4b3b.
//
// Solidity: function accessCompleteInternal(uint256 requestNonce, bytes32[] customValues, address[] stakeholders) returns(bool)
func (_BaseContent *BaseContentTransactorSession) AccessCompleteInternal(requestNonce *big.Int, customValues [][32]byte, stakeholders []common.Address) (*types.Transaction, error) {
	return _BaseContent.Contract.AccessCompleteInternal(&_BaseContent.TransactOpts, requestNonce, customValues, stakeholders)
}

// AccessCompleteV3 is a paid mutator transaction binding the contract method 0x45155f6e.
//
// Solidity: function accessCompleteV3(uint256 requestNonce, bytes32[] customValues, address[] stakeholders) returns(bool)
func (_BaseContent *BaseContentTransactor) AccessCompleteV3(opts *bind.TransactOpts, requestNonce *big.Int, customValues [][32]byte, stakeholders []common.Address) (*types.Transaction, error) {
	return _BaseContent.contract.Transact(opts, "accessCompleteV3", requestNonce, customValues, stakeholders)
}

// AccessCompleteV3 is a paid mutator transaction binding the contract method 0x45155f6e.
//
// Solidity: function accessCompleteV3(uint256 requestNonce, bytes32[] customValues, address[] stakeholders) returns(bool)
func (_BaseContent *BaseContentSession) AccessCompleteV3(requestNonce *big.Int, customValues [][32]byte, stakeholders []common.Address) (*types.Transaction, error) {
	return _BaseContent.Contract.AccessCompleteV3(&_BaseContent.TransactOpts, requestNonce, customValues, stakeholders)
}

// AccessCompleteV3 is a paid mutator transaction binding the contract method 0x45155f6e.
//
// Solidity: function accessCompleteV3(uint256 requestNonce, bytes32[] customValues, address[] stakeholders) returns(bool)
func (_BaseContent *BaseContentTransactorSession) AccessCompleteV3(requestNonce *big.Int, customValues [][32]byte, stakeholders []common.Address) (*types.Transaction, error) {
	return _BaseContent.Contract.AccessCompleteV3(&_BaseContent.TransactOpts, requestNonce, customValues, stakeholders)
}

// AccessRequest is a paid mutator transaction binding the contract method 0xa1ff106e.
//
// Solidity: function accessRequest(uint8 , string pkeRequestor, string pkeAFGH, bytes32[] customValues, address[] stakeholders) returns(uint256)
func (_BaseContent *BaseContentTransactor) AccessRequest(opts *bind.TransactOpts, arg0 uint8, pkeRequestor string, pkeAFGH string, customValues [][32]byte, stakeholders []common.Address) (*types.Transaction, error) {
	return _BaseContent.contract.Transact(opts, "accessRequest", arg0, pkeRequestor, pkeAFGH, customValues, stakeholders)
}

// AccessRequest is a paid mutator transaction binding the contract method 0xa1ff106e.
//
// Solidity: function accessRequest(uint8 , string pkeRequestor, string pkeAFGH, bytes32[] customValues, address[] stakeholders) returns(uint256)
func (_BaseContent *BaseContentSession) AccessRequest(arg0 uint8, pkeRequestor string, pkeAFGH string, customValues [][32]byte, stakeholders []common.Address) (*types.Transaction, error) {
	return _BaseContent.Contract.AccessRequest(&_BaseContent.TransactOpts, arg0, pkeRequestor, pkeAFGH, customValues, stakeholders)
}

// AccessRequest is a paid mutator transaction binding the contract method 0xa1ff106e.
//
// Solidity: function accessRequest(uint8 , string pkeRequestor, string pkeAFGH, bytes32[] customValues, address[] stakeholders) returns(uint256)
func (_BaseContent *BaseContentTransactorSession) AccessRequest(arg0 uint8, pkeRequestor string, pkeAFGH string, customValues [][32]byte, stakeholders []common.Address) (*types.Transaction, error) {
	return _BaseContent.Contract.AccessRequest(&_BaseContent.TransactOpts, arg0, pkeRequestor, pkeAFGH, customValues, stakeholders)
}

// AccessRequestContext is a paid mutator transaction binding the contract method 0x78f52ffb.
//
// Solidity: function accessRequestContext(uint256 requestNonce, bytes32 contextHash, address accessor, uint256 request_timestamp) returns(uint256)
func (_BaseContent *BaseContentTransactor) AccessRequestContext(opts *bind.TransactOpts, requestNonce *big.Int, contextHash [32]byte, accessor common.Address, request_timestamp *big.Int) (*types.Transaction, error) {
	return _BaseContent.contract.Transact(opts, "accessRequestContext", requestNonce, contextHash, accessor, request_timestamp)
}

// AccessRequestContext is a paid mutator transaction binding the contract method 0x78f52ffb.
//
// Solidity: function accessRequestContext(uint256 requestNonce, bytes32 contextHash, address accessor, uint256 request_timestamp) returns(uint256)
func (_BaseContent *BaseContentSession) AccessRequestContext(requestNonce *big.Int, contextHash [32]byte, accessor common.Address, request_timestamp *big.Int) (*types.Transaction, error) {
	return _BaseContent.Contract.AccessRequestContext(&_BaseContent.TransactOpts, requestNonce, contextHash, accessor, request_timestamp)
}

// AccessRequestContext is a paid mutator transaction binding the contract method 0x78f52ffb.
//
// Solidity: function accessRequestContext(uint256 requestNonce, bytes32 contextHash, address accessor, uint256 request_timestamp) returns(uint256)
func (_BaseContent *BaseContentTransactorSession) AccessRequestContext(requestNonce *big.Int, contextHash [32]byte, accessor common.Address, request_timestamp *big.Int) (*types.Transaction, error) {
	return _BaseContent.Contract.AccessRequestContext(&_BaseContent.TransactOpts, requestNonce, contextHash, accessor, request_timestamp)
}

// AccessRequestV3 is a paid mutator transaction binding the contract method 0x1bf7a912.
//
// Solidity: function accessRequestV3(bytes32[] customValues, address[] stakeholders) returns(bool)
func (_BaseContent *BaseContentTransactor) AccessRequestV3(opts *bind.TransactOpts, customValues [][32]byte, stakeholders []common.Address) (*types.Transaction, error) {
	return _BaseContent.contract.Transact(opts, "accessRequestV3", customValues, stakeholders)
}

// AccessRequestV3 is a paid mutator transaction binding the contract method 0x1bf7a912.
//
// Solidity: function accessRequestV3(bytes32[] customValues, address[] stakeholders) returns(bool)
func (_BaseContent *BaseContentSession) AccessRequestV3(customValues [][32]byte, stakeholders []common.Address) (*types.Transaction, error) {
	return _BaseContent.Contract.AccessRequestV3(&_BaseContent.TransactOpts, customValues, stakeholders)
}

// AccessRequestV3 is a paid mutator transaction binding the contract method 0x1bf7a912.
//
// Solidity: function accessRequestV3(bytes32[] customValues, address[] stakeholders) returns(bool)
func (_BaseContent *BaseContentTransactorSession) AccessRequestV3(customValues [][32]byte, stakeholders []common.Address) (*types.Transaction, error) {
	return _BaseContent.Contract.AccessRequestV3(&_BaseContent.TransactOpts, customValues, stakeholders)
}

// ClearPending is a paid mutator transaction binding the contract method 0x5f6a1301.
//
// Solidity: function clearPending() returns()
func (_BaseContent *BaseContentTransactor) ClearPending(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseContent.contract.Transact(opts, "clearPending")
}

// ClearPending is a paid mutator transaction binding the contract method 0x5f6a1301.
//
// Solidity: function clearPending() returns()
func (_BaseContent *BaseContentSession) ClearPending() (*types.Transaction, error) {
	return _BaseContent.Contract.ClearPending(&_BaseContent.TransactOpts)
}

// ClearPending is a paid mutator transaction binding the contract method 0x5f6a1301.
//
// Solidity: function clearPending() returns()
func (_BaseContent *BaseContentTransactorSession) ClearPending() (*types.Transaction, error) {
	return _BaseContent.Contract.ClearPending(&_BaseContent.TransactOpts)
}

// Commit is a paid mutator transaction binding the contract method 0x9867db74.
//
// Solidity: function commit(string _objectHash) returns()
func (_BaseContent *BaseContentTransactor) Commit(opts *bind.TransactOpts, _objectHash string) (*types.Transaction, error) {
	return _BaseContent.contract.Transact(opts, "commit", _objectHash)
}

// Commit is a paid mutator transaction binding the contract method 0x9867db74.
//
// Solidity: function commit(string _objectHash) returns()
func (_BaseContent *BaseContentSession) Commit(_objectHash string) (*types.Transaction, error) {
	return _BaseContent.Contract.Commit(&_BaseContent.TransactOpts, _objectHash)
}

// Commit is a paid mutator transaction binding the contract method 0x9867db74.
//
// Solidity: function commit(string _objectHash) returns()
func (_BaseContent *BaseContentTransactorSession) Commit(_objectHash string) (*types.Transaction, error) {
	return _BaseContent.Contract.Commit(&_BaseContent.TransactOpts, _objectHash)
}

// ConfirmCommit is a paid mutator transaction binding the contract method 0x446e8826.
//
// Solidity: function confirmCommit() returns(bool)
func (_BaseContent *BaseContentTransactor) ConfirmCommit(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseContent.contract.Transact(opts, "confirmCommit")
}

// ConfirmCommit is a paid mutator transaction binding the contract method 0x446e8826.
//
// Solidity: function confirmCommit() returns(bool)
func (_BaseContent *BaseContentSession) ConfirmCommit() (*types.Transaction, error) {
	return _BaseContent.Contract.ConfirmCommit(&_BaseContent.TransactOpts)
}

// ConfirmCommit is a paid mutator transaction binding the contract method 0x446e8826.
//
// Solidity: function confirmCommit() returns(bool)
func (_BaseContent *BaseContentTransactorSession) ConfirmCommit() (*types.Transaction, error) {
	return _BaseContent.Contract.ConfirmCommit(&_BaseContent.TransactOpts)
}

// DeleteVersion is a paid mutator transaction binding the contract method 0xe1a70717.
//
// Solidity: function deleteVersion(string _versionHash) returns(int256)
func (_BaseContent *BaseContentTransactor) DeleteVersion(opts *bind.TransactOpts, _versionHash string) (*types.Transaction, error) {
	return _BaseContent.contract.Transact(opts, "deleteVersion", _versionHash)
}

// DeleteVersion is a paid mutator transaction binding the contract method 0xe1a70717.
//
// Solidity: function deleteVersion(string _versionHash) returns(int256)
func (_BaseContent *BaseContentSession) DeleteVersion(_versionHash string) (*types.Transaction, error) {
	return _BaseContent.Contract.DeleteVersion(&_BaseContent.TransactOpts, _versionHash)
}

// DeleteVersion is a paid mutator transaction binding the contract method 0xe1a70717.
//
// Solidity: function deleteVersion(string _versionHash) returns(int256)
func (_BaseContent *BaseContentTransactorSession) DeleteVersion(_versionHash string) (*types.Transaction, error) {
	return _BaseContent.Contract.DeleteVersion(&_BaseContent.TransactOpts, _versionHash)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseContent *BaseContentTransactor) Kill(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseContent.contract.Transact(opts, "kill")
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseContent *BaseContentSession) Kill() (*types.Transaction, error) {
	return _BaseContent.Contract.Kill(&_BaseContent.TransactOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseContent *BaseContentTransactorSession) Kill() (*types.Transaction, error) {
	return _BaseContent.Contract.Kill(&_BaseContent.TransactOpts)
}

// ProcessRequestPayment is a paid mutator transaction binding the contract method 0x0c6d3f93.
//
// Solidity: function processRequestPayment(uint256 requestNonce, address payee, string label, uint256 amount) returns(bool)
func (_BaseContent *BaseContentTransactor) ProcessRequestPayment(opts *bind.TransactOpts, requestNonce *big.Int, payee common.Address, label string, amount *big.Int) (*types.Transaction, error) {
	return _BaseContent.contract.Transact(opts, "processRequestPayment", requestNonce, payee, label, amount)
}

// ProcessRequestPayment is a paid mutator transaction binding the contract method 0x0c6d3f93.
//
// Solidity: function processRequestPayment(uint256 requestNonce, address payee, string label, uint256 amount) returns(bool)
func (_BaseContent *BaseContentSession) ProcessRequestPayment(requestNonce *big.Int, payee common.Address, label string, amount *big.Int) (*types.Transaction, error) {
	return _BaseContent.Contract.ProcessRequestPayment(&_BaseContent.TransactOpts, requestNonce, payee, label, amount)
}

// ProcessRequestPayment is a paid mutator transaction binding the contract method 0x0c6d3f93.
//
// Solidity: function processRequestPayment(uint256 requestNonce, address payee, string label, uint256 amount) returns(bool)
func (_BaseContent *BaseContentTransactorSession) ProcessRequestPayment(requestNonce *big.Int, payee common.Address, label string, amount *big.Int) (*types.Transaction, error) {
	return _BaseContent.Contract.ProcessRequestPayment(&_BaseContent.TransactOpts, requestNonce, payee, label, amount)
}

// Publish is a paid mutator transaction binding the contract method 0x075d4782.
//
// Solidity: function publish() returns(bool)
func (_BaseContent *BaseContentTransactor) Publish(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseContent.contract.Transact(opts, "publish")
}

// Publish is a paid mutator transaction binding the contract method 0x075d4782.
//
// Solidity: function publish() returns(bool)
func (_BaseContent *BaseContentSession) Publish() (*types.Transaction, error) {
	return _BaseContent.Contract.Publish(&_BaseContent.TransactOpts)
}

// Publish is a paid mutator transaction binding the contract method 0x075d4782.
//
// Solidity: function publish() returns(bool)
func (_BaseContent *BaseContentTransactorSession) Publish() (*types.Transaction, error) {
	return _BaseContent.Contract.Publish(&_BaseContent.TransactOpts)
}

// PutMeta is a paid mutator transaction binding the contract method 0xe542b7cb.
//
// Solidity: function putMeta(bytes key, bytes value) returns()
func (_BaseContent *BaseContentTransactor) PutMeta(opts *bind.TransactOpts, key []byte, value []byte) (*types.Transaction, error) {
	return _BaseContent.contract.Transact(opts, "putMeta", key, value)
}

// PutMeta is a paid mutator transaction binding the contract method 0xe542b7cb.
//
// Solidity: function putMeta(bytes key, bytes value) returns()
func (_BaseContent *BaseContentSession) PutMeta(key []byte, value []byte) (*types.Transaction, error) {
	return _BaseContent.Contract.PutMeta(&_BaseContent.TransactOpts, key, value)
}

// PutMeta is a paid mutator transaction binding the contract method 0xe542b7cb.
//
// Solidity: function putMeta(bytes key, bytes value) returns()
func (_BaseContent *BaseContentTransactorSession) PutMeta(key []byte, value []byte) (*types.Transaction, error) {
	return _BaseContent.Contract.PutMeta(&_BaseContent.TransactOpts, key, value)
}

// SetAccessCharge is a paid mutator transaction binding the contract method 0xf4d9bae8.
//
// Solidity: function setAccessCharge(uint256 charge) returns(uint256)
func (_BaseContent *BaseContentTransactor) SetAccessCharge(opts *bind.TransactOpts, charge *big.Int) (*types.Transaction, error) {
	return _BaseContent.contract.Transact(opts, "setAccessCharge", charge)
}

// SetAccessCharge is a paid mutator transaction binding the contract method 0xf4d9bae8.
//
// Solidity: function setAccessCharge(uint256 charge) returns(uint256)
func (_BaseContent *BaseContentSession) SetAccessCharge(charge *big.Int) (*types.Transaction, error) {
	return _BaseContent.Contract.SetAccessCharge(&_BaseContent.TransactOpts, charge)
}

// SetAccessCharge is a paid mutator transaction binding the contract method 0xf4d9bae8.
//
// Solidity: function setAccessCharge(uint256 charge) returns(uint256)
func (_BaseContent *BaseContentTransactorSession) SetAccessCharge(charge *big.Int) (*types.Transaction, error) {
	return _BaseContent.Contract.SetAccessCharge(&_BaseContent.TransactOpts, charge)
}

// SetAddressKMS is a paid mutator transaction binding the contract method 0xc9e8e72d.
//
// Solidity: function setAddressKMS(address address_KMS) returns()
func (_BaseContent *BaseContentTransactor) SetAddressKMS(opts *bind.TransactOpts, address_KMS common.Address) (*types.Transaction, error) {
	return _BaseContent.contract.Transact(opts, "setAddressKMS", address_KMS)
}

// SetAddressKMS is a paid mutator transaction binding the contract method 0xc9e8e72d.
//
// Solidity: function setAddressKMS(address address_KMS) returns()
func (_BaseContent *BaseContentSession) SetAddressKMS(address_KMS common.Address) (*types.Transaction, error) {
	return _BaseContent.Contract.SetAddressKMS(&_BaseContent.TransactOpts, address_KMS)
}

// SetAddressKMS is a paid mutator transaction binding the contract method 0xc9e8e72d.
//
// Solidity: function setAddressKMS(address address_KMS) returns()
func (_BaseContent *BaseContentTransactorSession) SetAddressKMS(address_KMS common.Address) (*types.Transaction, error) {
	return _BaseContent.Contract.SetAddressKMS(&_BaseContent.TransactOpts, address_KMS)
}

// SetContentContractAddress is a paid mutator transaction binding the contract method 0xe5385303.
//
// Solidity: function setContentContractAddress(address addr) returns()
func (_BaseContent *BaseContentTransactor) SetContentContractAddress(opts *bind.TransactOpts, addr common.Address) (*types.Transaction, error) {
	return _BaseContent.contract.Transact(opts, "setContentContractAddress", addr)
}

// SetContentContractAddress is a paid mutator transaction binding the contract method 0xe5385303.
//
// Solidity: function setContentContractAddress(address addr) returns()
func (_BaseContent *BaseContentSession) SetContentContractAddress(addr common.Address) (*types.Transaction, error) {
	return _BaseContent.Contract.SetContentContractAddress(&_BaseContent.TransactOpts, addr)
}

// SetContentContractAddress is a paid mutator transaction binding the contract method 0xe5385303.
//
// Solidity: function setContentContractAddress(address addr) returns()
func (_BaseContent *BaseContentTransactorSession) SetContentContractAddress(addr common.Address) (*types.Transaction, error) {
	return _BaseContent.Contract.SetContentContractAddress(&_BaseContent.TransactOpts, addr)
}

// SetGroupRights is a paid mutator transaction binding the contract method 0x22e564eb.
//
// Solidity: function setGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_BaseContent *BaseContentTransactor) SetGroupRights(opts *bind.TransactOpts, group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseContent.contract.Transact(opts, "setGroupRights", group, access_type, access)
}

// SetGroupRights is a paid mutator transaction binding the contract method 0x22e564eb.
//
// Solidity: function setGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_BaseContent *BaseContentSession) SetGroupRights(group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseContent.Contract.SetGroupRights(&_BaseContent.TransactOpts, group, access_type, access)
}

// SetGroupRights is a paid mutator transaction binding the contract method 0x22e564eb.
//
// Solidity: function setGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_BaseContent *BaseContentTransactorSession) SetGroupRights(group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseContent.Contract.SetGroupRights(&_BaseContent.TransactOpts, group, access_type, access)
}

// SetRights is a paid mutator transaction binding the contract method 0x0fe1b5a2.
//
// Solidity: function setRights(address stakeholder, uint8 access_type, uint8 access) returns()
func (_BaseContent *BaseContentTransactor) SetRights(opts *bind.TransactOpts, stakeholder common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseContent.contract.Transact(opts, "setRights", stakeholder, access_type, access)
}

// SetRights is a paid mutator transaction binding the contract method 0x0fe1b5a2.
//
// Solidity: function setRights(address stakeholder, uint8 access_type, uint8 access) returns()
func (_BaseContent *BaseContentSession) SetRights(stakeholder common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseContent.Contract.SetRights(&_BaseContent.TransactOpts, stakeholder, access_type, access)
}

// SetRights is a paid mutator transaction binding the contract method 0x0fe1b5a2.
//
// Solidity: function setRights(address stakeholder, uint8 access_type, uint8 access) returns()
func (_BaseContent *BaseContentTransactorSession) SetRights(stakeholder common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseContent.Contract.SetRights(&_BaseContent.TransactOpts, stakeholder, access_type, access)
}

// SetStatusCode is a paid mutator transaction binding the contract method 0x5267db44.
//
// Solidity: function setStatusCode(int256 status_code) returns(int256)
func (_BaseContent *BaseContentTransactor) SetStatusCode(opts *bind.TransactOpts, status_code *big.Int) (*types.Transaction, error) {
	return _BaseContent.contract.Transact(opts, "setStatusCode", status_code)
}

// SetStatusCode is a paid mutator transaction binding the contract method 0x5267db44.
//
// Solidity: function setStatusCode(int256 status_code) returns(int256)
func (_BaseContent *BaseContentSession) SetStatusCode(status_code *big.Int) (*types.Transaction, error) {
	return _BaseContent.Contract.SetStatusCode(&_BaseContent.TransactOpts, status_code)
}

// SetStatusCode is a paid mutator transaction binding the contract method 0x5267db44.
//
// Solidity: function setStatusCode(int256 status_code) returns(int256)
func (_BaseContent *BaseContentTransactorSession) SetStatusCode(status_code *big.Int) (*types.Transaction, error) {
	return _BaseContent.Contract.SetStatusCode(&_BaseContent.TransactOpts, status_code)
}

// SetVisibility is a paid mutator transaction binding the contract method 0xaa024e8b.
//
// Solidity: function setVisibility(uint8 _visibility_code) returns()
func (_BaseContent *BaseContentTransactor) SetVisibility(opts *bind.TransactOpts, _visibility_code uint8) (*types.Transaction, error) {
	return _BaseContent.contract.Transact(opts, "setVisibility", _visibility_code)
}

// SetVisibility is a paid mutator transaction binding the contract method 0xaa024e8b.
//
// Solidity: function setVisibility(uint8 _visibility_code) returns()
func (_BaseContent *BaseContentSession) SetVisibility(_visibility_code uint8) (*types.Transaction, error) {
	return _BaseContent.Contract.SetVisibility(&_BaseContent.TransactOpts, _visibility_code)
}

// SetVisibility is a paid mutator transaction binding the contract method 0xaa024e8b.
//
// Solidity: function setVisibility(uint8 _visibility_code) returns()
func (_BaseContent *BaseContentTransactorSession) SetVisibility(_visibility_code uint8) (*types.Transaction, error) {
	return _BaseContent.Contract.SetVisibility(&_BaseContent.TransactOpts, _visibility_code)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseContent *BaseContentTransactor) TransferCreatorship(opts *bind.TransactOpts, newCreator common.Address) (*types.Transaction, error) {
	return _BaseContent.contract.Transact(opts, "transferCreatorship", newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseContent *BaseContentSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _BaseContent.Contract.TransferCreatorship(&_BaseContent.TransactOpts, newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseContent *BaseContentTransactorSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _BaseContent.Contract.TransferCreatorship(&_BaseContent.TransactOpts, newCreator)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseContent *BaseContentTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _BaseContent.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseContent *BaseContentSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _BaseContent.Contract.TransferOwnership(&_BaseContent.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseContent *BaseContentTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _BaseContent.Contract.TransferOwnership(&_BaseContent.TransactOpts, newOwner)
}

// UpdateRequest is a paid mutator transaction binding the contract method 0xc287e0ed.
//
// Solidity: function updateRequest() returns()
func (_BaseContent *BaseContentTransactor) UpdateRequest(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseContent.contract.Transact(opts, "updateRequest")
}

// UpdateRequest is a paid mutator transaction binding the contract method 0xc287e0ed.
//
// Solidity: function updateRequest() returns()
func (_BaseContent *BaseContentSession) UpdateRequest() (*types.Transaction, error) {
	return _BaseContent.Contract.UpdateRequest(&_BaseContent.TransactOpts)
}

// UpdateRequest is a paid mutator transaction binding the contract method 0xc287e0ed.
//
// Solidity: function updateRequest() returns()
func (_BaseContent *BaseContentTransactorSession) UpdateRequest() (*types.Transaction, error) {
	return _BaseContent.Contract.UpdateRequest(&_BaseContent.TransactOpts)
}

// UpdateStatus is a paid mutator transaction binding the contract method 0x8280dd8f.
//
// Solidity: function updateStatus(int256 status_code) returns(int256)
func (_BaseContent *BaseContentTransactor) UpdateStatus(opts *bind.TransactOpts, status_code *big.Int) (*types.Transaction, error) {
	return _BaseContent.contract.Transact(opts, "updateStatus", status_code)
}

// UpdateStatus is a paid mutator transaction binding the contract method 0x8280dd8f.
//
// Solidity: function updateStatus(int256 status_code) returns(int256)
func (_BaseContent *BaseContentSession) UpdateStatus(status_code *big.Int) (*types.Transaction, error) {
	return _BaseContent.Contract.UpdateStatus(&_BaseContent.TransactOpts, status_code)
}

// UpdateStatus is a paid mutator transaction binding the contract method 0x8280dd8f.
//
// Solidity: function updateStatus(int256 status_code) returns(int256)
func (_BaseContent *BaseContentTransactorSession) UpdateStatus(status_code *big.Int) (*types.Transaction, error) {
	return _BaseContent.Contract.UpdateStatus(&_BaseContent.TransactOpts, status_code)
}

// BaseContentAccessCompleteIterator is returned from FilterAccessComplete and is used to iterate over the raw logs and unpacked data for AccessComplete events raised by the BaseContent contract.
type BaseContentAccessCompleteIterator struct {
	Event *BaseContentAccessComplete // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentAccessCompleteIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentAccessComplete)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentAccessComplete)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentAccessCompleteIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentAccessCompleteIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentAccessComplete represents a AccessComplete event raised by the BaseContent contract.
type BaseContentAccessComplete struct {
	RequestID            *big.Int
	ScorePct             *big.Int
	CustomContractResult bool
	Raw                  types.Log // Blockchain specific contextual infos
}

// FilterAccessComplete is a free log retrieval operation binding the contract event 0x2c49ac638ee7bf3341004c40512c79847bb7fb8f17fb53151ff576a35630ac06.
//
// Solidity: event AccessComplete(uint256 requestID, uint256 scorePct, bool customContractResult)
func (_BaseContent *BaseContentFilterer) FilterAccessComplete(opts *bind.FilterOpts) (*BaseContentAccessCompleteIterator, error) {

	logs, sub, err := _BaseContent.contract.FilterLogs(opts, "AccessComplete")
	if err != nil {
		return nil, err
	}
	return &BaseContentAccessCompleteIterator{contract: _BaseContent.contract, event: "AccessComplete", logs: logs, sub: sub}, nil
}

// WatchAccessComplete is a free log subscription operation binding the contract event 0x2c49ac638ee7bf3341004c40512c79847bb7fb8f17fb53151ff576a35630ac06.
//
// Solidity: event AccessComplete(uint256 requestID, uint256 scorePct, bool customContractResult)
func (_BaseContent *BaseContentFilterer) WatchAccessComplete(opts *bind.WatchOpts, sink chan<- *BaseContentAccessComplete) (event.Subscription, error) {

	logs, sub, err := _BaseContent.contract.WatchLogs(opts, "AccessComplete")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentAccessComplete)
				if err := _BaseContent.contract.UnpackLog(event, "AccessComplete", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAccessComplete is a log parse operation binding the contract event 0x2c49ac638ee7bf3341004c40512c79847bb7fb8f17fb53151ff576a35630ac06.
//
// Solidity: event AccessComplete(uint256 requestID, uint256 scorePct, bool customContractResult)
func (_BaseContent *BaseContentFilterer) ParseAccessComplete(log types.Log) (*BaseContentAccessComplete, error) {
	event := new(BaseContentAccessComplete)
	if err := _BaseContent.contract.UnpackLog(event, "AccessComplete", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentAccessCompleteV3Iterator is returned from FilterAccessCompleteV3 and is used to iterate over the raw logs and unpacked data for AccessCompleteV3 events raised by the BaseContent contract.
type BaseContentAccessCompleteV3Iterator struct {
	Event *BaseContentAccessCompleteV3 // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentAccessCompleteV3Iterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentAccessCompleteV3)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentAccessCompleteV3)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentAccessCompleteV3Iterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentAccessCompleteV3Iterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentAccessCompleteV3 represents a AccessCompleteV3 event raised by the BaseContent contract.
type BaseContentAccessCompleteV3 struct {
	RequestNonce         *big.Int
	CustomContractResult bool
	ParentAddress        common.Address
	ContextHash          [32]byte
	Accessor             common.Address
	RequestTimestamp     *big.Int
	Raw                  types.Log // Blockchain specific contextual infos
}

// FilterAccessCompleteV3 is a free log retrieval operation binding the contract event 0xd3e5b1d14681444d8159fa85b57104b685f47fb9164fd82b7fafe4e123dcc3a1.
//
// Solidity: event AccessCompleteV3(uint256 requestNonce, bool customContractResult, address parentAddress, bytes32 contextHash, address accessor, uint256 request_timestamp)
func (_BaseContent *BaseContentFilterer) FilterAccessCompleteV3(opts *bind.FilterOpts) (*BaseContentAccessCompleteV3Iterator, error) {

	logs, sub, err := _BaseContent.contract.FilterLogs(opts, "AccessCompleteV3")
	if err != nil {
		return nil, err
	}
	return &BaseContentAccessCompleteV3Iterator{contract: _BaseContent.contract, event: "AccessCompleteV3", logs: logs, sub: sub}, nil
}

// WatchAccessCompleteV3 is a free log subscription operation binding the contract event 0xd3e5b1d14681444d8159fa85b57104b685f47fb9164fd82b7fafe4e123dcc3a1.
//
// Solidity: event AccessCompleteV3(uint256 requestNonce, bool customContractResult, address parentAddress, bytes32 contextHash, address accessor, uint256 request_timestamp)
func (_BaseContent *BaseContentFilterer) WatchAccessCompleteV3(opts *bind.WatchOpts, sink chan<- *BaseContentAccessCompleteV3) (event.Subscription, error) {

	logs, sub, err := _BaseContent.contract.WatchLogs(opts, "AccessCompleteV3")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentAccessCompleteV3)
				if err := _BaseContent.contract.UnpackLog(event, "AccessCompleteV3", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAccessCompleteV3 is a log parse operation binding the contract event 0xd3e5b1d14681444d8159fa85b57104b685f47fb9164fd82b7fafe4e123dcc3a1.
//
// Solidity: event AccessCompleteV3(uint256 requestNonce, bool customContractResult, address parentAddress, bytes32 contextHash, address accessor, uint256 request_timestamp)
func (_BaseContent *BaseContentFilterer) ParseAccessCompleteV3(log types.Log) (*BaseContentAccessCompleteV3, error) {
	event := new(BaseContentAccessCompleteV3)
	if err := _BaseContent.contract.UnpackLog(event, "AccessCompleteV3", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentAccessRequestIterator is returned from FilterAccessRequest and is used to iterate over the raw logs and unpacked data for AccessRequest events raised by the BaseContent contract.
type BaseContentAccessRequestIterator struct {
	Event *BaseContentAccessRequest // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentAccessRequestIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentAccessRequest)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentAccessRequest)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentAccessRequestIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentAccessRequestIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentAccessRequest represents a AccessRequest event raised by the BaseContent contract.
type BaseContentAccessRequest struct {
	RequestID    *big.Int
	Level        uint8
	ContentHash  string
	PkeRequestor string
	PkeAFGH      string
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterAccessRequest is a free log retrieval operation binding the contract event 0x50f423e39e8beb25bb2da38a63e3d33b5368f261522813712756733eaf569a06.
//
// Solidity: event AccessRequest(uint256 requestID, uint8 level, string contentHash, string pkeRequestor, string pkeAFGH)
func (_BaseContent *BaseContentFilterer) FilterAccessRequest(opts *bind.FilterOpts) (*BaseContentAccessRequestIterator, error) {

	logs, sub, err := _BaseContent.contract.FilterLogs(opts, "AccessRequest")
	if err != nil {
		return nil, err
	}
	return &BaseContentAccessRequestIterator{contract: _BaseContent.contract, event: "AccessRequest", logs: logs, sub: sub}, nil
}

// WatchAccessRequest is a free log subscription operation binding the contract event 0x50f423e39e8beb25bb2da38a63e3d33b5368f261522813712756733eaf569a06.
//
// Solidity: event AccessRequest(uint256 requestID, uint8 level, string contentHash, string pkeRequestor, string pkeAFGH)
func (_BaseContent *BaseContentFilterer) WatchAccessRequest(opts *bind.WatchOpts, sink chan<- *BaseContentAccessRequest) (event.Subscription, error) {

	logs, sub, err := _BaseContent.contract.WatchLogs(opts, "AccessRequest")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentAccessRequest)
				if err := _BaseContent.contract.UnpackLog(event, "AccessRequest", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAccessRequest is a log parse operation binding the contract event 0x50f423e39e8beb25bb2da38a63e3d33b5368f261522813712756733eaf569a06.
//
// Solidity: event AccessRequest(uint256 requestID, uint8 level, string contentHash, string pkeRequestor, string pkeAFGH)
func (_BaseContent *BaseContentFilterer) ParseAccessRequest(log types.Log) (*BaseContentAccessRequest, error) {
	event := new(BaseContentAccessRequest)
	if err := _BaseContent.contract.UnpackLog(event, "AccessRequest", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentAccessRequestStakeholderIterator is returned from FilterAccessRequestStakeholder and is used to iterate over the raw logs and unpacked data for AccessRequestStakeholder events raised by the BaseContent contract.
type BaseContentAccessRequestStakeholderIterator struct {
	Event *BaseContentAccessRequestStakeholder // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentAccessRequestStakeholderIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentAccessRequestStakeholder)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentAccessRequestStakeholder)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentAccessRequestStakeholderIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentAccessRequestStakeholderIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentAccessRequestStakeholder represents a AccessRequestStakeholder event raised by the BaseContent contract.
type BaseContentAccessRequestStakeholder struct {
	Stakeholder common.Address
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterAccessRequestStakeholder is a free log retrieval operation binding the contract event 0xb6e3239e521a6c66920ae634f8e921a37e6991d520ac44d52f8516397f41b684.
//
// Solidity: event AccessRequestStakeholder(address stakeholder)
func (_BaseContent *BaseContentFilterer) FilterAccessRequestStakeholder(opts *bind.FilterOpts) (*BaseContentAccessRequestStakeholderIterator, error) {

	logs, sub, err := _BaseContent.contract.FilterLogs(opts, "AccessRequestStakeholder")
	if err != nil {
		return nil, err
	}
	return &BaseContentAccessRequestStakeholderIterator{contract: _BaseContent.contract, event: "AccessRequestStakeholder", logs: logs, sub: sub}, nil
}

// WatchAccessRequestStakeholder is a free log subscription operation binding the contract event 0xb6e3239e521a6c66920ae634f8e921a37e6991d520ac44d52f8516397f41b684.
//
// Solidity: event AccessRequestStakeholder(address stakeholder)
func (_BaseContent *BaseContentFilterer) WatchAccessRequestStakeholder(opts *bind.WatchOpts, sink chan<- *BaseContentAccessRequestStakeholder) (event.Subscription, error) {

	logs, sub, err := _BaseContent.contract.WatchLogs(opts, "AccessRequestStakeholder")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentAccessRequestStakeholder)
				if err := _BaseContent.contract.UnpackLog(event, "AccessRequestStakeholder", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAccessRequestStakeholder is a log parse operation binding the contract event 0xb6e3239e521a6c66920ae634f8e921a37e6991d520ac44d52f8516397f41b684.
//
// Solidity: event AccessRequestStakeholder(address stakeholder)
func (_BaseContent *BaseContentFilterer) ParseAccessRequestStakeholder(log types.Log) (*BaseContentAccessRequestStakeholder, error) {
	event := new(BaseContentAccessRequestStakeholder)
	if err := _BaseContent.contract.UnpackLog(event, "AccessRequestStakeholder", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentAccessRequestV3Iterator is returned from FilterAccessRequestV3 and is used to iterate over the raw logs and unpacked data for AccessRequestV3 events raised by the BaseContent contract.
type BaseContentAccessRequestV3Iterator struct {
	Event *BaseContentAccessRequestV3 // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentAccessRequestV3Iterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentAccessRequestV3)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentAccessRequestV3)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentAccessRequestV3Iterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentAccessRequestV3Iterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentAccessRequestV3 represents a AccessRequestV3 event raised by the BaseContent contract.
type BaseContentAccessRequestV3 struct {
	RequestNonce     *big.Int
	ParentAddress    common.Address
	ContextHash      [32]byte
	Accessor         common.Address
	RequestTimestamp *big.Int
	Raw              types.Log // Blockchain specific contextual infos
}

// FilterAccessRequestV3 is a free log retrieval operation binding the contract event 0x545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c7.
//
// Solidity: event AccessRequestV3(uint256 requestNonce, address parentAddress, bytes32 contextHash, address accessor, uint256 requestTimestamp)
func (_BaseContent *BaseContentFilterer) FilterAccessRequestV3(opts *bind.FilterOpts) (*BaseContentAccessRequestV3Iterator, error) {

	logs, sub, err := _BaseContent.contract.FilterLogs(opts, "AccessRequestV3")
	if err != nil {
		return nil, err
	}
	return &BaseContentAccessRequestV3Iterator{contract: _BaseContent.contract, event: "AccessRequestV3", logs: logs, sub: sub}, nil
}

// WatchAccessRequestV3 is a free log subscription operation binding the contract event 0x545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c7.
//
// Solidity: event AccessRequestV3(uint256 requestNonce, address parentAddress, bytes32 contextHash, address accessor, uint256 requestTimestamp)
func (_BaseContent *BaseContentFilterer) WatchAccessRequestV3(opts *bind.WatchOpts, sink chan<- *BaseContentAccessRequestV3) (event.Subscription, error) {

	logs, sub, err := _BaseContent.contract.WatchLogs(opts, "AccessRequestV3")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentAccessRequestV3)
				if err := _BaseContent.contract.UnpackLog(event, "AccessRequestV3", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAccessRequestV3 is a log parse operation binding the contract event 0x545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c7.
//
// Solidity: event AccessRequestV3(uint256 requestNonce, address parentAddress, bytes32 contextHash, address accessor, uint256 requestTimestamp)
func (_BaseContent *BaseContentFilterer) ParseAccessRequestV3(log types.Log) (*BaseContentAccessRequestV3, error) {
	event := new(BaseContentAccessRequestV3)
	if err := _BaseContent.contract.UnpackLog(event, "AccessRequestV3", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentAccessRequestValueIterator is returned from FilterAccessRequestValue and is used to iterate over the raw logs and unpacked data for AccessRequestValue events raised by the BaseContent contract.
type BaseContentAccessRequestValueIterator struct {
	Event *BaseContentAccessRequestValue // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentAccessRequestValueIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentAccessRequestValue)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentAccessRequestValue)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentAccessRequestValueIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentAccessRequestValueIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentAccessRequestValue represents a AccessRequestValue event raised by the BaseContent contract.
type BaseContentAccessRequestValue struct {
	CustomValue [32]byte
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterAccessRequestValue is a free log retrieval operation binding the contract event 0x515e0a48b385fce2a8e4d9f169a97c4f6ea669a752358f5e6ab37cc3c2e84c38.
//
// Solidity: event AccessRequestValue(bytes32 customValue)
func (_BaseContent *BaseContentFilterer) FilterAccessRequestValue(opts *bind.FilterOpts) (*BaseContentAccessRequestValueIterator, error) {

	logs, sub, err := _BaseContent.contract.FilterLogs(opts, "AccessRequestValue")
	if err != nil {
		return nil, err
	}
	return &BaseContentAccessRequestValueIterator{contract: _BaseContent.contract, event: "AccessRequestValue", logs: logs, sub: sub}, nil
}

// WatchAccessRequestValue is a free log subscription operation binding the contract event 0x515e0a48b385fce2a8e4d9f169a97c4f6ea669a752358f5e6ab37cc3c2e84c38.
//
// Solidity: event AccessRequestValue(bytes32 customValue)
func (_BaseContent *BaseContentFilterer) WatchAccessRequestValue(opts *bind.WatchOpts, sink chan<- *BaseContentAccessRequestValue) (event.Subscription, error) {

	logs, sub, err := _BaseContent.contract.WatchLogs(opts, "AccessRequestValue")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentAccessRequestValue)
				if err := _BaseContent.contract.UnpackLog(event, "AccessRequestValue", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAccessRequestValue is a log parse operation binding the contract event 0x515e0a48b385fce2a8e4d9f169a97c4f6ea669a752358f5e6ab37cc3c2e84c38.
//
// Solidity: event AccessRequestValue(bytes32 customValue)
func (_BaseContent *BaseContentFilterer) ParseAccessRequestValue(log types.Log) (*BaseContentAccessRequestValue, error) {
	event := new(BaseContentAccessRequestValue)
	if err := _BaseContent.contract.UnpackLog(event, "AccessRequestValue", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentCommitPendingIterator is returned from FilterCommitPending and is used to iterate over the raw logs and unpacked data for CommitPending events raised by the BaseContent contract.
type BaseContentCommitPendingIterator struct {
	Event *BaseContentCommitPending // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentCommitPendingIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentCommitPending)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentCommitPending)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentCommitPendingIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentCommitPendingIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentCommitPending represents a CommitPending event raised by the BaseContent contract.
type BaseContentCommitPending struct {
	SpaceAddress  common.Address
	ParentAddress common.Address
	ObjectHash    string
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterCommitPending is a free log retrieval operation binding the contract event 0xb3ac059d88af6016aca1aebb7b3e796f2e7420435c59c563687814e9b85daa75.
//
// Solidity: event CommitPending(address spaceAddress, address parentAddress, string objectHash)
func (_BaseContent *BaseContentFilterer) FilterCommitPending(opts *bind.FilterOpts) (*BaseContentCommitPendingIterator, error) {

	logs, sub, err := _BaseContent.contract.FilterLogs(opts, "CommitPending")
	if err != nil {
		return nil, err
	}
	return &BaseContentCommitPendingIterator{contract: _BaseContent.contract, event: "CommitPending", logs: logs, sub: sub}, nil
}

// WatchCommitPending is a free log subscription operation binding the contract event 0xb3ac059d88af6016aca1aebb7b3e796f2e7420435c59c563687814e9b85daa75.
//
// Solidity: event CommitPending(address spaceAddress, address parentAddress, string objectHash)
func (_BaseContent *BaseContentFilterer) WatchCommitPending(opts *bind.WatchOpts, sink chan<- *BaseContentCommitPending) (event.Subscription, error) {

	logs, sub, err := _BaseContent.contract.WatchLogs(opts, "CommitPending")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentCommitPending)
				if err := _BaseContent.contract.UnpackLog(event, "CommitPending", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseCommitPending is a log parse operation binding the contract event 0xb3ac059d88af6016aca1aebb7b3e796f2e7420435c59c563687814e9b85daa75.
//
// Solidity: event CommitPending(address spaceAddress, address parentAddress, string objectHash)
func (_BaseContent *BaseContentFilterer) ParseCommitPending(log types.Log) (*BaseContentCommitPending, error) {
	event := new(BaseContentCommitPending)
	if err := _BaseContent.contract.UnpackLog(event, "CommitPending", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentContentObjectCreateIterator is returned from FilterContentObjectCreate and is used to iterate over the raw logs and unpacked data for ContentObjectCreate events raised by the BaseContent contract.
type BaseContentContentObjectCreateIterator struct {
	Event *BaseContentContentObjectCreate // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentContentObjectCreateIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentContentObjectCreate)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentContentObjectCreate)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentContentObjectCreateIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentContentObjectCreateIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentContentObjectCreate represents a ContentObjectCreate event raised by the BaseContent contract.
type BaseContentContentObjectCreate struct {
	ContainingLibrary common.Address
	Raw               types.Log // Blockchain specific contextual infos
}

// FilterContentObjectCreate is a free log retrieval operation binding the contract event 0xc3decc188980e855666b70498ca85e8fa284d97d30483d828fa126f7303d7d19.
//
// Solidity: event ContentObjectCreate(address containingLibrary)
func (_BaseContent *BaseContentFilterer) FilterContentObjectCreate(opts *bind.FilterOpts) (*BaseContentContentObjectCreateIterator, error) {

	logs, sub, err := _BaseContent.contract.FilterLogs(opts, "ContentObjectCreate")
	if err != nil {
		return nil, err
	}
	return &BaseContentContentObjectCreateIterator{contract: _BaseContent.contract, event: "ContentObjectCreate", logs: logs, sub: sub}, nil
}

// WatchContentObjectCreate is a free log subscription operation binding the contract event 0xc3decc188980e855666b70498ca85e8fa284d97d30483d828fa126f7303d7d19.
//
// Solidity: event ContentObjectCreate(address containingLibrary)
func (_BaseContent *BaseContentFilterer) WatchContentObjectCreate(opts *bind.WatchOpts, sink chan<- *BaseContentContentObjectCreate) (event.Subscription, error) {

	logs, sub, err := _BaseContent.contract.WatchLogs(opts, "ContentObjectCreate")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentContentObjectCreate)
				if err := _BaseContent.contract.UnpackLog(event, "ContentObjectCreate", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseContentObjectCreate is a log parse operation binding the contract event 0xc3decc188980e855666b70498ca85e8fa284d97d30483d828fa126f7303d7d19.
//
// Solidity: event ContentObjectCreate(address containingLibrary)
func (_BaseContent *BaseContentFilterer) ParseContentObjectCreate(log types.Log) (*BaseContentContentObjectCreate, error) {
	event := new(BaseContentContentObjectCreate)
	if err := _BaseContent.contract.UnpackLog(event, "ContentObjectCreate", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentInsufficientFundsIterator is returned from FilterInsufficientFunds and is used to iterate over the raw logs and unpacked data for InsufficientFunds events raised by the BaseContent contract.
type BaseContentInsufficientFundsIterator struct {
	Event *BaseContentInsufficientFunds // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentInsufficientFundsIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentInsufficientFunds)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentInsufficientFunds)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentInsufficientFundsIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentInsufficientFundsIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentInsufficientFunds represents a InsufficientFunds event raised by the BaseContent contract.
type BaseContentInsufficientFunds struct {
	AccessCharge   *big.Int
	AmountProvided *big.Int
	Raw            types.Log // Blockchain specific contextual infos
}

// FilterInsufficientFunds is a free log retrieval operation binding the contract event 0x03eb8b54a949acec2cd08fdb6d6bd4647a1f2c907d75d6900648effa92eb147f.
//
// Solidity: event InsufficientFunds(uint256 accessCharge, uint256 amountProvided)
func (_BaseContent *BaseContentFilterer) FilterInsufficientFunds(opts *bind.FilterOpts) (*BaseContentInsufficientFundsIterator, error) {

	logs, sub, err := _BaseContent.contract.FilterLogs(opts, "InsufficientFunds")
	if err != nil {
		return nil, err
	}
	return &BaseContentInsufficientFundsIterator{contract: _BaseContent.contract, event: "InsufficientFunds", logs: logs, sub: sub}, nil
}

// WatchInsufficientFunds is a free log subscription operation binding the contract event 0x03eb8b54a949acec2cd08fdb6d6bd4647a1f2c907d75d6900648effa92eb147f.
//
// Solidity: event InsufficientFunds(uint256 accessCharge, uint256 amountProvided)
func (_BaseContent *BaseContentFilterer) WatchInsufficientFunds(opts *bind.WatchOpts, sink chan<- *BaseContentInsufficientFunds) (event.Subscription, error) {

	logs, sub, err := _BaseContent.contract.WatchLogs(opts, "InsufficientFunds")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentInsufficientFunds)
				if err := _BaseContent.contract.UnpackLog(event, "InsufficientFunds", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInsufficientFunds is a log parse operation binding the contract event 0x03eb8b54a949acec2cd08fdb6d6bd4647a1f2c907d75d6900648effa92eb147f.
//
// Solidity: event InsufficientFunds(uint256 accessCharge, uint256 amountProvided)
func (_BaseContent *BaseContentFilterer) ParseInsufficientFunds(log types.Log) (*BaseContentInsufficientFunds, error) {
	event := new(BaseContentInsufficientFunds)
	if err := _BaseContent.contract.UnpackLog(event, "InsufficientFunds", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentLogPaymentIterator is returned from FilterLogPayment and is used to iterate over the raw logs and unpacked data for LogPayment events raised by the BaseContent contract.
type BaseContentLogPaymentIterator struct {
	Event *BaseContentLogPayment // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentLogPaymentIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentLogPayment)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentLogPayment)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentLogPaymentIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentLogPaymentIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentLogPayment represents a LogPayment event raised by the BaseContent contract.
type BaseContentLogPayment struct {
	RequestNonce *big.Int
	Label        string
	Payee        common.Address
	Amount       *big.Int
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterLogPayment is a free log retrieval operation binding the contract event 0xad58d18ea7292f887da6f15bb4f0badddaa33d169713d09cf49710acc7c3a5b9.
//
// Solidity: event LogPayment(uint256 requestNonce, string label, address payee, uint256 amount)
func (_BaseContent *BaseContentFilterer) FilterLogPayment(opts *bind.FilterOpts) (*BaseContentLogPaymentIterator, error) {

	logs, sub, err := _BaseContent.contract.FilterLogs(opts, "LogPayment")
	if err != nil {
		return nil, err
	}
	return &BaseContentLogPaymentIterator{contract: _BaseContent.contract, event: "LogPayment", logs: logs, sub: sub}, nil
}

// WatchLogPayment is a free log subscription operation binding the contract event 0xad58d18ea7292f887da6f15bb4f0badddaa33d169713d09cf49710acc7c3a5b9.
//
// Solidity: event LogPayment(uint256 requestNonce, string label, address payee, uint256 amount)
func (_BaseContent *BaseContentFilterer) WatchLogPayment(opts *bind.WatchOpts, sink chan<- *BaseContentLogPayment) (event.Subscription, error) {

	logs, sub, err := _BaseContent.contract.WatchLogs(opts, "LogPayment")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentLogPayment)
				if err := _BaseContent.contract.UnpackLog(event, "LogPayment", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseLogPayment is a log parse operation binding the contract event 0xad58d18ea7292f887da6f15bb4f0badddaa33d169713d09cf49710acc7c3a5b9.
//
// Solidity: event LogPayment(uint256 requestNonce, string label, address payee, uint256 amount)
func (_BaseContent *BaseContentFilterer) ParseLogPayment(log types.Log) (*BaseContentLogPayment, error) {
	event := new(BaseContentLogPayment)
	if err := _BaseContent.contract.UnpackLog(event, "LogPayment", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentObjectMetaChangedIterator is returned from FilterObjectMetaChanged and is used to iterate over the raw logs and unpacked data for ObjectMetaChanged events raised by the BaseContent contract.
type BaseContentObjectMetaChangedIterator struct {
	Event *BaseContentObjectMetaChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentObjectMetaChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentObjectMetaChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentObjectMetaChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentObjectMetaChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentObjectMetaChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentObjectMetaChanged represents a ObjectMetaChanged event raised by the BaseContent contract.
type BaseContentObjectMetaChanged struct {
	Key []byte
	Raw types.Log // Blockchain specific contextual infos
}

// FilterObjectMetaChanged is a free log retrieval operation binding the contract event 0xe2b310ec9dabdc05229a748e07666c3bc9c46c6ef465cce30d0aa3aa64a0644c.
//
// Solidity: event ObjectMetaChanged(bytes key)
func (_BaseContent *BaseContentFilterer) FilterObjectMetaChanged(opts *bind.FilterOpts) (*BaseContentObjectMetaChangedIterator, error) {

	logs, sub, err := _BaseContent.contract.FilterLogs(opts, "ObjectMetaChanged")
	if err != nil {
		return nil, err
	}
	return &BaseContentObjectMetaChangedIterator{contract: _BaseContent.contract, event: "ObjectMetaChanged", logs: logs, sub: sub}, nil
}

// WatchObjectMetaChanged is a free log subscription operation binding the contract event 0xe2b310ec9dabdc05229a748e07666c3bc9c46c6ef465cce30d0aa3aa64a0644c.
//
// Solidity: event ObjectMetaChanged(bytes key)
func (_BaseContent *BaseContentFilterer) WatchObjectMetaChanged(opts *bind.WatchOpts, sink chan<- *BaseContentObjectMetaChanged) (event.Subscription, error) {

	logs, sub, err := _BaseContent.contract.WatchLogs(opts, "ObjectMetaChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentObjectMetaChanged)
				if err := _BaseContent.contract.UnpackLog(event, "ObjectMetaChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseObjectMetaChanged is a log parse operation binding the contract event 0xe2b310ec9dabdc05229a748e07666c3bc9c46c6ef465cce30d0aa3aa64a0644c.
//
// Solidity: event ObjectMetaChanged(bytes key)
func (_BaseContent *BaseContentFilterer) ParseObjectMetaChanged(log types.Log) (*BaseContentObjectMetaChanged, error) {
	event := new(BaseContentObjectMetaChanged)
	if err := _BaseContent.contract.UnpackLog(event, "ObjectMetaChanged", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentPublishIterator is returned from FilterPublish and is used to iterate over the raw logs and unpacked data for Publish events raised by the BaseContent contract.
type BaseContentPublishIterator struct {
	Event *BaseContentPublish // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentPublishIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentPublish)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentPublish)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentPublishIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentPublishIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentPublish represents a Publish event raised by the BaseContent contract.
type BaseContentPublish struct {
	RequestStatus bool
	StatusCode    *big.Int
	ObjectHash    string
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterPublish is a free log retrieval operation binding the contract event 0xad9c5eacc073b2e1767affc883e050347e1dd379c9799cb5ac0a17bde80f5cf4.
//
// Solidity: event Publish(bool requestStatus, int256 statusCode, string objectHash)
func (_BaseContent *BaseContentFilterer) FilterPublish(opts *bind.FilterOpts) (*BaseContentPublishIterator, error) {

	logs, sub, err := _BaseContent.contract.FilterLogs(opts, "Publish")
	if err != nil {
		return nil, err
	}
	return &BaseContentPublishIterator{contract: _BaseContent.contract, event: "Publish", logs: logs, sub: sub}, nil
}

// WatchPublish is a free log subscription operation binding the contract event 0xad9c5eacc073b2e1767affc883e050347e1dd379c9799cb5ac0a17bde80f5cf4.
//
// Solidity: event Publish(bool requestStatus, int256 statusCode, string objectHash)
func (_BaseContent *BaseContentFilterer) WatchPublish(opts *bind.WatchOpts, sink chan<- *BaseContentPublish) (event.Subscription, error) {

	logs, sub, err := _BaseContent.contract.WatchLogs(opts, "Publish")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentPublish)
				if err := _BaseContent.contract.UnpackLog(event, "Publish", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParsePublish is a log parse operation binding the contract event 0xad9c5eacc073b2e1767affc883e050347e1dd379c9799cb5ac0a17bde80f5cf4.
//
// Solidity: event Publish(bool requestStatus, int256 statusCode, string objectHash)
func (_BaseContent *BaseContentFilterer) ParsePublish(log types.Log) (*BaseContentPublish, error) {
	event := new(BaseContentPublish)
	if err := _BaseContent.contract.UnpackLog(event, "Publish", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentSetAccessChargeIterator is returned from FilterSetAccessCharge and is used to iterate over the raw logs and unpacked data for SetAccessCharge events raised by the BaseContent contract.
type BaseContentSetAccessChargeIterator struct {
	Event *BaseContentSetAccessCharge // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentSetAccessChargeIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentSetAccessCharge)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentSetAccessCharge)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentSetAccessChargeIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentSetAccessChargeIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentSetAccessCharge represents a SetAccessCharge event raised by the BaseContent contract.
type BaseContentSetAccessCharge struct {
	AccessCharge *big.Int
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterSetAccessCharge is a free log retrieval operation binding the contract event 0x4114f8ef80b6de2161db580cbefa14e1892d15d3ebe2062c9914e4a5773114a3.
//
// Solidity: event SetAccessCharge(uint256 accessCharge)
func (_BaseContent *BaseContentFilterer) FilterSetAccessCharge(opts *bind.FilterOpts) (*BaseContentSetAccessChargeIterator, error) {

	logs, sub, err := _BaseContent.contract.FilterLogs(opts, "SetAccessCharge")
	if err != nil {
		return nil, err
	}
	return &BaseContentSetAccessChargeIterator{contract: _BaseContent.contract, event: "SetAccessCharge", logs: logs, sub: sub}, nil
}

// WatchSetAccessCharge is a free log subscription operation binding the contract event 0x4114f8ef80b6de2161db580cbefa14e1892d15d3ebe2062c9914e4a5773114a3.
//
// Solidity: event SetAccessCharge(uint256 accessCharge)
func (_BaseContent *BaseContentFilterer) WatchSetAccessCharge(opts *bind.WatchOpts, sink chan<- *BaseContentSetAccessCharge) (event.Subscription, error) {

	logs, sub, err := _BaseContent.contract.WatchLogs(opts, "SetAccessCharge")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentSetAccessCharge)
				if err := _BaseContent.contract.UnpackLog(event, "SetAccessCharge", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseSetAccessCharge is a log parse operation binding the contract event 0x4114f8ef80b6de2161db580cbefa14e1892d15d3ebe2062c9914e4a5773114a3.
//
// Solidity: event SetAccessCharge(uint256 accessCharge)
func (_BaseContent *BaseContentFilterer) ParseSetAccessCharge(log types.Log) (*BaseContentSetAccessCharge, error) {
	event := new(BaseContentSetAccessCharge)
	if err := _BaseContent.contract.UnpackLog(event, "SetAccessCharge", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentSetContentContractIterator is returned from FilterSetContentContract and is used to iterate over the raw logs and unpacked data for SetContentContract events raised by the BaseContent contract.
type BaseContentSetContentContractIterator struct {
	Event *BaseContentSetContentContract // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentSetContentContractIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentSetContentContract)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentSetContentContract)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentSetContentContractIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentSetContentContractIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentSetContentContract represents a SetContentContract event raised by the BaseContent contract.
type BaseContentSetContentContract struct {
	ContentContractAddress common.Address
	Raw                    types.Log // Blockchain specific contextual infos
}

// FilterSetContentContract is a free log retrieval operation binding the contract event 0xa6f2e38f0cfebf27212317fced3ac40bc62e00bd33f38d69603710740c69acb7.
//
// Solidity: event SetContentContract(address contentContractAddress)
func (_BaseContent *BaseContentFilterer) FilterSetContentContract(opts *bind.FilterOpts) (*BaseContentSetContentContractIterator, error) {

	logs, sub, err := _BaseContent.contract.FilterLogs(opts, "SetContentContract")
	if err != nil {
		return nil, err
	}
	return &BaseContentSetContentContractIterator{contract: _BaseContent.contract, event: "SetContentContract", logs: logs, sub: sub}, nil
}

// WatchSetContentContract is a free log subscription operation binding the contract event 0xa6f2e38f0cfebf27212317fced3ac40bc62e00bd33f38d69603710740c69acb7.
//
// Solidity: event SetContentContract(address contentContractAddress)
func (_BaseContent *BaseContentFilterer) WatchSetContentContract(opts *bind.WatchOpts, sink chan<- *BaseContentSetContentContract) (event.Subscription, error) {

	logs, sub, err := _BaseContent.contract.WatchLogs(opts, "SetContentContract")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentSetContentContract)
				if err := _BaseContent.contract.UnpackLog(event, "SetContentContract", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseSetContentContract is a log parse operation binding the contract event 0xa6f2e38f0cfebf27212317fced3ac40bc62e00bd33f38d69603710740c69acb7.
//
// Solidity: event SetContentContract(address contentContractAddress)
func (_BaseContent *BaseContentFilterer) ParseSetContentContract(log types.Log) (*BaseContentSetContentContract, error) {
	event := new(BaseContentSetContentContract)
	if err := _BaseContent.contract.UnpackLog(event, "SetContentContract", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentSetContentTypeIterator is returned from FilterSetContentType and is used to iterate over the raw logs and unpacked data for SetContentType events raised by the BaseContent contract.
type BaseContentSetContentTypeIterator struct {
	Event *BaseContentSetContentType // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentSetContentTypeIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentSetContentType)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentSetContentType)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentSetContentTypeIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentSetContentTypeIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentSetContentType represents a SetContentType event raised by the BaseContent contract.
type BaseContentSetContentType struct {
	ContentType            common.Address
	ContentContractAddress common.Address
	Raw                    types.Log // Blockchain specific contextual infos
}

// FilterSetContentType is a free log retrieval operation binding the contract event 0x4f692e87baf302f7281e83eec109053efc2ca8e7bddfc6ce88c579cd9767f71f.
//
// Solidity: event SetContentType(address contentType, address contentContractAddress)
func (_BaseContent *BaseContentFilterer) FilterSetContentType(opts *bind.FilterOpts) (*BaseContentSetContentTypeIterator, error) {

	logs, sub, err := _BaseContent.contract.FilterLogs(opts, "SetContentType")
	if err != nil {
		return nil, err
	}
	return &BaseContentSetContentTypeIterator{contract: _BaseContent.contract, event: "SetContentType", logs: logs, sub: sub}, nil
}

// WatchSetContentType is a free log subscription operation binding the contract event 0x4f692e87baf302f7281e83eec109053efc2ca8e7bddfc6ce88c579cd9767f71f.
//
// Solidity: event SetContentType(address contentType, address contentContractAddress)
func (_BaseContent *BaseContentFilterer) WatchSetContentType(opts *bind.WatchOpts, sink chan<- *BaseContentSetContentType) (event.Subscription, error) {

	logs, sub, err := _BaseContent.contract.WatchLogs(opts, "SetContentType")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentSetContentType)
				if err := _BaseContent.contract.UnpackLog(event, "SetContentType", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseSetContentType is a log parse operation binding the contract event 0x4f692e87baf302f7281e83eec109053efc2ca8e7bddfc6ce88c579cd9767f71f.
//
// Solidity: event SetContentType(address contentType, address contentContractAddress)
func (_BaseContent *BaseContentFilterer) ParseSetContentType(log types.Log) (*BaseContentSetContentType, error) {
	event := new(BaseContentSetContentType)
	if err := _BaseContent.contract.UnpackLog(event, "SetContentType", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentSetStatusCodeIterator is returned from FilterSetStatusCode and is used to iterate over the raw logs and unpacked data for SetStatusCode events raised by the BaseContent contract.
type BaseContentSetStatusCodeIterator struct {
	Event *BaseContentSetStatusCode // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentSetStatusCodeIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentSetStatusCode)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentSetStatusCode)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentSetStatusCodeIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentSetStatusCodeIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentSetStatusCode represents a SetStatusCode event raised by the BaseContent contract.
type BaseContentSetStatusCode struct {
	StatusCode *big.Int
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterSetStatusCode is a free log retrieval operation binding the contract event 0xda4f34b30fa0ba8a73fedb922f4d28e2a10a5d68e53cf8e942abce3ac09158a2.
//
// Solidity: event SetStatusCode(int256 statusCode)
func (_BaseContent *BaseContentFilterer) FilterSetStatusCode(opts *bind.FilterOpts) (*BaseContentSetStatusCodeIterator, error) {

	logs, sub, err := _BaseContent.contract.FilterLogs(opts, "SetStatusCode")
	if err != nil {
		return nil, err
	}
	return &BaseContentSetStatusCodeIterator{contract: _BaseContent.contract, event: "SetStatusCode", logs: logs, sub: sub}, nil
}

// WatchSetStatusCode is a free log subscription operation binding the contract event 0xda4f34b30fa0ba8a73fedb922f4d28e2a10a5d68e53cf8e942abce3ac09158a2.
//
// Solidity: event SetStatusCode(int256 statusCode)
func (_BaseContent *BaseContentFilterer) WatchSetStatusCode(opts *bind.WatchOpts, sink chan<- *BaseContentSetStatusCode) (event.Subscription, error) {

	logs, sub, err := _BaseContent.contract.WatchLogs(opts, "SetStatusCode")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentSetStatusCode)
				if err := _BaseContent.contract.UnpackLog(event, "SetStatusCode", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseSetStatusCode is a log parse operation binding the contract event 0xda4f34b30fa0ba8a73fedb922f4d28e2a10a5d68e53cf8e942abce3ac09158a2.
//
// Solidity: event SetStatusCode(int256 statusCode)
func (_BaseContent *BaseContentFilterer) ParseSetStatusCode(log types.Log) (*BaseContentSetStatusCode, error) {
	event := new(BaseContentSetStatusCode)
	if err := _BaseContent.contract.UnpackLog(event, "SetStatusCode", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentUpdateRequestIterator is returned from FilterUpdateRequest and is used to iterate over the raw logs and unpacked data for UpdateRequest events raised by the BaseContent contract.
type BaseContentUpdateRequestIterator struct {
	Event *BaseContentUpdateRequest // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentUpdateRequestIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentUpdateRequest)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentUpdateRequest)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentUpdateRequestIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentUpdateRequestIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentUpdateRequest represents a UpdateRequest event raised by the BaseContent contract.
type BaseContentUpdateRequest struct {
	ObjectHash string
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterUpdateRequest is a free log retrieval operation binding the contract event 0x403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b65.
//
// Solidity: event UpdateRequest(string objectHash)
func (_BaseContent *BaseContentFilterer) FilterUpdateRequest(opts *bind.FilterOpts) (*BaseContentUpdateRequestIterator, error) {

	logs, sub, err := _BaseContent.contract.FilterLogs(opts, "UpdateRequest")
	if err != nil {
		return nil, err
	}
	return &BaseContentUpdateRequestIterator{contract: _BaseContent.contract, event: "UpdateRequest", logs: logs, sub: sub}, nil
}

// WatchUpdateRequest is a free log subscription operation binding the contract event 0x403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b65.
//
// Solidity: event UpdateRequest(string objectHash)
func (_BaseContent *BaseContentFilterer) WatchUpdateRequest(opts *bind.WatchOpts, sink chan<- *BaseContentUpdateRequest) (event.Subscription, error) {

	logs, sub, err := _BaseContent.contract.WatchLogs(opts, "UpdateRequest")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentUpdateRequest)
				if err := _BaseContent.contract.UnpackLog(event, "UpdateRequest", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseUpdateRequest is a log parse operation binding the contract event 0x403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b65.
//
// Solidity: event UpdateRequest(string objectHash)
func (_BaseContent *BaseContentFilterer) ParseUpdateRequest(log types.Log) (*BaseContentUpdateRequest, error) {
	event := new(BaseContentUpdateRequest)
	if err := _BaseContent.contract.UnpackLog(event, "UpdateRequest", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentVersionConfirmIterator is returned from FilterVersionConfirm and is used to iterate over the raw logs and unpacked data for VersionConfirm events raised by the BaseContent contract.
type BaseContentVersionConfirmIterator struct {
	Event *BaseContentVersionConfirm // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentVersionConfirmIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentVersionConfirm)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentVersionConfirm)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentVersionConfirmIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentVersionConfirmIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentVersionConfirm represents a VersionConfirm event raised by the BaseContent contract.
type BaseContentVersionConfirm struct {
	SpaceAddress  common.Address
	ParentAddress common.Address
	ObjectHash    string
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterVersionConfirm is a free log retrieval operation binding the contract event 0xbdaffceabaaa783aa187fea6c2e815541d29e2290bf3f7d3c4fc53672b68f7df.
//
// Solidity: event VersionConfirm(address spaceAddress, address parentAddress, string objectHash)
func (_BaseContent *BaseContentFilterer) FilterVersionConfirm(opts *bind.FilterOpts) (*BaseContentVersionConfirmIterator, error) {

	logs, sub, err := _BaseContent.contract.FilterLogs(opts, "VersionConfirm")
	if err != nil {
		return nil, err
	}
	return &BaseContentVersionConfirmIterator{contract: _BaseContent.contract, event: "VersionConfirm", logs: logs, sub: sub}, nil
}

// WatchVersionConfirm is a free log subscription operation binding the contract event 0xbdaffceabaaa783aa187fea6c2e815541d29e2290bf3f7d3c4fc53672b68f7df.
//
// Solidity: event VersionConfirm(address spaceAddress, address parentAddress, string objectHash)
func (_BaseContent *BaseContentFilterer) WatchVersionConfirm(opts *bind.WatchOpts, sink chan<- *BaseContentVersionConfirm) (event.Subscription, error) {

	logs, sub, err := _BaseContent.contract.WatchLogs(opts, "VersionConfirm")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentVersionConfirm)
				if err := _BaseContent.contract.UnpackLog(event, "VersionConfirm", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseVersionConfirm is a log parse operation binding the contract event 0xbdaffceabaaa783aa187fea6c2e815541d29e2290bf3f7d3c4fc53672b68f7df.
//
// Solidity: event VersionConfirm(address spaceAddress, address parentAddress, string objectHash)
func (_BaseContent *BaseContentFilterer) ParseVersionConfirm(log types.Log) (*BaseContentVersionConfirm, error) {
	event := new(BaseContentVersionConfirm)
	if err := _BaseContent.contract.UnpackLog(event, "VersionConfirm", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentVersionDeleteIterator is returned from FilterVersionDelete and is used to iterate over the raw logs and unpacked data for VersionDelete events raised by the BaseContent contract.
type BaseContentVersionDeleteIterator struct {
	Event *BaseContentVersionDelete // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentVersionDeleteIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentVersionDelete)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentVersionDelete)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentVersionDeleteIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentVersionDeleteIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentVersionDelete represents a VersionDelete event raised by the BaseContent contract.
type BaseContentVersionDelete struct {
	SpaceAddress common.Address
	VersionHash  string
	Index        *big.Int
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterVersionDelete is a free log retrieval operation binding the contract event 0x238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51.
//
// Solidity: event VersionDelete(address spaceAddress, string versionHash, int256 index)
func (_BaseContent *BaseContentFilterer) FilterVersionDelete(opts *bind.FilterOpts) (*BaseContentVersionDeleteIterator, error) {

	logs, sub, err := _BaseContent.contract.FilterLogs(opts, "VersionDelete")
	if err != nil {
		return nil, err
	}
	return &BaseContentVersionDeleteIterator{contract: _BaseContent.contract, event: "VersionDelete", logs: logs, sub: sub}, nil
}

// WatchVersionDelete is a free log subscription operation binding the contract event 0x238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51.
//
// Solidity: event VersionDelete(address spaceAddress, string versionHash, int256 index)
func (_BaseContent *BaseContentFilterer) WatchVersionDelete(opts *bind.WatchOpts, sink chan<- *BaseContentVersionDelete) (event.Subscription, error) {

	logs, sub, err := _BaseContent.contract.WatchLogs(opts, "VersionDelete")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentVersionDelete)
				if err := _BaseContent.contract.UnpackLog(event, "VersionDelete", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseVersionDelete is a log parse operation binding the contract event 0x238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51.
//
// Solidity: event VersionDelete(address spaceAddress, string versionHash, int256 index)
func (_BaseContent *BaseContentFilterer) ParseVersionDelete(log types.Log) (*BaseContentVersionDelete, error) {
	event := new(BaseContentVersionDelete)
	if err := _BaseContent.contract.UnpackLog(event, "VersionDelete", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentVisibilityChangedIterator is returned from FilterVisibilityChanged and is used to iterate over the raw logs and unpacked data for VisibilityChanged events raised by the BaseContent contract.
type BaseContentVisibilityChangedIterator struct {
	Event *BaseContentVisibilityChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentVisibilityChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentVisibilityChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentVisibilityChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentVisibilityChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentVisibilityChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentVisibilityChanged represents a VisibilityChanged event raised by the BaseContent contract.
type BaseContentVisibilityChanged struct {
	ContentSpace  common.Address
	ParentAddress common.Address
	Visibility    uint8
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterVisibilityChanged is a free log retrieval operation binding the contract event 0x369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500.
//
// Solidity: event VisibilityChanged(address contentSpace, address parentAddress, uint8 visibility)
func (_BaseContent *BaseContentFilterer) FilterVisibilityChanged(opts *bind.FilterOpts) (*BaseContentVisibilityChangedIterator, error) {

	logs, sub, err := _BaseContent.contract.FilterLogs(opts, "VisibilityChanged")
	if err != nil {
		return nil, err
	}
	return &BaseContentVisibilityChangedIterator{contract: _BaseContent.contract, event: "VisibilityChanged", logs: logs, sub: sub}, nil
}

// WatchVisibilityChanged is a free log subscription operation binding the contract event 0x369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500.
//
// Solidity: event VisibilityChanged(address contentSpace, address parentAddress, uint8 visibility)
func (_BaseContent *BaseContentFilterer) WatchVisibilityChanged(opts *bind.WatchOpts, sink chan<- *BaseContentVisibilityChanged) (event.Subscription, error) {

	logs, sub, err := _BaseContent.contract.WatchLogs(opts, "VisibilityChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentVisibilityChanged)
				if err := _BaseContent.contract.UnpackLog(event, "VisibilityChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseVisibilityChanged is a log parse operation binding the contract event 0x369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500.
//
// Solidity: event VisibilityChanged(address contentSpace, address parentAddress, uint8 visibility)
func (_BaseContent *BaseContentFilterer) ParseVisibilityChanged(log types.Log) (*BaseContentVisibilityChanged, error) {
	event := new(BaseContentVisibilityChanged)
	if err := _BaseContent.contract.UnpackLog(event, "VisibilityChanged", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentFactoryABI is the input ABI used to generate the binding from.
const BaseContentFactoryABI = "[{\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"_spaceAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"OP_ACCESS_COMPLETE\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OP_ACCESS_REQUEST\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentSpace\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"addresspayable\",\"name\":\"content_type\",\"type\":\"address\"}],\"name\":\"createContent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"_opCodes\",\"type\":\"uint32[]\"},{\"internalType\":\"addresspayable[]\",\"name\":\"_contentAddrs\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_userAddrs\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_requestNonces\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"_ctxHashes\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"name\":\"executeAccessBatch\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newCreator\",\"type\":\"address\"}],\"name\":\"transferCreatorship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"versionAPI\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// BaseContentFactoryFuncSigs maps the 4-byte function signature to its string representation.
var BaseContentFactoryFuncSigs = map[string]string{
	"4d887374": "OP_ACCESS_COMPLETE()",
	"52344328": "OP_ACCESS_REQUEST()",
	"af570c04": "contentSpace()",
	"bf4e088f": "createContent(address,address)",
	"02d05d3f": "creator()",
	"4dcc1d29": "executeAccessBatch(uint32[],address[],address[],uint256[],bytes32[],uint256[],uint256[])",
	"16279055": "isContract(address)",
	"41c0e1b5": "kill()",
	"8da5cb5b": "owner()",
	"6d2e4b1b": "transferCreatorship(address)",
	"f2fde38b": "transferOwnership(address)",
	"54fd4d50": "version()",
	"5f4fcae1": "versionAPI()",
}

// BaseContentFactoryBin is the compiled bytecode used for deploying new contracts.
var BaseContentFactoryBin = "0x60806040527f4f776e61626c653230323030393238313130303030504f000000000000000000600055620332e360ec1b6001557f426173654374466163746f72793230323030393238313130303030504f00000060055534801561006257600080fd5b5060405161679b38038061679b8339818101604052602081101561008557600080fd5b5051600280546001600160a01b0319908116321790915560038054821633179055600480546001600160a01b03909316929091169190911790556166cd806100ce6000396000f3fe6080604052600436106100c25760003560e01c806354fd4d501161007f5780638da5cb5b116100595780638da5cb5b146105bd578063af570c04146105d2578063bf4e088f146105e7578063f2fde38b14610622576100c2565b806354fd4d501461054e5780635f4fcae1146105755780636d2e4b1b1461058a576100c2565b806302d05d3f146100c457806316279055146100f557806341c0e1b51461013c5780634d887374146101515780634dcc1d291461017f5780635234432814610539575b005b3480156100d057600080fd5b506100d9610655565b604080516001600160a01b039092168252519081900360200190f35b34801561010157600080fd5b506101286004803603602081101561011857600080fd5b50356001600160a01b0316610664565b604080519115158252519081900360200190f35b34801561014857600080fd5b506100c261066e565b34801561015d57600080fd5b50610166610693565b6040805163ffffffff9092168252519081900360200190f35b34801561018b57600080fd5b506100c2600480360360e08110156101a257600080fd5b810190602081018135600160201b8111156101bc57600080fd5b8201836020820111156101ce57600080fd5b803590602001918460208302840111600160201b831117156101ef57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561023e57600080fd5b82018360208201111561025057600080fd5b803590602001918460208302840111600160201b8311171561027157600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156102c057600080fd5b8201836020820111156102d257600080fd5b803590602001918460208302840111600160201b831117156102f357600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561034257600080fd5b82018360208201111561035457600080fd5b803590602001918460208302840111600160201b8311171561037557600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156103c457600080fd5b8201836020820111156103d657600080fd5b803590602001918460208302840111600160201b831117156103f757600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561044657600080fd5b82018360208201111561045857600080fd5b803590602001918460208302840111600160201b8311171561047957600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156104c857600080fd5b8201836020820111156104da57600080fd5b803590602001918460208302840111600160201b831117156104fb57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610698945050505050565b34801561054557600080fd5b506101666108f3565b34801561055a57600080fd5b506105636108f8565b60408051918252519081900360200190f35b34801561058157600080fd5b506105636108fe565b34801561059657600080fd5b506100c2600480360360208110156105ad57600080fd5b50356001600160a01b0316610904565b3480156105c957600080fd5b506100d9610950565b3480156105de57600080fd5b506100d961095f565b3480156105f357600080fd5b506100d96004803603604081101561060a57600080fd5b506001600160a01b038135811691602001351661096e565b34801561062e57600080fd5b506100c26004803603602081101561064557600080fd5b50356001600160a01b0316610ee2565b6002546001600160a01b031681565b803b15155b919050565b6003546001600160a01b0316331461068557600080fd5b6003546001600160a01b0316ff5b600281565b6004546003546001600160a01b03918216911633148061072b57506040805163d6be0f4960e01b815233600482015290516000916001600160a01b0384169163d6be0f4991602480820192602092909190829003018186803b1580156106fd57600080fd5b505afa158015610711573d6000803e3d6000fd5b505050506040513d602081101561072757600080fd5b5051115b61073457600080fd5b875160005b818110156108e757600089828151811061074f57fe5b602002602001015190506107758a838151811061076857fe5b6020026020010151610664565b61077f57506108df565b600163ffffffff168b838151811061079357fe5b602002602001015163ffffffff16141561089557806001600160a01b03166378f52ffb8984815181106107c257fe5b60200260200101518985815181106107d657fe5b60200260200101518c86815181106107ea57fe5b60200260200101518a87815181106107fe57fe5b60200260200101516040518563ffffffff1660e01b815260040180858152602001848152602001836001600160a01b03166001600160a01b03168152602001828152602001945050505050602060405180830381600087803b15801561086357600080fd5b505af1158015610877573d6000803e3d6000fd5b505050506040513d602081101561088d57600080fd5b506108dd9050565b600263ffffffff168b83815181106108a957fe5b602002602001015163ffffffff1614156108d857806001600160a01b031663bc7dba338984815181106107c257fe5b600080fd5b505b600101610739565b50505050505050505050565b600181565b60055481565b60015481565b6002546001600160a01b0316331461091b57600080fd5b6001600160a01b03811661092e57600080fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031681565b6004546001600160a01b031681565b6004546000906001600160a01b0316331461098857600080fd5b60408051630eaec2c560e01b8152326004820152905184916001600160a01b03831691630eaec2c591602480820192602092909190829003018186803b1580156109d157600080fd5b505afa1580156109e5573d6000803e3d6000fd5b505050506040513d60208110156109fb57600080fd5b5051610a0657600080fd5b806001600160a01b03166329dedde5846040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b158015610a5c57600080fd5b505afa158015610a70573d6000803e3d6000fd5b505050506040513d6020811015610a8657600080fd5b5051610a9157600080fd5b6000338585604051610aa290611070565b6001600160a01b03938416815291831660208301529091166040808301919091525190819003606001906000f080158015610ae1573d6000803e3d6000fd5b509050806001600160a01b031663c9e8e72d836001600160a01b03166332eaf21b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b2c57600080fd5b505afa158015610b40573d6000803e3d6000fd5b505050506040513d6020811015610b5657600080fd5b5051604080516001600160e01b031960e085901b1681526001600160a01b03909216600483015251602480830192600092919082900301818387803b158015610b9e57600080fd5b505af1158015610bb2573d6000803e3d6000fd5b50505050806001600160a01b031663e5385303836001600160a01b0316631cdbee5a876040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b158015610c1b57600080fd5b505afa158015610c2f573d6000803e3d6000fd5b505050506040513d6020811015610c4557600080fd5b5051604080516001600160e01b031960e085901b1681526001600160a01b03909216600483015251602480830192600092919082900301818387803b158015610c8d57600080fd5b505af1158015610ca1573d6000803e3d6000fd5b505060048054604080516363e6ffdd60e01b81523293810193909352516001600160a01b0390911693506000925083916363e6ffdd916024808301926020929190829003018186803b158015610cf657600080fd5b505afa158015610d0a573d6000803e3d6000fd5b505050506040513d6020811015610d2057600080fd5b505190506000610d2f82610f2e565b905080610e0b576040805163f2fde38b60e01b8152326004820152905183916001600160a01b0387169163f2fde38b9160248082019260009290919082900301818387803b158015610d8057600080fd5b505af1158015610d94573d6000803e3d6000fd5b50506040805162f7bd4560e61b81526001600160a01b0389811660048301526000602483018190526002604484015292519086169450633def514093506064808301939282900301818387803b158015610ded57600080fd5b505af1158015610e01573d6000803e3d6000fd5b5050505050610ed6565b604080516307f0dad160e11b81523260048201526000602482018190526002604483015291516001600160a01b03871692630fe1b5a2926064808201939182900301818387803b158015610e5e57600080fd5b505af1158015610e72573d6000803e3d6000fd5b50506040805163f2fde38b60e01b815232600482015290516001600160a01b038816935063f2fde38b9250602480830192600092919082900301818387803b158015610ebd57600080fd5b505af1158015610ed1573d6000803e3d6000fd5b505050505b50919695505050505050565b6003546001600160a01b03163314610ef957600080fd5b6001600160a01b038116610f0c57600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b604080516b76657273696f6e415049282960a01b8152815190819003600c018120600482526024820183526020820180516001600160e01b03166001600160e01b03199092169190911781529151815160009384936060936001600160a01b03881693919290918291908083835b60208310610fbb5780518252601f199092019160209182019101610f9c565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d806000811461101b576040519150601f19603f3d011682016040523d82523d6000602084013e611020565b606091505b50909250905081158061103257508051155b8061105657508060008151811061104557fe5b01602001516001600160f81b031916155b1561106657600092505050610669565b5060019392505050565b61561b8061107e8339019056fe608060408190527f4f776e61626c653230323030393238313130303030504f0000000000000000006000908155620332e360ec1b60019081557f41636365737369626c653230323030363236313231363030504f0000000000006007556008805460ff191690911761ff00191690557f4564697461626c653230323030393238313130303030504f00000000000000006009557f42617365436f6e74656e743230323030393238313130303030504f000000000060105560175561561b38819003908190833981810160405260608110156100d957600080fd5b50805160208083015160409384015160028054326001600160a01b03199182161790915560038054339083161790556004805482166001600160a01b0380881691909117909155601480548316828616179081905560001960165560118054909316828516179092556008805461010061ffff1990911617905586519116815294519394919390927fc3decc188980e855666b70498ca85e8fa284d97d30483d828fa126f7303d7d19928290030190a15050506154808061019b6000396000f3fe6080604052600436106103c25760003560e01c806367e5c3bf116101f2578063aa024e8b1161010d578063cbcd4461116100a0578063e542b7cb1161006f578063e542b7cb1461187f578063ef1d7dc2146119b5578063f2fde38b146119ca578063f4d9bae8146119fd576103c2565b8063cbcd446114611771578063e02dd9c214611786578063e1a707171461179b578063e53853031461184c576103c2565b8063bc7dba33116100dc578063bc7dba33146115b1578063c26484a6146115e9578063c287e0ed14611729578063c9e8e72d1461173e576103c2565b8063aa024e8b146114a9578063ac55c906146114d6578063af570c0414611587578063b816f5131461159c576103c2565b80638280dd8f1161018557806397ac4fd21161015457806397ac4fd21461101d5780639867db7414611032578063a1ff106e146110e3578063a8d4160e1461131a576103c2565b80638280dd8f14610f965780638da5cb5b14610fc05780638f77920114610fd557806395a078e814610fea576103c2565b806378f52ffb116101c157806378f52ffb14610ddf5780637ca8f61814610e175780637ddc2c5614610e4157806381beeb6414610f81576103c2565b806367e5c3bf14610d3a5780636d2e4b1b14610d6d5780636e37542714610da05780637886f74714610db5576103c2565b8063331b86c0116102e2578063484f4b3b116102755780635f6a1301116102445780635f6a130114610c71578063628449fd14610c865780636380501f14610d1057806364ade32b14610d25576103c2565b8063484f4b3b14610af35780635267db4414610c1d57806354fd4d5014610c475780635f4fcae114610c5c576103c2565b806340b87a26116102b157806340b87a261461099757806341c0e1b5146109ac578063446e8826146109c157806345155f6e146109c9576103c2565b8063331b86c0146107fa57806336ebffca1461080f578063375a6e7c1461082457806338d0f50414610839576103c2565b80631a735f181161035a57806324d7806c1161032957806324d7806c1461077657806327c1c21d146107a957806329adec14146107d057806332eaf21b146107e5576103c2565b80631a735f181461059b5780631bf7a912146105fa57806322e564eb1461071d5780632310167f14610761576103c2565b80630c6d3f93116103965780630c6d3f931461044f5780630fe1b5a214610517578063100508a21461055b57806314cfabb314610586576103c2565b8062821de3146103c457806302d05d3f146103f55780630593e3351461040a578063075d478214610447575b005b3480156103d057600080fd5b506103d9611a27565b604080516001600160a01b039092168252519081900360200190f35b34801561040157600080fd5b506103d9611a37565b6104336004803603606081101561042057600080fd5b5080359060208101359060400135611a46565b604080519115158252519081900360200190f35b610433611ab6565b34801561045b57600080fd5b506104336004803603608081101561047257600080fd5b8135916001600160a01b0360208201351691810190606081016040820135600160201b8111156104a157600080fd5b8201836020820111156104b357600080fd5b803590602001918460018302840111600160201b831117156104d457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505091359250611c0e915050565b34801561052357600080fd5b506103c26004803603606081101561053a57600080fd5b506001600160a01b038135169060ff60208201358116916040013516611c53565b34801561056757600080fd5b50610570611d18565b6040805160ff9092168252519081900360200190f35b34801561059257600080fd5b50610433611d1d565b3480156105a757600080fd5b506105c5600480360360208110156105be57600080fd5b5035611da1565b604080516001600160a01b0390951685526020850193909352600091820b90910b838301526060830152519081900360800190f35b6104336004803603604081101561061057600080fd5b810190602081018135600160201b81111561062a57600080fd5b82018360208201111561063c57600080fd5b803590602001918460208302840111600160201b8311171561065d57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156106ac57600080fd5b8201836020820111156106be57600080fd5b803590602001918460208302840111600160201b831117156106df57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611dd5945050505050565b34801561072957600080fd5b506103c26004803603606081101561074057600080fd5b506001600160a01b038135169060ff60208201358116916040013516611e95565b34801561076d57600080fd5b506103d96122db565b34801561078257600080fd5b506104336004803603602081101561079957600080fd5b50356001600160a01b03166122ea565b3480156107b557600080fd5b506107be612314565b60408051918252519081900360200190f35b3480156107dc57600080fd5b5061057061231a565b3480156107f157600080fd5b506103d9612323565b34801561080657600080fd5b506107be612332565b34801561081b57600080fd5b506103d9612338565b34801561083057600080fd5b50610433612347565b34801561084557600080fd5b506109736004803603606081101561085c57600080fd5b60ff8235169190810190604081016020820135600160201b81111561088057600080fd5b82018360208201111561089257600080fd5b803590602001918460208302840111600160201b831117156108b357600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561090257600080fd5b82018360208201111561091457600080fd5b803590602001918460208302840111600160201b8311171561093557600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550612350945050505050565b6040805160ff94851681529290931660208301528183015290519081900360600190f35b3480156109a357600080fd5b506107be612370565b3480156109b857600080fd5b506103c2612376565b6104336124da565b610433600480360360608110156109df57600080fd5b81359190810190604081016020820135600160201b811115610a0057600080fd5b820183602082011115610a1257600080fd5b803590602001918460208302840111600160201b83111715610a3357600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610a8257600080fd5b820183602082011115610a9457600080fd5b803590602001918460208302840111600160201b83111715610ab557600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506126d6945050505050565b61043360048036036060811015610b0957600080fd5b81359190810190604081016020820135600160201b811115610b2a57600080fd5b820183602082011115610b3c57600080fd5b803590602001918460208302840111600160201b83111715610b5d57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610bac57600080fd5b820183602082011115610bbe57600080fd5b803590602001918460208302840111600160201b83111715610bdf57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506128ca945050505050565b348015610c2957600080fd5b506107be60048036036020811015610c4057600080fd5b5035612a03565b348015610c5357600080fd5b506107be612a98565b348015610c6857600080fd5b506107be612a9e565b348015610c7d57600080fd5b506103c2612aa4565b348015610c9257600080fd5b50610c9b612ae0565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610cd5578181015183820152602001610cbd565b50505050905090810190601f168015610d025780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610d1c57600080fd5b50610570612b6e565b348015610d3157600080fd5b506107be612b7c565b348015610d4657600080fd5b5061043360048036036020811015610d5d57600080fd5b50356001600160a01b0316612b82565b348015610d7957600080fd5b506103c260048036036020811015610d9057600080fd5b50356001600160a01b0316612ce3565b348015610dac57600080fd5b50610433612d2f565b348015610dc157600080fd5b506107be60048036036020811015610dd857600080fd5b5035612d3e565b6107be60048036036080811015610df557600080fd5b508035906020810135906001600160a01b036040820135169060600135612d5c565b348015610e2357600080fd5b50610c9b60048036036020811015610e3a57600080fd5b5035612d92565b348015610e4d57600080fd5b5061097360048036036060811015610e6457600080fd5b6001600160a01b038235169190810190604081016020820135600160201b811115610e8e57600080fd5b820183602082011115610ea057600080fd5b803590602001918460208302840111600160201b83111715610ec157600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610f1057600080fd5b820183602082011115610f2257600080fd5b803590602001918460208302840111600160201b83111715610f4357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550612e05945050505050565b348015610f8d57600080fd5b50610433612fd6565b348015610fa257600080fd5b506107be60048036036020811015610fb957600080fd5b5035612fe1565b348015610fcc57600080fd5b506103d96130cf565b348015610fe157600080fd5b506107be6130de565b348015610ff657600080fd5b506104336004803603602081101561100d57600080fd5b50356001600160a01b03166130e4565b34801561102957600080fd5b50610570613208565b34801561103e57600080fd5b506103c26004803603602081101561105557600080fd5b810190602081018135600160201b81111561106f57600080fd5b82018360208201111561108157600080fd5b803590602001918460018302840111600160201b831117156110a257600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061320d945050505050565b6107be600480360360a08110156110f957600080fd5b60ff8235169190810190604081016020820135600160201b81111561111d57600080fd5b82018360208201111561112f57600080fd5b803590602001918460018302840111600160201b8311171561115057600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156111a257600080fd5b8201836020820111156111b457600080fd5b803590602001918460018302840111600160201b831117156111d557600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561122757600080fd5b82018360208201111561123957600080fd5b803590602001918460208302840111600160201b8311171561125a57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156112a957600080fd5b8201836020820111156112bb57600080fd5b803590602001918460208302840111600160201b831117156112dc57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550613338945050505050565b34801561132657600080fd5b506113cb6004803603602081101561133d57600080fd5b810190602081018135600160201b81111561135757600080fd5b82018360208201111561136957600080fd5b803590602001918460018302840111600160201b8311171561138a57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506134e8945050505050565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b8381101561140c5781810151838201526020016113f4565b50505050905090810190601f1680156114395780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b8381101561146c578181015183820152602001611454565b50505050905090810190601f1680156114995780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b3480156114b557600080fd5b506103c2600480360360208110156114cc57600080fd5b503560ff16613988565b3480156114e257600080fd5b50610c9b600480360360208110156114f957600080fd5b810190602081018135600160201b81111561151357600080fd5b82018360208201111561152557600080fd5b803590602001918460018302840111600160201b8311171561154657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550613a06945050505050565b34801561159357600080fd5b506103d9613bad565b3480156115a857600080fd5b506103d9613bbc565b610433600480360360808110156115c757600080fd5b508035906020810135906001600160a01b036040820135169060600135613bcb565b3480156115f557600080fd5b506109736004803603606081101561160c57600080fd5b6001600160a01b038235169190810190604081016020820135600160201b81111561163657600080fd5b82018360208201111561164857600080fd5b803590602001918460208302840111600160201b8311171561166957600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156116b857600080fd5b8201836020820111156116ca57600080fd5b803590602001918460208302840111600160201b831117156116eb57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550613c66945050505050565b34801561173557600080fd5b506103c2613e6c565b34801561174a57600080fd5b506103c26004803603602081101561176157600080fd5b50356001600160a01b0316613fd6565b34801561177d57600080fd5b50610433614009565b34801561179257600080fd5b50610c9b614028565b3480156117a757600080fd5b506107be600480360360208110156117be57600080fd5b810190602081018135600160201b8111156117d857600080fd5b8201836020820111156117ea57600080fd5b803590602001918460018302840111600160201b8311171561180b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550614083945050505050565b34801561185857600080fd5b506103c26004803603602081101561186f57600080fd5b50356001600160a01b03166144e9565b34801561188b57600080fd5b506103c2600480360360408110156118a257600080fd5b810190602081018135600160201b8111156118bc57600080fd5b8201836020820111156118ce57600080fd5b803590602001918460018302840111600160201b831117156118ef57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561194157600080fd5b82018360208201111561195357600080fd5b803590602001918460018302840111600160201b8311171561197457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506146f8945050505050565b3480156119c157600080fd5b506105706148e7565b3480156119d657600080fd5b506103c2600480360360208110156119ed57600080fd5b50356001600160a01b03166148ec565b348015611a0957600080fd5b506107be60048036036020811015611a2057600080fd5b5035614938565b6014546001600160a01b03165b90565b6002546001600160a01b031681565b600080611a5460175461498b565b90506060806000611a668484846126d6565b604080518a8152602081018a90528215158183015290519192507f2c49ac638ee7bf3341004c40512c79847bb7fb8f17fb53151ff576a35630ac06919081900360600190a1979650505050505050565b6000611ac0612fd6565b611ac957600080fd5b6014546040805163167cca1160e11b815230600482015290516000926001600160a01b031691632cf9942291602480830192602092919082900301818787803b158015611b1557600080fd5b505af1158015611b29573d6000803e3d6000fd5b505050506040513d6020811015611b3f57600080fd5b5051601654604080518315158152602081018390526060918101828152600a8054600260001961010060018416150201909116049383018490529495507fad9c5eacc073b2e1767affc883e050347e1dd379c9799cb5ac0a17bde80f5cf49486949390929190608083019084908015611bf95780601f10611bce57610100808354040283529160200191611bf9565b820191906000526020600020905b815481529060010190602001808311611bdc57829003601f168201915b505094505050505060405180910390a1905090565b6013546000906001600160a01b031615801590611c3557506013546001600160a01b031633145b611c3e57600080fd5b611c4a858585856149ba565b95945050505050565b611c5b612fd6565b611c6457600080fd5b60048054604080516363e6ffdd60e01b81526001600160a01b03878116948201949094529051929091169160009183916363e6ffdd91602480820192602092909190829003018186803b158015611cba57600080fd5b505afa158015611cce573d6000803e3d6000fd5b505050506040513d6020811015611ce457600080fd5b505190506001600160a01b038116611d0657611d01858585611e95565b611d11565b611d11818585611e95565b5050505050565b600181565b600480546040805163099a0f8560e21b81523393810193909352516000926001600160a01b039092169182916326683e1491602480820192602092909190829003018186803b158015611d6f57600080fd5b505afa158015611d83573d6000803e3d6000fd5b505050506040513d6020811015611d9957600080fd5b505191505090565b60186020526000908152604081208054600182015460028301546003909301546001600160a01b03909216939092900b9084565b60006017546001016017819055506000611df060175461498b565b9050611e058185856000336103e84202614aef565b50611e0e61523d565b50604080516080810182523381523460208083019182526000838501818152606085018281529682526018909252938420925183546001600160a01b03919091166001600160a01b0319909116178355905160018084019190915590516002830180549190940b60ff1660ff19909116179092559151600390920191909155905092915050565b6000839050806001600160a01b031663091600e66040518163ffffffff1660e01b815260040160206040518083038186803b158015611ed357600080fd5b505afa158015611ee7573d6000803e3d6000fd5b505050506040513d6020811015611efd57600080fd5b5051600854610100900460ff90811691161415611f88576040805162f7bd4560e61b815230600482015260ff80861660248301528416604482015290516001600160a01b03831691633def514091606480830192600092919082900301818387803b158015611f6b57600080fd5b505af1158015611f7f573d6000803e3d6000fd5b505050506122d5565b806001600160a01b03166312915a306040518163ffffffff1660e01b815260040160206040518083038186803b158015611fc157600080fd5b505afa158015611fd5573d6000803e3d6000fd5b505050506040513d6020811015611feb57600080fd5b5051600854610100900460ff9081169116141561205a576040805163f17bda9160e01b815230600482015260ff80861660248301528416604482015290516001600160a01b0383169163f17bda9191606480830192600092919082900301818387803b158015611f6b57600080fd5b806001600160a01b03166316aed2326040518163ffffffff1660e01b815260040160206040518083038186803b15801561209357600080fd5b505afa1580156120a7573d6000803e3d6000fd5b505050506040513d60208110156120bd57600080fd5b5051600854610100900460ff9081169116141561212c5760408051633e5dbdf960e11b815230600482015260ff80861660248301528416604482015290516001600160a01b03831691637cbb7bf291606480830192600092919082900301818387803b158015611f6b57600080fd5b806001600160a01b03166368a0469a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561216557600080fd5b505afa158015612179573d6000803e3d6000fd5b505050506040513d602081101561218f57600080fd5b5051600854610100900460ff908116911614156121fe5760408051638635adb560e01b815230600482015260ff80861660248301528416604482015290516001600160a01b03831691638635adb591606480830192600092919082900301818387803b158015611f6b57600080fd5b806001600160a01b0316636373a4116040518163ffffffff1660e01b815260040160206040518083038186803b15801561223757600080fd5b505afa15801561224b573d6000803e3d6000fd5b505050506040513d602081101561226157600080fd5b5051600854610100900460ff908116911614156122d057604080516301126e5d60e51b815230600482015260ff80861660248301528416604482015290516001600160a01b0383169163224dcba091606480830192600092919082900301818387803b158015611f6b57600080fd5b600080fd5b50505050565b6013546001600160a01b031681565b6003546000906001600160a01b038381169116141561230b5750600161230f565b5060005b919050565b60165481565b60085460ff1681565b6012546001600160a01b031681565b600c5490565b6011546001600160a01b031681565b600f5460ff1681565b6000806000612360338686612e05565b9250925092505b93509350939050565b600b5481565b6014546001600160a01b0316331461238d57600080fd5b6013546000906001600160a01b03161561242057601360009054906101000a90046001600160a01b03166001600160a01b031663860b24926040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156123f157600080fd5b505af1158015612405573d6000803e3d6000fd5b505050506040513d602081101561241b57600080fd5b505190505b80158061242d5750806064145b806124395750806103e8145b8061244557508061044c145b61244e57600080fd5b806064148061245e57508061044c145b156124cc57601360009054906101000a90046001600160a01b03166001600160a01b0316632de3ecd16040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156124b357600080fd5b505af11580156124c7573d6000803e3d6000fd5b505050505b6003546001600160a01b0316ff5b60006124e4611d1d565b6124ed57600080fd5b600f5460ff166124fc57600080fd5b600a5460026000196101006001841615020190911604156125a757600c80546001818101808455600093909352600a805461256e937fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c70192600261010091831615919091026000190190911604615270565b5050600b54600d80546001810182556000919091527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb501555b600e80546125ca91600a9160026000196101006001841615020190911604615270565b5042600b556040805160208101918290526000908190526125ed91600e916152f5565b50600f805460ff191690556004547fbdaffceabaaa783aa187fea6c2e815541d29e2290bf3f7d3c4fc53672b68f7df906001600160a01b031661262e611a27565b604080516001600160a01b038085168252831660208201526060918101828152600a805460026000196101006001841615020190911604938301849052926080830190849080156126c05780601f10612695576101008083540402835291602001916126c0565b820191906000526020600020905b8154815290600101906020018083116126a357829003601f168201915b505094505050505060405180910390a150600190565b600083815260186020526040812080546001600160a01b03161580159061271a575080546001600160a01b031633148061271a57506003546001600160a01b031633145b61272357600080fd5b60006127308686866128ca565b82549091506001600160a01b0316331415612770578015612760576002828101805460ff19169091179055612770565b60028201805460ff191660fe1790555b816001015482600301541015612826576002820154600090810b810b136127da5781546040805180820190915260068152651c99599d5b9960d21b6020820152600384015460018501546127d4938a936001600160a01b03909116929091036149ba565b50612826565b6003805460408051808201909152600e81526d72656c6561736520657363726f7760901b6020820152918401546001850154612824938a936001600160a01b0316929091036149ba565b505b600086815260186020908152604080832080546001600160a01b03191681556001810184905560028101805460ff1916905560030183905560145481518a8152851515938101939093526001600160a01b03168282015260608201929092523360808201526103e8420260a082015290517fd3e5b1d14681444d8159fa85b57104b685f47fb9164fd82b7fafe4e123dcc3a19181900360c00190a195945050505050565b6013546000906001906001600160a01b0316156129fb57601354604051631a485ccd60e01b81526004810187815233606483018190526080602484019081528851608485015288516001600160a01b03909516946000948694631a485ccd948d948d948d94929392604481019160a490910190602080890191028083838f5b83811015612961578181015183820152602001612949565b50505050905001838103825285818151815260200191508051906020019060200280838360005b838110156129a0578181015183820152602001612988565b505050509050019650505050505050602060405180830381600087803b1580156129c957600080fd5b505af11580156129dd573d6000803e3d6000fd5b505050506040513d60208110156129f357600080fd5b505115925050505b949350505050565b6003546000906001600160a01b031633148015612a3757506000821280612a375750600082138015612a3757506000601654125b15612a425760168290555b6014546001600160a01b0316331415612a5b5760168290555b60165460408051918252517fda4f34b30fa0ba8a73fedb922f4d28e2a10a5d68e53cf8e942abce3ac09158a29181900360200190a1505060165490565b60105481565b60015481565b612aac612d2f565b612ab557600080fd5b604080516020810191829052600090819052612ad391600e916152f5565b50600f805460ff19169055565b600e805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015612b665780601f10612b3b57610100808354040283529160200191612b66565b820191906000526020600020905b815481529060010190602001808311612b4957829003601f168201915b505050505081565b600854610100900460ff1681565b60155481565b6003546000906001600160a01b0383811691161480612ba95750600854606460ff90911610155b15612bb65750600161230f565b600854610100900460ff1615612cdb5760048054604080516363e6ffdd60e01b81526001600160a01b03868116948201949094529051600093909216916363e6ffdd91602480820192602092909190829003018186803b158015612c1957600080fd5b505afa158015612c2d573d6000803e3d6000fd5b505050506040513d6020811015612c4357600080fd5b505160085460408051633fda978d60e11b815261010090920460ff16600483015230602483015260026044830152519192506001600160a01b03831691637fb52f1a91606480820192602092909190829003018186803b158015612ca657600080fd5b505afa158015612cba573d6000803e3d6000fd5b505050506040513d6020811015612cd057600080fd5b5051915061230f9050565b50600061230f565b6002546001600160a01b03163314612cfa57600080fd5b6001600160a01b038116612d0d57600080fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000612d39612fd6565b905090565b600d8181548110612d4b57fe5b600091825260209091200154905081565b6012546000906001600160a01b03163314612d7657600080fd5b606080612d87878383898989614aef565b979650505050505050565b600c8181548110612d9f57fe5b600091825260209182902001805460408051601f6002600019610100600187161502019094169390930492830185900485028101850190915281815293509091830182828015612b665780601f10612b3b57610100808354040283529160200191612b66565b6000806000601654600014612e2857612e1d86614db5565b925092509250612367565b6000806000612e38898989613c66565b9450909250905060ff8083161480612e5357508060ff1660ff145b15612fc75760048054604080516363e6ffdd60e01b81526001600160a01b038d8116948201949094529051929091169160009183916363e6ffdd91602480820192602092909190829003018186803b158015612eae57600080fd5b505afa158015612ec2573d6000803e3d6000fd5b505050506040513d6020811015612ed857600080fd5b505190506001600160a01b03811615612fc4578360ff1660ff1415612f8f5760085460408051633fda978d60e11b815261010090920460ff16600483015230602483015260006044830152516001600160a01b03831691637fb52f1a916064808301926020929190829003018186803b158015612f5457600080fd5b505afa158015612f68573d6000803e3d6000fd5b505050506040513d6020811015612f7e57600080fd5b5051151560011415612f8f57600093505b60ff8416612fc4578260ff1660ff1415612fc457612fac8b6130e4565b151560011415612fbf5760009250612fc4565b606492505b50505b90989097509095509350505050565b6000612d3933612b82565b6000612feb614009565b612ff457600080fd5b6013546000906001600160a01b031661300e57508161308d565b60135460408051633513a80560e01b81526004810186905290516001600160a01b03909216918291633513a8059160248083019260209291908290030181600087803b15801561305d57600080fd5b505af1158015613071573d6000803e3d6000fd5b505050506040513d602081101561308757600080fd5b50519150505b60168190556040805182815290517fda4f34b30fa0ba8a73fedb922f4d28e2a10a5d68e53cf8e942abce3ac09158a29181900360200190a15050601654919050565b6003546001600160a01b031681565b60175481565b6003546000906001600160a01b038381169116148061310b5750600854600a60ff90911610155b156131185750600161230f565b600854610100900460ff1615612cdb5760048054604080516363e6ffdd60e01b81526001600160a01b03868116948201949094529051600093909216916363e6ffdd91602480820192602092909190829003018186803b15801561317b57600080fd5b505afa15801561318f573d6000803e3d6000fd5b505050506040513d60208110156131a557600080fd5b505160085460408051633fda978d60e11b815261010090920460ff16600483015230602483015260016044830152519192506001600160a01b03831691637fb52f1a91606480820192602092909190829003018186803b158015612ca657600080fd5b600a81565b613215612d2f565b61321e57600080fd5b600f5460ff161561322e57600080fd5b608081511061323c57600080fd5b805161324f90600e9060208401906152f5565b50600f805460ff191660011790556004547fb3ac059d88af6016aca1aebb7b3e796f2e7420435c59c563687814e9b85daa75906001600160a01b0316613293611a27565b604080516001600160a01b038085168252831660208201526060918101828152600e805460026000196101006001841615020190911604938301849052926080830190849080156133255780601f106132fa57610100808354040283529160200191613325565b820191906000526020600020905b81548152906001019060200180831161330857829003601f168201915b505094505050505060405180910390a150565b60006133448383611dd5565b506017546040805182815260006020820181905260a0928201838152600a8054600260001961010060018416150201909116049484018590527f50f423e39e8beb25bb2da38a63e3d33b5368f261522813712756733eaf569a069594929390928b928b92916060830190608084019060c0850190889080156134075780601f106133dc57610100808354040283529160200191613407565b820191906000526020600020905b8154815290600101906020018083116133ea57829003601f168201915b5050848103835286518152865160209182019188019080838360005b8381101561343b578181015183820152602001613423565b50505050905090810190601f1680156134685780820380516001836020036101000a031916815260200191505b50848103825285518152855160209182019187019080838360005b8381101561349b578181015183820152602001613483565b50505050905090810190601f1680156134c85780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a15060175495945050505050565b60045460125460609182916001600160a01b039182169116158061358257506012546040805163d6be0f4960e01b81526001600160a01b03928316600482015290519183169163d6be0f4991602480820192602092909190829003018186803b15801561355457600080fd5b505afa158015613568573d6000803e3d6000fd5b505050506040513d602081101561357e57600080fd5b5051155b156135ab5750506040805160208082018352600080835283519182019093529182529150613983565b6012546040805163589aafc160e01b81526001600160a01b03928316600482015290519183169163268bfac491839163589aafc191602480820192600092909190829003018186803b15801561360057600080fd5b505afa158015613614573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561363d57600080fd5b8101908080516040519392919084600160201b82111561365c57600080fd5b90830190602082018581111561367157600080fd5b8251600160201b81118282018810171561368a57600080fd5b82525081516020918201929091019080838360005b838110156136b757818101518382015260200161369f565b50505050905090810190601f1680156136e45780820380516001836020036101000a031916815260200191505b50604052505050866040518363ffffffff1660e01b8152600401808060200180602001838103835285818151815260200191508051906020019080838360005b8381101561373c578181015183820152602001613724565b50505050905090810190601f1680156137695780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b8381101561379c578181015183820152602001613784565b50505050905090810190601f1680156137c95780820380516001836020036101000a031916815260200191505b5094505050505060006040518083038186803b1580156137e857600080fd5b505afa1580156137fc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604090815281101561382557600080fd5b8101908080516040519392919084600160201b82111561384457600080fd5b90830190602082018581111561385957600080fd5b8251600160201b81118282018810171561387257600080fd5b82525081516020918201929091019080838360005b8381101561389f578181015183820152602001613887565b50505050905090810190601f1680156138cc5780820380516001836020036101000a031916815260200191505b5060405260200180516040519392919084600160201b8211156138ee57600080fd5b90830190602082018581111561390357600080fd5b8251600160201b81118282018810171561391c57600080fd5b82525081516020918201929091019080838360005b83811015613949578181015183820152602001613931565b50505050905090810190601f1680156139765780820380516001836020036101000a031916815260200191505b5060405250505092509250505b915091565b613990612fd6565b61399957600080fd5b6008805460ff80841660ff199092169190911791829055600454601454604080516001600160a01b0393841681529190921660208201529290911682820152517f369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e5025009181900360600190a150565b60606020825111613abb5781518083015160008181526005602090815260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084529394939091830182828015613aad5780601f10613a8257610100808354040283529160200191613aad565b820191906000526020600020905b815481529060010190602001808311613a9057829003601f168201915b50505050509250505061230f565b6006826040518082805190602001908083835b60208310613aed5780518252601f199092019160209182019101613ace565b518151600019602094850361010090810a820192831692199390931691909117909252949092019687526040805197889003820188208054601f6002600183161590980290950116959095049283018290048202880182019052818752929450925050830182828015613ba15780601f10613b7657610100808354040283529160200191613ba1565b820191906000526020600020905b815481529060010190602001808311613b8457829003601f168201915b50505050509050919050565b6004546001600160a01b031681565b6014546001600160a01b031681565b6012546000906001600160a01b03163314613be557600080fd5b6060806000613bf58884846128ca565b601454604080518b815283151560208201526001600160a01b0392831681830152606081018b9052918916608083015260a08201889052519192507fd3e5b1d14681444d8159fa85b57104b685f47fb9164fd82b7fafe4e123dcc3a1919081900360c00190a1979650505050505050565b6000806000806015549050613c79615363565b600854600160ff9091161015613c905760ff613c93565b60005b60ff9081168252600854600a91161015613cae5760ff613cb1565b60005b60ff1660208201526013546001600160a01b031615613e5557600080600080601360009054906101000a90046001600160a01b03166001600160a01b03166374ba46098c8c8f6040518463ffffffff1660e01b8152600401808060200180602001846001600160a01b03166001600160a01b03168152602001838103835286818151815260200191508051906020019060200280838360005b83811015613d62578181015183820152602001613d4a565b50505050905001838103825285818151815260200191508051906020019060200280838360005b83811015613da1578181015183820152602001613d89565b505050509050019550505050505060806040518083038186803b158015613dc757600080fd5b505afa158015613ddb573d6000803e3d6000fd5b505050506040513d6080811015613df157600080fd5b50805160208201516040830151606090930151601554929750909550919350909150811115613e235760648552613e50565b60018416613e325760ff831685525b60028416613e445760ff821660208601525b60048416613e50578095505b505050505b805160209091015190989097509095509350505050565b6013546001600160a01b0316613e8957613e84614f5a565b613fd4565b6013546040805163327cf65360e21b815290516001600160a01b0390921691600091839163c9f3d94c9160048082019260209290919082900301818787803b158015613ed457600080fd5b505af1158015613ee8573d6000803e3d6000fd5b505050506040513d6020811015613efe57600080fd5b505190506064811415613f1857613f13614f5a565b613fd1565b8015613f2357600080fd5b604080516020808252600a8054600260001961010060018416150201909116049183018290527f403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b6593909291829182019084908015613fc25780601f10613f9757610100808354040283529160200191613fc2565b820191906000526020600020905b815481529060010190602001808311613fa557829003601f168201915b50509250505060405180910390a15b50505b565b613fde612fd6565b613fe757600080fd5b601280546001600160a01b0319166001600160a01b0392909216919091179055565b6014546000906001600160a01b0316331480612d395750612d39612fd6565b600a805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015612b665780601f10612b3b57610100808354040283529160200191612b66565b600061408d612d2f565b61409657600080fd5b6000826040516020018082805190602001908083835b602083106140cb5780518252601f1990920191602091820191016140ac565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012090506000600a604051602001808280546001816001161561010002031660029004801561416a5780601f1061414857610100808354040283529182019161416a565b820191906000526020600020905b815481529060010190602001808311614156575b50509150506040516020818303038152906040528051906020012090508082141561433a57600c546141bf576040805160208101918290526000908190526141b491600a916152f5565b506000600b5561425e565b600080805b600c548110156142135781600d82815481106141dc57fe5b9060005260206000200154111561420b57809250600d81815481106141fd57fe5b906000526020600020015491505b6001016141c4565b50600c828154811061422157fe5b90600052602060002001600a908054600181600116156101000203166002900461424c929190615270565b50600b81905561425b8261501a565b50505b7f238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51600460009054906101000a90046001600160a01b031685600060405180846001600160a01b03166001600160a01b0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b838110156142f35781810151838201526020016142db565b50505050905090810190601f1680156143205780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a160009250505061230f565b60001960005b600c54811015614401576000600c828154811061435957fe5b9060005260206000200160405160200180828054600181600116156101000203166002900480156143c15780601f1061439f5761010080835404028352918201916143c1565b820191906000526020600020905b8154815290600101906020018083116143ad575b5050915050604051602081830303815290604052805190602001209050808514156143f8576143ef8261501a565b81925050614401565b50600101614340565b5080600019141561441157600080fd5b7f238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51600460009054906101000a90046001600160a01b0316868360405180846001600160a01b03166001600160a01b0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b838110156144a557818101518382015260200161448d565b50505050905090810190601f1680156144d25780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1949350505050565b6144f1612fd6565b6144fa57600080fd5b6013546000906001600160a01b03161561461757601360009054906101000a90046001600160a01b031690506000816001600160a01b031663860b24926040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561456357600080fd5b505af1158015614577573d6000803e3d6000fd5b505050506040513d602081101561458d57600080fd5b5051905060648114806145a157508061044c145b156145fe57816001600160a01b0316632de3ecd16040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156145e157600080fd5b505af11580156145f5573d6000803e3d6000fd5b50505050614615565b80158061460c5750806103e8145b61461557600080fd5b505b601380546001600160a01b0319166001600160a01b038416908117909155156146b5578190506000816001600160a01b0316637b1cdb3e6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561467a57600080fd5b505af115801561468e573d6000803e3d6000fd5b505050506040513d60208110156146a457600080fd5b5051905080156146b357600080fd5b505b601354604080516001600160a01b039092168252517fa6f2e38f0cfebf27212317fced3ac40bc62e00bd33f38d69603710740c69acb79181900360200190a15050565b614701336122ea565b61470a57600080fd5b602082511161476257815180830151600081815260056020526040812091929161473391615381565b82511561475b5760008281526005602090815260409091208451614759928601906152f5565b505b505061484a565b6006826040518082805190602001908083835b602083106147945780518252601f199092019160209182019101614775565b51815160209384036101000a600019018019909216911617905292019485525060405193849003019092206147cd925090506000615381565b80511561484a57806006836040518082805190602001908083835b602083106148075780518252601f1990920191602091820191016147e8565b51815160209384036101000a6000190180199092169116179052920194855250604051938490038101909320845161484895919491909101925090506152f5565b505b7fe2b310ec9dabdc05229a748e07666c3bc9c46c6ef465cce30d0aa3aa64a0644c826040518080602001828103825283818151815260200191508051906020019080838360005b838110156148a9578181015183820152602001614891565b50505050905090810190601f1680156148d65780820380516001836020036101000a031916815260200191505b509250505060405180910390a15050565b606481565b6003546001600160a01b0316331461490357600080fd5b6001600160a01b03811661491657600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000614942612fd6565b61494b57600080fd5b60158290556040805183815290517f4114f8ef80b6de2161db580cbefa14e1892d15d3ebe2062c9914e4a5773114a39181900360200190a1505060155490565b604080516020808201939093523060601b81830152815180820360340181526054909101909152805191012090565b600084815260186020526040812060018101546003820154840111614ae3576040516001600160a01b0386169084156108fc029085906000818181858888f19350505050158015614a0f573d6000803e3d6000fd5b508281600301540181600301819055507fad58d18ea7292f887da6f15bb4f0badddaa33d169713d09cf49710acc7c3a5b9868587866040518085815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019080838360005b83811015614aa5578181015183820152602001614a8d565b50505050905090810190601f168015614ad25780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a15b50600195945050505050565b6000614afc838787615116565b6013546001600160a01b031615614c3457601354604051637cda550160e11b8152600481018981526001600160a01b0386811660648401526080602484019081528a5160848501528a519190941693600093859363f9b4aa02938e938e938e938d93909291604481019160a490910190602080890191028083838f5b83811015614b90578181015183820152602001614b78565b50505050905001838103825285818151815260200191508051906020019060200280838360005b83811015614bcf578181015183820152602001614bb7565b505050509050019650505050505050602060405180830381600087803b158015614bf857600080fd5b505af1158015614c0c573d6000803e3d6000fd5b505050506040513d6020811015614c2257600080fd5b505190508015614c3157600080fd5b50505b601454604080518981526001600160a01b039283166020820152808201879052918516606083015260808201849052517f545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c79181900360a00190a160005b8651811015614d0a57868181518110614ca657fe5b60200260200101516000801b14614d02577f515e0a48b385fce2a8e4d9f169a97c4f6ea669a752358f5e6ab37cc3c2e84c38878281518110614ce457fe5b60200260200101516040518082815260200191505060405180910390a15b600101614c91565b5060005b8551811015614da95760006001600160a01b0316868281518110614d2e57fe5b60200260200101516001600160a01b031614614da1577fb6e3239e521a6c66920ae634f8e921a37e6991d520ac44d52f8516397f41b684868281518110614d7157fe5b602002602001015160405180826001600160a01b03166001600160a01b0316815260200191505060405180910390a15b600101614d0e565b50959695505050505050565b600354600090819081906001600160a01b0385811691161480614de05750600854600a60ff90911610155b15614df5575050601554600091508190614f53565b60048054604080516363e6ffdd60e01b81526001600160a01b03888116948201949094529051929091169160009183916363e6ffdd91602480820192602092909190829003018186803b158015614e4b57600080fd5b505afa158015614e5f573d6000803e3d6000fd5b505050506040513d6020811015614e7557600080fd5b505190506001600160a01b03811615614eae57614e91866130e4565b151560011415614eae575050601554600093508392509050614f53565b601454604080516329d0021960e01b81526001600160a01b038981166004830152915191909216916329d00219916024808301926020929190829003018186803b158015614efb57600080fd5b505afa158015614f0f573d6000803e3d6000fd5b505050506040513d6020811015614f2557600080fd5b5051151560011415614f44575050601554600093508392509050614f53565b5050601554600a935083925090505b9193909250565b614f62612fd6565b614f6b57600080fd5b604080516020808252600a8054600260001961010060018416150201909116049183018290527f403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b659390929182918201908490801561500a5780601f10614fdf5761010080835404028352916020019161500a565b820191906000526020600020905b815481529060010190602001808311614fed57829003601f168201915b50509250505060405180910390a1565b600c818154811061502757fe5b90600052602060002001600061503d9190615381565b600d818154811061504a57fe5b6000918252602082200155600c546000190181146150ec57600c8054600019810190811061507457fe5b90600052602060002001600c828154811061508b57fe5b9060005260206000200190805460018160011615610100020316600290046150b4929190615270565b50600d805460001981019081106150c757fe5b9060005260206000200154600d82815481106150df57fe5b6000918252602090912001555b600c8054906150ff9060001983016153c5565b50600d805490613fd19060001983016153ee565b50565b6000806000615126868686612e05565b94509092509050606460ff82161415615152578234101561514657600080fd5b61514e615168565b5060005b60ff81161561516057600080fd5b505050505050565b60048054604080516363e6ffdd60e01b81523393810193909352516000926001600160a01b03909216916363e6ffdd916024808301926020929190829003018186803b1580156151b757600080fd5b505afa1580156151cb573d6000803e3d6000fd5b505050506040513d60208110156151e157600080fd5b505160408051635c7f8edd60e11b8152905191925082916001600160a01b0383169163b8ff1dba91600480830192600092919082900301818387803b15801561522957600080fd5b505af1158015615160573d6000803e3d6000fd5b604051806080016040528060006001600160a01b03168152602001600081526020016000800b8152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106152a957805485556152e5565b828001600101855582156152e557600052602060002091601f016020900482015b828111156152e55782548255916001019190600101906152ca565b506152f192915061540e565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061533657805160ff19168380011785556152e5565b828001600101855582156152e5579182015b828111156152e5578251825591602001919060010190615348565b60405180604001604052806002906020820280388339509192915050565b50805460018160011615610100020316600290046000825580601f106153a75750615113565b601f016020900490600052602060002090810190615113919061540e565b8154818355818111156153e9576000838152602090206153e9918101908301615428565b505050565b8154818355818111156153e9576000838152602090206153e99181019083015b611a3491905b808211156152f15760008155600101615414565b611a3491905b808211156152f15760006154428282615381565b5060010161542e56fea265627a7a72315820c00a2b89d6d223f5552870792af4c0f56e6333876014ea12c676e73bbe44b14864736f6c63430005110032a265627a7a723158201f109395a115f2216dac4c088a6d2bcb59763bee8fef28996d2e9e41060acfc564736f6c63430005110032"

// DeployBaseContentFactory deploys a new Ethereum contract, binding an instance of BaseContentFactory to it.
func DeployBaseContentFactory(auth *bind.TransactOpts, backend bind.ContractBackend, _spaceAddr common.Address) (common.Address, *types.Transaction, *BaseContentFactory, error) {
	parsed, err := abi.JSON(strings.NewReader(BaseContentFactoryABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(BaseContentFactoryBin), backend, _spaceAddr)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &BaseContentFactory{BaseContentFactoryCaller: BaseContentFactoryCaller{contract: contract}, BaseContentFactoryTransactor: BaseContentFactoryTransactor{contract: contract}, BaseContentFactoryFilterer: BaseContentFactoryFilterer{contract: contract}}, nil
}

// BaseContentFactory is an auto generated Go binding around an Ethereum contract.
type BaseContentFactory struct {
	BaseContentFactoryCaller     // Read-only binding to the contract
	BaseContentFactoryTransactor // Write-only binding to the contract
	BaseContentFactoryFilterer   // Log filterer for contract events
}

// BaseContentFactoryCaller is an auto generated read-only Go binding around an Ethereum contract.
type BaseContentFactoryCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseContentFactoryTransactor is an auto generated write-only Go binding around an Ethereum contract.
type BaseContentFactoryTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseContentFactoryFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type BaseContentFactoryFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseContentFactorySession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type BaseContentFactorySession struct {
	Contract     *BaseContentFactory // Generic contract binding to set the session for
	CallOpts     bind.CallOpts       // Call options to use throughout this session
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// BaseContentFactoryCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type BaseContentFactoryCallerSession struct {
	Contract *BaseContentFactoryCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts             // Call options to use throughout this session
}

// BaseContentFactoryTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type BaseContentFactoryTransactorSession struct {
	Contract     *BaseContentFactoryTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts             // Transaction auth options to use throughout this session
}

// BaseContentFactoryRaw is an auto generated low-level Go binding around an Ethereum contract.
type BaseContentFactoryRaw struct {
	Contract *BaseContentFactory // Generic contract binding to access the raw methods on
}

// BaseContentFactoryCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type BaseContentFactoryCallerRaw struct {
	Contract *BaseContentFactoryCaller // Generic read-only contract binding to access the raw methods on
}

// BaseContentFactoryTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type BaseContentFactoryTransactorRaw struct {
	Contract *BaseContentFactoryTransactor // Generic write-only contract binding to access the raw methods on
}

// NewBaseContentFactory creates a new instance of BaseContentFactory, bound to a specific deployed contract.
func NewBaseContentFactory(address common.Address, backend bind.ContractBackend) (*BaseContentFactory, error) {
	contract, err := bindBaseContentFactory(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &BaseContentFactory{BaseContentFactoryCaller: BaseContentFactoryCaller{contract: contract}, BaseContentFactoryTransactor: BaseContentFactoryTransactor{contract: contract}, BaseContentFactoryFilterer: BaseContentFactoryFilterer{contract: contract}}, nil
}

// NewBaseContentFactoryCaller creates a new read-only instance of BaseContentFactory, bound to a specific deployed contract.
func NewBaseContentFactoryCaller(address common.Address, caller bind.ContractCaller) (*BaseContentFactoryCaller, error) {
	contract, err := bindBaseContentFactory(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &BaseContentFactoryCaller{contract: contract}, nil
}

// NewBaseContentFactoryTransactor creates a new write-only instance of BaseContentFactory, bound to a specific deployed contract.
func NewBaseContentFactoryTransactor(address common.Address, transactor bind.ContractTransactor) (*BaseContentFactoryTransactor, error) {
	contract, err := bindBaseContentFactory(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &BaseContentFactoryTransactor{contract: contract}, nil
}

// NewBaseContentFactoryFilterer creates a new log filterer instance of BaseContentFactory, bound to a specific deployed contract.
func NewBaseContentFactoryFilterer(address common.Address, filterer bind.ContractFilterer) (*BaseContentFactoryFilterer, error) {
	contract, err := bindBaseContentFactory(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &BaseContentFactoryFilterer{contract: contract}, nil
}

// bindBaseContentFactory binds a generic wrapper to an already deployed contract.
func bindBaseContentFactory(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(BaseContentFactoryABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BaseContentFactory *BaseContentFactoryRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BaseContentFactory.Contract.BaseContentFactoryCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BaseContentFactory *BaseContentFactoryRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseContentFactory.Contract.BaseContentFactoryTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BaseContentFactory *BaseContentFactoryRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BaseContentFactory.Contract.BaseContentFactoryTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BaseContentFactory *BaseContentFactoryCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BaseContentFactory.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BaseContentFactory *BaseContentFactoryTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseContentFactory.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BaseContentFactory *BaseContentFactoryTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BaseContentFactory.Contract.contract.Transact(opts, method, params...)
}

// OPACCESSCOMPLETE is a free data retrieval call binding the contract method 0x4d887374.
//
// Solidity: function OP_ACCESS_COMPLETE() constant returns(uint32)
func (_BaseContentFactory *BaseContentFactoryCaller) OPACCESSCOMPLETE(opts *bind.CallOpts) (uint32, error) {
	var (
		ret0 = new(uint32)
	)
	out := ret0
	err := _BaseContentFactory.contract.Call(opts, out, "OP_ACCESS_COMPLETE")
	return *ret0, err
}

// OPACCESSCOMPLETE is a free data retrieval call binding the contract method 0x4d887374.
//
// Solidity: function OP_ACCESS_COMPLETE() constant returns(uint32)
func (_BaseContentFactory *BaseContentFactorySession) OPACCESSCOMPLETE() (uint32, error) {
	return _BaseContentFactory.Contract.OPACCESSCOMPLETE(&_BaseContentFactory.CallOpts)
}

// OPACCESSCOMPLETE is a free data retrieval call binding the contract method 0x4d887374.
//
// Solidity: function OP_ACCESS_COMPLETE() constant returns(uint32)
func (_BaseContentFactory *BaseContentFactoryCallerSession) OPACCESSCOMPLETE() (uint32, error) {
	return _BaseContentFactory.Contract.OPACCESSCOMPLETE(&_BaseContentFactory.CallOpts)
}

// OPACCESSREQUEST is a free data retrieval call binding the contract method 0x52344328.
//
// Solidity: function OP_ACCESS_REQUEST() constant returns(uint32)
func (_BaseContentFactory *BaseContentFactoryCaller) OPACCESSREQUEST(opts *bind.CallOpts) (uint32, error) {
	var (
		ret0 = new(uint32)
	)
	out := ret0
	err := _BaseContentFactory.contract.Call(opts, out, "OP_ACCESS_REQUEST")
	return *ret0, err
}

// OPACCESSREQUEST is a free data retrieval call binding the contract method 0x52344328.
//
// Solidity: function OP_ACCESS_REQUEST() constant returns(uint32)
func (_BaseContentFactory *BaseContentFactorySession) OPACCESSREQUEST() (uint32, error) {
	return _BaseContentFactory.Contract.OPACCESSREQUEST(&_BaseContentFactory.CallOpts)
}

// OPACCESSREQUEST is a free data retrieval call binding the contract method 0x52344328.
//
// Solidity: function OP_ACCESS_REQUEST() constant returns(uint32)
func (_BaseContentFactory *BaseContentFactoryCallerSession) OPACCESSREQUEST() (uint32, error) {
	return _BaseContentFactory.Contract.OPACCESSREQUEST(&_BaseContentFactory.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseContentFactory *BaseContentFactoryCaller) ContentSpace(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseContentFactory.contract.Call(opts, out, "contentSpace")
	return *ret0, err
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseContentFactory *BaseContentFactorySession) ContentSpace() (common.Address, error) {
	return _BaseContentFactory.Contract.ContentSpace(&_BaseContentFactory.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseContentFactory *BaseContentFactoryCallerSession) ContentSpace() (common.Address, error) {
	return _BaseContentFactory.Contract.ContentSpace(&_BaseContentFactory.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseContentFactory *BaseContentFactoryCaller) Creator(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseContentFactory.contract.Call(opts, out, "creator")
	return *ret0, err
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseContentFactory *BaseContentFactorySession) Creator() (common.Address, error) {
	return _BaseContentFactory.Contract.Creator(&_BaseContentFactory.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseContentFactory *BaseContentFactoryCallerSession) Creator() (common.Address, error) {
	return _BaseContentFactory.Contract.Creator(&_BaseContentFactory.CallOpts)
}

// IsContract is a free data retrieval call binding the contract method 0x16279055.
//
// Solidity: function isContract(address addr) constant returns(bool)
func (_BaseContentFactory *BaseContentFactoryCaller) IsContract(opts *bind.CallOpts, addr common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseContentFactory.contract.Call(opts, out, "isContract", addr)
	return *ret0, err
}

// IsContract is a free data retrieval call binding the contract method 0x16279055.
//
// Solidity: function isContract(address addr) constant returns(bool)
func (_BaseContentFactory *BaseContentFactorySession) IsContract(addr common.Address) (bool, error) {
	return _BaseContentFactory.Contract.IsContract(&_BaseContentFactory.CallOpts, addr)
}

// IsContract is a free data retrieval call binding the contract method 0x16279055.
//
// Solidity: function isContract(address addr) constant returns(bool)
func (_BaseContentFactory *BaseContentFactoryCallerSession) IsContract(addr common.Address) (bool, error) {
	return _BaseContentFactory.Contract.IsContract(&_BaseContentFactory.CallOpts, addr)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseContentFactory *BaseContentFactoryCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseContentFactory.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseContentFactory *BaseContentFactorySession) Owner() (common.Address, error) {
	return _BaseContentFactory.Contract.Owner(&_BaseContentFactory.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseContentFactory *BaseContentFactoryCallerSession) Owner() (common.Address, error) {
	return _BaseContentFactory.Contract.Owner(&_BaseContentFactory.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseContentFactory *BaseContentFactoryCaller) Version(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _BaseContentFactory.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseContentFactory *BaseContentFactorySession) Version() ([32]byte, error) {
	return _BaseContentFactory.Contract.Version(&_BaseContentFactory.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseContentFactory *BaseContentFactoryCallerSession) Version() ([32]byte, error) {
	return _BaseContentFactory.Contract.Version(&_BaseContentFactory.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseContentFactory *BaseContentFactoryCaller) VersionAPI(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _BaseContentFactory.contract.Call(opts, out, "versionAPI")
	return *ret0, err
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseContentFactory *BaseContentFactorySession) VersionAPI() ([32]byte, error) {
	return _BaseContentFactory.Contract.VersionAPI(&_BaseContentFactory.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseContentFactory *BaseContentFactoryCallerSession) VersionAPI() ([32]byte, error) {
	return _BaseContentFactory.Contract.VersionAPI(&_BaseContentFactory.CallOpts)
}

// CreateContent is a paid mutator transaction binding the contract method 0xbf4e088f.
//
// Solidity: function createContent(address lib, address content_type) returns(address)
func (_BaseContentFactory *BaseContentFactoryTransactor) CreateContent(opts *bind.TransactOpts, lib common.Address, content_type common.Address) (*types.Transaction, error) {
	return _BaseContentFactory.contract.Transact(opts, "createContent", lib, content_type)
}

// CreateContent is a paid mutator transaction binding the contract method 0xbf4e088f.
//
// Solidity: function createContent(address lib, address content_type) returns(address)
func (_BaseContentFactory *BaseContentFactorySession) CreateContent(lib common.Address, content_type common.Address) (*types.Transaction, error) {
	return _BaseContentFactory.Contract.CreateContent(&_BaseContentFactory.TransactOpts, lib, content_type)
}

// CreateContent is a paid mutator transaction binding the contract method 0xbf4e088f.
//
// Solidity: function createContent(address lib, address content_type) returns(address)
func (_BaseContentFactory *BaseContentFactoryTransactorSession) CreateContent(lib common.Address, content_type common.Address) (*types.Transaction, error) {
	return _BaseContentFactory.Contract.CreateContent(&_BaseContentFactory.TransactOpts, lib, content_type)
}

// ExecuteAccessBatch is a paid mutator transaction binding the contract method 0x4dcc1d29.
//
// Solidity: function executeAccessBatch(uint32[] _opCodes, address[] _contentAddrs, address[] _userAddrs, uint256[] _requestNonces, bytes32[] _ctxHashes, uint256[] _ts, uint256[] ) returns()
func (_BaseContentFactory *BaseContentFactoryTransactor) ExecuteAccessBatch(opts *bind.TransactOpts, _opCodes []uint32, _contentAddrs []common.Address, _userAddrs []common.Address, _requestNonces []*big.Int, _ctxHashes [][32]byte, _ts []*big.Int, arg6 []*big.Int) (*types.Transaction, error) {
	return _BaseContentFactory.contract.Transact(opts, "executeAccessBatch", _opCodes, _contentAddrs, _userAddrs, _requestNonces, _ctxHashes, _ts, arg6)
}

// ExecuteAccessBatch is a paid mutator transaction binding the contract method 0x4dcc1d29.
//
// Solidity: function executeAccessBatch(uint32[] _opCodes, address[] _contentAddrs, address[] _userAddrs, uint256[] _requestNonces, bytes32[] _ctxHashes, uint256[] _ts, uint256[] ) returns()
func (_BaseContentFactory *BaseContentFactorySession) ExecuteAccessBatch(_opCodes []uint32, _contentAddrs []common.Address, _userAddrs []common.Address, _requestNonces []*big.Int, _ctxHashes [][32]byte, _ts []*big.Int, arg6 []*big.Int) (*types.Transaction, error) {
	return _BaseContentFactory.Contract.ExecuteAccessBatch(&_BaseContentFactory.TransactOpts, _opCodes, _contentAddrs, _userAddrs, _requestNonces, _ctxHashes, _ts, arg6)
}

// ExecuteAccessBatch is a paid mutator transaction binding the contract method 0x4dcc1d29.
//
// Solidity: function executeAccessBatch(uint32[] _opCodes, address[] _contentAddrs, address[] _userAddrs, uint256[] _requestNonces, bytes32[] _ctxHashes, uint256[] _ts, uint256[] ) returns()
func (_BaseContentFactory *BaseContentFactoryTransactorSession) ExecuteAccessBatch(_opCodes []uint32, _contentAddrs []common.Address, _userAddrs []common.Address, _requestNonces []*big.Int, _ctxHashes [][32]byte, _ts []*big.Int, arg6 []*big.Int) (*types.Transaction, error) {
	return _BaseContentFactory.Contract.ExecuteAccessBatch(&_BaseContentFactory.TransactOpts, _opCodes, _contentAddrs, _userAddrs, _requestNonces, _ctxHashes, _ts, arg6)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseContentFactory *BaseContentFactoryTransactor) Kill(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseContentFactory.contract.Transact(opts, "kill")
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseContentFactory *BaseContentFactorySession) Kill() (*types.Transaction, error) {
	return _BaseContentFactory.Contract.Kill(&_BaseContentFactory.TransactOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseContentFactory *BaseContentFactoryTransactorSession) Kill() (*types.Transaction, error) {
	return _BaseContentFactory.Contract.Kill(&_BaseContentFactory.TransactOpts)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseContentFactory *BaseContentFactoryTransactor) TransferCreatorship(opts *bind.TransactOpts, newCreator common.Address) (*types.Transaction, error) {
	return _BaseContentFactory.contract.Transact(opts, "transferCreatorship", newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseContentFactory *BaseContentFactorySession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _BaseContentFactory.Contract.TransferCreatorship(&_BaseContentFactory.TransactOpts, newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseContentFactory *BaseContentFactoryTransactorSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _BaseContentFactory.Contract.TransferCreatorship(&_BaseContentFactory.TransactOpts, newCreator)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseContentFactory *BaseContentFactoryTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _BaseContentFactory.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseContentFactory *BaseContentFactorySession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _BaseContentFactory.Contract.TransferOwnership(&_BaseContentFactory.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseContentFactory *BaseContentFactoryTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _BaseContentFactory.Contract.TransferOwnership(&_BaseContentFactory.TransactOpts, newOwner)
}

// BaseContentSpaceABI is the input ABI used to generate the binding from.
const BaseContentSpaceABI = "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"content_space_name\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"contextHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestTimestamp\",\"type\":\"uint256\"}],\"name\":\"AccessRequestV3\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"status\",\"type\":\"uint256\"}],\"name\":\"AddKMSLocator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ownerAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nodeAddr\",\"type\":\"address\"}],\"name\":\"AddNode\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"userAddr\",\"type\":\"address\"}],\"name\":\"BindUserWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spaceAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"objectHash\",\"type\":\"string\"}],\"name\":\"CommitPending\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contentType\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contentContract\",\"type\":\"address\"}],\"name\":\"ContentTypeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contentType\",\"type\":\"address\"}],\"name\":\"ContentTypeRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"CreateAccessWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contentAddress\",\"type\":\"address\"}],\"name\":\"CreateContent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contentTypeAddress\",\"type\":\"address\"}],\"name\":\"CreateContentType\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"groupAddress\",\"type\":\"address\"}],\"name\":\"CreateGroup\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"libraryAddress\",\"type\":\"address\"}],\"name\":\"CreateLibrary\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"version\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"CreateSpace\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"accountAddress\",\"type\":\"address\"}],\"name\":\"EngageAccountLibrary\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"GetAccessWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"locator\",\"type\":\"bytes\"}],\"name\":\"NodeApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"locator\",\"type\":\"bytes\"}],\"name\":\"NodeSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"ObjectMetaChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nodeObjAddr\",\"type\":\"address\"}],\"name\":\"RegisterNode\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"status\",\"type\":\"uint256\"}],\"name\":\"RemoveKMSLocator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ownerAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nodeAddr\",\"type\":\"address\"}],\"name\":\"RemoveNode\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"name\":\"SetFactory\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nodeObjAddr\",\"type\":\"address\"}],\"name\":\"UnregisterNode\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"objectHash\",\"type\":\"string\"}],\"name\":\"UpdateRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spaceAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"objectHash\",\"type\":\"string\"}],\"name\":\"VersionConfirm\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spaceAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"versionHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"index\",\"type\":\"int256\"}],\"name\":\"VersionDelete\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contentSpace\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"visibility\",\"type\":\"uint8\"}],\"name\":\"VisibilityChanged\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"CAN_ACCESS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CAN_EDIT\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CAN_SEE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"addresspayable[]\",\"name\":\"\",\"type\":\"address[]\"}],\"name\":\"accessRequestV3\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeNodeAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeNodeLocators\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"content_type\",\"type\":\"address\"},{\"internalType\":\"addresspayable\",\"name\":\"content_contract\",\"type\":\"address\"}],\"name\":\"addContentType\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_kmsID\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_locator\",\"type\":\"bytes\"}],\"name\":\"addKMSLocator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nodeAddr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_locator\",\"type\":\"bytes\"}],\"name\":\"addNode\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"addressKMS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nodeAddr\",\"type\":\"address\"}],\"name\":\"approveNode\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canCommit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canConfirm\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"canContribute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canEdit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"canNodePublish\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"canPublish\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"canReview\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_kmsIdStr\",\"type\":\"string\"}],\"name\":\"checkKMS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_kmsAddr\",\"type\":\"address\"}],\"name\":\"checkKMSAddr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"clearPending\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_objectHash\",\"type\":\"string\"}],\"name\":\"commit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"commitPending\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"confirmCommit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentFactory\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentSpace\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contentTypeContracts\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contentTypes\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentTypesLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"countVersionHashes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createAccessWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"addresspayable\",\"name\":\"content_type\",\"type\":\"address\"}],\"name\":\"createContent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createContentType\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createGroup\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"address_KMS\",\"type\":\"address\"}],\"name\":\"createLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"createUserWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_versionHash\",\"type\":\"string\"}],\"name\":\"deleteVersion\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"typeHash\",\"type\":\"bytes32\"}],\"name\":\"findTypeByHash\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getAccessWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_kmsAddr\",\"type\":\"address\"}],\"name\":\"getKMSID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_kmsID\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"prefix\",\"type\":\"bytes\"}],\"name\":\"getKMSInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"getMeta\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"groupFactory\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"hasAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"hasEditorRight\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"indexCategory\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"libraryFactory\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nodeMapping\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numActiveNodes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numPendingNodes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"objectHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"objectTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"parentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pendingNodeAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pendingNodeLocators\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"contentObj\",\"type\":\"address\"}],\"name\":\"publish\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"putMeta\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"content_type\",\"type\":\"address\"}],\"name\":\"removeContentType\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_kmsID\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_locator\",\"type\":\"bytes\"}],\"name\":\"removeKMSLocator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nodeAddr\",\"type\":\"address\"}],\"name\":\"removeNode\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"requiresReview\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"address_KMS\",\"type\":\"address\"}],\"name\":\"setAddressKMS\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"new_factory\",\"type\":\"address\"}],\"name\":\"setContentFactory\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"content_space_description\",\"type\":\"string\"}],\"name\":\"setDescription\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"new_factory\",\"type\":\"address\"}],\"name\":\"setFactory\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"new_factory\",\"type\":\"address\"}],\"name\":\"setGroupFactory\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"group\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setGroupRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_kmsID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_pubKey\",\"type\":\"string\"}],\"name\":\"setKMSPublicKey\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"new_factory\",\"type\":\"address\"}],\"name\":\"setLibraryFactory\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"stakeholder\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_visibility_code\",\"type\":\"uint8\"}],\"name\":\"setVisibility\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"new_factory\",\"type\":\"address\"}],\"name\":\"setWalletFactory\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_locator\",\"type\":\"bytes\"}],\"name\":\"submitNode\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newCreator\",\"type\":\"address\"}],\"name\":\"transferCreatorship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"updateRequest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userWallets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"content_type\",\"type\":\"address\"}],\"name\":\"validType\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"versionAPI\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"versionHashes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"versionTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"visibility\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"walletFactory\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"content_type\",\"type\":\"address\"}],\"name\":\"whitelistedType\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// BaseContentSpaceFuncSigs maps the 4-byte function signature to its string representation.
var BaseContentSpaceFuncSigs = map[string]string{
	"97ac4fd2": "CAN_ACCESS()",
	"ef1d7dc2": "CAN_EDIT()",
	"100508a2": "CAN_SEE()",
	"1bf7a912": "accessRequestV3(bytes32[],address[])",
	"52f82dd8": "activeNodeAddresses(uint256)",
	"5272ae17": "activeNodeLocators(uint256)",
	"0f58a786": "addContentType(address,address)",
	"653a92f6": "addKMSLocator(string,bytes)",
	"64f0f050": "addNode(address,bytes)",
	"32eaf21b": "addressKMS()",
	"dd4c97a0": "approveNode(address)",
	"6e375427": "canCommit()",
	"14cfabb3": "canConfirm()",
	"0eaec2c5": "canContribute(address)",
	"81beeb64": "canEdit()",
	"26683e14": "canNodePublish(address)",
	"9b55f901": "canPublish(address)",
	"29d00219": "canReview(address)",
	"8d2a23db": "checkKMS(string)",
	"d6be0f49": "checkKMSAddr(address)",
	"5f6a1301": "clearPending()",
	"9867db74": "commit(string)",
	"375a6e7c": "commitPending()",
	"446e8826": "confirmCommit()",
	"904696a8": "contentFactory()",
	"af570c04": "contentSpace()",
	"1cdbee5a": "contentTypeContracts(address)",
	"991a3a7c": "contentTypes(uint256)",
	"c65bcbe2": "contentTypesLength()",
	"331b86c0": "countVersionHashes()",
	"7708bc41": "createAccessWallet()",
	"bf4e088f": "createContent(address,address)",
	"b8cfaf05": "createContentType()",
	"575185ed": "createGroup()",
	"40b89f06": "createLibrary(address)",
	"e7cf0c66": "createUserWallet(address)",
	"02d05d3f": "creator()",
	"e1a70717": "deleteVersion(string)",
	"7284e416": "description()",
	"c45a0155": "factory()",
	"1f2caaec": "findTypeByHash(bytes32)",
	"a2d67fcf": "getAccessWallet()",
	"589aafc1": "getKMSID(address)",
	"268bfac4": "getKMSInfo(string,bytes)",
	"ac55c906": "getMeta(bytes)",
	"b04b6caa": "groupFactory()",
	"95a078e8": "hasAccess(address)",
	"67e5c3bf": "hasEditorRight(address)",
	"6380501f": "indexCategory()",
	"24d7806c": "isAdmin(address)",
	"41c0e1b5": "kill()",
	"441c5aa3": "libraryFactory()",
	"06fdde03": "name()",
	"fbd1b4ce": "nodeMapping(address)",
	"43f59ec7": "numActiveNodes()",
	"f41a1587": "numPendingNodes()",
	"e02dd9c2": "objectHash()",
	"40b87a26": "objectTimestamp()",
	"8da5cb5b": "owner()",
	"00821de3": "parentAddress()",
	"628449fd": "pendingHash()",
	"6be9514c": "pendingNodeAddresses(uint256)",
	"69e30ff8": "pendingNodeLocators(uint256)",
	"2cf99422": "publish(address)",
	"e542b7cb": "putMeta(bytes,bytes)",
	"fd089196": "removeContentType(address)",
	"fe7ac19f": "removeKMSLocator(string,bytes)",
	"b2b99ec9": "removeNode(address)",
	"3dd71d99": "requiresReview()",
	"c9e8e72d": "setAddressKMS(address)",
	"85ce1df1": "setContentFactory(address)",
	"90c3f38f": "setDescription(string)",
	"5bb47808": "setFactory(address)",
	"837b3b93": "setGroupFactory(address)",
	"22e564eb": "setGroupRights(address,uint8,uint8)",
	"a69cb734": "setKMSPublicKey(string,string)",
	"9d05d18d": "setLibraryFactory(address)",
	"0fe1b5a2": "setRights(address,uint8,uint8)",
	"aa024e8b": "setVisibility(uint8)",
	"7ebf879c": "setWalletFactory(address)",
	"160eee74": "submitNode(bytes)",
	"6d2e4b1b": "transferCreatorship(address)",
	"f2fde38b": "transferOwnership(address)",
	"c287e0ed": "updateRequest()",
	"63e6ffdd": "userWallets(address)",
	"29dedde5": "validType(address)",
	"54fd4d50": "version()",
	"5f4fcae1": "versionAPI()",
	"7ca8f618": "versionHashes(uint256)",
	"7886f747": "versionTimestamp(uint256)",
	"29adec14": "visibility()",
	"c5c03699": "walletFactory()",
	"9cb121ba": "whitelistedType(address)",
}

// BaseContentSpaceBin is the compiled bytecode used for deploying new contracts.
var BaseContentSpaceBin = "0x60806040527f4f776e61626c653230323030393238313130303030504f0000000000000000006000908155620332e360ec1b60019081557f41636365737369626c653230323030363236313231363030504f0000000000006007556008805460ff191690911761ff00191690557f4564697461626c653230323030393238313130303030504f00000000000000006009557f436f6e7461696e657232303230303331363133353330304d4c000000000000006010556013557f55736572537061636532303139303530363135353330304d4c000000000000006015557f4e6f6465537061636532303139303532383137303130304d4c000000000000006017557f42617365436f6e74656e7453706163653230323030393238313130303030504f601c553480156200013057600080fd5b506040516200657a3803806200657a833981810160405260208110156200015657600080fd5b81019080805160405193929190846401000000008211156200017757600080fd5b9083019060208201858111156200018d57600080fd5b8251640100000000811182820188101715620001a857600080fd5b82525081516020918201929091019080838360005b83811015620001d7578181015183820152602001620001bd565b50505050905090810190601f168015620002055780820380516001836020036101000a031916815260200191505b506040525050600280546001600160a01b0319908116321790915560038054909116331790555080516200024190601d906020840190620002b2565b50600480546001600160a01b03191630179055601c54600354604080519283526001600160a01b0391909116602083015280517f599bb380c80b69455450a615c515544b8da3b09f2efa116a5f0567682203cf549281900390910190a1506008805460ff1916600a17905562000357565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002f557805160ff191683800117855562000325565b8280016001018555821562000325579182015b828111156200032557825182559160200191906001019062000308565b506200033392915062000337565b5090565b6200035491905b808211156200033357600081556001016200033e565b90565b61621380620003676000396000f3fe6080604052600436106105015760003560e01c80636d2e4b1b11610297578063aa024e8b11610165578063d6be0f49116100cc578063ef1d7dc211610085578063ef1d7dc214611b64578063f2fde38b14611b79578063f41a158714611bac578063fbd1b4ce14611bc1578063fd08919614611bf4578063fe7ac19f14611c2757610501565b8063d6be0f49146118cf578063dd4c97a014611902578063e02dd9c214611935578063e1a707171461194a578063e542b7cb146119fb578063e7cf0c6614611b3157610501565b8063bf4e088f1161011e578063bf4e088f1461180d578063c287e0ed14611848578063c45a01551461185d578063c5c0369914611872578063c65bcbe214611887578063c9e8e72d1461189c57610501565b8063aa024e8b146116bd578063ac55c906146116ea578063af570c041461179b578063b04b6caa146117b0578063b2b99ec9146117c5578063b8cfaf05146117f857610501565b80638da5cb5b11610209578063991a3a7c116101c2578063991a3a7c146114e25780639b55f901146105d35780639cb121ba1461150c5780639d05d18d1461153f578063a2d67fcf14611572578063a69cb7341461158757610501565b80638da5cb5b1461130e578063904696a81461132357806390c3f38f1461133857806395a078e8146113e957806397ac4fd21461141c5780639867db741461143157610501565b80637ca8f6181161025b5780637ca8f618146111855780637ebf879c146111af57806381beeb64146111e2578063837b3b93146111f757806385ce1df11461122a5780638d2a23db1461125d57610501565b80636d2e4b1b146110e95780636e3754271461111c5780637284e416146111315780637708bc41146111465780637886f7471461115b57610501565b80633dd71d99116103d4578063589aafc11161034657806363e6ffdd116102ff57806363e6ffdd14610e3857806364f0f05014610e6b578063653a92f614610f2c57806367e5c3bf1461106257806369e30ff8146110955780636be9514c146110bf57610501565b8063589aafc114610d7e5780635bb4780814610db15780635f4fcae114610de45780635f6a130114610df9578063628449fd14610e0e5780636380501f14610e2357610501565b8063441c5aa311610398578063441c5aa314610ce3578063446e882614610cf85780635272ae1714610d0057806352f82dd814610d2a57806354fd4d5014610d54578063575185ed14610d6957610501565b80633dd71d9914610c5c57806340b87a2614610c7157806340b89f0614610c8657806341c0e1b514610cb957806343f59ec714610cce57610501565b80631f2caaec1161047857806329d002191161043157806329d0021914610b7257806329dedde514610ba55780632cf9942214610bd857806332eaf21b14610c0b578063331b86c014610c20578063375a6e7c14610c4757610501565b80631f2caaec146108e057806322e564eb1461090a57806324d7806c1461094e57806326683e1414610981578063268bfac4146109b457806329adec1414610b5d57610501565b80630fe1b5a2116104ca5780630fe1b5a214610655578063100508a21461069957806314cfabb3146106c4578063160eee74146106d95780631bf7a9121461078a5780631cdbee5a146108ad57610501565b8062821de31461050357806302d05d3f1461053457806306fdde03146105495780630eaec2c5146105d35780630f58a7861461061a575b005b34801561050f57600080fd5b50610518611d5d565b604080516001600160a01b039092168252519081900360200190f35b34801561054057600080fd5b50610518611d6d565b34801561055557600080fd5b5061055e611d7c565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610598578181015183820152602001610580565b50505050905090810190601f1680156105c55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156105df57600080fd5b50610606600480360360208110156105f657600080fd5b50356001600160a01b0316611e0a565b604080519115158252519081900360200190f35b34801561062657600080fd5b506105016004803603604081101561063d57600080fd5b506001600160a01b0381358116916020013516611e3b565b34801561066157600080fd5b506105016004803603606081101561067857600080fd5b506001600160a01b038135169060ff60208201358116916040013516611f97565b3480156106a557600080fd5b506106ae61205c565b6040805160ff9092168252519081900360200190f35b3480156106d057600080fd5b50610606612061565b3480156106e557600080fd5b50610501600480360360208110156106fc57600080fd5b810190602081018135600160201b81111561071657600080fd5b82018360208201111561072857600080fd5b803590602001918460018302840111600160201b8311171561074957600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506120d5945050505050565b610606600480360360408110156107a057600080fd5b810190602081018135600160201b8111156107ba57600080fd5b8201836020820111156107cc57600080fd5b803590602001918460208302840111600160201b831117156107ed57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561083c57600080fd5b82018360208201111561084e57600080fd5b803590602001918460208302840111600160201b8311171561086f57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550612488945050505050565b3480156108b957600080fd5b50610518600480360360208110156108d057600080fd5b50356001600160a01b0316612524565b3480156108ec57600080fd5b506105186004803603602081101561090357600080fd5b503561253f565b34801561091657600080fd5b506105016004803603606081101561092d57600080fd5b506001600160a01b038135169060ff60208201358116916040013516612765565b34801561095a57600080fd5b506106066004803603602081101561097157600080fd5b50356001600160a01b0316612bab565b34801561098d57600080fd5b50610606600480360360208110156109a457600080fd5b50356001600160a01b0316612bd4565b3480156109c057600080fd5b50610a7f600480360360408110156109d757600080fd5b810190602081018135600160201b8111156109f157600080fd5b820183602082011115610a0357600080fd5b803590602001918460018302840111600160201b83111715610a2457600080fd5b919390929091602081019035600160201b811115610a4157600080fd5b820183602082011115610a5357600080fd5b803590602001918460018302840111600160201b83111715610a7457600080fd5b509092509050612c26565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b83811015610ac0578181015183820152602001610aa8565b50505050905090810190601f168015610aed5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015610b20578181015183820152602001610b08565b50505050905090810190601f168015610b4d5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b348015610b6957600080fd5b506106ae613005565b348015610b7e57600080fd5b5061060660048036036020811015610b9557600080fd5b50356001600160a01b031661300e565b348015610bb157600080fd5b5061060660048036036020811015610bc857600080fd5b50356001600160a01b0316613014565b348015610be457600080fd5b5061060660048036036020811015610bfb57600080fd5b50356001600160a01b0316613032565b348015610c1757600080fd5b50610518613135565b348015610c2c57600080fd5b50610c35613144565b60408051918252519081900360200190f35b348015610c5357600080fd5b5061060661314a565b348015610c6857600080fd5b50610606613153565b348015610c7d57600080fd5b50610c35613158565b348015610c9257600080fd5b5061051860048036036020811015610ca957600080fd5b50356001600160a01b031661315e565b348015610cc557600080fd5b50610501613230565b348015610cda57600080fd5b50610c35613255565b348015610cef57600080fd5b5061051861325b565b61060661326a565b348015610d0c57600080fd5b5061055e60048036036020811015610d2357600080fd5b5035613466565b348015610d3657600080fd5b5061051860048036036020811015610d4d57600080fd5b50356134d9565b348015610d6057600080fd5b50610c35613500565b348015610d7557600080fd5b50610518613506565b348015610d8a57600080fd5b5061055e60048036036020811015610da157600080fd5b50356001600160a01b03166135ca565b348015610dbd57600080fd5b5061050160048036036020811015610dd457600080fd5b50356001600160a01b03166135dd565b348015610df057600080fd5b50610c35613616565b348015610e0557600080fd5b5061050161361c565b348015610e1a57600080fd5b5061055e613658565b348015610e2f57600080fd5b506106ae6136b3565b348015610e4457600080fd5b5061051860048036036020811015610e5b57600080fd5b50356001600160a01b03166136c1565b348015610e7757600080fd5b5061050160048036036040811015610e8e57600080fd5b6001600160a01b038235169190810190604081016020820135600160201b811115610eb857600080fd5b820183602082011115610eca57600080fd5b803590602001918460018302840111600160201b83111715610eeb57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506136dc945050505050565b348015610f3857600080fd5b5061060660048036036040811015610f4f57600080fd5b810190602081018135600160201b811115610f6957600080fd5b820183602082011115610f7b57600080fd5b803590602001918460018302840111600160201b83111715610f9c57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b811115610fee57600080fd5b82018360208201111561100057600080fd5b803590602001918460018302840111600160201b8311171561102157600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061390a945050505050565b34801561106e57600080fd5b506106066004803603602081101561108557600080fd5b50356001600160a01b0316613bf5565b3480156110a157600080fd5b5061055e600480360360208110156110b857600080fd5b5035613d56565b3480156110cb57600080fd5b50610518600480360360208110156110e257600080fd5b5035613d63565b3480156110f557600080fd5b506105016004803603602081101561110c57600080fd5b50356001600160a01b0316613d70565b34801561112857600080fd5b50610606613dbc565b34801561113d57600080fd5b5061055e613dcd565b34801561115257600080fd5b50610518613e28565b34801561116757600080fd5b50610c356004803603602081101561117e57600080fd5b5035613e38565b34801561119157600080fd5b5061055e600480360360208110156111a857600080fd5b5035613e56565b3480156111bb57600080fd5b50610501600480360360208110156111d257600080fd5b50356001600160a01b0316613e63565b3480156111ee57600080fd5b50610606613e9c565b34801561120357600080fd5b506105016004803603602081101561121a57600080fd5b50356001600160a01b0316613ea7565b34801561123657600080fd5b506105016004803603602081101561124d57600080fd5b50356001600160a01b0316613ee0565b34801561126957600080fd5b50610c356004803603602081101561128057600080fd5b810190602081018135600160201b81111561129a57600080fd5b8201836020820111156112ac57600080fd5b803590602001918460018302840111600160201b831117156112cd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550613f19945050505050565b34801561131a57600080fd5b50610518613f81565b34801561132f57600080fd5b50610518613f90565b34801561134457600080fd5b506105016004803603602081101561135b57600080fd5b810190602081018135600160201b81111561137557600080fd5b82018360208201111561138757600080fd5b803590602001918460018302840111600160201b831117156113a857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550613f9f945050505050565b3480156113f557600080fd5b506106066004803603602081101561140c57600080fd5b50356001600160a01b0316613fcd565b34801561142857600080fd5b506106ae6140f1565b34801561143d57600080fd5b506105016004803603602081101561145457600080fd5b810190602081018135600160201b81111561146e57600080fd5b82018360208201111561148057600080fd5b803590602001918460018302840111600160201b831117156114a157600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506140f6945050505050565b3480156114ee57600080fd5b506105186004803603602081101561150557600080fd5b5035614221565b34801561151857600080fd5b506106066004803603602081101561152f57600080fd5b50356001600160a01b031661422e565b34801561154b57600080fd5b506105016004803603602081101561156257600080fd5b50356001600160a01b0316614283565b34801561157e57600080fd5b506105186142bc565b34801561159357600080fd5b50610501600480360360408110156115aa57600080fd5b810190602081018135600160201b8111156115c457600080fd5b8201836020820111156115d657600080fd5b803590602001918460018302840111600160201b831117156115f757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561164957600080fd5b82018360208201111561165b57600080fd5b803590602001918460018302840111600160201b8311171561167c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550614346945050505050565b3480156116c957600080fd5b50610501600480360360208110156116e057600080fd5b503560ff166143d6565b3480156116f657600080fd5b5061055e6004803603602081101561170d57600080fd5b810190602081018135600160201b81111561172757600080fd5b82018360208201111561173957600080fd5b803590602001918460018302840111600160201b8311171561175a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550614447945050505050565b3480156117a757600080fd5b506105186145ee565b3480156117bc57600080fd5b506105186145fd565b3480156117d157600080fd5b50610501600480360360208110156117e857600080fd5b50356001600160a01b031661460c565b34801561180457600080fd5b506105186146bb565b34801561181957600080fd5b506105186004803603604081101561183057600080fd5b506001600160a01b0381358116916020013516614780565b34801561185457600080fd5b5061050161486e565b34801561186957600080fd5b5061051861492e565b34801561187e57600080fd5b5061051861493d565b34801561189357600080fd5b50610c3561494c565b3480156118a857600080fd5b50610501600480360360208110156118bf57600080fd5b50356001600160a01b0316614952565b3480156118db57600080fd5b50610c35600480360360208110156118f257600080fd5b50356001600160a01b031661498b565b34801561190e57600080fd5b506105016004803603602081101561192557600080fd5b50356001600160a01b0316614a01565b34801561194157600080fd5b5061055e614c1c565b34801561195657600080fd5b50610c356004803603602081101561196d57600080fd5b810190602081018135600160201b81111561198757600080fd5b82018360208201111561199957600080fd5b803590602001918460018302840111600160201b831117156119ba57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550614c77945050505050565b348015611a0757600080fd5b5061050160048036036040811015611a1e57600080fd5b810190602081018135600160201b811115611a3857600080fd5b820183602082011115611a4a57600080fd5b803590602001918460018302840111600160201b83111715611a6b57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b811115611abd57600080fd5b820183602082011115611acf57600080fd5b803590602001918460018302840111600160201b83111715611af057600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506150dd945050505050565b348015611b3d57600080fd5b5061051860048036036020811015611b5457600080fd5b50356001600160a01b03166152cc565b348015611b7057600080fd5b506106ae6152d7565b348015611b8557600080fd5b5061050160048036036020811015611b9c57600080fd5b50356001600160a01b03166152dc565b348015611bb857600080fd5b50610c35615328565b348015611bcd57600080fd5b5061051860048036036020811015611be457600080fd5b50356001600160a01b031661532e565b348015611c0057600080fd5b5061060660048036036020811015611c1757600080fd5b50356001600160a01b0316615349565b348015611c3357600080fd5b5061060660048036036040811015611c4a57600080fd5b810190602081018135600160201b811115611c6457600080fd5b820183602082011115611c7657600080fd5b803590602001918460018302840111600160201b83111715611c9757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b811115611ce957600080fd5b820183602082011115611cfb57600080fd5b803590602001918460018302840111600160201b83111715611d1c57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506154db945050505050565b6004546001600160a01b03165b90565b6002546001600160a01b031681565b601d805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015611e025780601f10611dd757610100808354040283529160200191611e02565b820191906000526020600020905b815481529060010190602001808311611de557829003601f168201915b505050505081565b6003546000906001600160a01b0383811691161480611e3357506003546001600160a01b031633145b90505b919050565b6003546001600160a01b03163314611e5257600080fd5b6001600160a01b0382811660009081526014602052604090205416158015611e805750611e7e8261422e565b155b15611f2a576012546013541015611ed45781601260135481548110611ea157fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550611f20565b601280546001810182556000919091527fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec34440180546001600160a01b0319166001600160a01b0384161790555b6013805460010190555b6001600160a01b0382811660008181526014602090815260409182902080546001600160a01b0319169486169485179055815192835282019290925281517f280016f7418306a55542432120fd1a239ef9fcc1a92694d8d44ca76be0249ea7929181900390910190a15050565b611f9f613e9c565b611fa857600080fd5b60048054604080516363e6ffdd60e01b81526001600160a01b03878116948201949094529051929091169160009183916363e6ffdd91602480820192602092909190829003018186803b158015611ffe57600080fd5b505afa158015612012573d6000803e3d6000fd5b505050506040513d602081101561202857600080fd5b505190506001600160a01b03811661204a57612045858585612765565b612055565b612055818585612765565b5050505050565b600181565b6040805163099a0f8560e21b81523360048201529051600091309182916326683e14916024808301926020929190829003018186803b1580156120a357600080fd5b505afa1580156120b7573d6000803e3d6000fd5b505050506040513d60208110156120cd57600080fd5b505191505090565b61220b601a80548060200260200160405190810160405280929190818152602001828054801561212e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612110575b5050505050601b805480602002602001604051908101604052809291908181526020016000905b828210156122005760008481526020908190208301805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156121ec5780601f106121c1576101008083540402835291602001916121ec565b820191906000526020600020905b8154815290600101906020018083116121cf57829003601f168201915b505050505081526020019060010190612155565b5050505033846158ec565b1561221557600080fd5b612340601880548060200260200160405190810160405280929190818152602001828054801561226e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612250575b50505050506019805480602002602001604051908101604052809291908181526020016000905b828210156122005760008481526020908190208301805460408051601f600260001961010060018716150201909416939093049283018590048502810185019091528181529283018282801561232c5780601f106123015761010080835404028352916020019161232c565b820191906000526020600020905b81548152906001019060200180831161230f57829003601f168201915b505050505081526020019060010190612295565b1561234a57600080fd5b601a5460641161235957600080fd5b601b805460018101808355600092909252825161239d917f3ad8aa4f87544323a9d1e5dd902f40c356527a7955687113db5f9a85ad579dc101906020850190615fdb565b5050601a805460018101825560009182527f057c384a7d1c54f3a1b2e5e67b2617b8224fdfd1ea7234eea573a6ff665ff63e0180546001600160a01b0319163390811790915560408051828152602081810183815286519383019390935285517fae5645569f32b946f7a747113c64094a29a6b84c5ddf55816ef4381ce8a3a46d958794926060850192908601918190849084905b8381101561244a578181015183820152602001612432565b50505050905090810190601f1680156124775780820380516001836020036101000a031916815260200191505b50935050505060405180910390a150565b600061249333613fcd565b61249c57600080fd5b604080513060601b60208083019190915242603480840182905284518085039091018152605484018086528151919093012090915260006074830181905260948301523360b48301526103e80260d482015290517f545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c79181900360f40190a15060015b92915050565b6014602052600090815260409020546001600160a01b031681565b6000805b60125481101561275c5760006012828154811061255c57fe5b60009182526020808320909101546040805180840189905281518082038501815281830180845281519190950120637016ece160e11b90945290516001600160a01b0390921694509192849263e02dd9c29260448083019392829003018186803b1580156125c957600080fd5b505afa1580156125dd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561260657600080fd5b8101908080516040519392919084600160201b82111561262557600080fd5b90830190602082018581111561263a57600080fd5b8251600160201b81118282018810171561265357600080fd5b82525081516020918201929091019080838360005b83811015612680578181015183820152602001612668565b50505050905090810190601f1680156126ad5780820380516001836020036101000a031916815260200191505b506040525050506040516020018082805190602001908083835b602083106126e65780518252601f1990920191602091820191016126c7565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001201415612753576012828154811061273457fe5b6000918252602090912001546001600160a01b03169250611e36915050565b50600101612543565b50600092915050565b6000839050806001600160a01b031663091600e66040518163ffffffff1660e01b815260040160206040518083038186803b1580156127a357600080fd5b505afa1580156127b7573d6000803e3d6000fd5b505050506040513d60208110156127cd57600080fd5b5051600854610100900460ff90811691161415612858576040805162f7bd4560e61b815230600482015260ff80861660248301528416604482015290516001600160a01b03831691633def514091606480830192600092919082900301818387803b15801561283b57600080fd5b505af115801561284f573d6000803e3d6000fd5b50505050612ba5565b806001600160a01b03166312915a306040518163ffffffff1660e01b815260040160206040518083038186803b15801561289157600080fd5b505afa1580156128a5573d6000803e3d6000fd5b505050506040513d60208110156128bb57600080fd5b5051600854610100900460ff9081169116141561292a576040805163f17bda9160e01b815230600482015260ff80861660248301528416604482015290516001600160a01b0383169163f17bda9191606480830192600092919082900301818387803b15801561283b57600080fd5b806001600160a01b03166316aed2326040518163ffffffff1660e01b815260040160206040518083038186803b15801561296357600080fd5b505afa158015612977573d6000803e3d6000fd5b505050506040513d602081101561298d57600080fd5b5051600854610100900460ff908116911614156129fc5760408051633e5dbdf960e11b815230600482015260ff80861660248301528416604482015290516001600160a01b03831691637cbb7bf291606480830192600092919082900301818387803b15801561283b57600080fd5b806001600160a01b03166368a0469a6040518163ffffffff1660e01b815260040160206040518083038186803b158015612a3557600080fd5b505afa158015612a49573d6000803e3d6000fd5b505050506040513d6020811015612a5f57600080fd5b5051600854610100900460ff90811691161415612ace5760408051638635adb560e01b815230600482015260ff80861660248301528416604482015290516001600160a01b03831691638635adb591606480830192600092919082900301818387803b15801561283b57600080fd5b806001600160a01b0316636373a4116040518163ffffffff1660e01b815260040160206040518083038186803b158015612b0757600080fd5b505afa158015612b1b573d6000803e3d6000fd5b505050506040513d6020811015612b3157600080fd5b5051600854610100900460ff90811691161415612ba057604080516301126e5d60e51b815230600482015260ff80861660248301528416604482015290516001600160a01b0383169163224dcba091606480830192600092919082900301818387803b15801561283b57600080fd5b600080fd5b50505050565b6003546000906001600160a01b0383811691161415612bcc57506001611e36565b506000919050565b6000805b60185481101561275c57826001600160a01b031660188281548110612bf957fe5b6000918252602090912001546001600160a01b03161415612c1e576001915050611e36565b600101612bd8565b60608060606025878760405180838380828437919091019485525050604080519384900360209081018520805480830287018301909352828652935090915060009084015b82821015612d165760008481526020908190208301805460408051601f6002600019610100600187161502019094169390930492830185900485028101850190915281815292830182828015612d025780601f10612cd757610100808354040283529160200191612d02565b820191906000526020600020905b815481529060010190602001808311612ce557829003601f168201915b505050505081526020019060010190612c6b565b505050509050606060268888604051808383808284379190910194855250506040805160209481900385018120805460026001821615610100026000190190911604601f81018790048702830187019093528282529094909350909150830182828015612dc45780601f10612d9957610100808354040283529160200191612dc4565b820191906000526020600020905b815481529060010190602001808311612da757829003601f168201915b50505050509050815160001415612def5760408051602081019091526000815293509150612ffc9050565b6060612e318388888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506159d592505050565b9050606060005b8251811015612ff3576001835103811415612f185781838281518110612e5a57fe5b60200260200101516040516020018083805190602001908083835b60208310612e945780518252601f199092019160209182019101612e75565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b60208310612edc5780518252601f199092019160209182019101612ebd565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150612feb565b81838281518110612f2557fe5b60200260200101516040516020018083805190602001908083835b60208310612f5f5780518252601f199092019160209182019101612f40565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b60208310612fa75780518252601f199092019160209182019101612f88565b6001836020036101000a03801982511681845116808217855250505050505090500180600b60fa1b8152506001019250505060405160208183030381529060405291505b600101612e38565b50945090925050505b94509492505050565b60085460ff1681565b50600090565b60006013546000141561302957506001611e36565b611e338261422e565b6000336001600160a01b0383161461304957600080fd5b6000829050806001600160a01b0316638280dd8f60006040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b15801561309557600080fd5b505af11580156130a9573d6000803e3d6000fd5b505050506040513d60208110156130bf57600080fd5b5050604080516327c1c21d60e01b815290516001600160a01b038316916327c1c21d916004808301926020929190829003018186803b15801561310157600080fd5b505afa158015613115573d6000803e3d6000fd5b505050506040513d602081101561312b57600080fd5b5051159392505050565b6011546001600160a01b031681565b600c5490565b600f5460ff1681565b600090565b600b5481565b600033321461316c57600080fd5b6022546040805163205c4f8360e11b81526001600160a01b038581166004830152915160009392909216916340b89f069160248082019260209290919082900301818787803b1580156131be57600080fd5b505af11580156131d2573d6000803e3d6000fd5b505050506040513d60208110156131e857600080fd5b5051604080516001600160a01b038316815290519192507f473c07a6d0228c4fb8fe2be3b4617c3b5fb7c0f8cd9ba4b67e8631844b9b6571919081900360200190a192915050565b6003546001600160a01b0316331461324757600080fd5b6003546001600160a01b0316ff5b60195490565b6022546001600160a01b031681565b6000613274612061565b61327d57600080fd5b600f5460ff1661328c57600080fd5b600a54600260001961010060018416150201909116041561333757600c80546001818101808455600093909352600a80546132fe937fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c70192600261010091831615919091026000190190911604616059565b5050600b54600d80546001810182556000919091527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb501555b600e805461335a91600a9160026000196101006001841615020190911604616059565b5042600b5560408051602081019182905260009081905261337d91600e91615fdb565b50600f805460ff191690556004547fbdaffceabaaa783aa187fea6c2e815541d29e2290bf3f7d3c4fc53672b68f7df906001600160a01b03166133be611d5d565b604080516001600160a01b038085168252831660208201526060918101828152600a805460026000196101006001841615020190911604938301849052926080830190849080156134505780601f1061342557610100808354040283529160200191613450565b820191906000526020600020905b81548152906001019060200180831161343357829003601f168201915b505094505050505060405180910390a150600190565b6019818154811061347357fe5b600091825260209182902001805460408051601f6002600019610100600187161502019094169390930492830185900485028101850190915281815293509091830182828015611e025780601f10611dd757610100808354040283529160200191611e02565b601881815481106134e657fe5b6000918252602090912001546001600160a01b0316905081565b601c5481565b600033321461351457600080fd5b602080546040805163575185ed60e01b815290516000936001600160a01b039093169263575185ed926004808201939182900301818787803b15801561355957600080fd5b505af115801561356d573d6000803e3d6000fd5b505050506040513d602081101561358357600080fd5b5051604080516001600160a01b038316815290519192507fa3b1fe71ae61bad8cffa485b230e24e518938f76182a30fa0d9979e7237ad159919081900360200190a1905090565b6060611e336135d7615ad1565b83615ad6565b6003546001600160a01b031633146135f457600080fd5b601f80546001600160a01b0319166001600160a01b0392909216919091179055565b60015481565b613624613dbc565b61362d57600080fd5b60408051602081019182905260009081905261364b91600e91615fdb565b50600f805460ff19169055565b600e805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015611e025780601f10611dd757610100808354040283529160200191611e02565b600854610100900460ff1681565b6016602052600090815260409020546001600160a01b031681565b6003546001600160a01b031633146136f357600080fd5b613829601880548060200260200160405190810160405280929190818152602001828054801561374c57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161372e575b50505050506019805480602002602001604051908101604052809291908181526020016000905b8282101561381e5760008481526020908190208301805460408051601f600260001961010060018716150201909416939093049283018590048502810185019091528181529283018282801561380a5780601f106137df5761010080835404028352916020019161380a565b820191906000526020600020905b8154815290600101906020018083116137ed57829003601f168201915b505050505081526020019060010190613773565b5050505084846158ec565b1561383357600080fd5b6018805460018082019092557fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2e0180546001600160a01b0319166001600160a01b03851617905560198054918201808255600091909152825190916138c1917f944998273e477b495144fb8794c914197f3ccb46be2900f4698fd0ef743c9695909101906020850190615fdb565b5050604080513381526001600160a01b038416602082015281517f2bb0f9ba138ffddb5a8f974e9885b65a7814d3002654f1cf3f2d3f619a4006c4929181900390910190a15050565b6003546000906001600160a01b0316331461392457600080fd5b60606025846040518082805190602001908083835b602083106139585780518252601f199092019160209182019101613939565b51815160209384036101000a60001901801990921691161790529201948552506040805194859003820185208054808402870184019092528186529350915060009084015b82821015613a485760008481526020908190208301805460408051601f6002600019610100600187161502019094169390930492830185900485028101850190915281815292830182828015613a345780601f10613a0957610100808354040283529160200191613a34565b820191906000526020600020905b815481529060010190602001808311613a1757829003601f168201915b50505050508152602001906001019061399d565b509293506000925050505b8151811015613b28578380519060200120828281518110613a7057fe5b60200260200101516040518082805190602001908083835b60208310613aa75780518252601f199092019160209182019101613a88565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390201415613b2057604080513381526001602082015281517fdf8127994c229011ce9c4764bdc0375bb71c06cf1544f034cd81a42f37233319929181900390910190a160009250505061251e565b600101613a53565b506025846040518082805190602001908083835b60208310613b5b5780518252601f199092019160209182019101613b3c565b51815160209384036101000a600019018019909216911617905292019485525060405193849003810190932080546001810180835560009283529185902088519295613bae955091019250870190615fdb565b5050604080513381526000602082015281517fdf8127994c229011ce9c4764bdc0375bb71c06cf1544f034cd81a42f37233319929181900390910190a15060019392505050565b6003546000906001600160a01b0383811691161480613c1c5750600854606460ff90911610155b15613c2957506001611e36565b600854610100900460ff1615613d4e5760048054604080516363e6ffdd60e01b81526001600160a01b03868116948201949094529051600093909216916363e6ffdd91602480820192602092909190829003018186803b158015613c8c57600080fd5b505afa158015613ca0573d6000803e3d6000fd5b505050506040513d6020811015613cb657600080fd5b505160085460408051633fda978d60e11b815261010090920460ff16600483015230602483015260026044830152519192506001600160a01b03831691637fb52f1a91606480820192602092909190829003018186803b158015613d1957600080fd5b505afa158015613d2d573d6000803e3d6000fd5b505050506040513d6020811015613d4357600080fd5b50519150611e369050565b506000611e36565b601b818154811061347357fe5b601a81815481106134e657fe5b6002546001600160a01b03163314613d8757600080fd5b6001600160a01b038116613d9a57600080fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b0316331490565b601e805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015611e025780601f10611dd757610100808354040283529160200191611e02565b6000613e3333615b48565b905090565b600d8181548110613e4557fe5b600091825260209091200154905081565b600c818154811061347357fe5b6003546001600160a01b03163314613e7a57600080fd5b602180546001600160a01b0319166001600160a01b0392909216919091179055565b6000613e3333613bf5565b6003546001600160a01b03163314613ebe57600080fd5b602080546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b03163314613ef757600080fd5b602380546001600160a01b0319166001600160a01b0392909216919091179055565b60006025826040518082805190602001908083835b60208310613f4d5780518252601f199092019160209182019101613f2e565b51815160209384036101000a6000190180199092169116179052920194855250604051938490030190922054949350505050565b6003546001600160a01b031681565b6023546001600160a01b031681565b6003546001600160a01b03163314613fb657600080fd5b8051613fc990601e906020840190615fdb565b5050565b6003546000906001600160a01b0383811691161480613ff45750600854600a60ff90911610155b1561400157506001611e36565b600854610100900460ff1615613d4e5760048054604080516363e6ffdd60e01b81526001600160a01b03868116948201949094529051600093909216916363e6ffdd91602480820192602092909190829003018186803b15801561406457600080fd5b505afa158015614078573d6000803e3d6000fd5b505050506040513d602081101561408e57600080fd5b505160085460408051633fda978d60e11b815261010090920460ff16600483015230602483015260016044830152519192506001600160a01b03831691637fb52f1a91606480820192602092909190829003018186803b158015613d1957600080fd5b600a81565b6140fe613dbc565b61410757600080fd5b600f5460ff161561411757600080fd5b608081511061412557600080fd5b805161413890600e906020840190615fdb565b50600f805460ff191660011790556004547fb3ac059d88af6016aca1aebb7b3e796f2e7420435c59c563687814e9b85daa75906001600160a01b031661417c611d5d565b604080516001600160a01b038085168252831660208201526060918101828152600e8054600260001961010060018416150201909116049383018490529260808301908490801561420e5780601f106141e35761010080835404028352916020019161420e565b820191906000526020600020905b8154815290600101906020018083116141f157829003601f168201915b505094505050505060405180910390a150565b601281815481106134e657fe5b600080805b60135481101561427c57836001600160a01b03166012828154811061425457fe5b6000918252602090912001546001600160a01b0316141561427457600191505b600101614233565b5092915050565b6003546001600160a01b0316331461429a57600080fd5b602280546001600160a01b0319166001600160a01b0392909216919091179055565b3360009081526016602052604081205481906001600160a01b03166142ea576142e3613e28565b9050614305565b50336000908152601660205260409020546001600160a01b03165b604080516001600160a01b038316815290517f1c917c3c2698bd5b98acb9772728da62f2ce3670e4578910a6465b955f63e1579181900360200190a1905090565b6003546001600160a01b0316331461435d57600080fd5b806026836040518082805190602001908083835b602083106143905780518252601f199092019160209182019101614371565b51815160209384036101000a600019018019909216911617905292019485525060405193849003810190932084516143d19591949190910192509050615fdb565b505050565b6003546001600160a01b031633146143ed57600080fd5b6008805460ff191660ff838116919091179182905560408051308152600060208201529290911682820152517f369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500916060908290030190a150565b606060208251116144fc5781518083015160008181526005602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845293949390918301828280156144ee5780601f106144c3576101008083540402835291602001916144ee565b820191906000526020600020905b8154815290600101906020018083116144d157829003601f168201915b505050505092505050611e36565b6006826040518082805190602001908083835b6020831061452e5780518252601f19909201916020918201910161450f565b518151600019602094850361010090810a820192831692199390931691909117909252949092019687526040805197889003820188208054601f60026001831615909802909501169590950492830182900482028801820190528187529294509250508301828280156145e25780601f106145b7576101008083540402835291602001916145e2565b820191906000526020600020905b8154815290600101906020018083116145c557829003601f168201915b50505050509050919050565b6004546001600160a01b031681565b6020546001600160a01b031681565b6003546001600160a01b0316331461462357600080fd5b60005b601854811015613fc957816001600160a01b03166018828154811061464757fe5b6000918252602090912001546001600160a01b031614156146b35761466f8160186019615d0c565b604080513381526001600160a01b038416602082015281517f41ec5b9efdbf61871df6a18b687e04bea93d5793af5f8c8b4626e155b23dc19d929181900390910190a15b600101614626565b60003332146146c957600080fd5b601f546040805163b8cfaf0560e01b815290516000926001600160a01b03169163b8cfaf0591600480830192602092919082900301818787803b15801561470f57600080fd5b505af1158015614723573d6000803e3d6000fd5b505050506040513d602081101561473957600080fd5b5051604080516001600160a01b038316815290519192507f9e69777f30c55126be256664fa7beff4b796ac32ebceab94df5071b0148017f8919081900360200190a1905090565b6000333214806147985750336001600160a01b038416145b6147a157600080fd5b6023546040805163bf4e088f60e01b81526001600160a01b03868116600483015285811660248301529151600093929092169163bf4e088f9160448082019260209290919082900301818787803b1580156147fb57600080fd5b505af115801561480f573d6000803e3d6000fd5b505050506040513d602081101561482557600080fd5b5051604080516001600160a01b038316815290519192507fa0633ea0b3cb5796607e5f551ae79c7eeee0dc7ee0c3ff8996506261651368ce919081900360200190a19392505050565b614876613e9c565b61487f57600080fd5b604080516020808252600a8054600260001961010060018416150201909116049183018290527f403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b659390929182918201908490801561491e5780601f106148f35761010080835404028352916020019161491e565b820191906000526020600020905b81548152906001019060200180831161490157829003601f168201915b50509250505060405180910390a1565b601f546001600160a01b031681565b6021546001600160a01b031681565b60135481565b6003546001600160a01b0316331461496957600080fd5b601180546001600160a01b0319166001600160a01b0392909216919091179055565b60006060614998836135ca565b90506025816040518082805190602001908083835b602083106149cc5780518252601f1990920191602091820191016149ad565b51815160209384036101000a600019018019909216911617905292019485525060405193849003019092205495945050505050565b6003546001600160a01b03163314614a1857600080fd5b6000805b601a54811015614c1157826001600160a01b0316601a8281548110614a3d57fe5b6000918252602090912001546001600160a01b03161415614c09576018601a8281548110614a6757fe5b60009182526020808320909101548354600181018555938352912090910180546001600160a01b0319166001600160a01b03909216919091179055601b80546019919083908110614ab457fe5b60009182526020808320845460018181018088559686529290942092018054614af89493909301929091600261010091831615919091026000190190911604616059565b50507fd644c8164f225d3b7fdbcc404f279bb1e823ef0d93f88dd4b24e85d0e7bc6a54601a8281548110614b2857fe5b600091825260209091200154601b80546001600160a01b039092169184908110614b4e57fe5b6000918252602091829020604080516001600160a01b0386168152938401818152919092018054600260001961010060018416150201909116049284018390529291606083019084908015614be45780601f10614bb957610100808354040283529160200191614be4565b820191906000526020600020905b815481529060010190602001808311614bc757829003601f168201915b5050935050505060405180910390a1614c0081601a601b615d0c565b60019150614c11565b600101614a1c565b5080613fc957600080fd5b600a805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015611e025780601f10611dd757610100808354040283529160200191611e02565b6000614c81613dbc565b614c8a57600080fd5b6000826040516020018082805190602001908083835b60208310614cbf5780518252601f199092019160209182019101614ca0565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012090506000600a6040516020018082805460018160011615610100020316600290048015614d5e5780601f10614d3c576101008083540402835291820191614d5e565b820191906000526020600020905b815481529060010190602001808311614d4a575b505091505060405160208183030381529060405280519060200120905080821415614f2e57600c54614db357604080516020810191829052600090819052614da891600a91615fdb565b506000600b55614e52565b600080805b600c54811015614e075781600d8281548110614dd057fe5b90600052602060002001541115614dff57809250600d8181548110614df157fe5b906000526020600020015491505b600101614db8565b50600c8281548110614e1557fe5b90600052602060002001600a9080546001816001161561010002031660029004614e40929190616059565b50600b819055614e4f82615e62565b50505b7f238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51600460009054906101000a90046001600160a01b031685600060405180846001600160a01b03166001600160a01b0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015614ee7578181015183820152602001614ecf565b50505050905090810190601f168015614f145780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1600092505050611e36565b60001960005b600c54811015614ff5576000600c8281548110614f4d57fe5b906000526020600020016040516020018082805460018160011615610100020316600290048015614fb55780601f10614f93576101008083540402835291820191614fb5565b820191906000526020600020905b815481529060010190602001808311614fa1575b505091505060405160208183030381529060405280519060200120905080851415614fec57614fe382615e62565b81925050614ff5565b50600101614f34565b5080600019141561500557600080fd5b7f238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51600460009054906101000a90046001600160a01b0316868360405180846001600160a01b03166001600160a01b0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015615099578181015183820152602001615081565b50505050905090810190601f1680156150c65780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1949350505050565b6150e633612bab565b6150ef57600080fd5b6020825111615147578151808301516000818152600560205260408120919291615118916160ce565b825115615140576000828152600560209081526040909120845161513e92860190615fdb565b505b505061522f565b6006826040518082805190602001908083835b602083106151795780518252601f19909201916020918201910161515a565b51815160209384036101000a600019018019909216911617905292019485525060405193849003019092206151b29250905060006160ce565b80511561522f57806006836040518082805190602001908083835b602083106151ec5780518252601f1990920191602091820191016151cd565b51815160209384036101000a6000190180199092169116179052920194855250604051938490038101909320845161522d9591949190910192509050615fdb565b505b7fe2b310ec9dabdc05229a748e07666c3bc9c46c6ef465cce30d0aa3aa64a0644c826040518080602001828103825283818151815260200191508051906020019080838360005b8381101561528e578181015183820152602001615276565b50505050905090810190601f1680156152bb5780820380516001836020036101000a031916815260200191505b509250505060405180910390a15050565b6000611e3382615b48565b606481565b6003546001600160a01b031633146152f357600080fd5b6001600160a01b03811661530657600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b601b5490565b6024602052600090815260409020546001600160a01b031681565b6003546000906001600160a01b0316331461536357600080fd5b6013546000190160005b6013548110156154d157836001600160a01b03166012828154811061538e57fe5b6000918252602090912001546001600160a01b031614156154c957601281815481106153b657fe5b600091825260209091200180546001600160a01b031916905580821461545e57601282815481106153e357fe5b600091825260209091200154601280546001600160a01b03909216918390811061540957fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506012828154811061544457fe5b600091825260209091200180546001600160a01b03191690555b60138290556001600160a01b03841660008181526014602090815260409182902080546001600160a01b0319169055815192835290517fd41375b9d347dfe722f90a780731abd23b7855f9cf14ea7063c4cab5f9ae58e29281900390910190a1600192505050611e36565b60010161536d565b5060009392505050565b6003546000906001600160a01b031633146154f557600080fd5b60606025846040518082805190602001908083835b602083106155295780518252601f19909201916020918201910161550a565b51815160209384036101000a60001901801990921691161790529201948552506040805194859003820185208054808402870184019092528186529350915060009084015b828210156156195760008481526020908190208301805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156156055780601f106155da57610100808354040283529160200191615605565b820191906000526020600020905b8154815290600101906020018083116155e857829003601f168201915b50505050508152602001906001019061556e565b509293506000925050505b81518110156158a657838051906020012082828151811061564157fe5b60200260200101516040518082805190602001908083835b602083106156785780518252601f199092019160209182019101615659565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020141561589e576001825103811461575a57816001835103815181106156c657fe5b60200260200101516025866040518082805190602001908083835b602083106157005780518252601f1990920191602091820191016156e1565b51815160209384036101000a600019018019909216911617905292019485525060405193849003019092208054909250849150811061573b57fe5b906000526020600020019080519060200190615758929190615fdb565b505b6025856040518082805190602001908083835b6020831061578c5780518252601f19909201916020918201910161576d565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206001835103815481106157ce57fe5b9060005260206000200160006157e491906160ce565b60016025866040518082805190602001908083835b602083106158185780518252601f1990920191602091820191016157f9565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220805493909303926158579250905082616112565b50604080513381526000602082015281517f5f463eb53cddf646852b82c0d9bdb1d1ec215c3802b780e8b7beea8b6e99f94c929181900390910190a160019250505061251e565b600101615624565b50604080513381526001602082015281517f5f463eb53cddf646852b82c0d9bdb1d1ec215c3802b780e8b7beea8b6e99f94c929181900390910190a15060009392505050565b600083518551146158fc57600080fd5b60005b85518110156159c757828051906020012085828151811061591c57fe5b60200260200101516040518082805190602001908083835b602083106159535780518252601f199092019160209182019101615934565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902014806159b05750836001600160a01b031686828151811061599d57fe5b60200260200101516001600160a01b0316145b156159bf5760019150506159cd565b6001016158ff565b50600090505b949350505050565b60606000805b8451811015615a1557615a018582815181106159f357fe5b602002602001015185615f5e565b15615a0d576001909101905b6001016159db565b50606081604051908082528060200260200182016040528015615a4c57816020015b6060815260200190600190039081615a375790505b50905081615a5d57915061251e9050565b60009150815b8551811015615ac857615a89868281518110615a7b57fe5b602002602001015186615f5e565b15615ac057858181518110615a9a57fe5b6020026020010151828481518110615aae57fe5b60209081029190910101526001909201915b600101615a63565b50949350505050565b600b90565b604080517f6d616b654944537472696e6728696e742c6164647265737329000000000000008152815190819003601901812080825260048201859052600882018490526060929091859160ff919081602881856000fa80615b3657600080fd5b50604080820190529695505050505050565b6001600160a01b0381811660009081526016602052604081205490911615615b6f57600080fd5b60215460408051637708bc4160e01b815290516000926001600160a01b031691637708bc4191600480830192602092919082900301818787803b158015615bb557600080fd5b505af1158015615bc9573d6000803e3d6000fd5b505050506040513d6020811015615bdf57600080fd5b505190506001600160a01b0383163314615c58576040805163f2fde38b60e01b81526001600160a01b0385811660048301529151839283169163f2fde38b91602480830192600092919082900301818387803b158015615c3e57600080fd5b505af1158015615c52573d6000803e3d6000fd5b50505050505b604080516001600160a01b038316815290517f56c4bf13bebaa9f2be39ac3f2f4619a0dd1b694bb8c5f43c6b244a6dba0f0cca9181900360200190a1604080516001600160a01b0380841682528516602082015281517f05e3f3adaf96d565bb326088a1d8e0d78497549df2c99a8ab681e5fbc7a9b3f2929181900390910190a16001600160a01b03928316600090815260166020526040902080546001600160a01b031916938216939093179092555090565b815483108015615d1c5750805483105b615d2557600080fd5b8154600019018314615dee57805481906000198101908110615d4357fe5b90600052602060002001818481548110615d5957fe5b906000526020600020019080546001816001161561010002031660029004615d82929190616059565b50815482906000198101908110615d9557fe5b9060005260206000200160009054906101000a90046001600160a01b0316828481548110615dbf57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b805481906000198101908110615e0057fe5b906000526020600020016000615e1691906160ce565b8054615e26826000198301616112565b50815482906000198101908110615e3957fe5b600091825260209091200180546001600160a01b03191690558154612ba5836000198301616136565b600c8181548110615e6f57fe5b906000526020600020016000615e8591906160ce565b600d8181548110615e9257fe5b6000918252602082200155600c54600019018114615f3457600c80546000198101908110615ebc57fe5b90600052602060002001600c8281548110615ed357fe5b906000526020600020019080546001816001161561010002031660029004615efc929190616059565b50600d80546000198101908110615f0f57fe5b9060005260206000200154600d8281548110615f2757fe5b6000918252602090912001555b600c805490615f4790600019830161615a565b50600d805490613fc9906000198301616136565b50565b8051825160009190811115615f71575082515b60005b81811015615fd057838181518110615f8857fe5b602001015160f81c60f81b6001600160f81b031916858281518110615fa957fe5b01602001516001600160f81b03191614615fc85760009250505061251e565b600101615f74565b506001949350505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061601c57805160ff1916838001178555616049565b82800160010185558215616049579182015b8281111561604957825182559160200191906001019061602e565b5061605592915061617e565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106160925780548555616049565b8280016001018555821561604957600052602060002091601f016020900482015b828111156160495782548255916001019190600101906160b3565b50805460018160011615610100020316600290046000825580601f106160f45750615f5b565b601f016020900490600052602060002090810190615f5b919061617e565b8154818355818111156143d1576000838152602090206143d1918101908301616198565b8154818355818111156143d1576000838152602090206143d191810190830161617e565b8154818355818111156143d1576000838152602090206143d19181019083016161bb565b611d6a91905b808211156160555760008155600101616184565b611d6a91905b808211156160555760006161b282826160ce565b5060010161619e565b611d6a91905b808211156160555760006161d582826160ce565b506001016161c156fea265627a7a72315820ccc30cb86c845585ad6a8e18ed5497c6088043c140b0d68baabece5d88d3994764736f6c63430005110032"

// DeployBaseContentSpace deploys a new Ethereum contract, binding an instance of BaseContentSpace to it.
func DeployBaseContentSpace(auth *bind.TransactOpts, backend bind.ContractBackend, content_space_name string) (common.Address, *types.Transaction, *BaseContentSpace, error) {
	parsed, err := abi.JSON(strings.NewReader(BaseContentSpaceABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(BaseContentSpaceBin), backend, content_space_name)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &BaseContentSpace{BaseContentSpaceCaller: BaseContentSpaceCaller{contract: contract}, BaseContentSpaceTransactor: BaseContentSpaceTransactor{contract: contract}, BaseContentSpaceFilterer: BaseContentSpaceFilterer{contract: contract}}, nil
}

// BaseContentSpace is an auto generated Go binding around an Ethereum contract.
type BaseContentSpace struct {
	BaseContentSpaceCaller     // Read-only binding to the contract
	BaseContentSpaceTransactor // Write-only binding to the contract
	BaseContentSpaceFilterer   // Log filterer for contract events
}

// BaseContentSpaceCaller is an auto generated read-only Go binding around an Ethereum contract.
type BaseContentSpaceCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseContentSpaceTransactor is an auto generated write-only Go binding around an Ethereum contract.
type BaseContentSpaceTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseContentSpaceFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type BaseContentSpaceFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseContentSpaceSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type BaseContentSpaceSession struct {
	Contract     *BaseContentSpace // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// BaseContentSpaceCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type BaseContentSpaceCallerSession struct {
	Contract *BaseContentSpaceCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts           // Call options to use throughout this session
}

// BaseContentSpaceTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type BaseContentSpaceTransactorSession struct {
	Contract     *BaseContentSpaceTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts           // Transaction auth options to use throughout this session
}

// BaseContentSpaceRaw is an auto generated low-level Go binding around an Ethereum contract.
type BaseContentSpaceRaw struct {
	Contract *BaseContentSpace // Generic contract binding to access the raw methods on
}

// BaseContentSpaceCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type BaseContentSpaceCallerRaw struct {
	Contract *BaseContentSpaceCaller // Generic read-only contract binding to access the raw methods on
}

// BaseContentSpaceTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type BaseContentSpaceTransactorRaw struct {
	Contract *BaseContentSpaceTransactor // Generic write-only contract binding to access the raw methods on
}

// NewBaseContentSpace creates a new instance of BaseContentSpace, bound to a specific deployed contract.
func NewBaseContentSpace(address common.Address, backend bind.ContractBackend) (*BaseContentSpace, error) {
	contract, err := bindBaseContentSpace(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &BaseContentSpace{BaseContentSpaceCaller: BaseContentSpaceCaller{contract: contract}, BaseContentSpaceTransactor: BaseContentSpaceTransactor{contract: contract}, BaseContentSpaceFilterer: BaseContentSpaceFilterer{contract: contract}}, nil
}

// NewBaseContentSpaceCaller creates a new read-only instance of BaseContentSpace, bound to a specific deployed contract.
func NewBaseContentSpaceCaller(address common.Address, caller bind.ContractCaller) (*BaseContentSpaceCaller, error) {
	contract, err := bindBaseContentSpace(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &BaseContentSpaceCaller{contract: contract}, nil
}

// NewBaseContentSpaceTransactor creates a new write-only instance of BaseContentSpace, bound to a specific deployed contract.
func NewBaseContentSpaceTransactor(address common.Address, transactor bind.ContractTransactor) (*BaseContentSpaceTransactor, error) {
	contract, err := bindBaseContentSpace(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &BaseContentSpaceTransactor{contract: contract}, nil
}

// NewBaseContentSpaceFilterer creates a new log filterer instance of BaseContentSpace, bound to a specific deployed contract.
func NewBaseContentSpaceFilterer(address common.Address, filterer bind.ContractFilterer) (*BaseContentSpaceFilterer, error) {
	contract, err := bindBaseContentSpace(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &BaseContentSpaceFilterer{contract: contract}, nil
}

// bindBaseContentSpace binds a generic wrapper to an already deployed contract.
func bindBaseContentSpace(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(BaseContentSpaceABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BaseContentSpace *BaseContentSpaceRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BaseContentSpace.Contract.BaseContentSpaceCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BaseContentSpace *BaseContentSpaceRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.BaseContentSpaceTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BaseContentSpace *BaseContentSpaceRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.BaseContentSpaceTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BaseContentSpace *BaseContentSpaceCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BaseContentSpace.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BaseContentSpace *BaseContentSpaceTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BaseContentSpace *BaseContentSpaceTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.contract.Transact(opts, method, params...)
}

// CANACCESS is a free data retrieval call binding the contract method 0x97ac4fd2.
//
// Solidity: function CAN_ACCESS() constant returns(uint8)
func (_BaseContentSpace *BaseContentSpaceCaller) CANACCESS(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "CAN_ACCESS")
	return *ret0, err
}

// CANACCESS is a free data retrieval call binding the contract method 0x97ac4fd2.
//
// Solidity: function CAN_ACCESS() constant returns(uint8)
func (_BaseContentSpace *BaseContentSpaceSession) CANACCESS() (uint8, error) {
	return _BaseContentSpace.Contract.CANACCESS(&_BaseContentSpace.CallOpts)
}

// CANACCESS is a free data retrieval call binding the contract method 0x97ac4fd2.
//
// Solidity: function CAN_ACCESS() constant returns(uint8)
func (_BaseContentSpace *BaseContentSpaceCallerSession) CANACCESS() (uint8, error) {
	return _BaseContentSpace.Contract.CANACCESS(&_BaseContentSpace.CallOpts)
}

// CANEDIT is a free data retrieval call binding the contract method 0xef1d7dc2.
//
// Solidity: function CAN_EDIT() constant returns(uint8)
func (_BaseContentSpace *BaseContentSpaceCaller) CANEDIT(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "CAN_EDIT")
	return *ret0, err
}

// CANEDIT is a free data retrieval call binding the contract method 0xef1d7dc2.
//
// Solidity: function CAN_EDIT() constant returns(uint8)
func (_BaseContentSpace *BaseContentSpaceSession) CANEDIT() (uint8, error) {
	return _BaseContentSpace.Contract.CANEDIT(&_BaseContentSpace.CallOpts)
}

// CANEDIT is a free data retrieval call binding the contract method 0xef1d7dc2.
//
// Solidity: function CAN_EDIT() constant returns(uint8)
func (_BaseContentSpace *BaseContentSpaceCallerSession) CANEDIT() (uint8, error) {
	return _BaseContentSpace.Contract.CANEDIT(&_BaseContentSpace.CallOpts)
}

// CANSEE is a free data retrieval call binding the contract method 0x100508a2.
//
// Solidity: function CAN_SEE() constant returns(uint8)
func (_BaseContentSpace *BaseContentSpaceCaller) CANSEE(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "CAN_SEE")
	return *ret0, err
}

// CANSEE is a free data retrieval call binding the contract method 0x100508a2.
//
// Solidity: function CAN_SEE() constant returns(uint8)
func (_BaseContentSpace *BaseContentSpaceSession) CANSEE() (uint8, error) {
	return _BaseContentSpace.Contract.CANSEE(&_BaseContentSpace.CallOpts)
}

// CANSEE is a free data retrieval call binding the contract method 0x100508a2.
//
// Solidity: function CAN_SEE() constant returns(uint8)
func (_BaseContentSpace *BaseContentSpaceCallerSession) CANSEE() (uint8, error) {
	return _BaseContentSpace.Contract.CANSEE(&_BaseContentSpace.CallOpts)
}

// ActiveNodeAddresses is a free data retrieval call binding the contract method 0x52f82dd8.
//
// Solidity: function activeNodeAddresses(uint256 ) constant returns(address)
func (_BaseContentSpace *BaseContentSpaceCaller) ActiveNodeAddresses(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "activeNodeAddresses", arg0)
	return *ret0, err
}

// ActiveNodeAddresses is a free data retrieval call binding the contract method 0x52f82dd8.
//
// Solidity: function activeNodeAddresses(uint256 ) constant returns(address)
func (_BaseContentSpace *BaseContentSpaceSession) ActiveNodeAddresses(arg0 *big.Int) (common.Address, error) {
	return _BaseContentSpace.Contract.ActiveNodeAddresses(&_BaseContentSpace.CallOpts, arg0)
}

// ActiveNodeAddresses is a free data retrieval call binding the contract method 0x52f82dd8.
//
// Solidity: function activeNodeAddresses(uint256 ) constant returns(address)
func (_BaseContentSpace *BaseContentSpaceCallerSession) ActiveNodeAddresses(arg0 *big.Int) (common.Address, error) {
	return _BaseContentSpace.Contract.ActiveNodeAddresses(&_BaseContentSpace.CallOpts, arg0)
}

// ActiveNodeLocators is a free data retrieval call binding the contract method 0x5272ae17.
//
// Solidity: function activeNodeLocators(uint256 ) constant returns(bytes)
func (_BaseContentSpace *BaseContentSpaceCaller) ActiveNodeLocators(opts *bind.CallOpts, arg0 *big.Int) ([]byte, error) {
	var (
		ret0 = new([]byte)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "activeNodeLocators", arg0)
	return *ret0, err
}

// ActiveNodeLocators is a free data retrieval call binding the contract method 0x5272ae17.
//
// Solidity: function activeNodeLocators(uint256 ) constant returns(bytes)
func (_BaseContentSpace *BaseContentSpaceSession) ActiveNodeLocators(arg0 *big.Int) ([]byte, error) {
	return _BaseContentSpace.Contract.ActiveNodeLocators(&_BaseContentSpace.CallOpts, arg0)
}

// ActiveNodeLocators is a free data retrieval call binding the contract method 0x5272ae17.
//
// Solidity: function activeNodeLocators(uint256 ) constant returns(bytes)
func (_BaseContentSpace *BaseContentSpaceCallerSession) ActiveNodeLocators(arg0 *big.Int) ([]byte, error) {
	return _BaseContentSpace.Contract.ActiveNodeLocators(&_BaseContentSpace.CallOpts, arg0)
}

// AddressKMS is a free data retrieval call binding the contract method 0x32eaf21b.
//
// Solidity: function addressKMS() constant returns(address)
func (_BaseContentSpace *BaseContentSpaceCaller) AddressKMS(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "addressKMS")
	return *ret0, err
}

// AddressKMS is a free data retrieval call binding the contract method 0x32eaf21b.
//
// Solidity: function addressKMS() constant returns(address)
func (_BaseContentSpace *BaseContentSpaceSession) AddressKMS() (common.Address, error) {
	return _BaseContentSpace.Contract.AddressKMS(&_BaseContentSpace.CallOpts)
}

// AddressKMS is a free data retrieval call binding the contract method 0x32eaf21b.
//
// Solidity: function addressKMS() constant returns(address)
func (_BaseContentSpace *BaseContentSpaceCallerSession) AddressKMS() (common.Address, error) {
	return _BaseContentSpace.Contract.AddressKMS(&_BaseContentSpace.CallOpts)
}

// CanCommit is a free data retrieval call binding the contract method 0x6e375427.
//
// Solidity: function canCommit() constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceCaller) CanCommit(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "canCommit")
	return *ret0, err
}

// CanCommit is a free data retrieval call binding the contract method 0x6e375427.
//
// Solidity: function canCommit() constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceSession) CanCommit() (bool, error) {
	return _BaseContentSpace.Contract.CanCommit(&_BaseContentSpace.CallOpts)
}

// CanCommit is a free data retrieval call binding the contract method 0x6e375427.
//
// Solidity: function canCommit() constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceCallerSession) CanCommit() (bool, error) {
	return _BaseContentSpace.Contract.CanCommit(&_BaseContentSpace.CallOpts)
}

// CanConfirm is a free data retrieval call binding the contract method 0x14cfabb3.
//
// Solidity: function canConfirm() constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceCaller) CanConfirm(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "canConfirm")
	return *ret0, err
}

// CanConfirm is a free data retrieval call binding the contract method 0x14cfabb3.
//
// Solidity: function canConfirm() constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceSession) CanConfirm() (bool, error) {
	return _BaseContentSpace.Contract.CanConfirm(&_BaseContentSpace.CallOpts)
}

// CanConfirm is a free data retrieval call binding the contract method 0x14cfabb3.
//
// Solidity: function canConfirm() constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceCallerSession) CanConfirm() (bool, error) {
	return _BaseContentSpace.Contract.CanConfirm(&_BaseContentSpace.CallOpts)
}

// CanContribute is a free data retrieval call binding the contract method 0x0eaec2c5.
//
// Solidity: function canContribute(address _candidate) constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceCaller) CanContribute(opts *bind.CallOpts, _candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "canContribute", _candidate)
	return *ret0, err
}

// CanContribute is a free data retrieval call binding the contract method 0x0eaec2c5.
//
// Solidity: function canContribute(address _candidate) constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceSession) CanContribute(_candidate common.Address) (bool, error) {
	return _BaseContentSpace.Contract.CanContribute(&_BaseContentSpace.CallOpts, _candidate)
}

// CanContribute is a free data retrieval call binding the contract method 0x0eaec2c5.
//
// Solidity: function canContribute(address _candidate) constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceCallerSession) CanContribute(_candidate common.Address) (bool, error) {
	return _BaseContentSpace.Contract.CanContribute(&_BaseContentSpace.CallOpts, _candidate)
}

// CanEdit is a free data retrieval call binding the contract method 0x81beeb64.
//
// Solidity: function canEdit() constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceCaller) CanEdit(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "canEdit")
	return *ret0, err
}

// CanEdit is a free data retrieval call binding the contract method 0x81beeb64.
//
// Solidity: function canEdit() constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceSession) CanEdit() (bool, error) {
	return _BaseContentSpace.Contract.CanEdit(&_BaseContentSpace.CallOpts)
}

// CanEdit is a free data retrieval call binding the contract method 0x81beeb64.
//
// Solidity: function canEdit() constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceCallerSession) CanEdit() (bool, error) {
	return _BaseContentSpace.Contract.CanEdit(&_BaseContentSpace.CallOpts)
}

// CanNodePublish is a free data retrieval call binding the contract method 0x26683e14.
//
// Solidity: function canNodePublish(address candidate) constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceCaller) CanNodePublish(opts *bind.CallOpts, candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "canNodePublish", candidate)
	return *ret0, err
}

// CanNodePublish is a free data retrieval call binding the contract method 0x26683e14.
//
// Solidity: function canNodePublish(address candidate) constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceSession) CanNodePublish(candidate common.Address) (bool, error) {
	return _BaseContentSpace.Contract.CanNodePublish(&_BaseContentSpace.CallOpts, candidate)
}

// CanNodePublish is a free data retrieval call binding the contract method 0x26683e14.
//
// Solidity: function canNodePublish(address candidate) constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceCallerSession) CanNodePublish(candidate common.Address) (bool, error) {
	return _BaseContentSpace.Contract.CanNodePublish(&_BaseContentSpace.CallOpts, candidate)
}

// CanPublish is a free data retrieval call binding the contract method 0x9b55f901.
//
// Solidity: function canPublish(address _candidate) constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceCaller) CanPublish(opts *bind.CallOpts, _candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "canPublish", _candidate)
	return *ret0, err
}

// CanPublish is a free data retrieval call binding the contract method 0x9b55f901.
//
// Solidity: function canPublish(address _candidate) constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceSession) CanPublish(_candidate common.Address) (bool, error) {
	return _BaseContentSpace.Contract.CanPublish(&_BaseContentSpace.CallOpts, _candidate)
}

// CanPublish is a free data retrieval call binding the contract method 0x9b55f901.
//
// Solidity: function canPublish(address _candidate) constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceCallerSession) CanPublish(_candidate common.Address) (bool, error) {
	return _BaseContentSpace.Contract.CanPublish(&_BaseContentSpace.CallOpts, _candidate)
}

// CanReview is a free data retrieval call binding the contract method 0x29d00219.
//
// Solidity: function canReview(address ) constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceCaller) CanReview(opts *bind.CallOpts, arg0 common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "canReview", arg0)
	return *ret0, err
}

// CanReview is a free data retrieval call binding the contract method 0x29d00219.
//
// Solidity: function canReview(address ) constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceSession) CanReview(arg0 common.Address) (bool, error) {
	return _BaseContentSpace.Contract.CanReview(&_BaseContentSpace.CallOpts, arg0)
}

// CanReview is a free data retrieval call binding the contract method 0x29d00219.
//
// Solidity: function canReview(address ) constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceCallerSession) CanReview(arg0 common.Address) (bool, error) {
	return _BaseContentSpace.Contract.CanReview(&_BaseContentSpace.CallOpts, arg0)
}

// CheckKMS is a free data retrieval call binding the contract method 0x8d2a23db.
//
// Solidity: function checkKMS(string _kmsIdStr) constant returns(uint256)
func (_BaseContentSpace *BaseContentSpaceCaller) CheckKMS(opts *bind.CallOpts, _kmsIdStr string) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "checkKMS", _kmsIdStr)
	return *ret0, err
}

// CheckKMS is a free data retrieval call binding the contract method 0x8d2a23db.
//
// Solidity: function checkKMS(string _kmsIdStr) constant returns(uint256)
func (_BaseContentSpace *BaseContentSpaceSession) CheckKMS(_kmsIdStr string) (*big.Int, error) {
	return _BaseContentSpace.Contract.CheckKMS(&_BaseContentSpace.CallOpts, _kmsIdStr)
}

// CheckKMS is a free data retrieval call binding the contract method 0x8d2a23db.
//
// Solidity: function checkKMS(string _kmsIdStr) constant returns(uint256)
func (_BaseContentSpace *BaseContentSpaceCallerSession) CheckKMS(_kmsIdStr string) (*big.Int, error) {
	return _BaseContentSpace.Contract.CheckKMS(&_BaseContentSpace.CallOpts, _kmsIdStr)
}

// CheckKMSAddr is a free data retrieval call binding the contract method 0xd6be0f49.
//
// Solidity: function checkKMSAddr(address _kmsAddr) constant returns(uint256)
func (_BaseContentSpace *BaseContentSpaceCaller) CheckKMSAddr(opts *bind.CallOpts, _kmsAddr common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "checkKMSAddr", _kmsAddr)
	return *ret0, err
}

// CheckKMSAddr is a free data retrieval call binding the contract method 0xd6be0f49.
//
// Solidity: function checkKMSAddr(address _kmsAddr) constant returns(uint256)
func (_BaseContentSpace *BaseContentSpaceSession) CheckKMSAddr(_kmsAddr common.Address) (*big.Int, error) {
	return _BaseContentSpace.Contract.CheckKMSAddr(&_BaseContentSpace.CallOpts, _kmsAddr)
}

// CheckKMSAddr is a free data retrieval call binding the contract method 0xd6be0f49.
//
// Solidity: function checkKMSAddr(address _kmsAddr) constant returns(uint256)
func (_BaseContentSpace *BaseContentSpaceCallerSession) CheckKMSAddr(_kmsAddr common.Address) (*big.Int, error) {
	return _BaseContentSpace.Contract.CheckKMSAddr(&_BaseContentSpace.CallOpts, _kmsAddr)
}

// CommitPending is a free data retrieval call binding the contract method 0x375a6e7c.
//
// Solidity: function commitPending() constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceCaller) CommitPending(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "commitPending")
	return *ret0, err
}

// CommitPending is a free data retrieval call binding the contract method 0x375a6e7c.
//
// Solidity: function commitPending() constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceSession) CommitPending() (bool, error) {
	return _BaseContentSpace.Contract.CommitPending(&_BaseContentSpace.CallOpts)
}

// CommitPending is a free data retrieval call binding the contract method 0x375a6e7c.
//
// Solidity: function commitPending() constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceCallerSession) CommitPending() (bool, error) {
	return _BaseContentSpace.Contract.CommitPending(&_BaseContentSpace.CallOpts)
}

// ContentFactory is a free data retrieval call binding the contract method 0x904696a8.
//
// Solidity: function contentFactory() constant returns(address)
func (_BaseContentSpace *BaseContentSpaceCaller) ContentFactory(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "contentFactory")
	return *ret0, err
}

// ContentFactory is a free data retrieval call binding the contract method 0x904696a8.
//
// Solidity: function contentFactory() constant returns(address)
func (_BaseContentSpace *BaseContentSpaceSession) ContentFactory() (common.Address, error) {
	return _BaseContentSpace.Contract.ContentFactory(&_BaseContentSpace.CallOpts)
}

// ContentFactory is a free data retrieval call binding the contract method 0x904696a8.
//
// Solidity: function contentFactory() constant returns(address)
func (_BaseContentSpace *BaseContentSpaceCallerSession) ContentFactory() (common.Address, error) {
	return _BaseContentSpace.Contract.ContentFactory(&_BaseContentSpace.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseContentSpace *BaseContentSpaceCaller) ContentSpace(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "contentSpace")
	return *ret0, err
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseContentSpace *BaseContentSpaceSession) ContentSpace() (common.Address, error) {
	return _BaseContentSpace.Contract.ContentSpace(&_BaseContentSpace.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseContentSpace *BaseContentSpaceCallerSession) ContentSpace() (common.Address, error) {
	return _BaseContentSpace.Contract.ContentSpace(&_BaseContentSpace.CallOpts)
}

// ContentTypeContracts is a free data retrieval call binding the contract method 0x1cdbee5a.
//
// Solidity: function contentTypeContracts(address ) constant returns(address)
func (_BaseContentSpace *BaseContentSpaceCaller) ContentTypeContracts(opts *bind.CallOpts, arg0 common.Address) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "contentTypeContracts", arg0)
	return *ret0, err
}

// ContentTypeContracts is a free data retrieval call binding the contract method 0x1cdbee5a.
//
// Solidity: function contentTypeContracts(address ) constant returns(address)
func (_BaseContentSpace *BaseContentSpaceSession) ContentTypeContracts(arg0 common.Address) (common.Address, error) {
	return _BaseContentSpace.Contract.ContentTypeContracts(&_BaseContentSpace.CallOpts, arg0)
}

// ContentTypeContracts is a free data retrieval call binding the contract method 0x1cdbee5a.
//
// Solidity: function contentTypeContracts(address ) constant returns(address)
func (_BaseContentSpace *BaseContentSpaceCallerSession) ContentTypeContracts(arg0 common.Address) (common.Address, error) {
	return _BaseContentSpace.Contract.ContentTypeContracts(&_BaseContentSpace.CallOpts, arg0)
}

// ContentTypes is a free data retrieval call binding the contract method 0x991a3a7c.
//
// Solidity: function contentTypes(uint256 ) constant returns(address)
func (_BaseContentSpace *BaseContentSpaceCaller) ContentTypes(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "contentTypes", arg0)
	return *ret0, err
}

// ContentTypes is a free data retrieval call binding the contract method 0x991a3a7c.
//
// Solidity: function contentTypes(uint256 ) constant returns(address)
func (_BaseContentSpace *BaseContentSpaceSession) ContentTypes(arg0 *big.Int) (common.Address, error) {
	return _BaseContentSpace.Contract.ContentTypes(&_BaseContentSpace.CallOpts, arg0)
}

// ContentTypes is a free data retrieval call binding the contract method 0x991a3a7c.
//
// Solidity: function contentTypes(uint256 ) constant returns(address)
func (_BaseContentSpace *BaseContentSpaceCallerSession) ContentTypes(arg0 *big.Int) (common.Address, error) {
	return _BaseContentSpace.Contract.ContentTypes(&_BaseContentSpace.CallOpts, arg0)
}

// ContentTypesLength is a free data retrieval call binding the contract method 0xc65bcbe2.
//
// Solidity: function contentTypesLength() constant returns(uint256)
func (_BaseContentSpace *BaseContentSpaceCaller) ContentTypesLength(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "contentTypesLength")
	return *ret0, err
}

// ContentTypesLength is a free data retrieval call binding the contract method 0xc65bcbe2.
//
// Solidity: function contentTypesLength() constant returns(uint256)
func (_BaseContentSpace *BaseContentSpaceSession) ContentTypesLength() (*big.Int, error) {
	return _BaseContentSpace.Contract.ContentTypesLength(&_BaseContentSpace.CallOpts)
}

// ContentTypesLength is a free data retrieval call binding the contract method 0xc65bcbe2.
//
// Solidity: function contentTypesLength() constant returns(uint256)
func (_BaseContentSpace *BaseContentSpaceCallerSession) ContentTypesLength() (*big.Int, error) {
	return _BaseContentSpace.Contract.ContentTypesLength(&_BaseContentSpace.CallOpts)
}

// CountVersionHashes is a free data retrieval call binding the contract method 0x331b86c0.
//
// Solidity: function countVersionHashes() constant returns(uint256)
func (_BaseContentSpace *BaseContentSpaceCaller) CountVersionHashes(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "countVersionHashes")
	return *ret0, err
}

// CountVersionHashes is a free data retrieval call binding the contract method 0x331b86c0.
//
// Solidity: function countVersionHashes() constant returns(uint256)
func (_BaseContentSpace *BaseContentSpaceSession) CountVersionHashes() (*big.Int, error) {
	return _BaseContentSpace.Contract.CountVersionHashes(&_BaseContentSpace.CallOpts)
}

// CountVersionHashes is a free data retrieval call binding the contract method 0x331b86c0.
//
// Solidity: function countVersionHashes() constant returns(uint256)
func (_BaseContentSpace *BaseContentSpaceCallerSession) CountVersionHashes() (*big.Int, error) {
	return _BaseContentSpace.Contract.CountVersionHashes(&_BaseContentSpace.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseContentSpace *BaseContentSpaceCaller) Creator(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "creator")
	return *ret0, err
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseContentSpace *BaseContentSpaceSession) Creator() (common.Address, error) {
	return _BaseContentSpace.Contract.Creator(&_BaseContentSpace.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseContentSpace *BaseContentSpaceCallerSession) Creator() (common.Address, error) {
	return _BaseContentSpace.Contract.Creator(&_BaseContentSpace.CallOpts)
}

// Description is a free data retrieval call binding the contract method 0x7284e416.
//
// Solidity: function description() constant returns(string)
func (_BaseContentSpace *BaseContentSpaceCaller) Description(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "description")
	return *ret0, err
}

// Description is a free data retrieval call binding the contract method 0x7284e416.
//
// Solidity: function description() constant returns(string)
func (_BaseContentSpace *BaseContentSpaceSession) Description() (string, error) {
	return _BaseContentSpace.Contract.Description(&_BaseContentSpace.CallOpts)
}

// Description is a free data retrieval call binding the contract method 0x7284e416.
//
// Solidity: function description() constant returns(string)
func (_BaseContentSpace *BaseContentSpaceCallerSession) Description() (string, error) {
	return _BaseContentSpace.Contract.Description(&_BaseContentSpace.CallOpts)
}

// Factory is a free data retrieval call binding the contract method 0xc45a0155.
//
// Solidity: function factory() constant returns(address)
func (_BaseContentSpace *BaseContentSpaceCaller) Factory(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "factory")
	return *ret0, err
}

// Factory is a free data retrieval call binding the contract method 0xc45a0155.
//
// Solidity: function factory() constant returns(address)
func (_BaseContentSpace *BaseContentSpaceSession) Factory() (common.Address, error) {
	return _BaseContentSpace.Contract.Factory(&_BaseContentSpace.CallOpts)
}

// Factory is a free data retrieval call binding the contract method 0xc45a0155.
//
// Solidity: function factory() constant returns(address)
func (_BaseContentSpace *BaseContentSpaceCallerSession) Factory() (common.Address, error) {
	return _BaseContentSpace.Contract.Factory(&_BaseContentSpace.CallOpts)
}

// FindTypeByHash is a free data retrieval call binding the contract method 0x1f2caaec.
//
// Solidity: function findTypeByHash(bytes32 typeHash) constant returns(address)
func (_BaseContentSpace *BaseContentSpaceCaller) FindTypeByHash(opts *bind.CallOpts, typeHash [32]byte) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "findTypeByHash", typeHash)
	return *ret0, err
}

// FindTypeByHash is a free data retrieval call binding the contract method 0x1f2caaec.
//
// Solidity: function findTypeByHash(bytes32 typeHash) constant returns(address)
func (_BaseContentSpace *BaseContentSpaceSession) FindTypeByHash(typeHash [32]byte) (common.Address, error) {
	return _BaseContentSpace.Contract.FindTypeByHash(&_BaseContentSpace.CallOpts, typeHash)
}

// FindTypeByHash is a free data retrieval call binding the contract method 0x1f2caaec.
//
// Solidity: function findTypeByHash(bytes32 typeHash) constant returns(address)
func (_BaseContentSpace *BaseContentSpaceCallerSession) FindTypeByHash(typeHash [32]byte) (common.Address, error) {
	return _BaseContentSpace.Contract.FindTypeByHash(&_BaseContentSpace.CallOpts, typeHash)
}

// GetKMSID is a free data retrieval call binding the contract method 0x589aafc1.
//
// Solidity: function getKMSID(address _kmsAddr) constant returns(string)
func (_BaseContentSpace *BaseContentSpaceCaller) GetKMSID(opts *bind.CallOpts, _kmsAddr common.Address) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "getKMSID", _kmsAddr)
	return *ret0, err
}

// GetKMSID is a free data retrieval call binding the contract method 0x589aafc1.
//
// Solidity: function getKMSID(address _kmsAddr) constant returns(string)
func (_BaseContentSpace *BaseContentSpaceSession) GetKMSID(_kmsAddr common.Address) (string, error) {
	return _BaseContentSpace.Contract.GetKMSID(&_BaseContentSpace.CallOpts, _kmsAddr)
}

// GetKMSID is a free data retrieval call binding the contract method 0x589aafc1.
//
// Solidity: function getKMSID(address _kmsAddr) constant returns(string)
func (_BaseContentSpace *BaseContentSpaceCallerSession) GetKMSID(_kmsAddr common.Address) (string, error) {
	return _BaseContentSpace.Contract.GetKMSID(&_BaseContentSpace.CallOpts, _kmsAddr)
}

// GetKMSInfo is a free data retrieval call binding the contract method 0x268bfac4.
//
// Solidity: function getKMSInfo(string _kmsID, bytes prefix) constant returns(string, string)
func (_BaseContentSpace *BaseContentSpaceCaller) GetKMSInfo(opts *bind.CallOpts, _kmsID string, prefix []byte) (string, string, error) {
	var (
		ret0 = new(string)
		ret1 = new(string)
	)
	out := &[]interface{}{
		ret0,
		ret1,
	}
	err := _BaseContentSpace.contract.Call(opts, out, "getKMSInfo", _kmsID, prefix)
	return *ret0, *ret1, err
}

// GetKMSInfo is a free data retrieval call binding the contract method 0x268bfac4.
//
// Solidity: function getKMSInfo(string _kmsID, bytes prefix) constant returns(string, string)
func (_BaseContentSpace *BaseContentSpaceSession) GetKMSInfo(_kmsID string, prefix []byte) (string, string, error) {
	return _BaseContentSpace.Contract.GetKMSInfo(&_BaseContentSpace.CallOpts, _kmsID, prefix)
}

// GetKMSInfo is a free data retrieval call binding the contract method 0x268bfac4.
//
// Solidity: function getKMSInfo(string _kmsID, bytes prefix) constant returns(string, string)
func (_BaseContentSpace *BaseContentSpaceCallerSession) GetKMSInfo(_kmsID string, prefix []byte) (string, string, error) {
	return _BaseContentSpace.Contract.GetKMSInfo(&_BaseContentSpace.CallOpts, _kmsID, prefix)
}

// GetMeta is a free data retrieval call binding the contract method 0xac55c906.
//
// Solidity: function getMeta(bytes key) constant returns(bytes)
func (_BaseContentSpace *BaseContentSpaceCaller) GetMeta(opts *bind.CallOpts, key []byte) ([]byte, error) {
	var (
		ret0 = new([]byte)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "getMeta", key)
	return *ret0, err
}

// GetMeta is a free data retrieval call binding the contract method 0xac55c906.
//
// Solidity: function getMeta(bytes key) constant returns(bytes)
func (_BaseContentSpace *BaseContentSpaceSession) GetMeta(key []byte) ([]byte, error) {
	return _BaseContentSpace.Contract.GetMeta(&_BaseContentSpace.CallOpts, key)
}

// GetMeta is a free data retrieval call binding the contract method 0xac55c906.
//
// Solidity: function getMeta(bytes key) constant returns(bytes)
func (_BaseContentSpace *BaseContentSpaceCallerSession) GetMeta(key []byte) ([]byte, error) {
	return _BaseContentSpace.Contract.GetMeta(&_BaseContentSpace.CallOpts, key)
}

// GroupFactory is a free data retrieval call binding the contract method 0xb04b6caa.
//
// Solidity: function groupFactory() constant returns(address)
func (_BaseContentSpace *BaseContentSpaceCaller) GroupFactory(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "groupFactory")
	return *ret0, err
}

// GroupFactory is a free data retrieval call binding the contract method 0xb04b6caa.
//
// Solidity: function groupFactory() constant returns(address)
func (_BaseContentSpace *BaseContentSpaceSession) GroupFactory() (common.Address, error) {
	return _BaseContentSpace.Contract.GroupFactory(&_BaseContentSpace.CallOpts)
}

// GroupFactory is a free data retrieval call binding the contract method 0xb04b6caa.
//
// Solidity: function groupFactory() constant returns(address)
func (_BaseContentSpace *BaseContentSpaceCallerSession) GroupFactory() (common.Address, error) {
	return _BaseContentSpace.Contract.GroupFactory(&_BaseContentSpace.CallOpts)
}

// HasAccess is a free data retrieval call binding the contract method 0x95a078e8.
//
// Solidity: function hasAccess(address candidate) constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceCaller) HasAccess(opts *bind.CallOpts, candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "hasAccess", candidate)
	return *ret0, err
}

// HasAccess is a free data retrieval call binding the contract method 0x95a078e8.
//
// Solidity: function hasAccess(address candidate) constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceSession) HasAccess(candidate common.Address) (bool, error) {
	return _BaseContentSpace.Contract.HasAccess(&_BaseContentSpace.CallOpts, candidate)
}

// HasAccess is a free data retrieval call binding the contract method 0x95a078e8.
//
// Solidity: function hasAccess(address candidate) constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceCallerSession) HasAccess(candidate common.Address) (bool, error) {
	return _BaseContentSpace.Contract.HasAccess(&_BaseContentSpace.CallOpts, candidate)
}

// HasEditorRight is a free data retrieval call binding the contract method 0x67e5c3bf.
//
// Solidity: function hasEditorRight(address candidate) constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceCaller) HasEditorRight(opts *bind.CallOpts, candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "hasEditorRight", candidate)
	return *ret0, err
}

// HasEditorRight is a free data retrieval call binding the contract method 0x67e5c3bf.
//
// Solidity: function hasEditorRight(address candidate) constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceSession) HasEditorRight(candidate common.Address) (bool, error) {
	return _BaseContentSpace.Contract.HasEditorRight(&_BaseContentSpace.CallOpts, candidate)
}

// HasEditorRight is a free data retrieval call binding the contract method 0x67e5c3bf.
//
// Solidity: function hasEditorRight(address candidate) constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceCallerSession) HasEditorRight(candidate common.Address) (bool, error) {
	return _BaseContentSpace.Contract.HasEditorRight(&_BaseContentSpace.CallOpts, candidate)
}

// IndexCategory is a free data retrieval call binding the contract method 0x6380501f.
//
// Solidity: function indexCategory() constant returns(uint8)
func (_BaseContentSpace *BaseContentSpaceCaller) IndexCategory(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "indexCategory")
	return *ret0, err
}

// IndexCategory is a free data retrieval call binding the contract method 0x6380501f.
//
// Solidity: function indexCategory() constant returns(uint8)
func (_BaseContentSpace *BaseContentSpaceSession) IndexCategory() (uint8, error) {
	return _BaseContentSpace.Contract.IndexCategory(&_BaseContentSpace.CallOpts)
}

// IndexCategory is a free data retrieval call binding the contract method 0x6380501f.
//
// Solidity: function indexCategory() constant returns(uint8)
func (_BaseContentSpace *BaseContentSpaceCallerSession) IndexCategory() (uint8, error) {
	return _BaseContentSpace.Contract.IndexCategory(&_BaseContentSpace.CallOpts)
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(address _candidate) constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceCaller) IsAdmin(opts *bind.CallOpts, _candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "isAdmin", _candidate)
	return *ret0, err
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(address _candidate) constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceSession) IsAdmin(_candidate common.Address) (bool, error) {
	return _BaseContentSpace.Contract.IsAdmin(&_BaseContentSpace.CallOpts, _candidate)
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(address _candidate) constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceCallerSession) IsAdmin(_candidate common.Address) (bool, error) {
	return _BaseContentSpace.Contract.IsAdmin(&_BaseContentSpace.CallOpts, _candidate)
}

// LibraryFactory is a free data retrieval call binding the contract method 0x441c5aa3.
//
// Solidity: function libraryFactory() constant returns(address)
func (_BaseContentSpace *BaseContentSpaceCaller) LibraryFactory(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "libraryFactory")
	return *ret0, err
}

// LibraryFactory is a free data retrieval call binding the contract method 0x441c5aa3.
//
// Solidity: function libraryFactory() constant returns(address)
func (_BaseContentSpace *BaseContentSpaceSession) LibraryFactory() (common.Address, error) {
	return _BaseContentSpace.Contract.LibraryFactory(&_BaseContentSpace.CallOpts)
}

// LibraryFactory is a free data retrieval call binding the contract method 0x441c5aa3.
//
// Solidity: function libraryFactory() constant returns(address)
func (_BaseContentSpace *BaseContentSpaceCallerSession) LibraryFactory() (common.Address, error) {
	return _BaseContentSpace.Contract.LibraryFactory(&_BaseContentSpace.CallOpts)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() constant returns(string)
func (_BaseContentSpace *BaseContentSpaceCaller) Name(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "name")
	return *ret0, err
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() constant returns(string)
func (_BaseContentSpace *BaseContentSpaceSession) Name() (string, error) {
	return _BaseContentSpace.Contract.Name(&_BaseContentSpace.CallOpts)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() constant returns(string)
func (_BaseContentSpace *BaseContentSpaceCallerSession) Name() (string, error) {
	return _BaseContentSpace.Contract.Name(&_BaseContentSpace.CallOpts)
}

// NodeMapping is a free data retrieval call binding the contract method 0xfbd1b4ce.
//
// Solidity: function nodeMapping(address ) constant returns(address)
func (_BaseContentSpace *BaseContentSpaceCaller) NodeMapping(opts *bind.CallOpts, arg0 common.Address) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "nodeMapping", arg0)
	return *ret0, err
}

// NodeMapping is a free data retrieval call binding the contract method 0xfbd1b4ce.
//
// Solidity: function nodeMapping(address ) constant returns(address)
func (_BaseContentSpace *BaseContentSpaceSession) NodeMapping(arg0 common.Address) (common.Address, error) {
	return _BaseContentSpace.Contract.NodeMapping(&_BaseContentSpace.CallOpts, arg0)
}

// NodeMapping is a free data retrieval call binding the contract method 0xfbd1b4ce.
//
// Solidity: function nodeMapping(address ) constant returns(address)
func (_BaseContentSpace *BaseContentSpaceCallerSession) NodeMapping(arg0 common.Address) (common.Address, error) {
	return _BaseContentSpace.Contract.NodeMapping(&_BaseContentSpace.CallOpts, arg0)
}

// NumActiveNodes is a free data retrieval call binding the contract method 0x43f59ec7.
//
// Solidity: function numActiveNodes() constant returns(uint256)
func (_BaseContentSpace *BaseContentSpaceCaller) NumActiveNodes(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "numActiveNodes")
	return *ret0, err
}

// NumActiveNodes is a free data retrieval call binding the contract method 0x43f59ec7.
//
// Solidity: function numActiveNodes() constant returns(uint256)
func (_BaseContentSpace *BaseContentSpaceSession) NumActiveNodes() (*big.Int, error) {
	return _BaseContentSpace.Contract.NumActiveNodes(&_BaseContentSpace.CallOpts)
}

// NumActiveNodes is a free data retrieval call binding the contract method 0x43f59ec7.
//
// Solidity: function numActiveNodes() constant returns(uint256)
func (_BaseContentSpace *BaseContentSpaceCallerSession) NumActiveNodes() (*big.Int, error) {
	return _BaseContentSpace.Contract.NumActiveNodes(&_BaseContentSpace.CallOpts)
}

// NumPendingNodes is a free data retrieval call binding the contract method 0xf41a1587.
//
// Solidity: function numPendingNodes() constant returns(uint256)
func (_BaseContentSpace *BaseContentSpaceCaller) NumPendingNodes(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "numPendingNodes")
	return *ret0, err
}

// NumPendingNodes is a free data retrieval call binding the contract method 0xf41a1587.
//
// Solidity: function numPendingNodes() constant returns(uint256)
func (_BaseContentSpace *BaseContentSpaceSession) NumPendingNodes() (*big.Int, error) {
	return _BaseContentSpace.Contract.NumPendingNodes(&_BaseContentSpace.CallOpts)
}

// NumPendingNodes is a free data retrieval call binding the contract method 0xf41a1587.
//
// Solidity: function numPendingNodes() constant returns(uint256)
func (_BaseContentSpace *BaseContentSpaceCallerSession) NumPendingNodes() (*big.Int, error) {
	return _BaseContentSpace.Contract.NumPendingNodes(&_BaseContentSpace.CallOpts)
}

// ObjectHash is a free data retrieval call binding the contract method 0xe02dd9c2.
//
// Solidity: function objectHash() constant returns(string)
func (_BaseContentSpace *BaseContentSpaceCaller) ObjectHash(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "objectHash")
	return *ret0, err
}

// ObjectHash is a free data retrieval call binding the contract method 0xe02dd9c2.
//
// Solidity: function objectHash() constant returns(string)
func (_BaseContentSpace *BaseContentSpaceSession) ObjectHash() (string, error) {
	return _BaseContentSpace.Contract.ObjectHash(&_BaseContentSpace.CallOpts)
}

// ObjectHash is a free data retrieval call binding the contract method 0xe02dd9c2.
//
// Solidity: function objectHash() constant returns(string)
func (_BaseContentSpace *BaseContentSpaceCallerSession) ObjectHash() (string, error) {
	return _BaseContentSpace.Contract.ObjectHash(&_BaseContentSpace.CallOpts)
}

// ObjectTimestamp is a free data retrieval call binding the contract method 0x40b87a26.
//
// Solidity: function objectTimestamp() constant returns(uint256)
func (_BaseContentSpace *BaseContentSpaceCaller) ObjectTimestamp(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "objectTimestamp")
	return *ret0, err
}

// ObjectTimestamp is a free data retrieval call binding the contract method 0x40b87a26.
//
// Solidity: function objectTimestamp() constant returns(uint256)
func (_BaseContentSpace *BaseContentSpaceSession) ObjectTimestamp() (*big.Int, error) {
	return _BaseContentSpace.Contract.ObjectTimestamp(&_BaseContentSpace.CallOpts)
}

// ObjectTimestamp is a free data retrieval call binding the contract method 0x40b87a26.
//
// Solidity: function objectTimestamp() constant returns(uint256)
func (_BaseContentSpace *BaseContentSpaceCallerSession) ObjectTimestamp() (*big.Int, error) {
	return _BaseContentSpace.Contract.ObjectTimestamp(&_BaseContentSpace.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseContentSpace *BaseContentSpaceCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseContentSpace *BaseContentSpaceSession) Owner() (common.Address, error) {
	return _BaseContentSpace.Contract.Owner(&_BaseContentSpace.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseContentSpace *BaseContentSpaceCallerSession) Owner() (common.Address, error) {
	return _BaseContentSpace.Contract.Owner(&_BaseContentSpace.CallOpts)
}

// ParentAddress is a free data retrieval call binding the contract method 0x00821de3.
//
// Solidity: function parentAddress() constant returns(address)
func (_BaseContentSpace *BaseContentSpaceCaller) ParentAddress(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "parentAddress")
	return *ret0, err
}

// ParentAddress is a free data retrieval call binding the contract method 0x00821de3.
//
// Solidity: function parentAddress() constant returns(address)
func (_BaseContentSpace *BaseContentSpaceSession) ParentAddress() (common.Address, error) {
	return _BaseContentSpace.Contract.ParentAddress(&_BaseContentSpace.CallOpts)
}

// ParentAddress is a free data retrieval call binding the contract method 0x00821de3.
//
// Solidity: function parentAddress() constant returns(address)
func (_BaseContentSpace *BaseContentSpaceCallerSession) ParentAddress() (common.Address, error) {
	return _BaseContentSpace.Contract.ParentAddress(&_BaseContentSpace.CallOpts)
}

// PendingHash is a free data retrieval call binding the contract method 0x628449fd.
//
// Solidity: function pendingHash() constant returns(string)
func (_BaseContentSpace *BaseContentSpaceCaller) PendingHash(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "pendingHash")
	return *ret0, err
}

// PendingHash is a free data retrieval call binding the contract method 0x628449fd.
//
// Solidity: function pendingHash() constant returns(string)
func (_BaseContentSpace *BaseContentSpaceSession) PendingHash() (string, error) {
	return _BaseContentSpace.Contract.PendingHash(&_BaseContentSpace.CallOpts)
}

// PendingHash is a free data retrieval call binding the contract method 0x628449fd.
//
// Solidity: function pendingHash() constant returns(string)
func (_BaseContentSpace *BaseContentSpaceCallerSession) PendingHash() (string, error) {
	return _BaseContentSpace.Contract.PendingHash(&_BaseContentSpace.CallOpts)
}

// PendingNodeAddresses is a free data retrieval call binding the contract method 0x6be9514c.
//
// Solidity: function pendingNodeAddresses(uint256 ) constant returns(address)
func (_BaseContentSpace *BaseContentSpaceCaller) PendingNodeAddresses(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "pendingNodeAddresses", arg0)
	return *ret0, err
}

// PendingNodeAddresses is a free data retrieval call binding the contract method 0x6be9514c.
//
// Solidity: function pendingNodeAddresses(uint256 ) constant returns(address)
func (_BaseContentSpace *BaseContentSpaceSession) PendingNodeAddresses(arg0 *big.Int) (common.Address, error) {
	return _BaseContentSpace.Contract.PendingNodeAddresses(&_BaseContentSpace.CallOpts, arg0)
}

// PendingNodeAddresses is a free data retrieval call binding the contract method 0x6be9514c.
//
// Solidity: function pendingNodeAddresses(uint256 ) constant returns(address)
func (_BaseContentSpace *BaseContentSpaceCallerSession) PendingNodeAddresses(arg0 *big.Int) (common.Address, error) {
	return _BaseContentSpace.Contract.PendingNodeAddresses(&_BaseContentSpace.CallOpts, arg0)
}

// PendingNodeLocators is a free data retrieval call binding the contract method 0x69e30ff8.
//
// Solidity: function pendingNodeLocators(uint256 ) constant returns(bytes)
func (_BaseContentSpace *BaseContentSpaceCaller) PendingNodeLocators(opts *bind.CallOpts, arg0 *big.Int) ([]byte, error) {
	var (
		ret0 = new([]byte)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "pendingNodeLocators", arg0)
	return *ret0, err
}

// PendingNodeLocators is a free data retrieval call binding the contract method 0x69e30ff8.
//
// Solidity: function pendingNodeLocators(uint256 ) constant returns(bytes)
func (_BaseContentSpace *BaseContentSpaceSession) PendingNodeLocators(arg0 *big.Int) ([]byte, error) {
	return _BaseContentSpace.Contract.PendingNodeLocators(&_BaseContentSpace.CallOpts, arg0)
}

// PendingNodeLocators is a free data retrieval call binding the contract method 0x69e30ff8.
//
// Solidity: function pendingNodeLocators(uint256 ) constant returns(bytes)
func (_BaseContentSpace *BaseContentSpaceCallerSession) PendingNodeLocators(arg0 *big.Int) ([]byte, error) {
	return _BaseContentSpace.Contract.PendingNodeLocators(&_BaseContentSpace.CallOpts, arg0)
}

// RequiresReview is a free data retrieval call binding the contract method 0x3dd71d99.
//
// Solidity: function requiresReview() constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceCaller) RequiresReview(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "requiresReview")
	return *ret0, err
}

// RequiresReview is a free data retrieval call binding the contract method 0x3dd71d99.
//
// Solidity: function requiresReview() constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceSession) RequiresReview() (bool, error) {
	return _BaseContentSpace.Contract.RequiresReview(&_BaseContentSpace.CallOpts)
}

// RequiresReview is a free data retrieval call binding the contract method 0x3dd71d99.
//
// Solidity: function requiresReview() constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceCallerSession) RequiresReview() (bool, error) {
	return _BaseContentSpace.Contract.RequiresReview(&_BaseContentSpace.CallOpts)
}

// UserWallets is a free data retrieval call binding the contract method 0x63e6ffdd.
//
// Solidity: function userWallets(address ) constant returns(address)
func (_BaseContentSpace *BaseContentSpaceCaller) UserWallets(opts *bind.CallOpts, arg0 common.Address) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "userWallets", arg0)
	return *ret0, err
}

// UserWallets is a free data retrieval call binding the contract method 0x63e6ffdd.
//
// Solidity: function userWallets(address ) constant returns(address)
func (_BaseContentSpace *BaseContentSpaceSession) UserWallets(arg0 common.Address) (common.Address, error) {
	return _BaseContentSpace.Contract.UserWallets(&_BaseContentSpace.CallOpts, arg0)
}

// UserWallets is a free data retrieval call binding the contract method 0x63e6ffdd.
//
// Solidity: function userWallets(address ) constant returns(address)
func (_BaseContentSpace *BaseContentSpaceCallerSession) UserWallets(arg0 common.Address) (common.Address, error) {
	return _BaseContentSpace.Contract.UserWallets(&_BaseContentSpace.CallOpts, arg0)
}

// ValidType is a free data retrieval call binding the contract method 0x29dedde5.
//
// Solidity: function validType(address content_type) constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceCaller) ValidType(opts *bind.CallOpts, content_type common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "validType", content_type)
	return *ret0, err
}

// ValidType is a free data retrieval call binding the contract method 0x29dedde5.
//
// Solidity: function validType(address content_type) constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceSession) ValidType(content_type common.Address) (bool, error) {
	return _BaseContentSpace.Contract.ValidType(&_BaseContentSpace.CallOpts, content_type)
}

// ValidType is a free data retrieval call binding the contract method 0x29dedde5.
//
// Solidity: function validType(address content_type) constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceCallerSession) ValidType(content_type common.Address) (bool, error) {
	return _BaseContentSpace.Contract.ValidType(&_BaseContentSpace.CallOpts, content_type)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseContentSpace *BaseContentSpaceCaller) Version(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseContentSpace *BaseContentSpaceSession) Version() ([32]byte, error) {
	return _BaseContentSpace.Contract.Version(&_BaseContentSpace.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseContentSpace *BaseContentSpaceCallerSession) Version() ([32]byte, error) {
	return _BaseContentSpace.Contract.Version(&_BaseContentSpace.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseContentSpace *BaseContentSpaceCaller) VersionAPI(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "versionAPI")
	return *ret0, err
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseContentSpace *BaseContentSpaceSession) VersionAPI() ([32]byte, error) {
	return _BaseContentSpace.Contract.VersionAPI(&_BaseContentSpace.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseContentSpace *BaseContentSpaceCallerSession) VersionAPI() ([32]byte, error) {
	return _BaseContentSpace.Contract.VersionAPI(&_BaseContentSpace.CallOpts)
}

// VersionHashes is a free data retrieval call binding the contract method 0x7ca8f618.
//
// Solidity: function versionHashes(uint256 ) constant returns(string)
func (_BaseContentSpace *BaseContentSpaceCaller) VersionHashes(opts *bind.CallOpts, arg0 *big.Int) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "versionHashes", arg0)
	return *ret0, err
}

// VersionHashes is a free data retrieval call binding the contract method 0x7ca8f618.
//
// Solidity: function versionHashes(uint256 ) constant returns(string)
func (_BaseContentSpace *BaseContentSpaceSession) VersionHashes(arg0 *big.Int) (string, error) {
	return _BaseContentSpace.Contract.VersionHashes(&_BaseContentSpace.CallOpts, arg0)
}

// VersionHashes is a free data retrieval call binding the contract method 0x7ca8f618.
//
// Solidity: function versionHashes(uint256 ) constant returns(string)
func (_BaseContentSpace *BaseContentSpaceCallerSession) VersionHashes(arg0 *big.Int) (string, error) {
	return _BaseContentSpace.Contract.VersionHashes(&_BaseContentSpace.CallOpts, arg0)
}

// VersionTimestamp is a free data retrieval call binding the contract method 0x7886f747.
//
// Solidity: function versionTimestamp(uint256 ) constant returns(uint256)
func (_BaseContentSpace *BaseContentSpaceCaller) VersionTimestamp(opts *bind.CallOpts, arg0 *big.Int) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "versionTimestamp", arg0)
	return *ret0, err
}

// VersionTimestamp is a free data retrieval call binding the contract method 0x7886f747.
//
// Solidity: function versionTimestamp(uint256 ) constant returns(uint256)
func (_BaseContentSpace *BaseContentSpaceSession) VersionTimestamp(arg0 *big.Int) (*big.Int, error) {
	return _BaseContentSpace.Contract.VersionTimestamp(&_BaseContentSpace.CallOpts, arg0)
}

// VersionTimestamp is a free data retrieval call binding the contract method 0x7886f747.
//
// Solidity: function versionTimestamp(uint256 ) constant returns(uint256)
func (_BaseContentSpace *BaseContentSpaceCallerSession) VersionTimestamp(arg0 *big.Int) (*big.Int, error) {
	return _BaseContentSpace.Contract.VersionTimestamp(&_BaseContentSpace.CallOpts, arg0)
}

// Visibility is a free data retrieval call binding the contract method 0x29adec14.
//
// Solidity: function visibility() constant returns(uint8)
func (_BaseContentSpace *BaseContentSpaceCaller) Visibility(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "visibility")
	return *ret0, err
}

// Visibility is a free data retrieval call binding the contract method 0x29adec14.
//
// Solidity: function visibility() constant returns(uint8)
func (_BaseContentSpace *BaseContentSpaceSession) Visibility() (uint8, error) {
	return _BaseContentSpace.Contract.Visibility(&_BaseContentSpace.CallOpts)
}

// Visibility is a free data retrieval call binding the contract method 0x29adec14.
//
// Solidity: function visibility() constant returns(uint8)
func (_BaseContentSpace *BaseContentSpaceCallerSession) Visibility() (uint8, error) {
	return _BaseContentSpace.Contract.Visibility(&_BaseContentSpace.CallOpts)
}

// WalletFactory is a free data retrieval call binding the contract method 0xc5c03699.
//
// Solidity: function walletFactory() constant returns(address)
func (_BaseContentSpace *BaseContentSpaceCaller) WalletFactory(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "walletFactory")
	return *ret0, err
}

// WalletFactory is a free data retrieval call binding the contract method 0xc5c03699.
//
// Solidity: function walletFactory() constant returns(address)
func (_BaseContentSpace *BaseContentSpaceSession) WalletFactory() (common.Address, error) {
	return _BaseContentSpace.Contract.WalletFactory(&_BaseContentSpace.CallOpts)
}

// WalletFactory is a free data retrieval call binding the contract method 0xc5c03699.
//
// Solidity: function walletFactory() constant returns(address)
func (_BaseContentSpace *BaseContentSpaceCallerSession) WalletFactory() (common.Address, error) {
	return _BaseContentSpace.Contract.WalletFactory(&_BaseContentSpace.CallOpts)
}

// WhitelistedType is a free data retrieval call binding the contract method 0x9cb121ba.
//
// Solidity: function whitelistedType(address content_type) constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceCaller) WhitelistedType(opts *bind.CallOpts, content_type common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseContentSpace.contract.Call(opts, out, "whitelistedType", content_type)
	return *ret0, err
}

// WhitelistedType is a free data retrieval call binding the contract method 0x9cb121ba.
//
// Solidity: function whitelistedType(address content_type) constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceSession) WhitelistedType(content_type common.Address) (bool, error) {
	return _BaseContentSpace.Contract.WhitelistedType(&_BaseContentSpace.CallOpts, content_type)
}

// WhitelistedType is a free data retrieval call binding the contract method 0x9cb121ba.
//
// Solidity: function whitelistedType(address content_type) constant returns(bool)
func (_BaseContentSpace *BaseContentSpaceCallerSession) WhitelistedType(content_type common.Address) (bool, error) {
	return _BaseContentSpace.Contract.WhitelistedType(&_BaseContentSpace.CallOpts, content_type)
}

// AccessRequestV3 is a paid mutator transaction binding the contract method 0x1bf7a912.
//
// Solidity: function accessRequestV3(bytes32[] , address[] ) returns(bool)
func (_BaseContentSpace *BaseContentSpaceTransactor) AccessRequestV3(opts *bind.TransactOpts, arg0 [][32]byte, arg1 []common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "accessRequestV3", arg0, arg1)
}

// AccessRequestV3 is a paid mutator transaction binding the contract method 0x1bf7a912.
//
// Solidity: function accessRequestV3(bytes32[] , address[] ) returns(bool)
func (_BaseContentSpace *BaseContentSpaceSession) AccessRequestV3(arg0 [][32]byte, arg1 []common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.AccessRequestV3(&_BaseContentSpace.TransactOpts, arg0, arg1)
}

// AccessRequestV3 is a paid mutator transaction binding the contract method 0x1bf7a912.
//
// Solidity: function accessRequestV3(bytes32[] , address[] ) returns(bool)
func (_BaseContentSpace *BaseContentSpaceTransactorSession) AccessRequestV3(arg0 [][32]byte, arg1 []common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.AccessRequestV3(&_BaseContentSpace.TransactOpts, arg0, arg1)
}

// AddContentType is a paid mutator transaction binding the contract method 0x0f58a786.
//
// Solidity: function addContentType(address content_type, address content_contract) returns()
func (_BaseContentSpace *BaseContentSpaceTransactor) AddContentType(opts *bind.TransactOpts, content_type common.Address, content_contract common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "addContentType", content_type, content_contract)
}

// AddContentType is a paid mutator transaction binding the contract method 0x0f58a786.
//
// Solidity: function addContentType(address content_type, address content_contract) returns()
func (_BaseContentSpace *BaseContentSpaceSession) AddContentType(content_type common.Address, content_contract common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.AddContentType(&_BaseContentSpace.TransactOpts, content_type, content_contract)
}

// AddContentType is a paid mutator transaction binding the contract method 0x0f58a786.
//
// Solidity: function addContentType(address content_type, address content_contract) returns()
func (_BaseContentSpace *BaseContentSpaceTransactorSession) AddContentType(content_type common.Address, content_contract common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.AddContentType(&_BaseContentSpace.TransactOpts, content_type, content_contract)
}

// AddKMSLocator is a paid mutator transaction binding the contract method 0x653a92f6.
//
// Solidity: function addKMSLocator(string _kmsID, bytes _locator) returns(bool)
func (_BaseContentSpace *BaseContentSpaceTransactor) AddKMSLocator(opts *bind.TransactOpts, _kmsID string, _locator []byte) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "addKMSLocator", _kmsID, _locator)
}

// AddKMSLocator is a paid mutator transaction binding the contract method 0x653a92f6.
//
// Solidity: function addKMSLocator(string _kmsID, bytes _locator) returns(bool)
func (_BaseContentSpace *BaseContentSpaceSession) AddKMSLocator(_kmsID string, _locator []byte) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.AddKMSLocator(&_BaseContentSpace.TransactOpts, _kmsID, _locator)
}

// AddKMSLocator is a paid mutator transaction binding the contract method 0x653a92f6.
//
// Solidity: function addKMSLocator(string _kmsID, bytes _locator) returns(bool)
func (_BaseContentSpace *BaseContentSpaceTransactorSession) AddKMSLocator(_kmsID string, _locator []byte) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.AddKMSLocator(&_BaseContentSpace.TransactOpts, _kmsID, _locator)
}

// AddNode is a paid mutator transaction binding the contract method 0x64f0f050.
//
// Solidity: function addNode(address _nodeAddr, bytes _locator) returns()
func (_BaseContentSpace *BaseContentSpaceTransactor) AddNode(opts *bind.TransactOpts, _nodeAddr common.Address, _locator []byte) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "addNode", _nodeAddr, _locator)
}

// AddNode is a paid mutator transaction binding the contract method 0x64f0f050.
//
// Solidity: function addNode(address _nodeAddr, bytes _locator) returns()
func (_BaseContentSpace *BaseContentSpaceSession) AddNode(_nodeAddr common.Address, _locator []byte) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.AddNode(&_BaseContentSpace.TransactOpts, _nodeAddr, _locator)
}

// AddNode is a paid mutator transaction binding the contract method 0x64f0f050.
//
// Solidity: function addNode(address _nodeAddr, bytes _locator) returns()
func (_BaseContentSpace *BaseContentSpaceTransactorSession) AddNode(_nodeAddr common.Address, _locator []byte) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.AddNode(&_BaseContentSpace.TransactOpts, _nodeAddr, _locator)
}

// ApproveNode is a paid mutator transaction binding the contract method 0xdd4c97a0.
//
// Solidity: function approveNode(address _nodeAddr) returns()
func (_BaseContentSpace *BaseContentSpaceTransactor) ApproveNode(opts *bind.TransactOpts, _nodeAddr common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "approveNode", _nodeAddr)
}

// ApproveNode is a paid mutator transaction binding the contract method 0xdd4c97a0.
//
// Solidity: function approveNode(address _nodeAddr) returns()
func (_BaseContentSpace *BaseContentSpaceSession) ApproveNode(_nodeAddr common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.ApproveNode(&_BaseContentSpace.TransactOpts, _nodeAddr)
}

// ApproveNode is a paid mutator transaction binding the contract method 0xdd4c97a0.
//
// Solidity: function approveNode(address _nodeAddr) returns()
func (_BaseContentSpace *BaseContentSpaceTransactorSession) ApproveNode(_nodeAddr common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.ApproveNode(&_BaseContentSpace.TransactOpts, _nodeAddr)
}

// ClearPending is a paid mutator transaction binding the contract method 0x5f6a1301.
//
// Solidity: function clearPending() returns()
func (_BaseContentSpace *BaseContentSpaceTransactor) ClearPending(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "clearPending")
}

// ClearPending is a paid mutator transaction binding the contract method 0x5f6a1301.
//
// Solidity: function clearPending() returns()
func (_BaseContentSpace *BaseContentSpaceSession) ClearPending() (*types.Transaction, error) {
	return _BaseContentSpace.Contract.ClearPending(&_BaseContentSpace.TransactOpts)
}

// ClearPending is a paid mutator transaction binding the contract method 0x5f6a1301.
//
// Solidity: function clearPending() returns()
func (_BaseContentSpace *BaseContentSpaceTransactorSession) ClearPending() (*types.Transaction, error) {
	return _BaseContentSpace.Contract.ClearPending(&_BaseContentSpace.TransactOpts)
}

// Commit is a paid mutator transaction binding the contract method 0x9867db74.
//
// Solidity: function commit(string _objectHash) returns()
func (_BaseContentSpace *BaseContentSpaceTransactor) Commit(opts *bind.TransactOpts, _objectHash string) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "commit", _objectHash)
}

// Commit is a paid mutator transaction binding the contract method 0x9867db74.
//
// Solidity: function commit(string _objectHash) returns()
func (_BaseContentSpace *BaseContentSpaceSession) Commit(_objectHash string) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.Commit(&_BaseContentSpace.TransactOpts, _objectHash)
}

// Commit is a paid mutator transaction binding the contract method 0x9867db74.
//
// Solidity: function commit(string _objectHash) returns()
func (_BaseContentSpace *BaseContentSpaceTransactorSession) Commit(_objectHash string) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.Commit(&_BaseContentSpace.TransactOpts, _objectHash)
}

// ConfirmCommit is a paid mutator transaction binding the contract method 0x446e8826.
//
// Solidity: function confirmCommit() returns(bool)
func (_BaseContentSpace *BaseContentSpaceTransactor) ConfirmCommit(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "confirmCommit")
}

// ConfirmCommit is a paid mutator transaction binding the contract method 0x446e8826.
//
// Solidity: function confirmCommit() returns(bool)
func (_BaseContentSpace *BaseContentSpaceSession) ConfirmCommit() (*types.Transaction, error) {
	return _BaseContentSpace.Contract.ConfirmCommit(&_BaseContentSpace.TransactOpts)
}

// ConfirmCommit is a paid mutator transaction binding the contract method 0x446e8826.
//
// Solidity: function confirmCommit() returns(bool)
func (_BaseContentSpace *BaseContentSpaceTransactorSession) ConfirmCommit() (*types.Transaction, error) {
	return _BaseContentSpace.Contract.ConfirmCommit(&_BaseContentSpace.TransactOpts)
}

// CreateAccessWallet is a paid mutator transaction binding the contract method 0x7708bc41.
//
// Solidity: function createAccessWallet() returns(address)
func (_BaseContentSpace *BaseContentSpaceTransactor) CreateAccessWallet(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "createAccessWallet")
}

// CreateAccessWallet is a paid mutator transaction binding the contract method 0x7708bc41.
//
// Solidity: function createAccessWallet() returns(address)
func (_BaseContentSpace *BaseContentSpaceSession) CreateAccessWallet() (*types.Transaction, error) {
	return _BaseContentSpace.Contract.CreateAccessWallet(&_BaseContentSpace.TransactOpts)
}

// CreateAccessWallet is a paid mutator transaction binding the contract method 0x7708bc41.
//
// Solidity: function createAccessWallet() returns(address)
func (_BaseContentSpace *BaseContentSpaceTransactorSession) CreateAccessWallet() (*types.Transaction, error) {
	return _BaseContentSpace.Contract.CreateAccessWallet(&_BaseContentSpace.TransactOpts)
}

// CreateContent is a paid mutator transaction binding the contract method 0xbf4e088f.
//
// Solidity: function createContent(address lib, address content_type) returns(address)
func (_BaseContentSpace *BaseContentSpaceTransactor) CreateContent(opts *bind.TransactOpts, lib common.Address, content_type common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "createContent", lib, content_type)
}

// CreateContent is a paid mutator transaction binding the contract method 0xbf4e088f.
//
// Solidity: function createContent(address lib, address content_type) returns(address)
func (_BaseContentSpace *BaseContentSpaceSession) CreateContent(lib common.Address, content_type common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.CreateContent(&_BaseContentSpace.TransactOpts, lib, content_type)
}

// CreateContent is a paid mutator transaction binding the contract method 0xbf4e088f.
//
// Solidity: function createContent(address lib, address content_type) returns(address)
func (_BaseContentSpace *BaseContentSpaceTransactorSession) CreateContent(lib common.Address, content_type common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.CreateContent(&_BaseContentSpace.TransactOpts, lib, content_type)
}

// CreateContentType is a paid mutator transaction binding the contract method 0xb8cfaf05.
//
// Solidity: function createContentType() returns(address)
func (_BaseContentSpace *BaseContentSpaceTransactor) CreateContentType(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "createContentType")
}

// CreateContentType is a paid mutator transaction binding the contract method 0xb8cfaf05.
//
// Solidity: function createContentType() returns(address)
func (_BaseContentSpace *BaseContentSpaceSession) CreateContentType() (*types.Transaction, error) {
	return _BaseContentSpace.Contract.CreateContentType(&_BaseContentSpace.TransactOpts)
}

// CreateContentType is a paid mutator transaction binding the contract method 0xb8cfaf05.
//
// Solidity: function createContentType() returns(address)
func (_BaseContentSpace *BaseContentSpaceTransactorSession) CreateContentType() (*types.Transaction, error) {
	return _BaseContentSpace.Contract.CreateContentType(&_BaseContentSpace.TransactOpts)
}

// CreateGroup is a paid mutator transaction binding the contract method 0x575185ed.
//
// Solidity: function createGroup() returns(address)
func (_BaseContentSpace *BaseContentSpaceTransactor) CreateGroup(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "createGroup")
}

// CreateGroup is a paid mutator transaction binding the contract method 0x575185ed.
//
// Solidity: function createGroup() returns(address)
func (_BaseContentSpace *BaseContentSpaceSession) CreateGroup() (*types.Transaction, error) {
	return _BaseContentSpace.Contract.CreateGroup(&_BaseContentSpace.TransactOpts)
}

// CreateGroup is a paid mutator transaction binding the contract method 0x575185ed.
//
// Solidity: function createGroup() returns(address)
func (_BaseContentSpace *BaseContentSpaceTransactorSession) CreateGroup() (*types.Transaction, error) {
	return _BaseContentSpace.Contract.CreateGroup(&_BaseContentSpace.TransactOpts)
}

// CreateLibrary is a paid mutator transaction binding the contract method 0x40b89f06.
//
// Solidity: function createLibrary(address address_KMS) returns(address)
func (_BaseContentSpace *BaseContentSpaceTransactor) CreateLibrary(opts *bind.TransactOpts, address_KMS common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "createLibrary", address_KMS)
}

// CreateLibrary is a paid mutator transaction binding the contract method 0x40b89f06.
//
// Solidity: function createLibrary(address address_KMS) returns(address)
func (_BaseContentSpace *BaseContentSpaceSession) CreateLibrary(address_KMS common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.CreateLibrary(&_BaseContentSpace.TransactOpts, address_KMS)
}

// CreateLibrary is a paid mutator transaction binding the contract method 0x40b89f06.
//
// Solidity: function createLibrary(address address_KMS) returns(address)
func (_BaseContentSpace *BaseContentSpaceTransactorSession) CreateLibrary(address_KMS common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.CreateLibrary(&_BaseContentSpace.TransactOpts, address_KMS)
}

// CreateUserWallet is a paid mutator transaction binding the contract method 0xe7cf0c66.
//
// Solidity: function createUserWallet(address _user) returns(address)
func (_BaseContentSpace *BaseContentSpaceTransactor) CreateUserWallet(opts *bind.TransactOpts, _user common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "createUserWallet", _user)
}

// CreateUserWallet is a paid mutator transaction binding the contract method 0xe7cf0c66.
//
// Solidity: function createUserWallet(address _user) returns(address)
func (_BaseContentSpace *BaseContentSpaceSession) CreateUserWallet(_user common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.CreateUserWallet(&_BaseContentSpace.TransactOpts, _user)
}

// CreateUserWallet is a paid mutator transaction binding the contract method 0xe7cf0c66.
//
// Solidity: function createUserWallet(address _user) returns(address)
func (_BaseContentSpace *BaseContentSpaceTransactorSession) CreateUserWallet(_user common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.CreateUserWallet(&_BaseContentSpace.TransactOpts, _user)
}

// DeleteVersion is a paid mutator transaction binding the contract method 0xe1a70717.
//
// Solidity: function deleteVersion(string _versionHash) returns(int256)
func (_BaseContentSpace *BaseContentSpaceTransactor) DeleteVersion(opts *bind.TransactOpts, _versionHash string) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "deleteVersion", _versionHash)
}

// DeleteVersion is a paid mutator transaction binding the contract method 0xe1a70717.
//
// Solidity: function deleteVersion(string _versionHash) returns(int256)
func (_BaseContentSpace *BaseContentSpaceSession) DeleteVersion(_versionHash string) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.DeleteVersion(&_BaseContentSpace.TransactOpts, _versionHash)
}

// DeleteVersion is a paid mutator transaction binding the contract method 0xe1a70717.
//
// Solidity: function deleteVersion(string _versionHash) returns(int256)
func (_BaseContentSpace *BaseContentSpaceTransactorSession) DeleteVersion(_versionHash string) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.DeleteVersion(&_BaseContentSpace.TransactOpts, _versionHash)
}

// GetAccessWallet is a paid mutator transaction binding the contract method 0xa2d67fcf.
//
// Solidity: function getAccessWallet() returns(address)
func (_BaseContentSpace *BaseContentSpaceTransactor) GetAccessWallet(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "getAccessWallet")
}

// GetAccessWallet is a paid mutator transaction binding the contract method 0xa2d67fcf.
//
// Solidity: function getAccessWallet() returns(address)
func (_BaseContentSpace *BaseContentSpaceSession) GetAccessWallet() (*types.Transaction, error) {
	return _BaseContentSpace.Contract.GetAccessWallet(&_BaseContentSpace.TransactOpts)
}

// GetAccessWallet is a paid mutator transaction binding the contract method 0xa2d67fcf.
//
// Solidity: function getAccessWallet() returns(address)
func (_BaseContentSpace *BaseContentSpaceTransactorSession) GetAccessWallet() (*types.Transaction, error) {
	return _BaseContentSpace.Contract.GetAccessWallet(&_BaseContentSpace.TransactOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseContentSpace *BaseContentSpaceTransactor) Kill(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "kill")
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseContentSpace *BaseContentSpaceSession) Kill() (*types.Transaction, error) {
	return _BaseContentSpace.Contract.Kill(&_BaseContentSpace.TransactOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseContentSpace *BaseContentSpaceTransactorSession) Kill() (*types.Transaction, error) {
	return _BaseContentSpace.Contract.Kill(&_BaseContentSpace.TransactOpts)
}

// Publish is a paid mutator transaction binding the contract method 0x2cf99422.
//
// Solidity: function publish(address contentObj) returns(bool)
func (_BaseContentSpace *BaseContentSpaceTransactor) Publish(opts *bind.TransactOpts, contentObj common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "publish", contentObj)
}

// Publish is a paid mutator transaction binding the contract method 0x2cf99422.
//
// Solidity: function publish(address contentObj) returns(bool)
func (_BaseContentSpace *BaseContentSpaceSession) Publish(contentObj common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.Publish(&_BaseContentSpace.TransactOpts, contentObj)
}

// Publish is a paid mutator transaction binding the contract method 0x2cf99422.
//
// Solidity: function publish(address contentObj) returns(bool)
func (_BaseContentSpace *BaseContentSpaceTransactorSession) Publish(contentObj common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.Publish(&_BaseContentSpace.TransactOpts, contentObj)
}

// PutMeta is a paid mutator transaction binding the contract method 0xe542b7cb.
//
// Solidity: function putMeta(bytes key, bytes value) returns()
func (_BaseContentSpace *BaseContentSpaceTransactor) PutMeta(opts *bind.TransactOpts, key []byte, value []byte) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "putMeta", key, value)
}

// PutMeta is a paid mutator transaction binding the contract method 0xe542b7cb.
//
// Solidity: function putMeta(bytes key, bytes value) returns()
func (_BaseContentSpace *BaseContentSpaceSession) PutMeta(key []byte, value []byte) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.PutMeta(&_BaseContentSpace.TransactOpts, key, value)
}

// PutMeta is a paid mutator transaction binding the contract method 0xe542b7cb.
//
// Solidity: function putMeta(bytes key, bytes value) returns()
func (_BaseContentSpace *BaseContentSpaceTransactorSession) PutMeta(key []byte, value []byte) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.PutMeta(&_BaseContentSpace.TransactOpts, key, value)
}

// RemoveContentType is a paid mutator transaction binding the contract method 0xfd089196.
//
// Solidity: function removeContentType(address content_type) returns(bool)
func (_BaseContentSpace *BaseContentSpaceTransactor) RemoveContentType(opts *bind.TransactOpts, content_type common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "removeContentType", content_type)
}

// RemoveContentType is a paid mutator transaction binding the contract method 0xfd089196.
//
// Solidity: function removeContentType(address content_type) returns(bool)
func (_BaseContentSpace *BaseContentSpaceSession) RemoveContentType(content_type common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.RemoveContentType(&_BaseContentSpace.TransactOpts, content_type)
}

// RemoveContentType is a paid mutator transaction binding the contract method 0xfd089196.
//
// Solidity: function removeContentType(address content_type) returns(bool)
func (_BaseContentSpace *BaseContentSpaceTransactorSession) RemoveContentType(content_type common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.RemoveContentType(&_BaseContentSpace.TransactOpts, content_type)
}

// RemoveKMSLocator is a paid mutator transaction binding the contract method 0xfe7ac19f.
//
// Solidity: function removeKMSLocator(string _kmsID, bytes _locator) returns(bool)
func (_BaseContentSpace *BaseContentSpaceTransactor) RemoveKMSLocator(opts *bind.TransactOpts, _kmsID string, _locator []byte) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "removeKMSLocator", _kmsID, _locator)
}

// RemoveKMSLocator is a paid mutator transaction binding the contract method 0xfe7ac19f.
//
// Solidity: function removeKMSLocator(string _kmsID, bytes _locator) returns(bool)
func (_BaseContentSpace *BaseContentSpaceSession) RemoveKMSLocator(_kmsID string, _locator []byte) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.RemoveKMSLocator(&_BaseContentSpace.TransactOpts, _kmsID, _locator)
}

// RemoveKMSLocator is a paid mutator transaction binding the contract method 0xfe7ac19f.
//
// Solidity: function removeKMSLocator(string _kmsID, bytes _locator) returns(bool)
func (_BaseContentSpace *BaseContentSpaceTransactorSession) RemoveKMSLocator(_kmsID string, _locator []byte) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.RemoveKMSLocator(&_BaseContentSpace.TransactOpts, _kmsID, _locator)
}

// RemoveNode is a paid mutator transaction binding the contract method 0xb2b99ec9.
//
// Solidity: function removeNode(address _nodeAddr) returns()
func (_BaseContentSpace *BaseContentSpaceTransactor) RemoveNode(opts *bind.TransactOpts, _nodeAddr common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "removeNode", _nodeAddr)
}

// RemoveNode is a paid mutator transaction binding the contract method 0xb2b99ec9.
//
// Solidity: function removeNode(address _nodeAddr) returns()
func (_BaseContentSpace *BaseContentSpaceSession) RemoveNode(_nodeAddr common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.RemoveNode(&_BaseContentSpace.TransactOpts, _nodeAddr)
}

// RemoveNode is a paid mutator transaction binding the contract method 0xb2b99ec9.
//
// Solidity: function removeNode(address _nodeAddr) returns()
func (_BaseContentSpace *BaseContentSpaceTransactorSession) RemoveNode(_nodeAddr common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.RemoveNode(&_BaseContentSpace.TransactOpts, _nodeAddr)
}

// SetAddressKMS is a paid mutator transaction binding the contract method 0xc9e8e72d.
//
// Solidity: function setAddressKMS(address address_KMS) returns()
func (_BaseContentSpace *BaseContentSpaceTransactor) SetAddressKMS(opts *bind.TransactOpts, address_KMS common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "setAddressKMS", address_KMS)
}

// SetAddressKMS is a paid mutator transaction binding the contract method 0xc9e8e72d.
//
// Solidity: function setAddressKMS(address address_KMS) returns()
func (_BaseContentSpace *BaseContentSpaceSession) SetAddressKMS(address_KMS common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.SetAddressKMS(&_BaseContentSpace.TransactOpts, address_KMS)
}

// SetAddressKMS is a paid mutator transaction binding the contract method 0xc9e8e72d.
//
// Solidity: function setAddressKMS(address address_KMS) returns()
func (_BaseContentSpace *BaseContentSpaceTransactorSession) SetAddressKMS(address_KMS common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.SetAddressKMS(&_BaseContentSpace.TransactOpts, address_KMS)
}

// SetContentFactory is a paid mutator transaction binding the contract method 0x85ce1df1.
//
// Solidity: function setContentFactory(address new_factory) returns()
func (_BaseContentSpace *BaseContentSpaceTransactor) SetContentFactory(opts *bind.TransactOpts, new_factory common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "setContentFactory", new_factory)
}

// SetContentFactory is a paid mutator transaction binding the contract method 0x85ce1df1.
//
// Solidity: function setContentFactory(address new_factory) returns()
func (_BaseContentSpace *BaseContentSpaceSession) SetContentFactory(new_factory common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.SetContentFactory(&_BaseContentSpace.TransactOpts, new_factory)
}

// SetContentFactory is a paid mutator transaction binding the contract method 0x85ce1df1.
//
// Solidity: function setContentFactory(address new_factory) returns()
func (_BaseContentSpace *BaseContentSpaceTransactorSession) SetContentFactory(new_factory common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.SetContentFactory(&_BaseContentSpace.TransactOpts, new_factory)
}

// SetDescription is a paid mutator transaction binding the contract method 0x90c3f38f.
//
// Solidity: function setDescription(string content_space_description) returns()
func (_BaseContentSpace *BaseContentSpaceTransactor) SetDescription(opts *bind.TransactOpts, content_space_description string) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "setDescription", content_space_description)
}

// SetDescription is a paid mutator transaction binding the contract method 0x90c3f38f.
//
// Solidity: function setDescription(string content_space_description) returns()
func (_BaseContentSpace *BaseContentSpaceSession) SetDescription(content_space_description string) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.SetDescription(&_BaseContentSpace.TransactOpts, content_space_description)
}

// SetDescription is a paid mutator transaction binding the contract method 0x90c3f38f.
//
// Solidity: function setDescription(string content_space_description) returns()
func (_BaseContentSpace *BaseContentSpaceTransactorSession) SetDescription(content_space_description string) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.SetDescription(&_BaseContentSpace.TransactOpts, content_space_description)
}

// SetFactory is a paid mutator transaction binding the contract method 0x5bb47808.
//
// Solidity: function setFactory(address new_factory) returns()
func (_BaseContentSpace *BaseContentSpaceTransactor) SetFactory(opts *bind.TransactOpts, new_factory common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "setFactory", new_factory)
}

// SetFactory is a paid mutator transaction binding the contract method 0x5bb47808.
//
// Solidity: function setFactory(address new_factory) returns()
func (_BaseContentSpace *BaseContentSpaceSession) SetFactory(new_factory common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.SetFactory(&_BaseContentSpace.TransactOpts, new_factory)
}

// SetFactory is a paid mutator transaction binding the contract method 0x5bb47808.
//
// Solidity: function setFactory(address new_factory) returns()
func (_BaseContentSpace *BaseContentSpaceTransactorSession) SetFactory(new_factory common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.SetFactory(&_BaseContentSpace.TransactOpts, new_factory)
}

// SetGroupFactory is a paid mutator transaction binding the contract method 0x837b3b93.
//
// Solidity: function setGroupFactory(address new_factory) returns()
func (_BaseContentSpace *BaseContentSpaceTransactor) SetGroupFactory(opts *bind.TransactOpts, new_factory common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "setGroupFactory", new_factory)
}

// SetGroupFactory is a paid mutator transaction binding the contract method 0x837b3b93.
//
// Solidity: function setGroupFactory(address new_factory) returns()
func (_BaseContentSpace *BaseContentSpaceSession) SetGroupFactory(new_factory common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.SetGroupFactory(&_BaseContentSpace.TransactOpts, new_factory)
}

// SetGroupFactory is a paid mutator transaction binding the contract method 0x837b3b93.
//
// Solidity: function setGroupFactory(address new_factory) returns()
func (_BaseContentSpace *BaseContentSpaceTransactorSession) SetGroupFactory(new_factory common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.SetGroupFactory(&_BaseContentSpace.TransactOpts, new_factory)
}

// SetGroupRights is a paid mutator transaction binding the contract method 0x22e564eb.
//
// Solidity: function setGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_BaseContentSpace *BaseContentSpaceTransactor) SetGroupRights(opts *bind.TransactOpts, group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "setGroupRights", group, access_type, access)
}

// SetGroupRights is a paid mutator transaction binding the contract method 0x22e564eb.
//
// Solidity: function setGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_BaseContentSpace *BaseContentSpaceSession) SetGroupRights(group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.SetGroupRights(&_BaseContentSpace.TransactOpts, group, access_type, access)
}

// SetGroupRights is a paid mutator transaction binding the contract method 0x22e564eb.
//
// Solidity: function setGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_BaseContentSpace *BaseContentSpaceTransactorSession) SetGroupRights(group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.SetGroupRights(&_BaseContentSpace.TransactOpts, group, access_type, access)
}

// SetKMSPublicKey is a paid mutator transaction binding the contract method 0xa69cb734.
//
// Solidity: function setKMSPublicKey(string _kmsID, string _pubKey) returns()
func (_BaseContentSpace *BaseContentSpaceTransactor) SetKMSPublicKey(opts *bind.TransactOpts, _kmsID string, _pubKey string) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "setKMSPublicKey", _kmsID, _pubKey)
}

// SetKMSPublicKey is a paid mutator transaction binding the contract method 0xa69cb734.
//
// Solidity: function setKMSPublicKey(string _kmsID, string _pubKey) returns()
func (_BaseContentSpace *BaseContentSpaceSession) SetKMSPublicKey(_kmsID string, _pubKey string) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.SetKMSPublicKey(&_BaseContentSpace.TransactOpts, _kmsID, _pubKey)
}

// SetKMSPublicKey is a paid mutator transaction binding the contract method 0xa69cb734.
//
// Solidity: function setKMSPublicKey(string _kmsID, string _pubKey) returns()
func (_BaseContentSpace *BaseContentSpaceTransactorSession) SetKMSPublicKey(_kmsID string, _pubKey string) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.SetKMSPublicKey(&_BaseContentSpace.TransactOpts, _kmsID, _pubKey)
}

// SetLibraryFactory is a paid mutator transaction binding the contract method 0x9d05d18d.
//
// Solidity: function setLibraryFactory(address new_factory) returns()
func (_BaseContentSpace *BaseContentSpaceTransactor) SetLibraryFactory(opts *bind.TransactOpts, new_factory common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "setLibraryFactory", new_factory)
}

// SetLibraryFactory is a paid mutator transaction binding the contract method 0x9d05d18d.
//
// Solidity: function setLibraryFactory(address new_factory) returns()
func (_BaseContentSpace *BaseContentSpaceSession) SetLibraryFactory(new_factory common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.SetLibraryFactory(&_BaseContentSpace.TransactOpts, new_factory)
}

// SetLibraryFactory is a paid mutator transaction binding the contract method 0x9d05d18d.
//
// Solidity: function setLibraryFactory(address new_factory) returns()
func (_BaseContentSpace *BaseContentSpaceTransactorSession) SetLibraryFactory(new_factory common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.SetLibraryFactory(&_BaseContentSpace.TransactOpts, new_factory)
}

// SetRights is a paid mutator transaction binding the contract method 0x0fe1b5a2.
//
// Solidity: function setRights(address stakeholder, uint8 access_type, uint8 access) returns()
func (_BaseContentSpace *BaseContentSpaceTransactor) SetRights(opts *bind.TransactOpts, stakeholder common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "setRights", stakeholder, access_type, access)
}

// SetRights is a paid mutator transaction binding the contract method 0x0fe1b5a2.
//
// Solidity: function setRights(address stakeholder, uint8 access_type, uint8 access) returns()
func (_BaseContentSpace *BaseContentSpaceSession) SetRights(stakeholder common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.SetRights(&_BaseContentSpace.TransactOpts, stakeholder, access_type, access)
}

// SetRights is a paid mutator transaction binding the contract method 0x0fe1b5a2.
//
// Solidity: function setRights(address stakeholder, uint8 access_type, uint8 access) returns()
func (_BaseContentSpace *BaseContentSpaceTransactorSession) SetRights(stakeholder common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.SetRights(&_BaseContentSpace.TransactOpts, stakeholder, access_type, access)
}

// SetVisibility is a paid mutator transaction binding the contract method 0xaa024e8b.
//
// Solidity: function setVisibility(uint8 _visibility_code) returns()
func (_BaseContentSpace *BaseContentSpaceTransactor) SetVisibility(opts *bind.TransactOpts, _visibility_code uint8) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "setVisibility", _visibility_code)
}

// SetVisibility is a paid mutator transaction binding the contract method 0xaa024e8b.
//
// Solidity: function setVisibility(uint8 _visibility_code) returns()
func (_BaseContentSpace *BaseContentSpaceSession) SetVisibility(_visibility_code uint8) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.SetVisibility(&_BaseContentSpace.TransactOpts, _visibility_code)
}

// SetVisibility is a paid mutator transaction binding the contract method 0xaa024e8b.
//
// Solidity: function setVisibility(uint8 _visibility_code) returns()
func (_BaseContentSpace *BaseContentSpaceTransactorSession) SetVisibility(_visibility_code uint8) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.SetVisibility(&_BaseContentSpace.TransactOpts, _visibility_code)
}

// SetWalletFactory is a paid mutator transaction binding the contract method 0x7ebf879c.
//
// Solidity: function setWalletFactory(address new_factory) returns()
func (_BaseContentSpace *BaseContentSpaceTransactor) SetWalletFactory(opts *bind.TransactOpts, new_factory common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "setWalletFactory", new_factory)
}

// SetWalletFactory is a paid mutator transaction binding the contract method 0x7ebf879c.
//
// Solidity: function setWalletFactory(address new_factory) returns()
func (_BaseContentSpace *BaseContentSpaceSession) SetWalletFactory(new_factory common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.SetWalletFactory(&_BaseContentSpace.TransactOpts, new_factory)
}

// SetWalletFactory is a paid mutator transaction binding the contract method 0x7ebf879c.
//
// Solidity: function setWalletFactory(address new_factory) returns()
func (_BaseContentSpace *BaseContentSpaceTransactorSession) SetWalletFactory(new_factory common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.SetWalletFactory(&_BaseContentSpace.TransactOpts, new_factory)
}

// SubmitNode is a paid mutator transaction binding the contract method 0x160eee74.
//
// Solidity: function submitNode(bytes _locator) returns()
func (_BaseContentSpace *BaseContentSpaceTransactor) SubmitNode(opts *bind.TransactOpts, _locator []byte) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "submitNode", _locator)
}

// SubmitNode is a paid mutator transaction binding the contract method 0x160eee74.
//
// Solidity: function submitNode(bytes _locator) returns()
func (_BaseContentSpace *BaseContentSpaceSession) SubmitNode(_locator []byte) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.SubmitNode(&_BaseContentSpace.TransactOpts, _locator)
}

// SubmitNode is a paid mutator transaction binding the contract method 0x160eee74.
//
// Solidity: function submitNode(bytes _locator) returns()
func (_BaseContentSpace *BaseContentSpaceTransactorSession) SubmitNode(_locator []byte) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.SubmitNode(&_BaseContentSpace.TransactOpts, _locator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseContentSpace *BaseContentSpaceTransactor) TransferCreatorship(opts *bind.TransactOpts, newCreator common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "transferCreatorship", newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseContentSpace *BaseContentSpaceSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.TransferCreatorship(&_BaseContentSpace.TransactOpts, newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseContentSpace *BaseContentSpaceTransactorSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.TransferCreatorship(&_BaseContentSpace.TransactOpts, newCreator)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseContentSpace *BaseContentSpaceTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseContentSpace *BaseContentSpaceSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.TransferOwnership(&_BaseContentSpace.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseContentSpace *BaseContentSpaceTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _BaseContentSpace.Contract.TransferOwnership(&_BaseContentSpace.TransactOpts, newOwner)
}

// UpdateRequest is a paid mutator transaction binding the contract method 0xc287e0ed.
//
// Solidity: function updateRequest() returns()
func (_BaseContentSpace *BaseContentSpaceTransactor) UpdateRequest(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseContentSpace.contract.Transact(opts, "updateRequest")
}

// UpdateRequest is a paid mutator transaction binding the contract method 0xc287e0ed.
//
// Solidity: function updateRequest() returns()
func (_BaseContentSpace *BaseContentSpaceSession) UpdateRequest() (*types.Transaction, error) {
	return _BaseContentSpace.Contract.UpdateRequest(&_BaseContentSpace.TransactOpts)
}

// UpdateRequest is a paid mutator transaction binding the contract method 0xc287e0ed.
//
// Solidity: function updateRequest() returns()
func (_BaseContentSpace *BaseContentSpaceTransactorSession) UpdateRequest() (*types.Transaction, error) {
	return _BaseContentSpace.Contract.UpdateRequest(&_BaseContentSpace.TransactOpts)
}

// BaseContentSpaceAccessRequestV3Iterator is returned from FilterAccessRequestV3 and is used to iterate over the raw logs and unpacked data for AccessRequestV3 events raised by the BaseContentSpace contract.
type BaseContentSpaceAccessRequestV3Iterator struct {
	Event *BaseContentSpaceAccessRequestV3 // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentSpaceAccessRequestV3Iterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentSpaceAccessRequestV3)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentSpaceAccessRequestV3)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentSpaceAccessRequestV3Iterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentSpaceAccessRequestV3Iterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentSpaceAccessRequestV3 represents a AccessRequestV3 event raised by the BaseContentSpace contract.
type BaseContentSpaceAccessRequestV3 struct {
	RequestNonce     *big.Int
	ParentAddress    common.Address
	ContextHash      [32]byte
	Accessor         common.Address
	RequestTimestamp *big.Int
	Raw              types.Log // Blockchain specific contextual infos
}

// FilterAccessRequestV3 is a free log retrieval operation binding the contract event 0x545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c7.
//
// Solidity: event AccessRequestV3(uint256 requestNonce, address parentAddress, bytes32 contextHash, address accessor, uint256 requestTimestamp)
func (_BaseContentSpace *BaseContentSpaceFilterer) FilterAccessRequestV3(opts *bind.FilterOpts) (*BaseContentSpaceAccessRequestV3Iterator, error) {

	logs, sub, err := _BaseContentSpace.contract.FilterLogs(opts, "AccessRequestV3")
	if err != nil {
		return nil, err
	}
	return &BaseContentSpaceAccessRequestV3Iterator{contract: _BaseContentSpace.contract, event: "AccessRequestV3", logs: logs, sub: sub}, nil
}

// WatchAccessRequestV3 is a free log subscription operation binding the contract event 0x545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c7.
//
// Solidity: event AccessRequestV3(uint256 requestNonce, address parentAddress, bytes32 contextHash, address accessor, uint256 requestTimestamp)
func (_BaseContentSpace *BaseContentSpaceFilterer) WatchAccessRequestV3(opts *bind.WatchOpts, sink chan<- *BaseContentSpaceAccessRequestV3) (event.Subscription, error) {

	logs, sub, err := _BaseContentSpace.contract.WatchLogs(opts, "AccessRequestV3")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentSpaceAccessRequestV3)
				if err := _BaseContentSpace.contract.UnpackLog(event, "AccessRequestV3", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAccessRequestV3 is a log parse operation binding the contract event 0x545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c7.
//
// Solidity: event AccessRequestV3(uint256 requestNonce, address parentAddress, bytes32 contextHash, address accessor, uint256 requestTimestamp)
func (_BaseContentSpace *BaseContentSpaceFilterer) ParseAccessRequestV3(log types.Log) (*BaseContentSpaceAccessRequestV3, error) {
	event := new(BaseContentSpaceAccessRequestV3)
	if err := _BaseContentSpace.contract.UnpackLog(event, "AccessRequestV3", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentSpaceAddKMSLocatorIterator is returned from FilterAddKMSLocator and is used to iterate over the raw logs and unpacked data for AddKMSLocator events raised by the BaseContentSpace contract.
type BaseContentSpaceAddKMSLocatorIterator struct {
	Event *BaseContentSpaceAddKMSLocator // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentSpaceAddKMSLocatorIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentSpaceAddKMSLocator)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentSpaceAddKMSLocator)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentSpaceAddKMSLocatorIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentSpaceAddKMSLocatorIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentSpaceAddKMSLocator represents a AddKMSLocator event raised by the BaseContentSpace contract.
type BaseContentSpaceAddKMSLocator struct {
	Sender common.Address
	Status *big.Int
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterAddKMSLocator is a free log retrieval operation binding the contract event 0xdf8127994c229011ce9c4764bdc0375bb71c06cf1544f034cd81a42f37233319.
//
// Solidity: event AddKMSLocator(address sender, uint256 status)
func (_BaseContentSpace *BaseContentSpaceFilterer) FilterAddKMSLocator(opts *bind.FilterOpts) (*BaseContentSpaceAddKMSLocatorIterator, error) {

	logs, sub, err := _BaseContentSpace.contract.FilterLogs(opts, "AddKMSLocator")
	if err != nil {
		return nil, err
	}
	return &BaseContentSpaceAddKMSLocatorIterator{contract: _BaseContentSpace.contract, event: "AddKMSLocator", logs: logs, sub: sub}, nil
}

// WatchAddKMSLocator is a free log subscription operation binding the contract event 0xdf8127994c229011ce9c4764bdc0375bb71c06cf1544f034cd81a42f37233319.
//
// Solidity: event AddKMSLocator(address sender, uint256 status)
func (_BaseContentSpace *BaseContentSpaceFilterer) WatchAddKMSLocator(opts *bind.WatchOpts, sink chan<- *BaseContentSpaceAddKMSLocator) (event.Subscription, error) {

	logs, sub, err := _BaseContentSpace.contract.WatchLogs(opts, "AddKMSLocator")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentSpaceAddKMSLocator)
				if err := _BaseContentSpace.contract.UnpackLog(event, "AddKMSLocator", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAddKMSLocator is a log parse operation binding the contract event 0xdf8127994c229011ce9c4764bdc0375bb71c06cf1544f034cd81a42f37233319.
//
// Solidity: event AddKMSLocator(address sender, uint256 status)
func (_BaseContentSpace *BaseContentSpaceFilterer) ParseAddKMSLocator(log types.Log) (*BaseContentSpaceAddKMSLocator, error) {
	event := new(BaseContentSpaceAddKMSLocator)
	if err := _BaseContentSpace.contract.UnpackLog(event, "AddKMSLocator", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentSpaceAddNodeIterator is returned from FilterAddNode and is used to iterate over the raw logs and unpacked data for AddNode events raised by the BaseContentSpace contract.
type BaseContentSpaceAddNodeIterator struct {
	Event *BaseContentSpaceAddNode // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentSpaceAddNodeIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentSpaceAddNode)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentSpaceAddNode)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentSpaceAddNodeIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentSpaceAddNodeIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentSpaceAddNode represents a AddNode event raised by the BaseContentSpace contract.
type BaseContentSpaceAddNode struct {
	OwnerAddr common.Address
	NodeAddr  common.Address
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterAddNode is a free log retrieval operation binding the contract event 0x2bb0f9ba138ffddb5a8f974e9885b65a7814d3002654f1cf3f2d3f619a4006c4.
//
// Solidity: event AddNode(address ownerAddr, address nodeAddr)
func (_BaseContentSpace *BaseContentSpaceFilterer) FilterAddNode(opts *bind.FilterOpts) (*BaseContentSpaceAddNodeIterator, error) {

	logs, sub, err := _BaseContentSpace.contract.FilterLogs(opts, "AddNode")
	if err != nil {
		return nil, err
	}
	return &BaseContentSpaceAddNodeIterator{contract: _BaseContentSpace.contract, event: "AddNode", logs: logs, sub: sub}, nil
}

// WatchAddNode is a free log subscription operation binding the contract event 0x2bb0f9ba138ffddb5a8f974e9885b65a7814d3002654f1cf3f2d3f619a4006c4.
//
// Solidity: event AddNode(address ownerAddr, address nodeAddr)
func (_BaseContentSpace *BaseContentSpaceFilterer) WatchAddNode(opts *bind.WatchOpts, sink chan<- *BaseContentSpaceAddNode) (event.Subscription, error) {

	logs, sub, err := _BaseContentSpace.contract.WatchLogs(opts, "AddNode")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentSpaceAddNode)
				if err := _BaseContentSpace.contract.UnpackLog(event, "AddNode", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAddNode is a log parse operation binding the contract event 0x2bb0f9ba138ffddb5a8f974e9885b65a7814d3002654f1cf3f2d3f619a4006c4.
//
// Solidity: event AddNode(address ownerAddr, address nodeAddr)
func (_BaseContentSpace *BaseContentSpaceFilterer) ParseAddNode(log types.Log) (*BaseContentSpaceAddNode, error) {
	event := new(BaseContentSpaceAddNode)
	if err := _BaseContentSpace.contract.UnpackLog(event, "AddNode", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentSpaceBindUserWalletIterator is returned from FilterBindUserWallet and is used to iterate over the raw logs and unpacked data for BindUserWallet events raised by the BaseContentSpace contract.
type BaseContentSpaceBindUserWalletIterator struct {
	Event *BaseContentSpaceBindUserWallet // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentSpaceBindUserWalletIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentSpaceBindUserWallet)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentSpaceBindUserWallet)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentSpaceBindUserWalletIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentSpaceBindUserWalletIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentSpaceBindUserWallet represents a BindUserWallet event raised by the BaseContentSpace contract.
type BaseContentSpaceBindUserWallet struct {
	Wallet   common.Address
	UserAddr common.Address
	Raw      types.Log // Blockchain specific contextual infos
}

// FilterBindUserWallet is a free log retrieval operation binding the contract event 0x05e3f3adaf96d565bb326088a1d8e0d78497549df2c99a8ab681e5fbc7a9b3f2.
//
// Solidity: event BindUserWallet(address wallet, address userAddr)
func (_BaseContentSpace *BaseContentSpaceFilterer) FilterBindUserWallet(opts *bind.FilterOpts) (*BaseContentSpaceBindUserWalletIterator, error) {

	logs, sub, err := _BaseContentSpace.contract.FilterLogs(opts, "BindUserWallet")
	if err != nil {
		return nil, err
	}
	return &BaseContentSpaceBindUserWalletIterator{contract: _BaseContentSpace.contract, event: "BindUserWallet", logs: logs, sub: sub}, nil
}

// WatchBindUserWallet is a free log subscription operation binding the contract event 0x05e3f3adaf96d565bb326088a1d8e0d78497549df2c99a8ab681e5fbc7a9b3f2.
//
// Solidity: event BindUserWallet(address wallet, address userAddr)
func (_BaseContentSpace *BaseContentSpaceFilterer) WatchBindUserWallet(opts *bind.WatchOpts, sink chan<- *BaseContentSpaceBindUserWallet) (event.Subscription, error) {

	logs, sub, err := _BaseContentSpace.contract.WatchLogs(opts, "BindUserWallet")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentSpaceBindUserWallet)
				if err := _BaseContentSpace.contract.UnpackLog(event, "BindUserWallet", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseBindUserWallet is a log parse operation binding the contract event 0x05e3f3adaf96d565bb326088a1d8e0d78497549df2c99a8ab681e5fbc7a9b3f2.
//
// Solidity: event BindUserWallet(address wallet, address userAddr)
func (_BaseContentSpace *BaseContentSpaceFilterer) ParseBindUserWallet(log types.Log) (*BaseContentSpaceBindUserWallet, error) {
	event := new(BaseContentSpaceBindUserWallet)
	if err := _BaseContentSpace.contract.UnpackLog(event, "BindUserWallet", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentSpaceCommitPendingIterator is returned from FilterCommitPending and is used to iterate over the raw logs and unpacked data for CommitPending events raised by the BaseContentSpace contract.
type BaseContentSpaceCommitPendingIterator struct {
	Event *BaseContentSpaceCommitPending // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentSpaceCommitPendingIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentSpaceCommitPending)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentSpaceCommitPending)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentSpaceCommitPendingIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentSpaceCommitPendingIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentSpaceCommitPending represents a CommitPending event raised by the BaseContentSpace contract.
type BaseContentSpaceCommitPending struct {
	SpaceAddress  common.Address
	ParentAddress common.Address
	ObjectHash    string
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterCommitPending is a free log retrieval operation binding the contract event 0xb3ac059d88af6016aca1aebb7b3e796f2e7420435c59c563687814e9b85daa75.
//
// Solidity: event CommitPending(address spaceAddress, address parentAddress, string objectHash)
func (_BaseContentSpace *BaseContentSpaceFilterer) FilterCommitPending(opts *bind.FilterOpts) (*BaseContentSpaceCommitPendingIterator, error) {

	logs, sub, err := _BaseContentSpace.contract.FilterLogs(opts, "CommitPending")
	if err != nil {
		return nil, err
	}
	return &BaseContentSpaceCommitPendingIterator{contract: _BaseContentSpace.contract, event: "CommitPending", logs: logs, sub: sub}, nil
}

// WatchCommitPending is a free log subscription operation binding the contract event 0xb3ac059d88af6016aca1aebb7b3e796f2e7420435c59c563687814e9b85daa75.
//
// Solidity: event CommitPending(address spaceAddress, address parentAddress, string objectHash)
func (_BaseContentSpace *BaseContentSpaceFilterer) WatchCommitPending(opts *bind.WatchOpts, sink chan<- *BaseContentSpaceCommitPending) (event.Subscription, error) {

	logs, sub, err := _BaseContentSpace.contract.WatchLogs(opts, "CommitPending")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentSpaceCommitPending)
				if err := _BaseContentSpace.contract.UnpackLog(event, "CommitPending", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseCommitPending is a log parse operation binding the contract event 0xb3ac059d88af6016aca1aebb7b3e796f2e7420435c59c563687814e9b85daa75.
//
// Solidity: event CommitPending(address spaceAddress, address parentAddress, string objectHash)
func (_BaseContentSpace *BaseContentSpaceFilterer) ParseCommitPending(log types.Log) (*BaseContentSpaceCommitPending, error) {
	event := new(BaseContentSpaceCommitPending)
	if err := _BaseContentSpace.contract.UnpackLog(event, "CommitPending", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentSpaceContentTypeAddedIterator is returned from FilterContentTypeAdded and is used to iterate over the raw logs and unpacked data for ContentTypeAdded events raised by the BaseContentSpace contract.
type BaseContentSpaceContentTypeAddedIterator struct {
	Event *BaseContentSpaceContentTypeAdded // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentSpaceContentTypeAddedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentSpaceContentTypeAdded)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentSpaceContentTypeAdded)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentSpaceContentTypeAddedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentSpaceContentTypeAddedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentSpaceContentTypeAdded represents a ContentTypeAdded event raised by the BaseContentSpace contract.
type BaseContentSpaceContentTypeAdded struct {
	ContentType     common.Address
	ContentContract common.Address
	Raw             types.Log // Blockchain specific contextual infos
}

// FilterContentTypeAdded is a free log retrieval operation binding the contract event 0x280016f7418306a55542432120fd1a239ef9fcc1a92694d8d44ca76be0249ea7.
//
// Solidity: event ContentTypeAdded(address contentType, address contentContract)
func (_BaseContentSpace *BaseContentSpaceFilterer) FilterContentTypeAdded(opts *bind.FilterOpts) (*BaseContentSpaceContentTypeAddedIterator, error) {

	logs, sub, err := _BaseContentSpace.contract.FilterLogs(opts, "ContentTypeAdded")
	if err != nil {
		return nil, err
	}
	return &BaseContentSpaceContentTypeAddedIterator{contract: _BaseContentSpace.contract, event: "ContentTypeAdded", logs: logs, sub: sub}, nil
}

// WatchContentTypeAdded is a free log subscription operation binding the contract event 0x280016f7418306a55542432120fd1a239ef9fcc1a92694d8d44ca76be0249ea7.
//
// Solidity: event ContentTypeAdded(address contentType, address contentContract)
func (_BaseContentSpace *BaseContentSpaceFilterer) WatchContentTypeAdded(opts *bind.WatchOpts, sink chan<- *BaseContentSpaceContentTypeAdded) (event.Subscription, error) {

	logs, sub, err := _BaseContentSpace.contract.WatchLogs(opts, "ContentTypeAdded")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentSpaceContentTypeAdded)
				if err := _BaseContentSpace.contract.UnpackLog(event, "ContentTypeAdded", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseContentTypeAdded is a log parse operation binding the contract event 0x280016f7418306a55542432120fd1a239ef9fcc1a92694d8d44ca76be0249ea7.
//
// Solidity: event ContentTypeAdded(address contentType, address contentContract)
func (_BaseContentSpace *BaseContentSpaceFilterer) ParseContentTypeAdded(log types.Log) (*BaseContentSpaceContentTypeAdded, error) {
	event := new(BaseContentSpaceContentTypeAdded)
	if err := _BaseContentSpace.contract.UnpackLog(event, "ContentTypeAdded", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentSpaceContentTypeRemovedIterator is returned from FilterContentTypeRemoved and is used to iterate over the raw logs and unpacked data for ContentTypeRemoved events raised by the BaseContentSpace contract.
type BaseContentSpaceContentTypeRemovedIterator struct {
	Event *BaseContentSpaceContentTypeRemoved // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentSpaceContentTypeRemovedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentSpaceContentTypeRemoved)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentSpaceContentTypeRemoved)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentSpaceContentTypeRemovedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentSpaceContentTypeRemovedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentSpaceContentTypeRemoved represents a ContentTypeRemoved event raised by the BaseContentSpace contract.
type BaseContentSpaceContentTypeRemoved struct {
	ContentType common.Address
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterContentTypeRemoved is a free log retrieval operation binding the contract event 0xd41375b9d347dfe722f90a780731abd23b7855f9cf14ea7063c4cab5f9ae58e2.
//
// Solidity: event ContentTypeRemoved(address contentType)
func (_BaseContentSpace *BaseContentSpaceFilterer) FilterContentTypeRemoved(opts *bind.FilterOpts) (*BaseContentSpaceContentTypeRemovedIterator, error) {

	logs, sub, err := _BaseContentSpace.contract.FilterLogs(opts, "ContentTypeRemoved")
	if err != nil {
		return nil, err
	}
	return &BaseContentSpaceContentTypeRemovedIterator{contract: _BaseContentSpace.contract, event: "ContentTypeRemoved", logs: logs, sub: sub}, nil
}

// WatchContentTypeRemoved is a free log subscription operation binding the contract event 0xd41375b9d347dfe722f90a780731abd23b7855f9cf14ea7063c4cab5f9ae58e2.
//
// Solidity: event ContentTypeRemoved(address contentType)
func (_BaseContentSpace *BaseContentSpaceFilterer) WatchContentTypeRemoved(opts *bind.WatchOpts, sink chan<- *BaseContentSpaceContentTypeRemoved) (event.Subscription, error) {

	logs, sub, err := _BaseContentSpace.contract.WatchLogs(opts, "ContentTypeRemoved")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentSpaceContentTypeRemoved)
				if err := _BaseContentSpace.contract.UnpackLog(event, "ContentTypeRemoved", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseContentTypeRemoved is a log parse operation binding the contract event 0xd41375b9d347dfe722f90a780731abd23b7855f9cf14ea7063c4cab5f9ae58e2.
//
// Solidity: event ContentTypeRemoved(address contentType)
func (_BaseContentSpace *BaseContentSpaceFilterer) ParseContentTypeRemoved(log types.Log) (*BaseContentSpaceContentTypeRemoved, error) {
	event := new(BaseContentSpaceContentTypeRemoved)
	if err := _BaseContentSpace.contract.UnpackLog(event, "ContentTypeRemoved", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentSpaceCreateAccessWalletIterator is returned from FilterCreateAccessWallet and is used to iterate over the raw logs and unpacked data for CreateAccessWallet events raised by the BaseContentSpace contract.
type BaseContentSpaceCreateAccessWalletIterator struct {
	Event *BaseContentSpaceCreateAccessWallet // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentSpaceCreateAccessWalletIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentSpaceCreateAccessWallet)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentSpaceCreateAccessWallet)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentSpaceCreateAccessWalletIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentSpaceCreateAccessWalletIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentSpaceCreateAccessWallet represents a CreateAccessWallet event raised by the BaseContentSpace contract.
type BaseContentSpaceCreateAccessWallet struct {
	Wallet common.Address
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterCreateAccessWallet is a free log retrieval operation binding the contract event 0x56c4bf13bebaa9f2be39ac3f2f4619a0dd1b694bb8c5f43c6b244a6dba0f0cca.
//
// Solidity: event CreateAccessWallet(address wallet)
func (_BaseContentSpace *BaseContentSpaceFilterer) FilterCreateAccessWallet(opts *bind.FilterOpts) (*BaseContentSpaceCreateAccessWalletIterator, error) {

	logs, sub, err := _BaseContentSpace.contract.FilterLogs(opts, "CreateAccessWallet")
	if err != nil {
		return nil, err
	}
	return &BaseContentSpaceCreateAccessWalletIterator{contract: _BaseContentSpace.contract, event: "CreateAccessWallet", logs: logs, sub: sub}, nil
}

// WatchCreateAccessWallet is a free log subscription operation binding the contract event 0x56c4bf13bebaa9f2be39ac3f2f4619a0dd1b694bb8c5f43c6b244a6dba0f0cca.
//
// Solidity: event CreateAccessWallet(address wallet)
func (_BaseContentSpace *BaseContentSpaceFilterer) WatchCreateAccessWallet(opts *bind.WatchOpts, sink chan<- *BaseContentSpaceCreateAccessWallet) (event.Subscription, error) {

	logs, sub, err := _BaseContentSpace.contract.WatchLogs(opts, "CreateAccessWallet")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentSpaceCreateAccessWallet)
				if err := _BaseContentSpace.contract.UnpackLog(event, "CreateAccessWallet", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseCreateAccessWallet is a log parse operation binding the contract event 0x56c4bf13bebaa9f2be39ac3f2f4619a0dd1b694bb8c5f43c6b244a6dba0f0cca.
//
// Solidity: event CreateAccessWallet(address wallet)
func (_BaseContentSpace *BaseContentSpaceFilterer) ParseCreateAccessWallet(log types.Log) (*BaseContentSpaceCreateAccessWallet, error) {
	event := new(BaseContentSpaceCreateAccessWallet)
	if err := _BaseContentSpace.contract.UnpackLog(event, "CreateAccessWallet", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentSpaceCreateContentIterator is returned from FilterCreateContent and is used to iterate over the raw logs and unpacked data for CreateContent events raised by the BaseContentSpace contract.
type BaseContentSpaceCreateContentIterator struct {
	Event *BaseContentSpaceCreateContent // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentSpaceCreateContentIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentSpaceCreateContent)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentSpaceCreateContent)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentSpaceCreateContentIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentSpaceCreateContentIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentSpaceCreateContent represents a CreateContent event raised by the BaseContentSpace contract.
type BaseContentSpaceCreateContent struct {
	ContentAddress common.Address
	Raw            types.Log // Blockchain specific contextual infos
}

// FilterCreateContent is a free log retrieval operation binding the contract event 0xa0633ea0b3cb5796607e5f551ae79c7eeee0dc7ee0c3ff8996506261651368ce.
//
// Solidity: event CreateContent(address contentAddress)
func (_BaseContentSpace *BaseContentSpaceFilterer) FilterCreateContent(opts *bind.FilterOpts) (*BaseContentSpaceCreateContentIterator, error) {

	logs, sub, err := _BaseContentSpace.contract.FilterLogs(opts, "CreateContent")
	if err != nil {
		return nil, err
	}
	return &BaseContentSpaceCreateContentIterator{contract: _BaseContentSpace.contract, event: "CreateContent", logs: logs, sub: sub}, nil
}

// WatchCreateContent is a free log subscription operation binding the contract event 0xa0633ea0b3cb5796607e5f551ae79c7eeee0dc7ee0c3ff8996506261651368ce.
//
// Solidity: event CreateContent(address contentAddress)
func (_BaseContentSpace *BaseContentSpaceFilterer) WatchCreateContent(opts *bind.WatchOpts, sink chan<- *BaseContentSpaceCreateContent) (event.Subscription, error) {

	logs, sub, err := _BaseContentSpace.contract.WatchLogs(opts, "CreateContent")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentSpaceCreateContent)
				if err := _BaseContentSpace.contract.UnpackLog(event, "CreateContent", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseCreateContent is a log parse operation binding the contract event 0xa0633ea0b3cb5796607e5f551ae79c7eeee0dc7ee0c3ff8996506261651368ce.
//
// Solidity: event CreateContent(address contentAddress)
func (_BaseContentSpace *BaseContentSpaceFilterer) ParseCreateContent(log types.Log) (*BaseContentSpaceCreateContent, error) {
	event := new(BaseContentSpaceCreateContent)
	if err := _BaseContentSpace.contract.UnpackLog(event, "CreateContent", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentSpaceCreateContentTypeIterator is returned from FilterCreateContentType and is used to iterate over the raw logs and unpacked data for CreateContentType events raised by the BaseContentSpace contract.
type BaseContentSpaceCreateContentTypeIterator struct {
	Event *BaseContentSpaceCreateContentType // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentSpaceCreateContentTypeIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentSpaceCreateContentType)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentSpaceCreateContentType)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentSpaceCreateContentTypeIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentSpaceCreateContentTypeIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentSpaceCreateContentType represents a CreateContentType event raised by the BaseContentSpace contract.
type BaseContentSpaceCreateContentType struct {
	ContentTypeAddress common.Address
	Raw                types.Log // Blockchain specific contextual infos
}

// FilterCreateContentType is a free log retrieval operation binding the contract event 0x9e69777f30c55126be256664fa7beff4b796ac32ebceab94df5071b0148017f8.
//
// Solidity: event CreateContentType(address contentTypeAddress)
func (_BaseContentSpace *BaseContentSpaceFilterer) FilterCreateContentType(opts *bind.FilterOpts) (*BaseContentSpaceCreateContentTypeIterator, error) {

	logs, sub, err := _BaseContentSpace.contract.FilterLogs(opts, "CreateContentType")
	if err != nil {
		return nil, err
	}
	return &BaseContentSpaceCreateContentTypeIterator{contract: _BaseContentSpace.contract, event: "CreateContentType", logs: logs, sub: sub}, nil
}

// WatchCreateContentType is a free log subscription operation binding the contract event 0x9e69777f30c55126be256664fa7beff4b796ac32ebceab94df5071b0148017f8.
//
// Solidity: event CreateContentType(address contentTypeAddress)
func (_BaseContentSpace *BaseContentSpaceFilterer) WatchCreateContentType(opts *bind.WatchOpts, sink chan<- *BaseContentSpaceCreateContentType) (event.Subscription, error) {

	logs, sub, err := _BaseContentSpace.contract.WatchLogs(opts, "CreateContentType")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentSpaceCreateContentType)
				if err := _BaseContentSpace.contract.UnpackLog(event, "CreateContentType", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseCreateContentType is a log parse operation binding the contract event 0x9e69777f30c55126be256664fa7beff4b796ac32ebceab94df5071b0148017f8.
//
// Solidity: event CreateContentType(address contentTypeAddress)
func (_BaseContentSpace *BaseContentSpaceFilterer) ParseCreateContentType(log types.Log) (*BaseContentSpaceCreateContentType, error) {
	event := new(BaseContentSpaceCreateContentType)
	if err := _BaseContentSpace.contract.UnpackLog(event, "CreateContentType", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentSpaceCreateGroupIterator is returned from FilterCreateGroup and is used to iterate over the raw logs and unpacked data for CreateGroup events raised by the BaseContentSpace contract.
type BaseContentSpaceCreateGroupIterator struct {
	Event *BaseContentSpaceCreateGroup // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentSpaceCreateGroupIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentSpaceCreateGroup)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentSpaceCreateGroup)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentSpaceCreateGroupIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentSpaceCreateGroupIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentSpaceCreateGroup represents a CreateGroup event raised by the BaseContentSpace contract.
type BaseContentSpaceCreateGroup struct {
	GroupAddress common.Address
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterCreateGroup is a free log retrieval operation binding the contract event 0xa3b1fe71ae61bad8cffa485b230e24e518938f76182a30fa0d9979e7237ad159.
//
// Solidity: event CreateGroup(address groupAddress)
func (_BaseContentSpace *BaseContentSpaceFilterer) FilterCreateGroup(opts *bind.FilterOpts) (*BaseContentSpaceCreateGroupIterator, error) {

	logs, sub, err := _BaseContentSpace.contract.FilterLogs(opts, "CreateGroup")
	if err != nil {
		return nil, err
	}
	return &BaseContentSpaceCreateGroupIterator{contract: _BaseContentSpace.contract, event: "CreateGroup", logs: logs, sub: sub}, nil
}

// WatchCreateGroup is a free log subscription operation binding the contract event 0xa3b1fe71ae61bad8cffa485b230e24e518938f76182a30fa0d9979e7237ad159.
//
// Solidity: event CreateGroup(address groupAddress)
func (_BaseContentSpace *BaseContentSpaceFilterer) WatchCreateGroup(opts *bind.WatchOpts, sink chan<- *BaseContentSpaceCreateGroup) (event.Subscription, error) {

	logs, sub, err := _BaseContentSpace.contract.WatchLogs(opts, "CreateGroup")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentSpaceCreateGroup)
				if err := _BaseContentSpace.contract.UnpackLog(event, "CreateGroup", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseCreateGroup is a log parse operation binding the contract event 0xa3b1fe71ae61bad8cffa485b230e24e518938f76182a30fa0d9979e7237ad159.
//
// Solidity: event CreateGroup(address groupAddress)
func (_BaseContentSpace *BaseContentSpaceFilterer) ParseCreateGroup(log types.Log) (*BaseContentSpaceCreateGroup, error) {
	event := new(BaseContentSpaceCreateGroup)
	if err := _BaseContentSpace.contract.UnpackLog(event, "CreateGroup", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentSpaceCreateLibraryIterator is returned from FilterCreateLibrary and is used to iterate over the raw logs and unpacked data for CreateLibrary events raised by the BaseContentSpace contract.
type BaseContentSpaceCreateLibraryIterator struct {
	Event *BaseContentSpaceCreateLibrary // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentSpaceCreateLibraryIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentSpaceCreateLibrary)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentSpaceCreateLibrary)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentSpaceCreateLibraryIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentSpaceCreateLibraryIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentSpaceCreateLibrary represents a CreateLibrary event raised by the BaseContentSpace contract.
type BaseContentSpaceCreateLibrary struct {
	LibraryAddress common.Address
	Raw            types.Log // Blockchain specific contextual infos
}

// FilterCreateLibrary is a free log retrieval operation binding the contract event 0x473c07a6d0228c4fb8fe2be3b4617c3b5fb7c0f8cd9ba4b67e8631844b9b6571.
//
// Solidity: event CreateLibrary(address libraryAddress)
func (_BaseContentSpace *BaseContentSpaceFilterer) FilterCreateLibrary(opts *bind.FilterOpts) (*BaseContentSpaceCreateLibraryIterator, error) {

	logs, sub, err := _BaseContentSpace.contract.FilterLogs(opts, "CreateLibrary")
	if err != nil {
		return nil, err
	}
	return &BaseContentSpaceCreateLibraryIterator{contract: _BaseContentSpace.contract, event: "CreateLibrary", logs: logs, sub: sub}, nil
}

// WatchCreateLibrary is a free log subscription operation binding the contract event 0x473c07a6d0228c4fb8fe2be3b4617c3b5fb7c0f8cd9ba4b67e8631844b9b6571.
//
// Solidity: event CreateLibrary(address libraryAddress)
func (_BaseContentSpace *BaseContentSpaceFilterer) WatchCreateLibrary(opts *bind.WatchOpts, sink chan<- *BaseContentSpaceCreateLibrary) (event.Subscription, error) {

	logs, sub, err := _BaseContentSpace.contract.WatchLogs(opts, "CreateLibrary")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentSpaceCreateLibrary)
				if err := _BaseContentSpace.contract.UnpackLog(event, "CreateLibrary", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseCreateLibrary is a log parse operation binding the contract event 0x473c07a6d0228c4fb8fe2be3b4617c3b5fb7c0f8cd9ba4b67e8631844b9b6571.
//
// Solidity: event CreateLibrary(address libraryAddress)
func (_BaseContentSpace *BaseContentSpaceFilterer) ParseCreateLibrary(log types.Log) (*BaseContentSpaceCreateLibrary, error) {
	event := new(BaseContentSpaceCreateLibrary)
	if err := _BaseContentSpace.contract.UnpackLog(event, "CreateLibrary", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentSpaceCreateSpaceIterator is returned from FilterCreateSpace and is used to iterate over the raw logs and unpacked data for CreateSpace events raised by the BaseContentSpace contract.
type BaseContentSpaceCreateSpaceIterator struct {
	Event *BaseContentSpaceCreateSpace // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentSpaceCreateSpaceIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentSpaceCreateSpace)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentSpaceCreateSpace)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentSpaceCreateSpaceIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentSpaceCreateSpaceIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentSpaceCreateSpace represents a CreateSpace event raised by the BaseContentSpace contract.
type BaseContentSpaceCreateSpace struct {
	Version [32]byte
	Owner   common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterCreateSpace is a free log retrieval operation binding the contract event 0x599bb380c80b69455450a615c515544b8da3b09f2efa116a5f0567682203cf54.
//
// Solidity: event CreateSpace(bytes32 version, address owner)
func (_BaseContentSpace *BaseContentSpaceFilterer) FilterCreateSpace(opts *bind.FilterOpts) (*BaseContentSpaceCreateSpaceIterator, error) {

	logs, sub, err := _BaseContentSpace.contract.FilterLogs(opts, "CreateSpace")
	if err != nil {
		return nil, err
	}
	return &BaseContentSpaceCreateSpaceIterator{contract: _BaseContentSpace.contract, event: "CreateSpace", logs: logs, sub: sub}, nil
}

// WatchCreateSpace is a free log subscription operation binding the contract event 0x599bb380c80b69455450a615c515544b8da3b09f2efa116a5f0567682203cf54.
//
// Solidity: event CreateSpace(bytes32 version, address owner)
func (_BaseContentSpace *BaseContentSpaceFilterer) WatchCreateSpace(opts *bind.WatchOpts, sink chan<- *BaseContentSpaceCreateSpace) (event.Subscription, error) {

	logs, sub, err := _BaseContentSpace.contract.WatchLogs(opts, "CreateSpace")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentSpaceCreateSpace)
				if err := _BaseContentSpace.contract.UnpackLog(event, "CreateSpace", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseCreateSpace is a log parse operation binding the contract event 0x599bb380c80b69455450a615c515544b8da3b09f2efa116a5f0567682203cf54.
//
// Solidity: event CreateSpace(bytes32 version, address owner)
func (_BaseContentSpace *BaseContentSpaceFilterer) ParseCreateSpace(log types.Log) (*BaseContentSpaceCreateSpace, error) {
	event := new(BaseContentSpaceCreateSpace)
	if err := _BaseContentSpace.contract.UnpackLog(event, "CreateSpace", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentSpaceEngageAccountLibraryIterator is returned from FilterEngageAccountLibrary and is used to iterate over the raw logs and unpacked data for EngageAccountLibrary events raised by the BaseContentSpace contract.
type BaseContentSpaceEngageAccountLibraryIterator struct {
	Event *BaseContentSpaceEngageAccountLibrary // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentSpaceEngageAccountLibraryIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentSpaceEngageAccountLibrary)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentSpaceEngageAccountLibrary)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentSpaceEngageAccountLibraryIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentSpaceEngageAccountLibraryIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentSpaceEngageAccountLibrary represents a EngageAccountLibrary event raised by the BaseContentSpace contract.
type BaseContentSpaceEngageAccountLibrary struct {
	AccountAddress common.Address
	Raw            types.Log // Blockchain specific contextual infos
}

// FilterEngageAccountLibrary is a free log retrieval operation binding the contract event 0x53ce35a7383a3ea3f695bdf0f87d7e5485ba816b382673e849bfdd24e7f5e3ca.
//
// Solidity: event EngageAccountLibrary(address accountAddress)
func (_BaseContentSpace *BaseContentSpaceFilterer) FilterEngageAccountLibrary(opts *bind.FilterOpts) (*BaseContentSpaceEngageAccountLibraryIterator, error) {

	logs, sub, err := _BaseContentSpace.contract.FilterLogs(opts, "EngageAccountLibrary")
	if err != nil {
		return nil, err
	}
	return &BaseContentSpaceEngageAccountLibraryIterator{contract: _BaseContentSpace.contract, event: "EngageAccountLibrary", logs: logs, sub: sub}, nil
}

// WatchEngageAccountLibrary is a free log subscription operation binding the contract event 0x53ce35a7383a3ea3f695bdf0f87d7e5485ba816b382673e849bfdd24e7f5e3ca.
//
// Solidity: event EngageAccountLibrary(address accountAddress)
func (_BaseContentSpace *BaseContentSpaceFilterer) WatchEngageAccountLibrary(opts *bind.WatchOpts, sink chan<- *BaseContentSpaceEngageAccountLibrary) (event.Subscription, error) {

	logs, sub, err := _BaseContentSpace.contract.WatchLogs(opts, "EngageAccountLibrary")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentSpaceEngageAccountLibrary)
				if err := _BaseContentSpace.contract.UnpackLog(event, "EngageAccountLibrary", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseEngageAccountLibrary is a log parse operation binding the contract event 0x53ce35a7383a3ea3f695bdf0f87d7e5485ba816b382673e849bfdd24e7f5e3ca.
//
// Solidity: event EngageAccountLibrary(address accountAddress)
func (_BaseContentSpace *BaseContentSpaceFilterer) ParseEngageAccountLibrary(log types.Log) (*BaseContentSpaceEngageAccountLibrary, error) {
	event := new(BaseContentSpaceEngageAccountLibrary)
	if err := _BaseContentSpace.contract.UnpackLog(event, "EngageAccountLibrary", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentSpaceGetAccessWalletIterator is returned from FilterGetAccessWallet and is used to iterate over the raw logs and unpacked data for GetAccessWallet events raised by the BaseContentSpace contract.
type BaseContentSpaceGetAccessWalletIterator struct {
	Event *BaseContentSpaceGetAccessWallet // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentSpaceGetAccessWalletIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentSpaceGetAccessWallet)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentSpaceGetAccessWallet)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentSpaceGetAccessWalletIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentSpaceGetAccessWalletIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentSpaceGetAccessWallet represents a GetAccessWallet event raised by the BaseContentSpace contract.
type BaseContentSpaceGetAccessWallet struct {
	WalletAddress common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterGetAccessWallet is a free log retrieval operation binding the contract event 0x1c917c3c2698bd5b98acb9772728da62f2ce3670e4578910a6465b955f63e157.
//
// Solidity: event GetAccessWallet(address walletAddress)
func (_BaseContentSpace *BaseContentSpaceFilterer) FilterGetAccessWallet(opts *bind.FilterOpts) (*BaseContentSpaceGetAccessWalletIterator, error) {

	logs, sub, err := _BaseContentSpace.contract.FilterLogs(opts, "GetAccessWallet")
	if err != nil {
		return nil, err
	}
	return &BaseContentSpaceGetAccessWalletIterator{contract: _BaseContentSpace.contract, event: "GetAccessWallet", logs: logs, sub: sub}, nil
}

// WatchGetAccessWallet is a free log subscription operation binding the contract event 0x1c917c3c2698bd5b98acb9772728da62f2ce3670e4578910a6465b955f63e157.
//
// Solidity: event GetAccessWallet(address walletAddress)
func (_BaseContentSpace *BaseContentSpaceFilterer) WatchGetAccessWallet(opts *bind.WatchOpts, sink chan<- *BaseContentSpaceGetAccessWallet) (event.Subscription, error) {

	logs, sub, err := _BaseContentSpace.contract.WatchLogs(opts, "GetAccessWallet")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentSpaceGetAccessWallet)
				if err := _BaseContentSpace.contract.UnpackLog(event, "GetAccessWallet", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseGetAccessWallet is a log parse operation binding the contract event 0x1c917c3c2698bd5b98acb9772728da62f2ce3670e4578910a6465b955f63e157.
//
// Solidity: event GetAccessWallet(address walletAddress)
func (_BaseContentSpace *BaseContentSpaceFilterer) ParseGetAccessWallet(log types.Log) (*BaseContentSpaceGetAccessWallet, error) {
	event := new(BaseContentSpaceGetAccessWallet)
	if err := _BaseContentSpace.contract.UnpackLog(event, "GetAccessWallet", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentSpaceNodeApprovedIterator is returned from FilterNodeApproved and is used to iterate over the raw logs and unpacked data for NodeApproved events raised by the BaseContentSpace contract.
type BaseContentSpaceNodeApprovedIterator struct {
	Event *BaseContentSpaceNodeApproved // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentSpaceNodeApprovedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentSpaceNodeApproved)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentSpaceNodeApproved)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentSpaceNodeApprovedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentSpaceNodeApprovedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentSpaceNodeApproved represents a NodeApproved event raised by the BaseContentSpace contract.
type BaseContentSpaceNodeApproved struct {
	Addr    common.Address
	Locator []byte
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterNodeApproved is a free log retrieval operation binding the contract event 0xd644c8164f225d3b7fdbcc404f279bb1e823ef0d93f88dd4b24e85d0e7bc6a54.
//
// Solidity: event NodeApproved(address addr, bytes locator)
func (_BaseContentSpace *BaseContentSpaceFilterer) FilterNodeApproved(opts *bind.FilterOpts) (*BaseContentSpaceNodeApprovedIterator, error) {

	logs, sub, err := _BaseContentSpace.contract.FilterLogs(opts, "NodeApproved")
	if err != nil {
		return nil, err
	}
	return &BaseContentSpaceNodeApprovedIterator{contract: _BaseContentSpace.contract, event: "NodeApproved", logs: logs, sub: sub}, nil
}

// WatchNodeApproved is a free log subscription operation binding the contract event 0xd644c8164f225d3b7fdbcc404f279bb1e823ef0d93f88dd4b24e85d0e7bc6a54.
//
// Solidity: event NodeApproved(address addr, bytes locator)
func (_BaseContentSpace *BaseContentSpaceFilterer) WatchNodeApproved(opts *bind.WatchOpts, sink chan<- *BaseContentSpaceNodeApproved) (event.Subscription, error) {

	logs, sub, err := _BaseContentSpace.contract.WatchLogs(opts, "NodeApproved")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentSpaceNodeApproved)
				if err := _BaseContentSpace.contract.UnpackLog(event, "NodeApproved", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseNodeApproved is a log parse operation binding the contract event 0xd644c8164f225d3b7fdbcc404f279bb1e823ef0d93f88dd4b24e85d0e7bc6a54.
//
// Solidity: event NodeApproved(address addr, bytes locator)
func (_BaseContentSpace *BaseContentSpaceFilterer) ParseNodeApproved(log types.Log) (*BaseContentSpaceNodeApproved, error) {
	event := new(BaseContentSpaceNodeApproved)
	if err := _BaseContentSpace.contract.UnpackLog(event, "NodeApproved", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentSpaceNodeSubmittedIterator is returned from FilterNodeSubmitted and is used to iterate over the raw logs and unpacked data for NodeSubmitted events raised by the BaseContentSpace contract.
type BaseContentSpaceNodeSubmittedIterator struct {
	Event *BaseContentSpaceNodeSubmitted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentSpaceNodeSubmittedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentSpaceNodeSubmitted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentSpaceNodeSubmitted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentSpaceNodeSubmittedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentSpaceNodeSubmittedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentSpaceNodeSubmitted represents a NodeSubmitted event raised by the BaseContentSpace contract.
type BaseContentSpaceNodeSubmitted struct {
	Addr    common.Address
	Locator []byte
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterNodeSubmitted is a free log retrieval operation binding the contract event 0xae5645569f32b946f7a747113c64094a29a6b84c5ddf55816ef4381ce8a3a46d.
//
// Solidity: event NodeSubmitted(address addr, bytes locator)
func (_BaseContentSpace *BaseContentSpaceFilterer) FilterNodeSubmitted(opts *bind.FilterOpts) (*BaseContentSpaceNodeSubmittedIterator, error) {

	logs, sub, err := _BaseContentSpace.contract.FilterLogs(opts, "NodeSubmitted")
	if err != nil {
		return nil, err
	}
	return &BaseContentSpaceNodeSubmittedIterator{contract: _BaseContentSpace.contract, event: "NodeSubmitted", logs: logs, sub: sub}, nil
}

// WatchNodeSubmitted is a free log subscription operation binding the contract event 0xae5645569f32b946f7a747113c64094a29a6b84c5ddf55816ef4381ce8a3a46d.
//
// Solidity: event NodeSubmitted(address addr, bytes locator)
func (_BaseContentSpace *BaseContentSpaceFilterer) WatchNodeSubmitted(opts *bind.WatchOpts, sink chan<- *BaseContentSpaceNodeSubmitted) (event.Subscription, error) {

	logs, sub, err := _BaseContentSpace.contract.WatchLogs(opts, "NodeSubmitted")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentSpaceNodeSubmitted)
				if err := _BaseContentSpace.contract.UnpackLog(event, "NodeSubmitted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseNodeSubmitted is a log parse operation binding the contract event 0xae5645569f32b946f7a747113c64094a29a6b84c5ddf55816ef4381ce8a3a46d.
//
// Solidity: event NodeSubmitted(address addr, bytes locator)
func (_BaseContentSpace *BaseContentSpaceFilterer) ParseNodeSubmitted(log types.Log) (*BaseContentSpaceNodeSubmitted, error) {
	event := new(BaseContentSpaceNodeSubmitted)
	if err := _BaseContentSpace.contract.UnpackLog(event, "NodeSubmitted", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentSpaceObjectMetaChangedIterator is returned from FilterObjectMetaChanged and is used to iterate over the raw logs and unpacked data for ObjectMetaChanged events raised by the BaseContentSpace contract.
type BaseContentSpaceObjectMetaChangedIterator struct {
	Event *BaseContentSpaceObjectMetaChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentSpaceObjectMetaChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentSpaceObjectMetaChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentSpaceObjectMetaChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentSpaceObjectMetaChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentSpaceObjectMetaChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentSpaceObjectMetaChanged represents a ObjectMetaChanged event raised by the BaseContentSpace contract.
type BaseContentSpaceObjectMetaChanged struct {
	Key []byte
	Raw types.Log // Blockchain specific contextual infos
}

// FilterObjectMetaChanged is a free log retrieval operation binding the contract event 0xe2b310ec9dabdc05229a748e07666c3bc9c46c6ef465cce30d0aa3aa64a0644c.
//
// Solidity: event ObjectMetaChanged(bytes key)
func (_BaseContentSpace *BaseContentSpaceFilterer) FilterObjectMetaChanged(opts *bind.FilterOpts) (*BaseContentSpaceObjectMetaChangedIterator, error) {

	logs, sub, err := _BaseContentSpace.contract.FilterLogs(opts, "ObjectMetaChanged")
	if err != nil {
		return nil, err
	}
	return &BaseContentSpaceObjectMetaChangedIterator{contract: _BaseContentSpace.contract, event: "ObjectMetaChanged", logs: logs, sub: sub}, nil
}

// WatchObjectMetaChanged is a free log subscription operation binding the contract event 0xe2b310ec9dabdc05229a748e07666c3bc9c46c6ef465cce30d0aa3aa64a0644c.
//
// Solidity: event ObjectMetaChanged(bytes key)
func (_BaseContentSpace *BaseContentSpaceFilterer) WatchObjectMetaChanged(opts *bind.WatchOpts, sink chan<- *BaseContentSpaceObjectMetaChanged) (event.Subscription, error) {

	logs, sub, err := _BaseContentSpace.contract.WatchLogs(opts, "ObjectMetaChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentSpaceObjectMetaChanged)
				if err := _BaseContentSpace.contract.UnpackLog(event, "ObjectMetaChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseObjectMetaChanged is a log parse operation binding the contract event 0xe2b310ec9dabdc05229a748e07666c3bc9c46c6ef465cce30d0aa3aa64a0644c.
//
// Solidity: event ObjectMetaChanged(bytes key)
func (_BaseContentSpace *BaseContentSpaceFilterer) ParseObjectMetaChanged(log types.Log) (*BaseContentSpaceObjectMetaChanged, error) {
	event := new(BaseContentSpaceObjectMetaChanged)
	if err := _BaseContentSpace.contract.UnpackLog(event, "ObjectMetaChanged", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentSpaceRegisterNodeIterator is returned from FilterRegisterNode and is used to iterate over the raw logs and unpacked data for RegisterNode events raised by the BaseContentSpace contract.
type BaseContentSpaceRegisterNodeIterator struct {
	Event *BaseContentSpaceRegisterNode // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentSpaceRegisterNodeIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentSpaceRegisterNode)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentSpaceRegisterNode)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentSpaceRegisterNodeIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentSpaceRegisterNodeIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentSpaceRegisterNode represents a RegisterNode event raised by the BaseContentSpace contract.
type BaseContentSpaceRegisterNode struct {
	NodeObjAddr common.Address
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterRegisterNode is a free log retrieval operation binding the contract event 0x4575facd117046c9c28b69a3eb9c08939f2462a5a22ea6c6dcd4f79b8dd124e9.
//
// Solidity: event RegisterNode(address nodeObjAddr)
func (_BaseContentSpace *BaseContentSpaceFilterer) FilterRegisterNode(opts *bind.FilterOpts) (*BaseContentSpaceRegisterNodeIterator, error) {

	logs, sub, err := _BaseContentSpace.contract.FilterLogs(opts, "RegisterNode")
	if err != nil {
		return nil, err
	}
	return &BaseContentSpaceRegisterNodeIterator{contract: _BaseContentSpace.contract, event: "RegisterNode", logs: logs, sub: sub}, nil
}

// WatchRegisterNode is a free log subscription operation binding the contract event 0x4575facd117046c9c28b69a3eb9c08939f2462a5a22ea6c6dcd4f79b8dd124e9.
//
// Solidity: event RegisterNode(address nodeObjAddr)
func (_BaseContentSpace *BaseContentSpaceFilterer) WatchRegisterNode(opts *bind.WatchOpts, sink chan<- *BaseContentSpaceRegisterNode) (event.Subscription, error) {

	logs, sub, err := _BaseContentSpace.contract.WatchLogs(opts, "RegisterNode")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentSpaceRegisterNode)
				if err := _BaseContentSpace.contract.UnpackLog(event, "RegisterNode", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRegisterNode is a log parse operation binding the contract event 0x4575facd117046c9c28b69a3eb9c08939f2462a5a22ea6c6dcd4f79b8dd124e9.
//
// Solidity: event RegisterNode(address nodeObjAddr)
func (_BaseContentSpace *BaseContentSpaceFilterer) ParseRegisterNode(log types.Log) (*BaseContentSpaceRegisterNode, error) {
	event := new(BaseContentSpaceRegisterNode)
	if err := _BaseContentSpace.contract.UnpackLog(event, "RegisterNode", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentSpaceRemoveKMSLocatorIterator is returned from FilterRemoveKMSLocator and is used to iterate over the raw logs and unpacked data for RemoveKMSLocator events raised by the BaseContentSpace contract.
type BaseContentSpaceRemoveKMSLocatorIterator struct {
	Event *BaseContentSpaceRemoveKMSLocator // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentSpaceRemoveKMSLocatorIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentSpaceRemoveKMSLocator)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentSpaceRemoveKMSLocator)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentSpaceRemoveKMSLocatorIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentSpaceRemoveKMSLocatorIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentSpaceRemoveKMSLocator represents a RemoveKMSLocator event raised by the BaseContentSpace contract.
type BaseContentSpaceRemoveKMSLocator struct {
	Sender common.Address
	Status *big.Int
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterRemoveKMSLocator is a free log retrieval operation binding the contract event 0x5f463eb53cddf646852b82c0d9bdb1d1ec215c3802b780e8b7beea8b6e99f94c.
//
// Solidity: event RemoveKMSLocator(address sender, uint256 status)
func (_BaseContentSpace *BaseContentSpaceFilterer) FilterRemoveKMSLocator(opts *bind.FilterOpts) (*BaseContentSpaceRemoveKMSLocatorIterator, error) {

	logs, sub, err := _BaseContentSpace.contract.FilterLogs(opts, "RemoveKMSLocator")
	if err != nil {
		return nil, err
	}
	return &BaseContentSpaceRemoveKMSLocatorIterator{contract: _BaseContentSpace.contract, event: "RemoveKMSLocator", logs: logs, sub: sub}, nil
}

// WatchRemoveKMSLocator is a free log subscription operation binding the contract event 0x5f463eb53cddf646852b82c0d9bdb1d1ec215c3802b780e8b7beea8b6e99f94c.
//
// Solidity: event RemoveKMSLocator(address sender, uint256 status)
func (_BaseContentSpace *BaseContentSpaceFilterer) WatchRemoveKMSLocator(opts *bind.WatchOpts, sink chan<- *BaseContentSpaceRemoveKMSLocator) (event.Subscription, error) {

	logs, sub, err := _BaseContentSpace.contract.WatchLogs(opts, "RemoveKMSLocator")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentSpaceRemoveKMSLocator)
				if err := _BaseContentSpace.contract.UnpackLog(event, "RemoveKMSLocator", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRemoveKMSLocator is a log parse operation binding the contract event 0x5f463eb53cddf646852b82c0d9bdb1d1ec215c3802b780e8b7beea8b6e99f94c.
//
// Solidity: event RemoveKMSLocator(address sender, uint256 status)
func (_BaseContentSpace *BaseContentSpaceFilterer) ParseRemoveKMSLocator(log types.Log) (*BaseContentSpaceRemoveKMSLocator, error) {
	event := new(BaseContentSpaceRemoveKMSLocator)
	if err := _BaseContentSpace.contract.UnpackLog(event, "RemoveKMSLocator", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentSpaceRemoveNodeIterator is returned from FilterRemoveNode and is used to iterate over the raw logs and unpacked data for RemoveNode events raised by the BaseContentSpace contract.
type BaseContentSpaceRemoveNodeIterator struct {
	Event *BaseContentSpaceRemoveNode // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentSpaceRemoveNodeIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentSpaceRemoveNode)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentSpaceRemoveNode)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentSpaceRemoveNodeIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentSpaceRemoveNodeIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentSpaceRemoveNode represents a RemoveNode event raised by the BaseContentSpace contract.
type BaseContentSpaceRemoveNode struct {
	OwnerAddr common.Address
	NodeAddr  common.Address
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterRemoveNode is a free log retrieval operation binding the contract event 0x41ec5b9efdbf61871df6a18b687e04bea93d5793af5f8c8b4626e155b23dc19d.
//
// Solidity: event RemoveNode(address ownerAddr, address nodeAddr)
func (_BaseContentSpace *BaseContentSpaceFilterer) FilterRemoveNode(opts *bind.FilterOpts) (*BaseContentSpaceRemoveNodeIterator, error) {

	logs, sub, err := _BaseContentSpace.contract.FilterLogs(opts, "RemoveNode")
	if err != nil {
		return nil, err
	}
	return &BaseContentSpaceRemoveNodeIterator{contract: _BaseContentSpace.contract, event: "RemoveNode", logs: logs, sub: sub}, nil
}

// WatchRemoveNode is a free log subscription operation binding the contract event 0x41ec5b9efdbf61871df6a18b687e04bea93d5793af5f8c8b4626e155b23dc19d.
//
// Solidity: event RemoveNode(address ownerAddr, address nodeAddr)
func (_BaseContentSpace *BaseContentSpaceFilterer) WatchRemoveNode(opts *bind.WatchOpts, sink chan<- *BaseContentSpaceRemoveNode) (event.Subscription, error) {

	logs, sub, err := _BaseContentSpace.contract.WatchLogs(opts, "RemoveNode")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentSpaceRemoveNode)
				if err := _BaseContentSpace.contract.UnpackLog(event, "RemoveNode", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRemoveNode is a log parse operation binding the contract event 0x41ec5b9efdbf61871df6a18b687e04bea93d5793af5f8c8b4626e155b23dc19d.
//
// Solidity: event RemoveNode(address ownerAddr, address nodeAddr)
func (_BaseContentSpace *BaseContentSpaceFilterer) ParseRemoveNode(log types.Log) (*BaseContentSpaceRemoveNode, error) {
	event := new(BaseContentSpaceRemoveNode)
	if err := _BaseContentSpace.contract.UnpackLog(event, "RemoveNode", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentSpaceSetFactoryIterator is returned from FilterSetFactory and is used to iterate over the raw logs and unpacked data for SetFactory events raised by the BaseContentSpace contract.
type BaseContentSpaceSetFactoryIterator struct {
	Event *BaseContentSpaceSetFactory // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentSpaceSetFactoryIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentSpaceSetFactory)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentSpaceSetFactory)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentSpaceSetFactoryIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentSpaceSetFactoryIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentSpaceSetFactory represents a SetFactory event raised by the BaseContentSpace contract.
type BaseContentSpaceSetFactory struct {
	Factory common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterSetFactory is a free log retrieval operation binding the contract event 0x1c893ef9379093af30f458b9e74d2aba13c499660b68dec5e29af7b199c188b9.
//
// Solidity: event SetFactory(address factory)
func (_BaseContentSpace *BaseContentSpaceFilterer) FilterSetFactory(opts *bind.FilterOpts) (*BaseContentSpaceSetFactoryIterator, error) {

	logs, sub, err := _BaseContentSpace.contract.FilterLogs(opts, "SetFactory")
	if err != nil {
		return nil, err
	}
	return &BaseContentSpaceSetFactoryIterator{contract: _BaseContentSpace.contract, event: "SetFactory", logs: logs, sub: sub}, nil
}

// WatchSetFactory is a free log subscription operation binding the contract event 0x1c893ef9379093af30f458b9e74d2aba13c499660b68dec5e29af7b199c188b9.
//
// Solidity: event SetFactory(address factory)
func (_BaseContentSpace *BaseContentSpaceFilterer) WatchSetFactory(opts *bind.WatchOpts, sink chan<- *BaseContentSpaceSetFactory) (event.Subscription, error) {

	logs, sub, err := _BaseContentSpace.contract.WatchLogs(opts, "SetFactory")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentSpaceSetFactory)
				if err := _BaseContentSpace.contract.UnpackLog(event, "SetFactory", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseSetFactory is a log parse operation binding the contract event 0x1c893ef9379093af30f458b9e74d2aba13c499660b68dec5e29af7b199c188b9.
//
// Solidity: event SetFactory(address factory)
func (_BaseContentSpace *BaseContentSpaceFilterer) ParseSetFactory(log types.Log) (*BaseContentSpaceSetFactory, error) {
	event := new(BaseContentSpaceSetFactory)
	if err := _BaseContentSpace.contract.UnpackLog(event, "SetFactory", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentSpaceUnregisterNodeIterator is returned from FilterUnregisterNode and is used to iterate over the raw logs and unpacked data for UnregisterNode events raised by the BaseContentSpace contract.
type BaseContentSpaceUnregisterNodeIterator struct {
	Event *BaseContentSpaceUnregisterNode // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentSpaceUnregisterNodeIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentSpaceUnregisterNode)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentSpaceUnregisterNode)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentSpaceUnregisterNodeIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentSpaceUnregisterNodeIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentSpaceUnregisterNode represents a UnregisterNode event raised by the BaseContentSpace contract.
type BaseContentSpaceUnregisterNode struct {
	NodeObjAddr common.Address
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterUnregisterNode is a free log retrieval operation binding the contract event 0xb98695ab4c6cedb3b4dfe62479a9d39a59aa2cb38b8bd92bbb6ce5856e42bdf4.
//
// Solidity: event UnregisterNode(address nodeObjAddr)
func (_BaseContentSpace *BaseContentSpaceFilterer) FilterUnregisterNode(opts *bind.FilterOpts) (*BaseContentSpaceUnregisterNodeIterator, error) {

	logs, sub, err := _BaseContentSpace.contract.FilterLogs(opts, "UnregisterNode")
	if err != nil {
		return nil, err
	}
	return &BaseContentSpaceUnregisterNodeIterator{contract: _BaseContentSpace.contract, event: "UnregisterNode", logs: logs, sub: sub}, nil
}

// WatchUnregisterNode is a free log subscription operation binding the contract event 0xb98695ab4c6cedb3b4dfe62479a9d39a59aa2cb38b8bd92bbb6ce5856e42bdf4.
//
// Solidity: event UnregisterNode(address nodeObjAddr)
func (_BaseContentSpace *BaseContentSpaceFilterer) WatchUnregisterNode(opts *bind.WatchOpts, sink chan<- *BaseContentSpaceUnregisterNode) (event.Subscription, error) {

	logs, sub, err := _BaseContentSpace.contract.WatchLogs(opts, "UnregisterNode")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentSpaceUnregisterNode)
				if err := _BaseContentSpace.contract.UnpackLog(event, "UnregisterNode", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseUnregisterNode is a log parse operation binding the contract event 0xb98695ab4c6cedb3b4dfe62479a9d39a59aa2cb38b8bd92bbb6ce5856e42bdf4.
//
// Solidity: event UnregisterNode(address nodeObjAddr)
func (_BaseContentSpace *BaseContentSpaceFilterer) ParseUnregisterNode(log types.Log) (*BaseContentSpaceUnregisterNode, error) {
	event := new(BaseContentSpaceUnregisterNode)
	if err := _BaseContentSpace.contract.UnpackLog(event, "UnregisterNode", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentSpaceUpdateRequestIterator is returned from FilterUpdateRequest and is used to iterate over the raw logs and unpacked data for UpdateRequest events raised by the BaseContentSpace contract.
type BaseContentSpaceUpdateRequestIterator struct {
	Event *BaseContentSpaceUpdateRequest // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentSpaceUpdateRequestIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentSpaceUpdateRequest)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentSpaceUpdateRequest)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentSpaceUpdateRequestIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentSpaceUpdateRequestIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentSpaceUpdateRequest represents a UpdateRequest event raised by the BaseContentSpace contract.
type BaseContentSpaceUpdateRequest struct {
	ObjectHash string
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterUpdateRequest is a free log retrieval operation binding the contract event 0x403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b65.
//
// Solidity: event UpdateRequest(string objectHash)
func (_BaseContentSpace *BaseContentSpaceFilterer) FilterUpdateRequest(opts *bind.FilterOpts) (*BaseContentSpaceUpdateRequestIterator, error) {

	logs, sub, err := _BaseContentSpace.contract.FilterLogs(opts, "UpdateRequest")
	if err != nil {
		return nil, err
	}
	return &BaseContentSpaceUpdateRequestIterator{contract: _BaseContentSpace.contract, event: "UpdateRequest", logs: logs, sub: sub}, nil
}

// WatchUpdateRequest is a free log subscription operation binding the contract event 0x403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b65.
//
// Solidity: event UpdateRequest(string objectHash)
func (_BaseContentSpace *BaseContentSpaceFilterer) WatchUpdateRequest(opts *bind.WatchOpts, sink chan<- *BaseContentSpaceUpdateRequest) (event.Subscription, error) {

	logs, sub, err := _BaseContentSpace.contract.WatchLogs(opts, "UpdateRequest")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentSpaceUpdateRequest)
				if err := _BaseContentSpace.contract.UnpackLog(event, "UpdateRequest", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseUpdateRequest is a log parse operation binding the contract event 0x403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b65.
//
// Solidity: event UpdateRequest(string objectHash)
func (_BaseContentSpace *BaseContentSpaceFilterer) ParseUpdateRequest(log types.Log) (*BaseContentSpaceUpdateRequest, error) {
	event := new(BaseContentSpaceUpdateRequest)
	if err := _BaseContentSpace.contract.UnpackLog(event, "UpdateRequest", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentSpaceVersionConfirmIterator is returned from FilterVersionConfirm and is used to iterate over the raw logs and unpacked data for VersionConfirm events raised by the BaseContentSpace contract.
type BaseContentSpaceVersionConfirmIterator struct {
	Event *BaseContentSpaceVersionConfirm // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentSpaceVersionConfirmIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentSpaceVersionConfirm)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentSpaceVersionConfirm)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentSpaceVersionConfirmIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentSpaceVersionConfirmIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentSpaceVersionConfirm represents a VersionConfirm event raised by the BaseContentSpace contract.
type BaseContentSpaceVersionConfirm struct {
	SpaceAddress  common.Address
	ParentAddress common.Address
	ObjectHash    string
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterVersionConfirm is a free log retrieval operation binding the contract event 0xbdaffceabaaa783aa187fea6c2e815541d29e2290bf3f7d3c4fc53672b68f7df.
//
// Solidity: event VersionConfirm(address spaceAddress, address parentAddress, string objectHash)
func (_BaseContentSpace *BaseContentSpaceFilterer) FilterVersionConfirm(opts *bind.FilterOpts) (*BaseContentSpaceVersionConfirmIterator, error) {

	logs, sub, err := _BaseContentSpace.contract.FilterLogs(opts, "VersionConfirm")
	if err != nil {
		return nil, err
	}
	return &BaseContentSpaceVersionConfirmIterator{contract: _BaseContentSpace.contract, event: "VersionConfirm", logs: logs, sub: sub}, nil
}

// WatchVersionConfirm is a free log subscription operation binding the contract event 0xbdaffceabaaa783aa187fea6c2e815541d29e2290bf3f7d3c4fc53672b68f7df.
//
// Solidity: event VersionConfirm(address spaceAddress, address parentAddress, string objectHash)
func (_BaseContentSpace *BaseContentSpaceFilterer) WatchVersionConfirm(opts *bind.WatchOpts, sink chan<- *BaseContentSpaceVersionConfirm) (event.Subscription, error) {

	logs, sub, err := _BaseContentSpace.contract.WatchLogs(opts, "VersionConfirm")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentSpaceVersionConfirm)
				if err := _BaseContentSpace.contract.UnpackLog(event, "VersionConfirm", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseVersionConfirm is a log parse operation binding the contract event 0xbdaffceabaaa783aa187fea6c2e815541d29e2290bf3f7d3c4fc53672b68f7df.
//
// Solidity: event VersionConfirm(address spaceAddress, address parentAddress, string objectHash)
func (_BaseContentSpace *BaseContentSpaceFilterer) ParseVersionConfirm(log types.Log) (*BaseContentSpaceVersionConfirm, error) {
	event := new(BaseContentSpaceVersionConfirm)
	if err := _BaseContentSpace.contract.UnpackLog(event, "VersionConfirm", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentSpaceVersionDeleteIterator is returned from FilterVersionDelete and is used to iterate over the raw logs and unpacked data for VersionDelete events raised by the BaseContentSpace contract.
type BaseContentSpaceVersionDeleteIterator struct {
	Event *BaseContentSpaceVersionDelete // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentSpaceVersionDeleteIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentSpaceVersionDelete)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentSpaceVersionDelete)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentSpaceVersionDeleteIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentSpaceVersionDeleteIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentSpaceVersionDelete represents a VersionDelete event raised by the BaseContentSpace contract.
type BaseContentSpaceVersionDelete struct {
	SpaceAddress common.Address
	VersionHash  string
	Index        *big.Int
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterVersionDelete is a free log retrieval operation binding the contract event 0x238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51.
//
// Solidity: event VersionDelete(address spaceAddress, string versionHash, int256 index)
func (_BaseContentSpace *BaseContentSpaceFilterer) FilterVersionDelete(opts *bind.FilterOpts) (*BaseContentSpaceVersionDeleteIterator, error) {

	logs, sub, err := _BaseContentSpace.contract.FilterLogs(opts, "VersionDelete")
	if err != nil {
		return nil, err
	}
	return &BaseContentSpaceVersionDeleteIterator{contract: _BaseContentSpace.contract, event: "VersionDelete", logs: logs, sub: sub}, nil
}

// WatchVersionDelete is a free log subscription operation binding the contract event 0x238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51.
//
// Solidity: event VersionDelete(address spaceAddress, string versionHash, int256 index)
func (_BaseContentSpace *BaseContentSpaceFilterer) WatchVersionDelete(opts *bind.WatchOpts, sink chan<- *BaseContentSpaceVersionDelete) (event.Subscription, error) {

	logs, sub, err := _BaseContentSpace.contract.WatchLogs(opts, "VersionDelete")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentSpaceVersionDelete)
				if err := _BaseContentSpace.contract.UnpackLog(event, "VersionDelete", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseVersionDelete is a log parse operation binding the contract event 0x238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51.
//
// Solidity: event VersionDelete(address spaceAddress, string versionHash, int256 index)
func (_BaseContentSpace *BaseContentSpaceFilterer) ParseVersionDelete(log types.Log) (*BaseContentSpaceVersionDelete, error) {
	event := new(BaseContentSpaceVersionDelete)
	if err := _BaseContentSpace.contract.UnpackLog(event, "VersionDelete", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentSpaceVisibilityChangedIterator is returned from FilterVisibilityChanged and is used to iterate over the raw logs and unpacked data for VisibilityChanged events raised by the BaseContentSpace contract.
type BaseContentSpaceVisibilityChangedIterator struct {
	Event *BaseContentSpaceVisibilityChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentSpaceVisibilityChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentSpaceVisibilityChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentSpaceVisibilityChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentSpaceVisibilityChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentSpaceVisibilityChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentSpaceVisibilityChanged represents a VisibilityChanged event raised by the BaseContentSpace contract.
type BaseContentSpaceVisibilityChanged struct {
	ContentSpace  common.Address
	ParentAddress common.Address
	Visibility    uint8
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterVisibilityChanged is a free log retrieval operation binding the contract event 0x369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500.
//
// Solidity: event VisibilityChanged(address contentSpace, address parentAddress, uint8 visibility)
func (_BaseContentSpace *BaseContentSpaceFilterer) FilterVisibilityChanged(opts *bind.FilterOpts) (*BaseContentSpaceVisibilityChangedIterator, error) {

	logs, sub, err := _BaseContentSpace.contract.FilterLogs(opts, "VisibilityChanged")
	if err != nil {
		return nil, err
	}
	return &BaseContentSpaceVisibilityChangedIterator{contract: _BaseContentSpace.contract, event: "VisibilityChanged", logs: logs, sub: sub}, nil
}

// WatchVisibilityChanged is a free log subscription operation binding the contract event 0x369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500.
//
// Solidity: event VisibilityChanged(address contentSpace, address parentAddress, uint8 visibility)
func (_BaseContentSpace *BaseContentSpaceFilterer) WatchVisibilityChanged(opts *bind.WatchOpts, sink chan<- *BaseContentSpaceVisibilityChanged) (event.Subscription, error) {

	logs, sub, err := _BaseContentSpace.contract.WatchLogs(opts, "VisibilityChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentSpaceVisibilityChanged)
				if err := _BaseContentSpace.contract.UnpackLog(event, "VisibilityChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseVisibilityChanged is a log parse operation binding the contract event 0x369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500.
//
// Solidity: event VisibilityChanged(address contentSpace, address parentAddress, uint8 visibility)
func (_BaseContentSpace *BaseContentSpaceFilterer) ParseVisibilityChanged(log types.Log) (*BaseContentSpaceVisibilityChanged, error) {
	event := new(BaseContentSpaceVisibilityChanged)
	if err := _BaseContentSpace.contract.UnpackLog(event, "VisibilityChanged", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentTypeABI is the input ABI used to generate the binding from.
const BaseContentTypeABI = "[{\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"content_space\",\"type\":\"address\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"contextHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestTimestamp\",\"type\":\"uint256\"}],\"name\":\"AccessRequestV3\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spaceAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"objectHash\",\"type\":\"string\"}],\"name\":\"CommitPending\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"objectHash\",\"type\":\"string\"}],\"name\":\"UpdateRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spaceAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"objectHash\",\"type\":\"string\"}],\"name\":\"VersionConfirm\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spaceAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"versionHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"index\",\"type\":\"int256\"}],\"name\":\"VersionDelete\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contentSpace\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"visibility\",\"type\":\"uint8\"}],\"name\":\"VisibilityChanged\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"CAN_ACCESS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CAN_EDIT\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CAN_SEE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"addresspayable[]\",\"name\":\"\",\"type\":\"address[]\"}],\"name\":\"accessRequestV3\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canCommit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canConfirm\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canEdit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"clearPending\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_objectHash\",\"type\":\"string\"}],\"name\":\"commit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"commitPending\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"confirmCommit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentSpace\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"countVersionHashes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_versionHash\",\"type\":\"string\"}],\"name\":\"deleteVersion\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"hasAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"hasEditorRight\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"indexCategory\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"objectHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"objectTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"parentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"group\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setGroupRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"stakeholder\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_visibility_code\",\"type\":\"uint8\"}],\"name\":\"setVisibility\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newCreator\",\"type\":\"address\"}],\"name\":\"transferCreatorship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"updateRequest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"versionAPI\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"versionHashes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"versionTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"visibility\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// BaseContentTypeFuncSigs maps the 4-byte function signature to its string representation.
var BaseContentTypeFuncSigs = map[string]string{
	"97ac4fd2": "CAN_ACCESS()",
	"ef1d7dc2": "CAN_EDIT()",
	"100508a2": "CAN_SEE()",
	"1bf7a912": "accessRequestV3(bytes32[],address[])",
	"6e375427": "canCommit()",
	"14cfabb3": "canConfirm()",
	"81beeb64": "canEdit()",
	"5f6a1301": "clearPending()",
	"9867db74": "commit(string)",
	"375a6e7c": "commitPending()",
	"446e8826": "confirmCommit()",
	"af570c04": "contentSpace()",
	"331b86c0": "countVersionHashes()",
	"02d05d3f": "creator()",
	"e1a70717": "deleteVersion(string)",
	"95a078e8": "hasAccess(address)",
	"67e5c3bf": "hasEditorRight(address)",
	"6380501f": "indexCategory()",
	"41c0e1b5": "kill()",
	"e02dd9c2": "objectHash()",
	"40b87a26": "objectTimestamp()",
	"8da5cb5b": "owner()",
	"00821de3": "parentAddress()",
	"628449fd": "pendingHash()",
	"22e564eb": "setGroupRights(address,uint8,uint8)",
	"0fe1b5a2": "setRights(address,uint8,uint8)",
	"aa024e8b": "setVisibility(uint8)",
	"6d2e4b1b": "transferCreatorship(address)",
	"f2fde38b": "transferOwnership(address)",
	"c287e0ed": "updateRequest()",
	"54fd4d50": "version()",
	"5f4fcae1": "versionAPI()",
	"7ca8f618": "versionHashes(uint256)",
	"7886f747": "versionTimestamp(uint256)",
	"29adec14": "visibility()",
}

// BaseContentTypeBin is the compiled bytecode used for deploying new contracts.
var BaseContentTypeBin = "0x608060408190527f4f776e61626c653230323030393238313130303030504f000000000000000000600055620332e360ec1b60019081557f41636365737369626c653230323030363236313231363030504f0000000000006005556006805460ff191690911761ff00191690557f4564697461626c653230323030393238313130303030504f00000000000000006007557f42617365436f6e74656e745479706532303230303331363133353130304d4c00600e556121a438819003908190833981810160405260208110156100d457600080fd5b505160028054326001600160a01b0319918216179091556003805433908316179055600480549091166001600160a01b039092169190911790556006805461ffff19166104001790556120788061012c6000396000f3fe6080604052600436106102035760003560e01c80636380501f1161011857806397ac4fd2116100a0578063c287e0ed1161006f578063c287e0ed146107df578063e02dd9c2146107f4578063e1a7071714610809578063ef1d7dc2146108ba578063f2fde38b146108cf57610203565b806397ac4fd2146106d75780639867db74146106ec578063aa024e8b1461079d578063af570c04146107ca57610203565b80637886f747116100e75780637886f747146106265780637ca8f6181461065057806381beeb641461067a5780638da5cb5b1461068f57806395a078e8146106a457610203565b80636380501f1461059657806367e5c3bf146105ab5780636d2e4b1b146105de5780636e3754271461061157610203565b8063331b86c01161019b578063446e88261161016a578063446e8826146104c557806354fd4d50146104cd5780635f4fcae1146104e25780635f6a1301146104f7578063628449fd1461050c57610203565b8063331b86c01461045f578063375a6e7c1461048657806340b87a261461049b57806341c0e1b5146104b057610203565b806314cfabb3116101d757806314cfabb3146102ba5780631bf7a912146102e357806322e564eb1461040657806329adec141461044a57610203565b8062821de31461020557806302d05d3f146102365780630fe1b5a21461024b578063100508a21461028f575b005b34801561021157600080fd5b5061021a610902565b604080516001600160a01b039092168252519081900360200190f35b34801561024257600080fd5b5061021a610912565b34801561025757600080fd5b506102036004803603606081101561026e57600080fd5b506001600160a01b038135169060ff60208201358116916040013516610921565b34801561029b57600080fd5b506102a46109e6565b6040805160ff9092168252519081900360200190f35b3480156102c657600080fd5b506102cf6109eb565b604080519115158252519081900360200190f35b6102cf600480360360408110156102f957600080fd5b810190602081018135600160201b81111561031357600080fd5b82018360208201111561032557600080fd5b803590602001918460208302840111600160201b8311171561034657600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561039557600080fd5b8201836020820111156103a757600080fd5b803590602001918460208302840111600160201b831117156103c857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610a6f945050505050565b34801561041257600080fd5b506102036004803603606081101561042957600080fd5b506001600160a01b038135169060ff60208201358116916040013516610b0a565b34801561045657600080fd5b506102a4610f50565b34801561046b57600080fd5b50610474610f59565b60408051918252519081900360200190f35b34801561049257600080fd5b506102cf610f5f565b3480156104a757600080fd5b50610474610f68565b3480156104bc57600080fd5b50610203610f6e565b6102cf610f93565b3480156104d957600080fd5b5061047461118f565b3480156104ee57600080fd5b50610474611195565b34801561050357600080fd5b5061020361119b565b34801561051857600080fd5b506105216111d7565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561055b578181015183820152602001610543565b50505050905090810190601f1680156105885780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156105a257600080fd5b506102a4611265565b3480156105b757600080fd5b506102cf600480360360208110156105ce57600080fd5b50356001600160a01b0316611273565b3480156105ea57600080fd5b506102036004803603602081101561060157600080fd5b50356001600160a01b03166113d5565b34801561061d57600080fd5b506102cf611421565b34801561063257600080fd5b506104746004803603602081101561064957600080fd5b5035611430565b34801561065c57600080fd5b506105216004803603602081101561067357600080fd5b503561144e565b34801561068657600080fd5b506102cf6114c1565b34801561069b57600080fd5b5061021a6114cc565b3480156106b057600080fd5b506102cf600480360360208110156106c757600080fd5b50356001600160a01b03166114db565b3480156106e357600080fd5b506102a46115ff565b3480156106f857600080fd5b506102036004803603602081101561070f57600080fd5b810190602081018135600160201b81111561072957600080fd5b82018360208201111561073b57600080fd5b803590602001918460018302840111600160201b8311171561075c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611604945050505050565b3480156107a957600080fd5b50610203600480360360208110156107c057600080fd5b503560ff1661172f565b3480156107d657600080fd5b5061021a6117a7565b3480156107eb57600080fd5b506102036117b6565b34801561080057600080fd5b50610521611876565b34801561081557600080fd5b506104746004803603602081101561082c57600080fd5b810190602081018135600160201b81111561084657600080fd5b82018360208201111561085857600080fd5b803590602001918460018302840111600160201b8311171561087957600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506118d1945050505050565b3480156108c657600080fd5b506102a4611d37565b3480156108db57600080fd5b50610203600480360360208110156108f257600080fd5b50356001600160a01b0316611d3c565b6004546001600160a01b03165b90565b6002546001600160a01b031681565b6109296114c1565b61093257600080fd5b60048054604080516363e6ffdd60e01b81526001600160a01b03878116948201949094529051929091169160009183916363e6ffdd91602480820192602092909190829003018186803b15801561098857600080fd5b505afa15801561099c573d6000803e3d6000fd5b505050506040513d60208110156109b257600080fd5b505190506001600160a01b0381166109d4576109cf858585610b0a565b6109df565b6109df818585610b0a565b5050505050565b600181565b600480546040805163099a0f8560e21b81523393810193909352516000926001600160a01b039092169182916326683e1491602480820192602092909190829003018186803b158015610a3d57600080fd5b505afa158015610a51573d6000803e3d6000fd5b505050506040513d6020811015610a6757600080fd5b505191505090565b6000610a7a336114db565b610a8357600080fd5b604080513060601b60208083019190915242603480840182905284518085039091018152605484018086528151919093012090915260006074830181905260948301523360b48301526103e80260d482015290517f545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c79181900360f40190a150600192915050565b6000839050806001600160a01b031663091600e66040518163ffffffff1660e01b815260040160206040518083038186803b158015610b4857600080fd5b505afa158015610b5c573d6000803e3d6000fd5b505050506040513d6020811015610b7257600080fd5b5051600654610100900460ff90811691161415610bfd576040805162f7bd4560e61b815230600482015260ff80861660248301528416604482015290516001600160a01b03831691633def514091606480830192600092919082900301818387803b158015610be057600080fd5b505af1158015610bf4573d6000803e3d6000fd5b50505050610f4a565b806001600160a01b03166312915a306040518163ffffffff1660e01b815260040160206040518083038186803b158015610c3657600080fd5b505afa158015610c4a573d6000803e3d6000fd5b505050506040513d6020811015610c6057600080fd5b5051600654610100900460ff90811691161415610ccf576040805163f17bda9160e01b815230600482015260ff80861660248301528416604482015290516001600160a01b0383169163f17bda9191606480830192600092919082900301818387803b158015610be057600080fd5b806001600160a01b03166316aed2326040518163ffffffff1660e01b815260040160206040518083038186803b158015610d0857600080fd5b505afa158015610d1c573d6000803e3d6000fd5b505050506040513d6020811015610d3257600080fd5b5051600654610100900460ff90811691161415610da15760408051633e5dbdf960e11b815230600482015260ff80861660248301528416604482015290516001600160a01b03831691637cbb7bf291606480830192600092919082900301818387803b158015610be057600080fd5b806001600160a01b03166368a0469a6040518163ffffffff1660e01b815260040160206040518083038186803b158015610dda57600080fd5b505afa158015610dee573d6000803e3d6000fd5b505050506040513d6020811015610e0457600080fd5b5051600654610100900460ff90811691161415610e735760408051638635adb560e01b815230600482015260ff80861660248301528416604482015290516001600160a01b03831691638635adb591606480830192600092919082900301818387803b158015610be057600080fd5b806001600160a01b0316636373a4116040518163ffffffff1660e01b815260040160206040518083038186803b158015610eac57600080fd5b505afa158015610ec0573d6000803e3d6000fd5b505050506040513d6020811015610ed657600080fd5b5051600654610100900460ff90811691161415610f4557604080516301126e5d60e51b815230600482015260ff80861660248301528416604482015290516001600160a01b0383169163224dcba091606480830192600092919082900301818387803b158015610be057600080fd5b600080fd5b50505050565b60065460ff1681565b600a5490565b600d5460ff1681565b60095481565b6003546001600160a01b03163314610f8557600080fd5b6003546001600160a01b0316ff5b6000610f9d6109eb565b610fa657600080fd5b600d5460ff16610fb557600080fd5b600854600260001961010060018416150201909116041561106057600a8054600181810180845560009390935260088054611027937fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80192600261010091831615919091026000190190911604611e86565b5050600954600b80546001810182556000919091527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db901555b600c80546110839160089160026000196101006001841615020190911604611e86565b50426009556040805160208101918290526000908190526110a691600c91611f0b565b50600d805460ff191690556004547fbdaffceabaaa783aa187fea6c2e815541d29e2290bf3f7d3c4fc53672b68f7df906001600160a01b03166110e7610902565b604080516001600160a01b0380851682528316602082015260609181018281526008805460026000196101006001841615020190911604938301849052926080830190849080156111795780601f1061114e57610100808354040283529160200191611179565b820191906000526020600020905b81548152906001019060200180831161115c57829003601f168201915b505094505050505060405180910390a150600190565b600e5481565b60015481565b6111a3611421565b6111ac57600080fd5b6040805160208101918290526000908190526111ca91600c91611f0b565b50600d805460ff19169055565b600c805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561125d5780601f106112325761010080835404028352916020019161125d565b820191906000526020600020905b81548152906001019060200180831161124057829003601f168201915b505050505081565b600654610100900460ff1681565b6003546000906001600160a01b038381169116148061129a5750600654606460ff90911610155b156112a7575060016113d0565b600654610100900460ff16156113cc5760048054604080516363e6ffdd60e01b81526001600160a01b03868116948201949094529051600093909216916363e6ffdd91602480820192602092909190829003018186803b15801561130a57600080fd5b505afa15801561131e573d6000803e3d6000fd5b505050506040513d602081101561133457600080fd5b505160065460408051633fda978d60e11b815261010090920460ff16600483015230602483015260026044830152519192506001600160a01b03831691637fb52f1a91606480820192602092909190829003018186803b15801561139757600080fd5b505afa1580156113ab573d6000803e3d6000fd5b505050506040513d60208110156113c157600080fd5b505191506113d09050565b5060005b919050565b6002546001600160a01b031633146113ec57600080fd5b6001600160a01b0381166113ff57600080fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600061142b6114c1565b905090565b600b818154811061143d57fe5b600091825260209091200154905081565b600a818154811061145b57fe5b600091825260209182902001805460408051601f600260001961010060018716150201909416939093049283018590048502810185019091528181529350909183018282801561125d5780601f106112325761010080835404028352916020019161125d565b600061142b33611273565b6003546001600160a01b031681565b6003546000906001600160a01b03838116911614806115025750600654600a60ff90911610155b1561150f575060016113d0565b600654610100900460ff16156113cc5760048054604080516363e6ffdd60e01b81526001600160a01b03868116948201949094529051600093909216916363e6ffdd91602480820192602092909190829003018186803b15801561157257600080fd5b505afa158015611586573d6000803e3d6000fd5b505050506040513d602081101561159c57600080fd5b505160065460408051633fda978d60e11b815261010090920460ff16600483015230602483015260016044830152519192506001600160a01b03831691637fb52f1a91606480820192602092909190829003018186803b15801561139757600080fd5b600a81565b61160c611421565b61161557600080fd5b600d5460ff161561162557600080fd5b608081511061163357600080fd5b805161164690600c906020840190611f0b565b50600d805460ff191660011790556004547fb3ac059d88af6016aca1aebb7b3e796f2e7420435c59c563687814e9b85daa75906001600160a01b031661168a610902565b604080516001600160a01b038085168252831660208201526060918101828152600c8054600260001961010060018416150201909116049383018490529260808301908490801561171c5780601f106116f15761010080835404028352916020019161171c565b820191906000526020600020905b8154815290600101906020018083116116ff57829003601f168201915b505094505050505060405180910390a150565b6117376114c1565b61174057600080fd5b6006805460ff191660ff8381169190911791829055600454604080516001600160a01b039092168083526020830152929091168183015290517f369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500916060908290030190a150565b6004546001600160a01b031681565b6117be6114c1565b6117c757600080fd5b60408051602080825260088054600260001961010060018416150201909116049183018290527f403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b65939092918291820190849080156118665780601f1061183b57610100808354040283529160200191611866565b820191906000526020600020905b81548152906001019060200180831161184957829003601f168201915b50509250505060405180910390a1565b6008805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561125d5780601f106112325761010080835404028352916020019161125d565b60006118db611421565b6118e457600080fd5b6000826040516020018082805190602001908083835b602083106119195780518252601f1990920191602091820191016118fa565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012090506000600860405160200180828054600181600116156101000203166002900480156119b85780601f106119965761010080835404028352918201916119b8565b820191906000526020600020905b8154815290600101906020018083116119a4575b505091505060405160208183030381529060405280519060200120905080821415611b8857600a54611a0d57604080516020810191829052600090819052611a0291600891611f0b565b506000600955611aac565b600080805b600a54811015611a615781600b8281548110611a2a57fe5b90600052602060002001541115611a5957809250600b8181548110611a4b57fe5b906000526020600020015491505b600101611a12565b50600a8281548110611a6f57fe5b9060005260206000200160089080546001816001161561010002031660029004611a9a929190611e86565b506009819055611aa982611d88565b50505b7f238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51600460009054906101000a90046001600160a01b031685600060405180846001600160a01b03166001600160a01b0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015611b41578181015183820152602001611b29565b50505050905090810190601f168015611b6e5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a16000925050506113d0565b60001960005b600a54811015611c4f576000600a8281548110611ba757fe5b906000526020600020016040516020018082805460018160011615610100020316600290048015611c0f5780601f10611bed576101008083540402835291820191611c0f565b820191906000526020600020905b815481529060010190602001808311611bfb575b505091505060405160208183030381529060405280519060200120905080851415611c4657611c3d82611d88565b81925050611c4f565b50600101611b8e565b50806000191415611c5f57600080fd5b7f238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51600460009054906101000a90046001600160a01b0316868360405180846001600160a01b03166001600160a01b0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015611cf3578181015183820152602001611cdb565b50505050905090810190601f168015611d205780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1949350505050565b606481565b6003546001600160a01b03163314611d5357600080fd5b6001600160a01b038116611d6657600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600a8181548110611d9557fe5b906000526020600020016000611dab9190611f79565b600b8181548110611db857fe5b6000918252602082200155600a54600019018114611e5a57600a80546000198101908110611de257fe5b90600052602060002001600a8281548110611df957fe5b906000526020600020019080546001816001161561010002031660029004611e22929190611e86565b50600b80546000198101908110611e3557fe5b9060005260206000200154600b8281548110611e4d57fe5b6000918252602090912001555b600a805490611e6d906000198301611fbd565b50600b805490611e81906000198301611fe6565b505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611ebf5780548555611efb565b82800160010185558215611efb57600052602060002091601f016020900482015b82811115611efb578254825591600101919060010190611ee0565b50611f07929150612006565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611f4c57805160ff1916838001178555611efb565b82800160010185558215611efb579182015b82811115611efb578251825591602001919060010190611f5e565b50805460018160011615610100020316600290046000825580601f10611f9f5750611e83565b601f016020900490600052602060002090810190611e839190612006565b815481835581811115611fe157600083815260209020611fe1918101908301612020565b505050565b815481835581811115611fe157600083815260209020611fe19181019083015b61090f91905b80821115611f07576000815560010161200c565b61090f91905b80821115611f0757600061203a8282611f79565b5060010161202656fea265627a7a72315820070c5fc629bad926f622f226cfd08ceb8e2a3a7be174ecff37a66d4cf1fd0e4a64736f6c63430005110032"

// DeployBaseContentType deploys a new Ethereum contract, binding an instance of BaseContentType to it.
func DeployBaseContentType(auth *bind.TransactOpts, backend bind.ContractBackend, content_space common.Address) (common.Address, *types.Transaction, *BaseContentType, error) {
	parsed, err := abi.JSON(strings.NewReader(BaseContentTypeABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(BaseContentTypeBin), backend, content_space)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &BaseContentType{BaseContentTypeCaller: BaseContentTypeCaller{contract: contract}, BaseContentTypeTransactor: BaseContentTypeTransactor{contract: contract}, BaseContentTypeFilterer: BaseContentTypeFilterer{contract: contract}}, nil
}

// BaseContentType is an auto generated Go binding around an Ethereum contract.
type BaseContentType struct {
	BaseContentTypeCaller     // Read-only binding to the contract
	BaseContentTypeTransactor // Write-only binding to the contract
	BaseContentTypeFilterer   // Log filterer for contract events
}

// BaseContentTypeCaller is an auto generated read-only Go binding around an Ethereum contract.
type BaseContentTypeCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseContentTypeTransactor is an auto generated write-only Go binding around an Ethereum contract.
type BaseContentTypeTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseContentTypeFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type BaseContentTypeFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseContentTypeSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type BaseContentTypeSession struct {
	Contract     *BaseContentType  // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// BaseContentTypeCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type BaseContentTypeCallerSession struct {
	Contract *BaseContentTypeCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts          // Call options to use throughout this session
}

// BaseContentTypeTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type BaseContentTypeTransactorSession struct {
	Contract     *BaseContentTypeTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts          // Transaction auth options to use throughout this session
}

// BaseContentTypeRaw is an auto generated low-level Go binding around an Ethereum contract.
type BaseContentTypeRaw struct {
	Contract *BaseContentType // Generic contract binding to access the raw methods on
}

// BaseContentTypeCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type BaseContentTypeCallerRaw struct {
	Contract *BaseContentTypeCaller // Generic read-only contract binding to access the raw methods on
}

// BaseContentTypeTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type BaseContentTypeTransactorRaw struct {
	Contract *BaseContentTypeTransactor // Generic write-only contract binding to access the raw methods on
}

// NewBaseContentType creates a new instance of BaseContentType, bound to a specific deployed contract.
func NewBaseContentType(address common.Address, backend bind.ContractBackend) (*BaseContentType, error) {
	contract, err := bindBaseContentType(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &BaseContentType{BaseContentTypeCaller: BaseContentTypeCaller{contract: contract}, BaseContentTypeTransactor: BaseContentTypeTransactor{contract: contract}, BaseContentTypeFilterer: BaseContentTypeFilterer{contract: contract}}, nil
}

// NewBaseContentTypeCaller creates a new read-only instance of BaseContentType, bound to a specific deployed contract.
func NewBaseContentTypeCaller(address common.Address, caller bind.ContractCaller) (*BaseContentTypeCaller, error) {
	contract, err := bindBaseContentType(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &BaseContentTypeCaller{contract: contract}, nil
}

// NewBaseContentTypeTransactor creates a new write-only instance of BaseContentType, bound to a specific deployed contract.
func NewBaseContentTypeTransactor(address common.Address, transactor bind.ContractTransactor) (*BaseContentTypeTransactor, error) {
	contract, err := bindBaseContentType(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &BaseContentTypeTransactor{contract: contract}, nil
}

// NewBaseContentTypeFilterer creates a new log filterer instance of BaseContentType, bound to a specific deployed contract.
func NewBaseContentTypeFilterer(address common.Address, filterer bind.ContractFilterer) (*BaseContentTypeFilterer, error) {
	contract, err := bindBaseContentType(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &BaseContentTypeFilterer{contract: contract}, nil
}

// bindBaseContentType binds a generic wrapper to an already deployed contract.
func bindBaseContentType(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(BaseContentTypeABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BaseContentType *BaseContentTypeRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BaseContentType.Contract.BaseContentTypeCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BaseContentType *BaseContentTypeRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseContentType.Contract.BaseContentTypeTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BaseContentType *BaseContentTypeRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BaseContentType.Contract.BaseContentTypeTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BaseContentType *BaseContentTypeCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BaseContentType.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BaseContentType *BaseContentTypeTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseContentType.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BaseContentType *BaseContentTypeTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BaseContentType.Contract.contract.Transact(opts, method, params...)
}

// CANACCESS is a free data retrieval call binding the contract method 0x97ac4fd2.
//
// Solidity: function CAN_ACCESS() constant returns(uint8)
func (_BaseContentType *BaseContentTypeCaller) CANACCESS(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseContentType.contract.Call(opts, out, "CAN_ACCESS")
	return *ret0, err
}

// CANACCESS is a free data retrieval call binding the contract method 0x97ac4fd2.
//
// Solidity: function CAN_ACCESS() constant returns(uint8)
func (_BaseContentType *BaseContentTypeSession) CANACCESS() (uint8, error) {
	return _BaseContentType.Contract.CANACCESS(&_BaseContentType.CallOpts)
}

// CANACCESS is a free data retrieval call binding the contract method 0x97ac4fd2.
//
// Solidity: function CAN_ACCESS() constant returns(uint8)
func (_BaseContentType *BaseContentTypeCallerSession) CANACCESS() (uint8, error) {
	return _BaseContentType.Contract.CANACCESS(&_BaseContentType.CallOpts)
}

// CANEDIT is a free data retrieval call binding the contract method 0xef1d7dc2.
//
// Solidity: function CAN_EDIT() constant returns(uint8)
func (_BaseContentType *BaseContentTypeCaller) CANEDIT(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseContentType.contract.Call(opts, out, "CAN_EDIT")
	return *ret0, err
}

// CANEDIT is a free data retrieval call binding the contract method 0xef1d7dc2.
//
// Solidity: function CAN_EDIT() constant returns(uint8)
func (_BaseContentType *BaseContentTypeSession) CANEDIT() (uint8, error) {
	return _BaseContentType.Contract.CANEDIT(&_BaseContentType.CallOpts)
}

// CANEDIT is a free data retrieval call binding the contract method 0xef1d7dc2.
//
// Solidity: function CAN_EDIT() constant returns(uint8)
func (_BaseContentType *BaseContentTypeCallerSession) CANEDIT() (uint8, error) {
	return _BaseContentType.Contract.CANEDIT(&_BaseContentType.CallOpts)
}

// CANSEE is a free data retrieval call binding the contract method 0x100508a2.
//
// Solidity: function CAN_SEE() constant returns(uint8)
func (_BaseContentType *BaseContentTypeCaller) CANSEE(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseContentType.contract.Call(opts, out, "CAN_SEE")
	return *ret0, err
}

// CANSEE is a free data retrieval call binding the contract method 0x100508a2.
//
// Solidity: function CAN_SEE() constant returns(uint8)
func (_BaseContentType *BaseContentTypeSession) CANSEE() (uint8, error) {
	return _BaseContentType.Contract.CANSEE(&_BaseContentType.CallOpts)
}

// CANSEE is a free data retrieval call binding the contract method 0x100508a2.
//
// Solidity: function CAN_SEE() constant returns(uint8)
func (_BaseContentType *BaseContentTypeCallerSession) CANSEE() (uint8, error) {
	return _BaseContentType.Contract.CANSEE(&_BaseContentType.CallOpts)
}

// CanCommit is a free data retrieval call binding the contract method 0x6e375427.
//
// Solidity: function canCommit() constant returns(bool)
func (_BaseContentType *BaseContentTypeCaller) CanCommit(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseContentType.contract.Call(opts, out, "canCommit")
	return *ret0, err
}

// CanCommit is a free data retrieval call binding the contract method 0x6e375427.
//
// Solidity: function canCommit() constant returns(bool)
func (_BaseContentType *BaseContentTypeSession) CanCommit() (bool, error) {
	return _BaseContentType.Contract.CanCommit(&_BaseContentType.CallOpts)
}

// CanCommit is a free data retrieval call binding the contract method 0x6e375427.
//
// Solidity: function canCommit() constant returns(bool)
func (_BaseContentType *BaseContentTypeCallerSession) CanCommit() (bool, error) {
	return _BaseContentType.Contract.CanCommit(&_BaseContentType.CallOpts)
}

// CanConfirm is a free data retrieval call binding the contract method 0x14cfabb3.
//
// Solidity: function canConfirm() constant returns(bool)
func (_BaseContentType *BaseContentTypeCaller) CanConfirm(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseContentType.contract.Call(opts, out, "canConfirm")
	return *ret0, err
}

// CanConfirm is a free data retrieval call binding the contract method 0x14cfabb3.
//
// Solidity: function canConfirm() constant returns(bool)
func (_BaseContentType *BaseContentTypeSession) CanConfirm() (bool, error) {
	return _BaseContentType.Contract.CanConfirm(&_BaseContentType.CallOpts)
}

// CanConfirm is a free data retrieval call binding the contract method 0x14cfabb3.
//
// Solidity: function canConfirm() constant returns(bool)
func (_BaseContentType *BaseContentTypeCallerSession) CanConfirm() (bool, error) {
	return _BaseContentType.Contract.CanConfirm(&_BaseContentType.CallOpts)
}

// CanEdit is a free data retrieval call binding the contract method 0x81beeb64.
//
// Solidity: function canEdit() constant returns(bool)
func (_BaseContentType *BaseContentTypeCaller) CanEdit(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseContentType.contract.Call(opts, out, "canEdit")
	return *ret0, err
}

// CanEdit is a free data retrieval call binding the contract method 0x81beeb64.
//
// Solidity: function canEdit() constant returns(bool)
func (_BaseContentType *BaseContentTypeSession) CanEdit() (bool, error) {
	return _BaseContentType.Contract.CanEdit(&_BaseContentType.CallOpts)
}

// CanEdit is a free data retrieval call binding the contract method 0x81beeb64.
//
// Solidity: function canEdit() constant returns(bool)
func (_BaseContentType *BaseContentTypeCallerSession) CanEdit() (bool, error) {
	return _BaseContentType.Contract.CanEdit(&_BaseContentType.CallOpts)
}

// CommitPending is a free data retrieval call binding the contract method 0x375a6e7c.
//
// Solidity: function commitPending() constant returns(bool)
func (_BaseContentType *BaseContentTypeCaller) CommitPending(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseContentType.contract.Call(opts, out, "commitPending")
	return *ret0, err
}

// CommitPending is a free data retrieval call binding the contract method 0x375a6e7c.
//
// Solidity: function commitPending() constant returns(bool)
func (_BaseContentType *BaseContentTypeSession) CommitPending() (bool, error) {
	return _BaseContentType.Contract.CommitPending(&_BaseContentType.CallOpts)
}

// CommitPending is a free data retrieval call binding the contract method 0x375a6e7c.
//
// Solidity: function commitPending() constant returns(bool)
func (_BaseContentType *BaseContentTypeCallerSession) CommitPending() (bool, error) {
	return _BaseContentType.Contract.CommitPending(&_BaseContentType.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseContentType *BaseContentTypeCaller) ContentSpace(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseContentType.contract.Call(opts, out, "contentSpace")
	return *ret0, err
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseContentType *BaseContentTypeSession) ContentSpace() (common.Address, error) {
	return _BaseContentType.Contract.ContentSpace(&_BaseContentType.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseContentType *BaseContentTypeCallerSession) ContentSpace() (common.Address, error) {
	return _BaseContentType.Contract.ContentSpace(&_BaseContentType.CallOpts)
}

// CountVersionHashes is a free data retrieval call binding the contract method 0x331b86c0.
//
// Solidity: function countVersionHashes() constant returns(uint256)
func (_BaseContentType *BaseContentTypeCaller) CountVersionHashes(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseContentType.contract.Call(opts, out, "countVersionHashes")
	return *ret0, err
}

// CountVersionHashes is a free data retrieval call binding the contract method 0x331b86c0.
//
// Solidity: function countVersionHashes() constant returns(uint256)
func (_BaseContentType *BaseContentTypeSession) CountVersionHashes() (*big.Int, error) {
	return _BaseContentType.Contract.CountVersionHashes(&_BaseContentType.CallOpts)
}

// CountVersionHashes is a free data retrieval call binding the contract method 0x331b86c0.
//
// Solidity: function countVersionHashes() constant returns(uint256)
func (_BaseContentType *BaseContentTypeCallerSession) CountVersionHashes() (*big.Int, error) {
	return _BaseContentType.Contract.CountVersionHashes(&_BaseContentType.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseContentType *BaseContentTypeCaller) Creator(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseContentType.contract.Call(opts, out, "creator")
	return *ret0, err
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseContentType *BaseContentTypeSession) Creator() (common.Address, error) {
	return _BaseContentType.Contract.Creator(&_BaseContentType.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseContentType *BaseContentTypeCallerSession) Creator() (common.Address, error) {
	return _BaseContentType.Contract.Creator(&_BaseContentType.CallOpts)
}

// HasAccess is a free data retrieval call binding the contract method 0x95a078e8.
//
// Solidity: function hasAccess(address candidate) constant returns(bool)
func (_BaseContentType *BaseContentTypeCaller) HasAccess(opts *bind.CallOpts, candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseContentType.contract.Call(opts, out, "hasAccess", candidate)
	return *ret0, err
}

// HasAccess is a free data retrieval call binding the contract method 0x95a078e8.
//
// Solidity: function hasAccess(address candidate) constant returns(bool)
func (_BaseContentType *BaseContentTypeSession) HasAccess(candidate common.Address) (bool, error) {
	return _BaseContentType.Contract.HasAccess(&_BaseContentType.CallOpts, candidate)
}

// HasAccess is a free data retrieval call binding the contract method 0x95a078e8.
//
// Solidity: function hasAccess(address candidate) constant returns(bool)
func (_BaseContentType *BaseContentTypeCallerSession) HasAccess(candidate common.Address) (bool, error) {
	return _BaseContentType.Contract.HasAccess(&_BaseContentType.CallOpts, candidate)
}

// HasEditorRight is a free data retrieval call binding the contract method 0x67e5c3bf.
//
// Solidity: function hasEditorRight(address candidate) constant returns(bool)
func (_BaseContentType *BaseContentTypeCaller) HasEditorRight(opts *bind.CallOpts, candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseContentType.contract.Call(opts, out, "hasEditorRight", candidate)
	return *ret0, err
}

// HasEditorRight is a free data retrieval call binding the contract method 0x67e5c3bf.
//
// Solidity: function hasEditorRight(address candidate) constant returns(bool)
func (_BaseContentType *BaseContentTypeSession) HasEditorRight(candidate common.Address) (bool, error) {
	return _BaseContentType.Contract.HasEditorRight(&_BaseContentType.CallOpts, candidate)
}

// HasEditorRight is a free data retrieval call binding the contract method 0x67e5c3bf.
//
// Solidity: function hasEditorRight(address candidate) constant returns(bool)
func (_BaseContentType *BaseContentTypeCallerSession) HasEditorRight(candidate common.Address) (bool, error) {
	return _BaseContentType.Contract.HasEditorRight(&_BaseContentType.CallOpts, candidate)
}

// IndexCategory is a free data retrieval call binding the contract method 0x6380501f.
//
// Solidity: function indexCategory() constant returns(uint8)
func (_BaseContentType *BaseContentTypeCaller) IndexCategory(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseContentType.contract.Call(opts, out, "indexCategory")
	return *ret0, err
}

// IndexCategory is a free data retrieval call binding the contract method 0x6380501f.
//
// Solidity: function indexCategory() constant returns(uint8)
func (_BaseContentType *BaseContentTypeSession) IndexCategory() (uint8, error) {
	return _BaseContentType.Contract.IndexCategory(&_BaseContentType.CallOpts)
}

// IndexCategory is a free data retrieval call binding the contract method 0x6380501f.
//
// Solidity: function indexCategory() constant returns(uint8)
func (_BaseContentType *BaseContentTypeCallerSession) IndexCategory() (uint8, error) {
	return _BaseContentType.Contract.IndexCategory(&_BaseContentType.CallOpts)
}

// ObjectHash is a free data retrieval call binding the contract method 0xe02dd9c2.
//
// Solidity: function objectHash() constant returns(string)
func (_BaseContentType *BaseContentTypeCaller) ObjectHash(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BaseContentType.contract.Call(opts, out, "objectHash")
	return *ret0, err
}

// ObjectHash is a free data retrieval call binding the contract method 0xe02dd9c2.
//
// Solidity: function objectHash() constant returns(string)
func (_BaseContentType *BaseContentTypeSession) ObjectHash() (string, error) {
	return _BaseContentType.Contract.ObjectHash(&_BaseContentType.CallOpts)
}

// ObjectHash is a free data retrieval call binding the contract method 0xe02dd9c2.
//
// Solidity: function objectHash() constant returns(string)
func (_BaseContentType *BaseContentTypeCallerSession) ObjectHash() (string, error) {
	return _BaseContentType.Contract.ObjectHash(&_BaseContentType.CallOpts)
}

// ObjectTimestamp is a free data retrieval call binding the contract method 0x40b87a26.
//
// Solidity: function objectTimestamp() constant returns(uint256)
func (_BaseContentType *BaseContentTypeCaller) ObjectTimestamp(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseContentType.contract.Call(opts, out, "objectTimestamp")
	return *ret0, err
}

// ObjectTimestamp is a free data retrieval call binding the contract method 0x40b87a26.
//
// Solidity: function objectTimestamp() constant returns(uint256)
func (_BaseContentType *BaseContentTypeSession) ObjectTimestamp() (*big.Int, error) {
	return _BaseContentType.Contract.ObjectTimestamp(&_BaseContentType.CallOpts)
}

// ObjectTimestamp is a free data retrieval call binding the contract method 0x40b87a26.
//
// Solidity: function objectTimestamp() constant returns(uint256)
func (_BaseContentType *BaseContentTypeCallerSession) ObjectTimestamp() (*big.Int, error) {
	return _BaseContentType.Contract.ObjectTimestamp(&_BaseContentType.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseContentType *BaseContentTypeCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseContentType.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseContentType *BaseContentTypeSession) Owner() (common.Address, error) {
	return _BaseContentType.Contract.Owner(&_BaseContentType.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseContentType *BaseContentTypeCallerSession) Owner() (common.Address, error) {
	return _BaseContentType.Contract.Owner(&_BaseContentType.CallOpts)
}

// ParentAddress is a free data retrieval call binding the contract method 0x00821de3.
//
// Solidity: function parentAddress() constant returns(address)
func (_BaseContentType *BaseContentTypeCaller) ParentAddress(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseContentType.contract.Call(opts, out, "parentAddress")
	return *ret0, err
}

// ParentAddress is a free data retrieval call binding the contract method 0x00821de3.
//
// Solidity: function parentAddress() constant returns(address)
func (_BaseContentType *BaseContentTypeSession) ParentAddress() (common.Address, error) {
	return _BaseContentType.Contract.ParentAddress(&_BaseContentType.CallOpts)
}

// ParentAddress is a free data retrieval call binding the contract method 0x00821de3.
//
// Solidity: function parentAddress() constant returns(address)
func (_BaseContentType *BaseContentTypeCallerSession) ParentAddress() (common.Address, error) {
	return _BaseContentType.Contract.ParentAddress(&_BaseContentType.CallOpts)
}

// PendingHash is a free data retrieval call binding the contract method 0x628449fd.
//
// Solidity: function pendingHash() constant returns(string)
func (_BaseContentType *BaseContentTypeCaller) PendingHash(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BaseContentType.contract.Call(opts, out, "pendingHash")
	return *ret0, err
}

// PendingHash is a free data retrieval call binding the contract method 0x628449fd.
//
// Solidity: function pendingHash() constant returns(string)
func (_BaseContentType *BaseContentTypeSession) PendingHash() (string, error) {
	return _BaseContentType.Contract.PendingHash(&_BaseContentType.CallOpts)
}

// PendingHash is a free data retrieval call binding the contract method 0x628449fd.
//
// Solidity: function pendingHash() constant returns(string)
func (_BaseContentType *BaseContentTypeCallerSession) PendingHash() (string, error) {
	return _BaseContentType.Contract.PendingHash(&_BaseContentType.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseContentType *BaseContentTypeCaller) Version(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _BaseContentType.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseContentType *BaseContentTypeSession) Version() ([32]byte, error) {
	return _BaseContentType.Contract.Version(&_BaseContentType.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseContentType *BaseContentTypeCallerSession) Version() ([32]byte, error) {
	return _BaseContentType.Contract.Version(&_BaseContentType.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseContentType *BaseContentTypeCaller) VersionAPI(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _BaseContentType.contract.Call(opts, out, "versionAPI")
	return *ret0, err
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseContentType *BaseContentTypeSession) VersionAPI() ([32]byte, error) {
	return _BaseContentType.Contract.VersionAPI(&_BaseContentType.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseContentType *BaseContentTypeCallerSession) VersionAPI() ([32]byte, error) {
	return _BaseContentType.Contract.VersionAPI(&_BaseContentType.CallOpts)
}

// VersionHashes is a free data retrieval call binding the contract method 0x7ca8f618.
//
// Solidity: function versionHashes(uint256 ) constant returns(string)
func (_BaseContentType *BaseContentTypeCaller) VersionHashes(opts *bind.CallOpts, arg0 *big.Int) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BaseContentType.contract.Call(opts, out, "versionHashes", arg0)
	return *ret0, err
}

// VersionHashes is a free data retrieval call binding the contract method 0x7ca8f618.
//
// Solidity: function versionHashes(uint256 ) constant returns(string)
func (_BaseContentType *BaseContentTypeSession) VersionHashes(arg0 *big.Int) (string, error) {
	return _BaseContentType.Contract.VersionHashes(&_BaseContentType.CallOpts, arg0)
}

// VersionHashes is a free data retrieval call binding the contract method 0x7ca8f618.
//
// Solidity: function versionHashes(uint256 ) constant returns(string)
func (_BaseContentType *BaseContentTypeCallerSession) VersionHashes(arg0 *big.Int) (string, error) {
	return _BaseContentType.Contract.VersionHashes(&_BaseContentType.CallOpts, arg0)
}

// VersionTimestamp is a free data retrieval call binding the contract method 0x7886f747.
//
// Solidity: function versionTimestamp(uint256 ) constant returns(uint256)
func (_BaseContentType *BaseContentTypeCaller) VersionTimestamp(opts *bind.CallOpts, arg0 *big.Int) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseContentType.contract.Call(opts, out, "versionTimestamp", arg0)
	return *ret0, err
}

// VersionTimestamp is a free data retrieval call binding the contract method 0x7886f747.
//
// Solidity: function versionTimestamp(uint256 ) constant returns(uint256)
func (_BaseContentType *BaseContentTypeSession) VersionTimestamp(arg0 *big.Int) (*big.Int, error) {
	return _BaseContentType.Contract.VersionTimestamp(&_BaseContentType.CallOpts, arg0)
}

// VersionTimestamp is a free data retrieval call binding the contract method 0x7886f747.
//
// Solidity: function versionTimestamp(uint256 ) constant returns(uint256)
func (_BaseContentType *BaseContentTypeCallerSession) VersionTimestamp(arg0 *big.Int) (*big.Int, error) {
	return _BaseContentType.Contract.VersionTimestamp(&_BaseContentType.CallOpts, arg0)
}

// Visibility is a free data retrieval call binding the contract method 0x29adec14.
//
// Solidity: function visibility() constant returns(uint8)
func (_BaseContentType *BaseContentTypeCaller) Visibility(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseContentType.contract.Call(opts, out, "visibility")
	return *ret0, err
}

// Visibility is a free data retrieval call binding the contract method 0x29adec14.
//
// Solidity: function visibility() constant returns(uint8)
func (_BaseContentType *BaseContentTypeSession) Visibility() (uint8, error) {
	return _BaseContentType.Contract.Visibility(&_BaseContentType.CallOpts)
}

// Visibility is a free data retrieval call binding the contract method 0x29adec14.
//
// Solidity: function visibility() constant returns(uint8)
func (_BaseContentType *BaseContentTypeCallerSession) Visibility() (uint8, error) {
	return _BaseContentType.Contract.Visibility(&_BaseContentType.CallOpts)
}

// AccessRequestV3 is a paid mutator transaction binding the contract method 0x1bf7a912.
//
// Solidity: function accessRequestV3(bytes32[] , address[] ) returns(bool)
func (_BaseContentType *BaseContentTypeTransactor) AccessRequestV3(opts *bind.TransactOpts, arg0 [][32]byte, arg1 []common.Address) (*types.Transaction, error) {
	return _BaseContentType.contract.Transact(opts, "accessRequestV3", arg0, arg1)
}

// AccessRequestV3 is a paid mutator transaction binding the contract method 0x1bf7a912.
//
// Solidity: function accessRequestV3(bytes32[] , address[] ) returns(bool)
func (_BaseContentType *BaseContentTypeSession) AccessRequestV3(arg0 [][32]byte, arg1 []common.Address) (*types.Transaction, error) {
	return _BaseContentType.Contract.AccessRequestV3(&_BaseContentType.TransactOpts, arg0, arg1)
}

// AccessRequestV3 is a paid mutator transaction binding the contract method 0x1bf7a912.
//
// Solidity: function accessRequestV3(bytes32[] , address[] ) returns(bool)
func (_BaseContentType *BaseContentTypeTransactorSession) AccessRequestV3(arg0 [][32]byte, arg1 []common.Address) (*types.Transaction, error) {
	return _BaseContentType.Contract.AccessRequestV3(&_BaseContentType.TransactOpts, arg0, arg1)
}

// ClearPending is a paid mutator transaction binding the contract method 0x5f6a1301.
//
// Solidity: function clearPending() returns()
func (_BaseContentType *BaseContentTypeTransactor) ClearPending(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseContentType.contract.Transact(opts, "clearPending")
}

// ClearPending is a paid mutator transaction binding the contract method 0x5f6a1301.
//
// Solidity: function clearPending() returns()
func (_BaseContentType *BaseContentTypeSession) ClearPending() (*types.Transaction, error) {
	return _BaseContentType.Contract.ClearPending(&_BaseContentType.TransactOpts)
}

// ClearPending is a paid mutator transaction binding the contract method 0x5f6a1301.
//
// Solidity: function clearPending() returns()
func (_BaseContentType *BaseContentTypeTransactorSession) ClearPending() (*types.Transaction, error) {
	return _BaseContentType.Contract.ClearPending(&_BaseContentType.TransactOpts)
}

// Commit is a paid mutator transaction binding the contract method 0x9867db74.
//
// Solidity: function commit(string _objectHash) returns()
func (_BaseContentType *BaseContentTypeTransactor) Commit(opts *bind.TransactOpts, _objectHash string) (*types.Transaction, error) {
	return _BaseContentType.contract.Transact(opts, "commit", _objectHash)
}

// Commit is a paid mutator transaction binding the contract method 0x9867db74.
//
// Solidity: function commit(string _objectHash) returns()
func (_BaseContentType *BaseContentTypeSession) Commit(_objectHash string) (*types.Transaction, error) {
	return _BaseContentType.Contract.Commit(&_BaseContentType.TransactOpts, _objectHash)
}

// Commit is a paid mutator transaction binding the contract method 0x9867db74.
//
// Solidity: function commit(string _objectHash) returns()
func (_BaseContentType *BaseContentTypeTransactorSession) Commit(_objectHash string) (*types.Transaction, error) {
	return _BaseContentType.Contract.Commit(&_BaseContentType.TransactOpts, _objectHash)
}

// ConfirmCommit is a paid mutator transaction binding the contract method 0x446e8826.
//
// Solidity: function confirmCommit() returns(bool)
func (_BaseContentType *BaseContentTypeTransactor) ConfirmCommit(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseContentType.contract.Transact(opts, "confirmCommit")
}

// ConfirmCommit is a paid mutator transaction binding the contract method 0x446e8826.
//
// Solidity: function confirmCommit() returns(bool)
func (_BaseContentType *BaseContentTypeSession) ConfirmCommit() (*types.Transaction, error) {
	return _BaseContentType.Contract.ConfirmCommit(&_BaseContentType.TransactOpts)
}

// ConfirmCommit is a paid mutator transaction binding the contract method 0x446e8826.
//
// Solidity: function confirmCommit() returns(bool)
func (_BaseContentType *BaseContentTypeTransactorSession) ConfirmCommit() (*types.Transaction, error) {
	return _BaseContentType.Contract.ConfirmCommit(&_BaseContentType.TransactOpts)
}

// DeleteVersion is a paid mutator transaction binding the contract method 0xe1a70717.
//
// Solidity: function deleteVersion(string _versionHash) returns(int256)
func (_BaseContentType *BaseContentTypeTransactor) DeleteVersion(opts *bind.TransactOpts, _versionHash string) (*types.Transaction, error) {
	return _BaseContentType.contract.Transact(opts, "deleteVersion", _versionHash)
}

// DeleteVersion is a paid mutator transaction binding the contract method 0xe1a70717.
//
// Solidity: function deleteVersion(string _versionHash) returns(int256)
func (_BaseContentType *BaseContentTypeSession) DeleteVersion(_versionHash string) (*types.Transaction, error) {
	return _BaseContentType.Contract.DeleteVersion(&_BaseContentType.TransactOpts, _versionHash)
}

// DeleteVersion is a paid mutator transaction binding the contract method 0xe1a70717.
//
// Solidity: function deleteVersion(string _versionHash) returns(int256)
func (_BaseContentType *BaseContentTypeTransactorSession) DeleteVersion(_versionHash string) (*types.Transaction, error) {
	return _BaseContentType.Contract.DeleteVersion(&_BaseContentType.TransactOpts, _versionHash)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseContentType *BaseContentTypeTransactor) Kill(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseContentType.contract.Transact(opts, "kill")
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseContentType *BaseContentTypeSession) Kill() (*types.Transaction, error) {
	return _BaseContentType.Contract.Kill(&_BaseContentType.TransactOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseContentType *BaseContentTypeTransactorSession) Kill() (*types.Transaction, error) {
	return _BaseContentType.Contract.Kill(&_BaseContentType.TransactOpts)
}

// SetGroupRights is a paid mutator transaction binding the contract method 0x22e564eb.
//
// Solidity: function setGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_BaseContentType *BaseContentTypeTransactor) SetGroupRights(opts *bind.TransactOpts, group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseContentType.contract.Transact(opts, "setGroupRights", group, access_type, access)
}

// SetGroupRights is a paid mutator transaction binding the contract method 0x22e564eb.
//
// Solidity: function setGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_BaseContentType *BaseContentTypeSession) SetGroupRights(group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseContentType.Contract.SetGroupRights(&_BaseContentType.TransactOpts, group, access_type, access)
}

// SetGroupRights is a paid mutator transaction binding the contract method 0x22e564eb.
//
// Solidity: function setGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_BaseContentType *BaseContentTypeTransactorSession) SetGroupRights(group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseContentType.Contract.SetGroupRights(&_BaseContentType.TransactOpts, group, access_type, access)
}

// SetRights is a paid mutator transaction binding the contract method 0x0fe1b5a2.
//
// Solidity: function setRights(address stakeholder, uint8 access_type, uint8 access) returns()
func (_BaseContentType *BaseContentTypeTransactor) SetRights(opts *bind.TransactOpts, stakeholder common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseContentType.contract.Transact(opts, "setRights", stakeholder, access_type, access)
}

// SetRights is a paid mutator transaction binding the contract method 0x0fe1b5a2.
//
// Solidity: function setRights(address stakeholder, uint8 access_type, uint8 access) returns()
func (_BaseContentType *BaseContentTypeSession) SetRights(stakeholder common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseContentType.Contract.SetRights(&_BaseContentType.TransactOpts, stakeholder, access_type, access)
}

// SetRights is a paid mutator transaction binding the contract method 0x0fe1b5a2.
//
// Solidity: function setRights(address stakeholder, uint8 access_type, uint8 access) returns()
func (_BaseContentType *BaseContentTypeTransactorSession) SetRights(stakeholder common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseContentType.Contract.SetRights(&_BaseContentType.TransactOpts, stakeholder, access_type, access)
}

// SetVisibility is a paid mutator transaction binding the contract method 0xaa024e8b.
//
// Solidity: function setVisibility(uint8 _visibility_code) returns()
func (_BaseContentType *BaseContentTypeTransactor) SetVisibility(opts *bind.TransactOpts, _visibility_code uint8) (*types.Transaction, error) {
	return _BaseContentType.contract.Transact(opts, "setVisibility", _visibility_code)
}

// SetVisibility is a paid mutator transaction binding the contract method 0xaa024e8b.
//
// Solidity: function setVisibility(uint8 _visibility_code) returns()
func (_BaseContentType *BaseContentTypeSession) SetVisibility(_visibility_code uint8) (*types.Transaction, error) {
	return _BaseContentType.Contract.SetVisibility(&_BaseContentType.TransactOpts, _visibility_code)
}

// SetVisibility is a paid mutator transaction binding the contract method 0xaa024e8b.
//
// Solidity: function setVisibility(uint8 _visibility_code) returns()
func (_BaseContentType *BaseContentTypeTransactorSession) SetVisibility(_visibility_code uint8) (*types.Transaction, error) {
	return _BaseContentType.Contract.SetVisibility(&_BaseContentType.TransactOpts, _visibility_code)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseContentType *BaseContentTypeTransactor) TransferCreatorship(opts *bind.TransactOpts, newCreator common.Address) (*types.Transaction, error) {
	return _BaseContentType.contract.Transact(opts, "transferCreatorship", newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseContentType *BaseContentTypeSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _BaseContentType.Contract.TransferCreatorship(&_BaseContentType.TransactOpts, newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseContentType *BaseContentTypeTransactorSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _BaseContentType.Contract.TransferCreatorship(&_BaseContentType.TransactOpts, newCreator)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseContentType *BaseContentTypeTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _BaseContentType.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseContentType *BaseContentTypeSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _BaseContentType.Contract.TransferOwnership(&_BaseContentType.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseContentType *BaseContentTypeTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _BaseContentType.Contract.TransferOwnership(&_BaseContentType.TransactOpts, newOwner)
}

// UpdateRequest is a paid mutator transaction binding the contract method 0xc287e0ed.
//
// Solidity: function updateRequest() returns()
func (_BaseContentType *BaseContentTypeTransactor) UpdateRequest(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseContentType.contract.Transact(opts, "updateRequest")
}

// UpdateRequest is a paid mutator transaction binding the contract method 0xc287e0ed.
//
// Solidity: function updateRequest() returns()
func (_BaseContentType *BaseContentTypeSession) UpdateRequest() (*types.Transaction, error) {
	return _BaseContentType.Contract.UpdateRequest(&_BaseContentType.TransactOpts)
}

// UpdateRequest is a paid mutator transaction binding the contract method 0xc287e0ed.
//
// Solidity: function updateRequest() returns()
func (_BaseContentType *BaseContentTypeTransactorSession) UpdateRequest() (*types.Transaction, error) {
	return _BaseContentType.Contract.UpdateRequest(&_BaseContentType.TransactOpts)
}

// BaseContentTypeAccessRequestV3Iterator is returned from FilterAccessRequestV3 and is used to iterate over the raw logs and unpacked data for AccessRequestV3 events raised by the BaseContentType contract.
type BaseContentTypeAccessRequestV3Iterator struct {
	Event *BaseContentTypeAccessRequestV3 // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentTypeAccessRequestV3Iterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentTypeAccessRequestV3)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentTypeAccessRequestV3)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentTypeAccessRequestV3Iterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentTypeAccessRequestV3Iterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentTypeAccessRequestV3 represents a AccessRequestV3 event raised by the BaseContentType contract.
type BaseContentTypeAccessRequestV3 struct {
	RequestNonce     *big.Int
	ParentAddress    common.Address
	ContextHash      [32]byte
	Accessor         common.Address
	RequestTimestamp *big.Int
	Raw              types.Log // Blockchain specific contextual infos
}

// FilterAccessRequestV3 is a free log retrieval operation binding the contract event 0x545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c7.
//
// Solidity: event AccessRequestV3(uint256 requestNonce, address parentAddress, bytes32 contextHash, address accessor, uint256 requestTimestamp)
func (_BaseContentType *BaseContentTypeFilterer) FilterAccessRequestV3(opts *bind.FilterOpts) (*BaseContentTypeAccessRequestV3Iterator, error) {

	logs, sub, err := _BaseContentType.contract.FilterLogs(opts, "AccessRequestV3")
	if err != nil {
		return nil, err
	}
	return &BaseContentTypeAccessRequestV3Iterator{contract: _BaseContentType.contract, event: "AccessRequestV3", logs: logs, sub: sub}, nil
}

// WatchAccessRequestV3 is a free log subscription operation binding the contract event 0x545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c7.
//
// Solidity: event AccessRequestV3(uint256 requestNonce, address parentAddress, bytes32 contextHash, address accessor, uint256 requestTimestamp)
func (_BaseContentType *BaseContentTypeFilterer) WatchAccessRequestV3(opts *bind.WatchOpts, sink chan<- *BaseContentTypeAccessRequestV3) (event.Subscription, error) {

	logs, sub, err := _BaseContentType.contract.WatchLogs(opts, "AccessRequestV3")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentTypeAccessRequestV3)
				if err := _BaseContentType.contract.UnpackLog(event, "AccessRequestV3", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAccessRequestV3 is a log parse operation binding the contract event 0x545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c7.
//
// Solidity: event AccessRequestV3(uint256 requestNonce, address parentAddress, bytes32 contextHash, address accessor, uint256 requestTimestamp)
func (_BaseContentType *BaseContentTypeFilterer) ParseAccessRequestV3(log types.Log) (*BaseContentTypeAccessRequestV3, error) {
	event := new(BaseContentTypeAccessRequestV3)
	if err := _BaseContentType.contract.UnpackLog(event, "AccessRequestV3", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentTypeCommitPendingIterator is returned from FilterCommitPending and is used to iterate over the raw logs and unpacked data for CommitPending events raised by the BaseContentType contract.
type BaseContentTypeCommitPendingIterator struct {
	Event *BaseContentTypeCommitPending // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentTypeCommitPendingIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentTypeCommitPending)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentTypeCommitPending)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentTypeCommitPendingIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentTypeCommitPendingIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentTypeCommitPending represents a CommitPending event raised by the BaseContentType contract.
type BaseContentTypeCommitPending struct {
	SpaceAddress  common.Address
	ParentAddress common.Address
	ObjectHash    string
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterCommitPending is a free log retrieval operation binding the contract event 0xb3ac059d88af6016aca1aebb7b3e796f2e7420435c59c563687814e9b85daa75.
//
// Solidity: event CommitPending(address spaceAddress, address parentAddress, string objectHash)
func (_BaseContentType *BaseContentTypeFilterer) FilterCommitPending(opts *bind.FilterOpts) (*BaseContentTypeCommitPendingIterator, error) {

	logs, sub, err := _BaseContentType.contract.FilterLogs(opts, "CommitPending")
	if err != nil {
		return nil, err
	}
	return &BaseContentTypeCommitPendingIterator{contract: _BaseContentType.contract, event: "CommitPending", logs: logs, sub: sub}, nil
}

// WatchCommitPending is a free log subscription operation binding the contract event 0xb3ac059d88af6016aca1aebb7b3e796f2e7420435c59c563687814e9b85daa75.
//
// Solidity: event CommitPending(address spaceAddress, address parentAddress, string objectHash)
func (_BaseContentType *BaseContentTypeFilterer) WatchCommitPending(opts *bind.WatchOpts, sink chan<- *BaseContentTypeCommitPending) (event.Subscription, error) {

	logs, sub, err := _BaseContentType.contract.WatchLogs(opts, "CommitPending")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentTypeCommitPending)
				if err := _BaseContentType.contract.UnpackLog(event, "CommitPending", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseCommitPending is a log parse operation binding the contract event 0xb3ac059d88af6016aca1aebb7b3e796f2e7420435c59c563687814e9b85daa75.
//
// Solidity: event CommitPending(address spaceAddress, address parentAddress, string objectHash)
func (_BaseContentType *BaseContentTypeFilterer) ParseCommitPending(log types.Log) (*BaseContentTypeCommitPending, error) {
	event := new(BaseContentTypeCommitPending)
	if err := _BaseContentType.contract.UnpackLog(event, "CommitPending", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentTypeUpdateRequestIterator is returned from FilterUpdateRequest and is used to iterate over the raw logs and unpacked data for UpdateRequest events raised by the BaseContentType contract.
type BaseContentTypeUpdateRequestIterator struct {
	Event *BaseContentTypeUpdateRequest // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentTypeUpdateRequestIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentTypeUpdateRequest)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentTypeUpdateRequest)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentTypeUpdateRequestIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentTypeUpdateRequestIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentTypeUpdateRequest represents a UpdateRequest event raised by the BaseContentType contract.
type BaseContentTypeUpdateRequest struct {
	ObjectHash string
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterUpdateRequest is a free log retrieval operation binding the contract event 0x403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b65.
//
// Solidity: event UpdateRequest(string objectHash)
func (_BaseContentType *BaseContentTypeFilterer) FilterUpdateRequest(opts *bind.FilterOpts) (*BaseContentTypeUpdateRequestIterator, error) {

	logs, sub, err := _BaseContentType.contract.FilterLogs(opts, "UpdateRequest")
	if err != nil {
		return nil, err
	}
	return &BaseContentTypeUpdateRequestIterator{contract: _BaseContentType.contract, event: "UpdateRequest", logs: logs, sub: sub}, nil
}

// WatchUpdateRequest is a free log subscription operation binding the contract event 0x403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b65.
//
// Solidity: event UpdateRequest(string objectHash)
func (_BaseContentType *BaseContentTypeFilterer) WatchUpdateRequest(opts *bind.WatchOpts, sink chan<- *BaseContentTypeUpdateRequest) (event.Subscription, error) {

	logs, sub, err := _BaseContentType.contract.WatchLogs(opts, "UpdateRequest")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentTypeUpdateRequest)
				if err := _BaseContentType.contract.UnpackLog(event, "UpdateRequest", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseUpdateRequest is a log parse operation binding the contract event 0x403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b65.
//
// Solidity: event UpdateRequest(string objectHash)
func (_BaseContentType *BaseContentTypeFilterer) ParseUpdateRequest(log types.Log) (*BaseContentTypeUpdateRequest, error) {
	event := new(BaseContentTypeUpdateRequest)
	if err := _BaseContentType.contract.UnpackLog(event, "UpdateRequest", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentTypeVersionConfirmIterator is returned from FilterVersionConfirm and is used to iterate over the raw logs and unpacked data for VersionConfirm events raised by the BaseContentType contract.
type BaseContentTypeVersionConfirmIterator struct {
	Event *BaseContentTypeVersionConfirm // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentTypeVersionConfirmIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentTypeVersionConfirm)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentTypeVersionConfirm)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentTypeVersionConfirmIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentTypeVersionConfirmIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentTypeVersionConfirm represents a VersionConfirm event raised by the BaseContentType contract.
type BaseContentTypeVersionConfirm struct {
	SpaceAddress  common.Address
	ParentAddress common.Address
	ObjectHash    string
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterVersionConfirm is a free log retrieval operation binding the contract event 0xbdaffceabaaa783aa187fea6c2e815541d29e2290bf3f7d3c4fc53672b68f7df.
//
// Solidity: event VersionConfirm(address spaceAddress, address parentAddress, string objectHash)
func (_BaseContentType *BaseContentTypeFilterer) FilterVersionConfirm(opts *bind.FilterOpts) (*BaseContentTypeVersionConfirmIterator, error) {

	logs, sub, err := _BaseContentType.contract.FilterLogs(opts, "VersionConfirm")
	if err != nil {
		return nil, err
	}
	return &BaseContentTypeVersionConfirmIterator{contract: _BaseContentType.contract, event: "VersionConfirm", logs: logs, sub: sub}, nil
}

// WatchVersionConfirm is a free log subscription operation binding the contract event 0xbdaffceabaaa783aa187fea6c2e815541d29e2290bf3f7d3c4fc53672b68f7df.
//
// Solidity: event VersionConfirm(address spaceAddress, address parentAddress, string objectHash)
func (_BaseContentType *BaseContentTypeFilterer) WatchVersionConfirm(opts *bind.WatchOpts, sink chan<- *BaseContentTypeVersionConfirm) (event.Subscription, error) {

	logs, sub, err := _BaseContentType.contract.WatchLogs(opts, "VersionConfirm")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentTypeVersionConfirm)
				if err := _BaseContentType.contract.UnpackLog(event, "VersionConfirm", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseVersionConfirm is a log parse operation binding the contract event 0xbdaffceabaaa783aa187fea6c2e815541d29e2290bf3f7d3c4fc53672b68f7df.
//
// Solidity: event VersionConfirm(address spaceAddress, address parentAddress, string objectHash)
func (_BaseContentType *BaseContentTypeFilterer) ParseVersionConfirm(log types.Log) (*BaseContentTypeVersionConfirm, error) {
	event := new(BaseContentTypeVersionConfirm)
	if err := _BaseContentType.contract.UnpackLog(event, "VersionConfirm", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentTypeVersionDeleteIterator is returned from FilterVersionDelete and is used to iterate over the raw logs and unpacked data for VersionDelete events raised by the BaseContentType contract.
type BaseContentTypeVersionDeleteIterator struct {
	Event *BaseContentTypeVersionDelete // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentTypeVersionDeleteIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentTypeVersionDelete)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentTypeVersionDelete)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentTypeVersionDeleteIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentTypeVersionDeleteIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentTypeVersionDelete represents a VersionDelete event raised by the BaseContentType contract.
type BaseContentTypeVersionDelete struct {
	SpaceAddress common.Address
	VersionHash  string
	Index        *big.Int
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterVersionDelete is a free log retrieval operation binding the contract event 0x238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51.
//
// Solidity: event VersionDelete(address spaceAddress, string versionHash, int256 index)
func (_BaseContentType *BaseContentTypeFilterer) FilterVersionDelete(opts *bind.FilterOpts) (*BaseContentTypeVersionDeleteIterator, error) {

	logs, sub, err := _BaseContentType.contract.FilterLogs(opts, "VersionDelete")
	if err != nil {
		return nil, err
	}
	return &BaseContentTypeVersionDeleteIterator{contract: _BaseContentType.contract, event: "VersionDelete", logs: logs, sub: sub}, nil
}

// WatchVersionDelete is a free log subscription operation binding the contract event 0x238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51.
//
// Solidity: event VersionDelete(address spaceAddress, string versionHash, int256 index)
func (_BaseContentType *BaseContentTypeFilterer) WatchVersionDelete(opts *bind.WatchOpts, sink chan<- *BaseContentTypeVersionDelete) (event.Subscription, error) {

	logs, sub, err := _BaseContentType.contract.WatchLogs(opts, "VersionDelete")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentTypeVersionDelete)
				if err := _BaseContentType.contract.UnpackLog(event, "VersionDelete", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseVersionDelete is a log parse operation binding the contract event 0x238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51.
//
// Solidity: event VersionDelete(address spaceAddress, string versionHash, int256 index)
func (_BaseContentType *BaseContentTypeFilterer) ParseVersionDelete(log types.Log) (*BaseContentTypeVersionDelete, error) {
	event := new(BaseContentTypeVersionDelete)
	if err := _BaseContentType.contract.UnpackLog(event, "VersionDelete", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseContentTypeVisibilityChangedIterator is returned from FilterVisibilityChanged and is used to iterate over the raw logs and unpacked data for VisibilityChanged events raised by the BaseContentType contract.
type BaseContentTypeVisibilityChangedIterator struct {
	Event *BaseContentTypeVisibilityChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseContentTypeVisibilityChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseContentTypeVisibilityChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseContentTypeVisibilityChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseContentTypeVisibilityChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseContentTypeVisibilityChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseContentTypeVisibilityChanged represents a VisibilityChanged event raised by the BaseContentType contract.
type BaseContentTypeVisibilityChanged struct {
	ContentSpace  common.Address
	ParentAddress common.Address
	Visibility    uint8
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterVisibilityChanged is a free log retrieval operation binding the contract event 0x369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500.
//
// Solidity: event VisibilityChanged(address contentSpace, address parentAddress, uint8 visibility)
func (_BaseContentType *BaseContentTypeFilterer) FilterVisibilityChanged(opts *bind.FilterOpts) (*BaseContentTypeVisibilityChangedIterator, error) {

	logs, sub, err := _BaseContentType.contract.FilterLogs(opts, "VisibilityChanged")
	if err != nil {
		return nil, err
	}
	return &BaseContentTypeVisibilityChangedIterator{contract: _BaseContentType.contract, event: "VisibilityChanged", logs: logs, sub: sub}, nil
}

// WatchVisibilityChanged is a free log subscription operation binding the contract event 0x369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500.
//
// Solidity: event VisibilityChanged(address contentSpace, address parentAddress, uint8 visibility)
func (_BaseContentType *BaseContentTypeFilterer) WatchVisibilityChanged(opts *bind.WatchOpts, sink chan<- *BaseContentTypeVisibilityChanged) (event.Subscription, error) {

	logs, sub, err := _BaseContentType.contract.WatchLogs(opts, "VisibilityChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseContentTypeVisibilityChanged)
				if err := _BaseContentType.contract.UnpackLog(event, "VisibilityChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseVisibilityChanged is a log parse operation binding the contract event 0x369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500.
//
// Solidity: event VisibilityChanged(address contentSpace, address parentAddress, uint8 visibility)
func (_BaseContentType *BaseContentTypeFilterer) ParseVisibilityChanged(log types.Log) (*BaseContentTypeVisibilityChanged, error) {
	event := new(BaseContentTypeVisibilityChanged)
	if err := _BaseContentType.contract.UnpackLog(event, "VisibilityChanged", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseGroupFactoryABI is the input ABI used to generate the binding from.
const BaseGroupFactoryABI = "[{\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"_spaceAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentSpace\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createGroup\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newCreator\",\"type\":\"address\"}],\"name\":\"transferCreatorship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"versionAPI\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// BaseGroupFactoryFuncSigs maps the 4-byte function signature to its string representation.
var BaseGroupFactoryFuncSigs = map[string]string{
	"af570c04": "contentSpace()",
	"575185ed": "createGroup()",
	"02d05d3f": "creator()",
	"41c0e1b5": "kill()",
	"8da5cb5b": "owner()",
	"6d2e4b1b": "transferCreatorship(address)",
	"f2fde38b": "transferOwnership(address)",
	"54fd4d50": "version()",
	"5f4fcae1": "versionAPI()",
}

// BaseGroupFactoryBin is the compiled bytecode used for deploying new contracts.
var BaseGroupFactoryBin = "0x60806040527f4f776e61626c653230323030393238313130303030504f000000000000000000600055620332e360ec1b6001557f4261736547726f7570466163746f72793230323030393238313130303030504f60055534801561006257600080fd5b506040516155d13803806155d18339818101604052602081101561008557600080fd5b5051600280546001600160a01b0319908116321790915560038054821633179055600480546001600160a01b0390931692909116919091179055615503806100ce6000396000f3fe6080604052600436106100865760003560e01c80635f4fcae1116100595780635f4fcae11461010a5780636d2e4b1b1461011f5780638da5cb5b14610152578063af570c0414610167578063f2fde38b1461017c57610086565b806302d05d3f1461008857806341c0e1b5146100b957806354fd4d50146100ce578063575185ed146100f5575b005b34801561009457600080fd5b5061009d6101af565b604080516001600160a01b039092168252519081900360200190f35b3480156100c557600080fd5b506100866101be565b3480156100da57600080fd5b506100e36101e3565b60408051918252519081900360200190f35b34801561010157600080fd5b5061009d6101e9565b34801561011657600080fd5b506100e3610481565b34801561012b57600080fd5b506100866004803603602081101561014257600080fd5b50356001600160a01b0316610487565b34801561015e57600080fd5b5061009d6104d3565b34801561017357600080fd5b5061009d6104e2565b34801561018857600080fd5b506100866004803603602081101561019f57600080fd5b50356001600160a01b03166104f1565b6002546001600160a01b031681565b6003546001600160a01b031633146101d557600080fd5b6003546001600160a01b0316ff5b60055481565b6004546000906001600160a01b0316331461020357600080fd5b60003360405161021290610681565b6001600160a01b03909116815260405190819003602001906000f08015801561023f573d6000803e3d6000fd5b5060048054604080516363e6ffdd60e01b815232938101939093525192935083926001600160a01b039091169160009183916363e6ffdd916024808301926020929190829003018186803b15801561029657600080fd5b505afa1580156102aa573d6000803e3d6000fd5b505050506040513d60208110156102c057600080fd5b5051905060006102cf8261053d565b9050806103ac576040805163f2fde38b60e01b8152326004820152905183916001600160a01b0387169163f2fde38b9160248082019260009290919082900301818387803b15801561032057600080fd5b505af1158015610334573d6000803e3d6000fd5b50506040805163f17bda9160e01b81526001600160a01b038a81166004830152600060248301819052600260448401529251908616945063f17bda9193506064808301939282900301818387803b15801561038e57600080fd5b505af11580156103a2573d6000803e3d6000fd5b5050505050610477565b604080516307f0dad160e11b81523260048201526000602482018190526002604483015291516001600160a01b03871692630fe1b5a2926064808201939182900301818387803b1580156103ff57600080fd5b505af1158015610413573d6000803e3d6000fd5b50506040805163f2fde38b60e01b815232600482015290516001600160a01b038816935063f2fde38b9250602480830192600092919082900301818387803b15801561045e57600080fd5b505af1158015610472573d6000803e3d6000fd5b505050505b5092935050505090565b60015481565b6002546001600160a01b0316331461049e57600080fd5b6001600160a01b0381166104b157600080fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031681565b6004546001600160a01b031681565b6003546001600160a01b0316331461050857600080fd5b6001600160a01b03811661051b57600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b604080516b76657273696f6e415049282960a01b8152815190819003600c018120600482526024820183526020820180516001600160e01b03166001600160e01b03199092169190911781529151815160009384936060936001600160a01b03881693919290918291908083835b602083106105ca5780518252601f1990920191602091820191016105ab565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d806000811461062a576040519150601f19603f3d011682016040523d82523d6000602084013e61062f565b606091505b50909250905081158061064157508051155b8061066557508060008151811061065457fe5b01602001516001600160f81b031916155b156106755760009250505061067c565b6001925050505b919050565b614e3f80620006908339019056fe7f4f776e61626c653230323030393238313130303030504f000000000000000000600055620332e360ec1b60019081557f416363657373496e6465786f723230323030393238313130303030504f0000006008556009805460ff1916821761ff0019166102001762ff00001916620300001763ff000000191663040000001760ff60201b191664050000000017905560e06040526080908152600a60a0819052606460c052620000b191600362000283565b507f41636365737369626c653230323030363236313231363030504f0000000000006024556025805461ff001960ff199091166001171690557f4564697461626c653230323030393238313130303030504f00000000000000006026557f42734163636573734374726c4772703230323030393238313130303030504f00602d553480156200013f57600080fd5b5060405162004e3f38038062004e3f833981810160405260208110156200016557600080fd5b5051600280546001600160a01b03199081163217918290556003805482163317905560098054600b805460ff1990811660ff620100008504811691909117909255601380548216610100808604851691909117909155600f80548316848616179055601780548316630100000086048516179055601b80548316640100000000909504841694909417909355600480546001600160a01b039889169087161790556000602f8190556030805460018181018355919092527f6ff97a59c90d62cc7236ba3a37cd85351bf564556780cf8c1157a220f31f0cbb90910180549096169690971695909517909355603194909455603280549093169092559054602580549184900490921690920261ff001990921691909117905562000341565b6001830191839082156200030b5791602002820160005b83821115620002da57835183826101000a81548160ff021916908360ff16021790555092602001926001016020816000010492830192600103026200029a565b8015620003095782816101000a81549060ff0219169055600101602081600001049283019260010302620002da565b505b50620003199291506200031d565b5090565b6200033e91905b808211156200031957805460ff1916815560010162000324565b90565b614aee80620003516000396000f3fe6080604052600436106106305760003560e01c80636c0f79b611610329578063aa024e8b116101b6578063d30f8cd011610102578063ebe9314e116100a0578063f2fde38b1161007a578063f2fde38b146118c8578063fb52222c146118fb578063fba3779a1461192e578063fccc134f1461195a57610630565b8063ebe9314e1461185a578063ef1d7dc21461186f578063f17bda911461188457610630565b8063e1954b61116100dc578063e1954b61146115fd578063e1a7071714611649578063e542b7cb146116fa578063e57097c91461183057610630565b8063d30f8cd014611598578063d8961c8d146115ad578063e02dd9c2146115e857610630565b8063c287e0ed1161016f578063cdb849b711610149578063cdb849b714611511578063cf8a750314611544578063d15d62a71461156e578063d1aeb651146107bc57610630565b8063c287e0ed146114d2578063c4b1978d146114e7578063cb86806d146114fc57610630565b8063aa024e8b1461138b578063aa3f6952146113b8578063ac55c906146113e2578063adf0779114611493578063af570c04146114a8578063b8ff1dba146114bd57610630565b806385e0a2001161027557806396eba03d1161022e5780639f46133e116102085780639f46133e146112e8578063a00b38c4146112fd578063a4081d6214611343578063a980892d1461137657610630565b806396eba03d1461112457806397ac4fd2146112225780639867db741461123757610630565b806385e0a2001461113957806385e685311461114e5780638635adb5146111815780638da5cb5b146111c557806392297d7b146111da57806395a078e8146111ef57610630565b80637709bc78116102e25780637cbb7bf2116102bc5780637cbb7bf2146110855780637fb52f1a146110c957806381beeb641461110f5780638232f3f11461112457610630565b80637709bc7814610ffe5780637886f747146110315780637ca8f6181461105b57610630565b80636c0f79b614610f115780636d2e4b1b14610f265780636e37542714610f595780636ebc8c8614610f6e5780637558cbf014610f9857806375861a9514610fcb57610630565b8063304f4a7b116104c257806354fd4d501161040e578063628449fd116103ac578063638d029011610386578063638d029014610e8157806367e5c3bf14610e9657806368a0469a14610ec957806369881c0c14610ede57610630565b8063628449fd14610dcd5780636373a41114610e575780636380501f14610e6c57610630565b80635d7cf830116103e85780635d7cf83014610d575780635d97b6c2146108635780635f4fcae114610da35780635f6a130114610db857610630565b806354fd4d5014610d1857806355277a5b14610d2d5780635c1d305914610d4257610630565b80633def51401161047b57806342e7ba7b1161045557806342e7ba7b14610cc8578063446e882614610cfb578063479a0c51146107bc57806351a7fc8714610d0357610630565b80633def514014610c5a57806340b87a2614610c9e57806341c0e1b514610cb357610630565b8063304f4a7b14610b6557806330e6694914610b9857806330f846a214610bca578063331b86c014610bfd57806333f12cf414610c12578063375a6e7c14610c4557610630565b806314cfabb31161058157806322e564eb1161053a57806329adec141161051457806329adec1414610ab35780632d474cbd14610ac85780632e74a4de14610af25780632fa5c84214610b2557610630565b806322e564eb14610a0957806324d7806c14610a4d57806324d7c18d14610a8057610630565b806314cfabb31461083957806316aed2321461084e57806318689733146108635780631bf7a912146108785780631fcd77941461099b578063224dcba0146109c557610630565b80630ae5e739116105ee578063100508a2116105c8578063100508a2146107bc57806312915a30146107d157806312b39dd0146107e657806313b8ad311461080f57610630565b80630ae5e739146107305780630dc10d3f146107635780630fe1b5a21461077857610630565b8062821de31461063257806302d05d3f14610663578063048bd52914610678578063055af48f1461069f57806308d865d7146106d2578063091600e61461071b575b005b34801561063e57600080fd5b5061064761196f565b604080516001600160a01b039092168252519081900360200190f35b34801561066f57600080fd5b5061064761197f565b34801561068457600080fd5b5061068d61198e565b60408051918252519081900360200190f35b3480156106ab57600080fd5b50610630600480360360208110156106c257600080fd5b50356001600160a01b031661199f565b3480156106de57600080fd5b50610705600480360360208110156106f557600080fd5b50356001600160a01b03166119d8565b6040805160ff9092168252519081900360200190f35b34801561072757600080fd5b506107056119fa565b34801561073c57600080fd5b506106306004803603602081101561075357600080fd5b50356001600160a01b0316611a03565b34801561076f57600080fd5b5061068d611b62565b34801561078457600080fd5b506106306004803603606081101561079b57600080fd5b506001600160a01b038135169060ff60208201358116916040013516611b68565b3480156107c857600080fd5b50610705611c2d565b3480156107dd57600080fd5b50610705611c32565b3480156107f257600080fd5b506107fb611c40565b604080519115158252519081900360200190f35b34801561081b57600080fd5b506106476004803603602081101561083257600080fd5b5035611c49565b34801561084557600080fd5b506107fb611c70565b34801561085a57600080fd5b50610705611cf4565b34801561086f57600080fd5b50610705611d03565b6107fb6004803603604081101561088e57600080fd5b810190602081018135600160201b8111156108a857600080fd5b8201836020820111156108ba57600080fd5b803590602001918460208302840111600160201b831117156108db57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561092a57600080fd5b82018360208201111561093c57600080fd5b803590602001918460208302840111600160201b8311171561095d57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611d08945050505050565b3480156109a757600080fd5b50610647600480360360208110156109be57600080fd5b5035611da4565b3480156109d157600080fd5b50610630600480360360608110156109e857600080fd5b506001600160a01b038135169060ff60208201358116916040013516611db1565b348015610a1557600080fd5b5061063060048036036060811015610a2c57600080fd5b506001600160a01b038135169060ff60208201358116916040013516611dc3565b348015610a5957600080fd5b506107fb60048036036020811015610a7057600080fd5b50356001600160a01b0316612209565b348015610a8c57600080fd5b506107fb60048036036040811015610aa357600080fd5b508035906020013560ff16612284565b348015610abf57600080fd5b506107056122a9565b348015610ad457600080fd5b5061064760048036036020811015610aeb57600080fd5b50356122b2565b348015610afe57600080fd5b5061063060048036036020811015610b1557600080fd5b50356001600160a01b03166122df565b348015610b3157600080fd5b50610b3a612319565b6040805195865260208601949094528484019290925260608401526080830152519081900360a00190f35b348015610b7157600080fd5b5061070560048036036020811015610b8857600080fd5b50356001600160a01b0316612364565b348015610ba457600080fd5b50610bad612382565b6040805160ff909316835260208301919091528051918290030190f35b348015610bd657600080fd5b506107fb60048036036040811015610bed57600080fd5b508035906020013560ff16612391565b348015610c0957600080fd5b5061068d6123fe565b348015610c1e57600080fd5b506107fb60048036036040811015610c3557600080fd5b508035906020013560ff16612404565b348015610c5157600080fd5b506107fb612520565b348015610c6657600080fd5b5061063060048036036060811015610c7d57600080fd5b506001600160a01b038135169060ff60208201358116916040013516612529565b348015610caa57600080fd5b5061068d612536565b348015610cbf57600080fd5b5061063061253c565b348015610cd457600080fd5b506107fb60048036036020811015610ceb57600080fd5b50356001600160a01b0316612561565b6107fb612589565b348015610d0f57600080fd5b50610bad612785565b348015610d2457600080fd5b5061068d612794565b348015610d3957600080fd5b5061068d61279a565b348015610d4e57600080fd5b5061068d6127a0565b348015610d6357600080fd5b5061063060048036036080811015610d7a57600080fd5b5060ff81358116916001600160a01b0360208201351691604082013581169160600135166127a6565b348015610daf57600080fd5b5061068d6127c3565b348015610dc457600080fd5b506106306127c9565b348015610dd957600080fd5b50610de2612805565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610e1c578181015183820152602001610e04565b50505050905090810190601f168015610e495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610e6357600080fd5b50610705612893565b348015610e7857600080fd5b506107056128a3565b348015610e8d57600080fd5b5061068d6128b1565b348015610ea257600080fd5b506107fb60048036036020811015610eb957600080fd5b50356001600160a01b03166128b7565b348015610ed557600080fd5b506107056128e6565b348015610eea57600080fd5b5061070560048036036020811015610f0157600080fd5b50356001600160a01b03166128f6565b348015610f1d57600080fd5b50610bad612914565b348015610f3257600080fd5b5061063060048036036020811015610f4957600080fd5b50356001600160a01b0316612923565b348015610f6557600080fd5b506107fb61296f565b348015610f7a57600080fd5b5061064760048036036020811015610f9157600080fd5b5035612980565b348015610fa457600080fd5b5061063060048036036040811015610fbb57600080fd5b508035906020013560ff16612992565b348015610fd757600080fd5b5061063060048036036020811015610fee57600080fd5b50356001600160a01b0316612a8f565b34801561100a57600080fd5b506107fb6004803603602081101561102157600080fd5b50356001600160a01b0316612beb565b34801561103d57600080fd5b5061068d6004803603602081101561105457600080fd5b5035612bf1565b34801561106757600080fd5b50610de26004803603602081101561107e57600080fd5b5035612c0f565b34801561109157600080fd5b50610630600480360360608110156110a857600080fd5b506001600160a01b038135169060ff60208201358116916040013516612c82565b3480156110d557600080fd5b506107fb600480360360608110156110ec57600080fd5b5060ff81358116916001600160a01b036020820135169160409091013516612c8f565b34801561111b57600080fd5b506107fb612ca4565b34801561113057600080fd5b50610705612caf565b34801561114557600080fd5b5061068d612cb4565b34801561115a57600080fd5b506106306004803603602081101561117157600080fd5b50356001600160a01b0316612cc0565b34801561118d57600080fd5b50610630600480360360608110156111a457600080fd5b506001600160a01b038135169060ff60208201358116916040013516612e52565b3480156111d157600080fd5b50610647612e6c565b3480156111e657600080fd5b5061068d612e7b565b3480156111fb57600080fd5b506107fb6004803603602081101561121257600080fd5b50356001600160a01b0316612e87565b34801561122e57600080fd5b50610705612fe8565b34801561124357600080fd5b506106306004803603602081101561125a57600080fd5b810190602081018135600160201b81111561127457600080fd5b82018360208201111561128657600080fd5b803590602001918460018302840111600160201b831117156112a757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550612fed945050505050565b3480156112f457600080fd5b50610bad613118565b34801561130957600080fd5b506107fb6004803603606081101561132057600080fd5b5060ff81358116916001600160a01b036020820135169160409091013516613127565b34801561134f57600080fd5b506107056004803603602081101561136657600080fd5b50356001600160a01b0316613156565b34801561138257600080fd5b50610bad613174565b34801561139757600080fd5b50610630600480360360208110156113ae57600080fd5b503560ff16613183565b3480156113c457600080fd5b50610647600480360360208110156113db57600080fd5b50356131fb565b3480156113ee57600080fd5b50610de26004803603602081101561140557600080fd5b810190602081018135600160201b81111561141f57600080fd5b82018360208201111561143157600080fd5b803590602001918460018302840111600160201b8311171561145257600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061320d945050505050565b34801561149f57600080fd5b506106476133b4565b3480156114b457600080fd5b506106476133c8565b3480156114c957600080fd5b506106306133d7565b3480156114de57600080fd5b506106306134cc565b3480156114f357600080fd5b50610bad61358c565b34801561150857600080fd5b5061068d61359b565b34801561151d57600080fd5b506106306004803603602081101561153457600080fd5b50356001600160a01b03166135a1565b34801561155057600080fd5b506106476004803603602081101561156757600080fd5b5035613730565b34801561157a57600080fd5b506106476004803603602081101561159157600080fd5b5035613742565b3480156115a457600080fd5b5061068d613754565b3480156115b957600080fd5b506107fb600480360360408110156115d057600080fd5b506001600160a01b0381351690602001351515613760565b3480156115f457600080fd5b50610de2613786565b34801561160957600080fd5b506116306004803603604081101561162057600080fd5b508035906020013560ff166137e1565b6040805163ffffffff9092168252519081900360200190f35b34801561165557600080fd5b5061068d6004803603602081101561166c57600080fd5b810190602081018135600160201b81111561168657600080fd5b82018360208201111561169857600080fd5b803590602001918460018302840111600160201b831117156116b957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550613833945050505050565b34801561170657600080fd5b506106306004803603604081101561171d57600080fd5b810190602081018135600160201b81111561173757600080fd5b82018360208201111561174957600080fd5b803590602001918460018302840111600160201b8311171561176a57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156117bc57600080fd5b8201836020820111156117ce57600080fd5b803590602001918460018302840111600160201b831117156117ef57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550613c99945050505050565b34801561183c57600080fd5b506106306004803603602081101561185357600080fd5b5035613e88565b34801561186657600080fd5b5061068d613eeb565b34801561187b57600080fd5b50610705613ef1565b34801561189057600080fd5b50610630600480360360608110156118a757600080fd5b506001600160a01b038135169060ff60208201358116916040013516613ef6565b3480156118d457600080fd5b50610630600480360360208110156118eb57600080fd5b50356001600160a01b0316613f03565b34801561190757600080fd5b506107056004803603602081101561191e57600080fd5b50356001600160a01b0316613f4f565b34801561193a57600080fd5b506106306004803603602081101561195157600080fd5b50351515613f6d565b34801561196657600080fd5b5061068d613fcb565b6004546001600160a01b03165b90565b6002546001600160a01b031681565b600061199a600f613fd1565b905090565b6003546001600160a01b031633146119b657600080fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381166000908152601c602052604090205460ff165b919050565b60095460ff1681565b611a0c33612561565b1515600114611a1a57600080fd5b6000805b602f54811015611a6b57826001600160a01b0316602e8281548110611a3f57fe5b6000918252602090912001546001600160a01b03161415611a635760019150611a6b565b600101611a1e565b5080611b1657602f54602e541415611acd57602e80546001810182556000919091527f37fa166cbdbfbb1561ccd9ea985ec0218b5e68502e230525f544285b2bdf3d7e0180546001600160a01b0319166001600160a01b038416179055611b0c565b81602e602f5481548110611add57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b602f805460010190555b604080516001600160a01b038416815290517fb251eb052afc73ffd02ffe85ad79990a8b3fed60d76dbc2fa2fdd7123dffd9149181900360200190a1611b5e82600180611b68565b5050565b60165490565b611b70612ca4565b611b7957600080fd5b60048054604080516363e6ffdd60e01b81526001600160a01b03878116948201949094529051929091169160009183916363e6ffdd91602480820192602092909190829003018186803b158015611bcf57600080fd5b505afa158015611be3573d6000803e3d6000fd5b505050506040513d6020811015611bf957600080fd5b505190506001600160a01b038116611c1b57611c16858585611dc3565b611c26565b611c26818585611dc3565b5050505050565b600181565b600954610100900460ff1681565b60325460ff1681565b602e8181548110611c5657fe5b6000918252602090912001546001600160a01b0316905081565b600480546040805163099a0f8560e21b81523393810193909352516000926001600160a01b039092169182916326683e1491602480820192602092909190829003018186803b158015611cc257600080fd5b505afa158015611cd6573d6000803e3d6000fd5b505050506040513d6020811015611cec57600080fd5b505191505090565b60095462010000900460ff1681565b600281565b6000611d1333612e87565b611d1c57600080fd5b604080513060601b60208083019190915242603480840182905284518085039091018152605484018086528151919093012090915260006074830181905260948301523360b48301526103e80260d482015290517f545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c79181900360f40190a15060015b92915050565b60308181548110611c5657fe5b611dbe601b84848461410d565b505050565b6000839050806001600160a01b031663091600e66040518163ffffffff1660e01b815260040160206040518083038186803b158015611e0157600080fd5b505afa158015611e15573d6000803e3d6000fd5b505050506040513d6020811015611e2b57600080fd5b5051602554610100900460ff90811691161415611eb6576040805162f7bd4560e61b815230600482015260ff80861660248301528416604482015290516001600160a01b03831691633def514091606480830192600092919082900301818387803b158015611e9957600080fd5b505af1158015611ead573d6000803e3d6000fd5b50505050612203565b806001600160a01b03166312915a306040518163ffffffff1660e01b815260040160206040518083038186803b158015611eef57600080fd5b505afa158015611f03573d6000803e3d6000fd5b505050506040513d6020811015611f1957600080fd5b5051602554610100900460ff90811691161415611f88576040805163f17bda9160e01b815230600482015260ff80861660248301528416604482015290516001600160a01b0383169163f17bda9191606480830192600092919082900301818387803b158015611e9957600080fd5b806001600160a01b03166316aed2326040518163ffffffff1660e01b815260040160206040518083038186803b158015611fc157600080fd5b505afa158015611fd5573d6000803e3d6000fd5b505050506040513d6020811015611feb57600080fd5b5051602554610100900460ff9081169116141561205a5760408051633e5dbdf960e11b815230600482015260ff80861660248301528416604482015290516001600160a01b03831691637cbb7bf291606480830192600092919082900301818387803b158015611e9957600080fd5b806001600160a01b03166368a0469a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561209357600080fd5b505afa1580156120a7573d6000803e3d6000fd5b505050506040513d60208110156120bd57600080fd5b5051602554610100900460ff9081169116141561212c5760408051638635adb560e01b815230600482015260ff80861660248301528416604482015290516001600160a01b03831691638635adb591606480830192600092919082900301818387803b158015611e9957600080fd5b806001600160a01b0316636373a4116040518163ffffffff1660e01b815260040160206040518083038186803b15801561216557600080fd5b505afa158015612179573d6000803e3d6000fd5b505050506040513d602081101561218f57600080fd5b5051602554610100900460ff908116911614156121fe57604080516301126e5d60e51b815230600482015260ff80861660248301528416604482015290516001600160a01b0383169163224dcba091606480830192600092919082900301818387803b158015611e9957600080fd5b600080fd5b50505050565b6003546000906001600160a01b038381169116141561222a575060016119f5565b60005b60305481101561227b57826001600160a01b03166030828154811061224e57fe5b6000918252602090912001546001600160a01b031614156122735760019150506119f5565b60010161222d565b50600092915050565b600061228f33612209565b61229857600080fd5b6122a28383612404565b9392505050565b60255460ff1681565b6000601360020182815481106122c457fe5b6000918252602090912001546001600160a01b031692915050565b6122e833612209565b6122f157600080fd5b603280546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b600080600080600061232b600b613fd1565b6123356013613fd1565b61233f600f613fd1565b6123496017613fd1565b612353601b613fd1565b945094509450945094509091929394565b6001600160a01b031660009081526014602052604090205460ff1690565b60135460165460ff9091169082565b6000828152600760209081526040822060ff8481169290920490911690601f8416906001821b90819084600881106123c557fe5b600881049091015460046007909216919091026101000a90041663ffffffff16156123f15760016123f4565b60005b9695505050505050565b60295490565b600061240f33612209565b61241857600080fd5b6000838152600760209081526040822060ff8581169290920490911691601f8516916001831b91908290856008811061244d57fe5b600881049091015460046007909216919091026101000a90041663ffffffff161561247957600161247c565b60005b9050806124d35760008781526007602052604090208290856008811061249e57fe5b60088104909101805463ffffffff60046007909416939093026101000a80820484169094178316840292909302199092161790555b6040805188815260ff881660208201528215158183015290517f4d04842102a74d85e502eec18f3048954c6d6e1d1c368c7bc49edcdcd45e9c3d9181900360600190a19695505050505050565b602c5460ff1681565b611dbe600f84848461410d565b60285481565b6003546001600160a01b0316331461255357600080fd5b6003546001600160a01b0316ff5b6032546000906001600160a01b03838116610100909204161480611d9e5750611d9e826128b7565b6000612593611c70565b61259c57600080fd5b602c5460ff166125ab57600080fd5b6027546002600019610100600184161502019091160415612656576029805460018181018084556000939093526027805461261d937fcb7c14ce178f56e2e8d86ab33ebc0ae081ba8556a00cd122038841867181caac01926002610100918316159190910260001901909116046148dc565b5050602854602a80546001810182556000919091527fbeced09521047d05b8960b7e7bcc1d1292cf3e4b2a6b63f48335cbde5f7545d201555b602b805461267991602791600260001961010060018416150201909116046148dc565b504260285560408051602081019182905260009081905261269c91602b91614961565b50602c805460ff191690556004547fbdaffceabaaa783aa187fea6c2e815541d29e2290bf3f7d3c4fc53672b68f7df906001600160a01b03166126dd61196f565b604080516001600160a01b03808516825283166020820152606091810182815260278054600260001961010060018416150201909116049383018490529260808301908490801561276f5780601f106127445761010080835404028352916020019161276f565b820191906000526020600020905b81548152906001019060200180831161275257829003601f168201915b505094505050505060405180910390a150600190565b601f5460225460ff9091169082565b602d5481565b602f5481565b601a5490565b60ff841615612203576122036127bb85614406565b84848461410d565b60015481565b6127d161296f565b6127da57600080fd5b6040805160208101918290526000908190526127f891602b91614961565b50602c805460ff19169055565b602b805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561288b5780601f106128605761010080835404028352916020019161288b565b820191906000526020600020905b81548152906001019060200180831161286e57829003601f168201915b505050505081565b600954600160201b900460ff1681565b602554610100900460ff1681565b60315481565b6032546000906001600160a01b038381166101009092041614156128dd575060016119f5565b611d9e826144a2565b6009546301000000900460ff1681565b6001600160a01b031660009081526010602052604090205460ff1690565b601b54601e5460ff9091169082565b6002546001600160a01b0316331461293a57600080fd5b6001600160a01b03811661294d57600080fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b0316331490565b6000601b60020182815481106122c457fe5b61299b33612209565b6129a457600080fd5b60088160ff16106129b457600080fd5b600082815260076020526040812060ff8316600881106129d057fe5b600891828204019190066004029054906101000a900463ffffffff169050600760008481526020019081526020016000206000018260ff1660088110612a1257fe5b600881049091018054600163ffffffff60046007909516949094026101000a80830485169190910184168102908402199091161790556040805185815260ff8516602082015291831682820152517f77a2025a71f0f345cfd7e8a699b42215025b6ab4706dcfaa29393790aa63383f9181900360600190a1505050565b6003546001600160a01b03163314612aa657600080fd5b6000805b603154811015612af757826001600160a01b031660308281548110612acb57fe5b6000918252602090912001546001600160a01b03161415612aef5760019150612af7565b600101612aaa565b5080612ba2576031546030541415612b5957603080546001810182556000919091527f6ff97a59c90d62cc7236ba3a37cd85351bf564556780cf8c1157a220f31f0cbb0180546001600160a01b0319166001600160a01b038416179055612b98565b81603060315481548110612b6957fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b6031805460010190555b604080516001600160a01b038416815290517f93bcaab179551bde429187645251f8e1fb8ac85801fcb1cf91eb2c9043d611179181900360200190a1611b5e8260026001611b68565b3b151590565b602a8181548110612bfe57fe5b600091825260209091200154905081565b60298181548110612c1c57fe5b600091825260209182902001805460408051601f600260001961010060018716150201909416939093049283018590048502810185019091528181529350909183018282801561288b5780601f106128605761010080835404028352916020019161288b565b611dbe600b84848461410d565b6000612c9c848484613127565b949350505050565b600061199a336128b7565b600081565b600061199a6017613fd1565b612cc933612561565b151560011480612ce15750336001600160a01b038216145b612cea57600080fd5b60005b602f54811015612e0557816001600160a01b0316602e8281548110612d0e57fe5b6000918252602090912001546001600160a01b03161415612dfd57602e8181548110612d3657fe5b600091825260209091200180546001600160a01b0319169055602f54600019018114612dee57602e6001602f540381548110612d6e57fe5b600091825260209091200154602e80546001600160a01b039092169183908110612d9457fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550602e6001602f540381548110612dd457fe5b600091825260209091200180546001600160a01b03191690555b602f8054600019019055612e05565b600101612ced565b50604080516001600160a01b038316815290517f745cd29407db644ed93e3ceb61cbcab96d1dfb496989ac5d5bf514fc5a9fab9c9181900360200190a1612e4f8160016000611b68565b50565b600954611dbe906127bb906301000000900460ff16614406565b6003546001600160a01b031681565b600061199a600b613fd1565b6003546000906001600160a01b0383811691161480612eae5750602554600a60ff90911610155b15612ebb575060016119f5565b602554610100900460ff1615612fe05760048054604080516363e6ffdd60e01b81526001600160a01b03868116948201949094529051600093909216916363e6ffdd91602480820192602092909190829003018186803b158015612f1e57600080fd5b505afa158015612f32573d6000803e3d6000fd5b505050506040513d6020811015612f4857600080fd5b505160255460408051633fda978d60e11b815261010090920460ff16600483015230602483015260016044830152519192506001600160a01b03831691637fb52f1a91606480820192602092909190829003018186803b158015612fab57600080fd5b505afa158015612fbf573d6000803e3d6000fd5b505050506040513d6020811015612fd557600080fd5b505191506119f59050565b5060006119f5565b600a81565b612ff561296f565b612ffe57600080fd5b602c5460ff161561300e57600080fd5b608081511061301c57600080fd5b805161302f90602b906020840190614961565b50602c805460ff191660011790556004547fb3ac059d88af6016aca1aebb7b3e796f2e7420435c59c563687814e9b85daa75906001600160a01b031661307361196f565b604080516001600160a01b038085168252831660208201526060918101828152602b805460026000196101006001841615020190911604938301849052926080830190849080156131055780601f106130da57610100808354040283529160200191613105565b820191906000526020600020905b8154815290600101906020018083116130e857829003601f168201915b505094505050505060405180910390a150565b601754601a5460ff9091169082565b600060ff84161561314c5761314561313e85614406565b84846145c6565b90506122a2565b5060009392505050565b6001600160a01b031660009081526018602052604090205460ff1690565b600f5460125460ff9091169082565b61318b612ca4565b61319457600080fd5b6025805460ff191660ff8381169190911791829055600454604080516001600160a01b039092168083526020830152929091168183015290517f369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500916060908290030190a150565b6000601760020182815481106122c457fe5b606060208251116132c25781518083015160008181526005602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845293949390918301828280156132b45780601f10613289576101008083540402835291602001916132b4565b820191906000526020600020905b81548152906001019060200180831161329757829003601f168201915b5050505050925050506119f5565b6006826040518082805190602001908083835b602083106132f45780518252601f1990920191602091820191016132d5565b518151600019602094850361010090810a820192831692199390931691909117909252949092019687526040805197889003820188208054601f60026001831615909802909501169590950492830182900482028801820190528187529294509250508301828280156133a85780601f1061337d576101008083540402835291602001916133a8565b820191906000526020600020905b81548152906001019060200180831161338b57829003601f168201915b50505050509050919050565b60325461010090046001600160a01b031681565b6004546001600160a01b031681565b3360008181526010602052604090205460ff166133f26149cf565b600a60ff838116828106821680855260649091068190038216850381900382166040808601829052935461010090048316600202831660208087018290526001600160a01b03891660009081526010909152949094208054949092010191821660ff1990931683179055901580159061346c575060ff8316155b1561347c5761347c600f8561461a565b604080513081526001600160a01b038616602082015260ff83168183015290517f23dcae6acc296731e3679d01e7cd963988e5a372850a0a1db2b9b01539e19ff49181900360600190a150505050565b6134d4612ca4565b6134dd57600080fd5b60408051602080825260278054600260001961010060018416150201909116049183018290527f403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b659390929182918201908490801561357c5780601f106135515761010080835404028352916020019161357c565b820191906000526020600020905b81548152906001019060200180831161355f57829003601f168201915b50509250505060405180910390a1565b600b54600e5460ff9091169082565b600e5490565b6003546001600160a01b03163314806135c25750336001600160a01b038216145b6135cb57600080fd5b60005b6031548110156136e657816001600160a01b0316603082815481106135ef57fe5b6000918252602090912001546001600160a01b031614156136de576030818154811061361757fe5b600091825260209091200180546001600160a01b03191690556031546000190181146136cf5760306001603154038154811061364f57fe5b600091825260209091200154603080546001600160a01b03909216918390811061367557fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506030600160315403815481106136b557fe5b600091825260209091200180546001600160a01b03191690555b603180546000190190556136e6565b6001016135ce565b50604080516001600160a01b038316815290517f2d6aa1a9629d125e23a0cf692cda7cd6795dff1652eedd4673b38ec31e387b959181900360200190a1612e4f8160026000611b68565b6000600f60020182815481106122c457fe5b6000600b60020182815481106122c457fe5b600061199a6013613fd1565b60006001821515141561377d57613776836128b7565b9050611d9e565b61377683612e87565b6027805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561288b5780601f106128605761010080835404028352916020019161288b565b600060088260ff16106137f357600080fd5b600083815260076020526040902060ff83166008811061380f57fe5b600891828204019190066004029054906101000a900463ffffffff16905092915050565b600061383d61296f565b61384657600080fd5b6000826040516020018082805190602001908083835b6020831061387b5780518252601f19909201916020918201910161385c565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120905060006027604051602001808280546001816001161561010002031660029004801561391a5780601f106138f857610100808354040283529182019161391a565b820191906000526020600020905b815481529060010190602001808311613906575b505091505060405160208183030381529060405280519060200120905080821415613aea5760295461396f5760408051602081019182905260009081905261396491602791614961565b506000602855613a0e565b600080805b6029548110156139c35781602a828154811061398c57fe5b906000526020600020015411156139bb57809250602a81815481106139ad57fe5b906000526020600020015491505b600101613974565b50602982815481106139d157fe5b90600052602060002001602790805460018160011615610100020316600290046139fc9291906148dc565b506028819055613a0b826146af565b50505b7f238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51600460009054906101000a90046001600160a01b031685600060405180846001600160a01b03166001600160a01b0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015613aa3578181015183820152602001613a8b565b50505050905090810190601f168015613ad05780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a16000925050506119f5565b60001960005b602954811015613bb157600060298281548110613b0957fe5b906000526020600020016040516020018082805460018160011615610100020316600290048015613b715780601f10613b4f576101008083540402835291820191613b71565b820191906000526020600020905b815481529060010190602001808311613b5d575b505091505060405160208183030381529060405280519060200120905080851415613ba857613b9f826146af565b81925050613bb1565b50600101613af0565b50806000191415613bc157600080fd5b7f238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51600460009054906101000a90046001600160a01b0316868360405180846001600160a01b03166001600160a01b0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015613c55578181015183820152602001613c3d565b50505050905090810190601f168015613c825780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1949350505050565b613ca233612209565b613cab57600080fd5b6020825111613d03578151808301516000818152600560205260408120919291613cd4916149ed565b825115613cfc5760008281526005602090815260409091208451613cfa92860190614961565b505b5050613deb565b6006826040518082805190602001908083835b60208310613d355780518252601f199092019160209182019101613d16565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220613d6e9250905060006149ed565b805115613deb57806006836040518082805190602001908083835b60208310613da85780518252601f199092019160209182019101613d89565b51815160209384036101000a60001901801990921691161790529201948552506040519384900381019093208451613de99591949190910192509050614961565b505b7fe2b310ec9dabdc05229a748e07666c3bc9c46c6ef465cce30d0aa3aa64a0644c826040518080602001828103825283818151815260200191508051906020019080838360005b83811015613e4a578181015183820152602001613e32565b50505050905090810190601f168015613e775780820380516001836020036101000a031916815260200191505b509250505060405180910390a15050565b613e9133612209565b613e9a57600080fd5b600081815260076020526040812090613eb38282614a31565b50506040805182815290517f87d0c300430cf9ba25931ff8bf37f633abe097e533463927bbfdc1e9ae1d0e9f9181900360200190a150565b60125490565b606481565b611dbe601384848461410d565b6003546001600160a01b03163314613f1a57600080fd5b6001600160a01b038116613f2d57600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03166000908152600c602052604090205460ff1690565b6003546001600160a01b03163314613f8457600080fd5b6032805482151560ff19909116811790915560408051918252517f04c71e53d136838eea703132a77007b0526b9a7691cdb7a6017a93673f865cbb9181900360200190a150565b601e5490565b600080805b83600301548110156141065761400e846002018281548110613ff457fe5b6000918252602090912001546001600160a01b0316612beb565b6140fd5783600201818154811061402157fe5b600091825260209091200180546001600160a01b03191690556003840154600192909201916000190181146140ec578360020160018560030154038154811061406657fe5b6000918252602090912001546002850180546001600160a01b03909216918390811061408e57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550836002016001856003015403815481106140d257fe5b600091825260209091200180546001600160a01b03191690555b600384018054600019019055614101565b6001015b613fd6565b5092915050565b60006001336001600160a01b038616146141a957604080516367e5c3bf60e01b8152336004820152905186916001600160a01b038316916367e5c3bf91602480820192602092909190829003018186803b15801561416a57600080fd5b505afa15801561417e573d6000803e3d6000fd5b505050506040513d602081101561419457600080fd5b505191506141a133612561565b9250506141b5565b6141b232612561565b91505b6001600160a01b038516600090815260018701602052604090205460ff166141db6149cf565b600a60ff838116918206811680845260649092068290038116602084018190528403919091038116604083015260009086908116158015614220575085806142205750845b1561422a57600191505b60ff8716158015906142395750855b801561425b575060018360ff8a166003811061425157fe5b602002015160ff16145b1561426857506001905060025b60ff8716158015906142775750845b801561429a575060028360ff8a166003811061428f57fe5b602002015160ff1614155b156142a6575060019050805b60ff8716158015906142b55750855b80156142be5750845b156142cb57506001905060025b816142d557600080fd5b600a8860ff16600381106142e557fe5b602091828204019190069054906101000a900460ff168102838960ff166003811061430c57fe5b60ff9092166020929092020152600083600260200201518460016020020151856000602002015101019050808b60010160008c6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff021916908360ff1602179055508060ff1660001415801561438c575060ff8516155b1561439b5761439b8b8b61461a565b60ff81166143af576143ad8b8b6147a8565b505b604080513081526001600160a01b038c16602082015260ff83168183015290517f23dcae6acc296731e3679d01e7cd963988e5a372850a0a1db2b9b01539e19ff49181900360600190a15050505050505050505050565b60095460009060ff838116911614156144215750600f6119f5565b60095460ff83811661010090920416141561443e575060136119f5565b60095460ff8381166201000090920416141561445c5750600b6119f5565b60095460ff838116600160201b90920416141561447b5750601b6119f5565b60095460ff838116630100000090920416141561449a575060176119f5565b50601f919050565b6003546000906001600160a01b03838116911614806144c95750602554606460ff90911610155b156144d6575060016119f5565b602554610100900460ff1615612fe05760048054604080516363e6ffdd60e01b81526001600160a01b03868116948201949094529051600093909216916363e6ffdd91602480820192602092909190829003018186803b15801561453957600080fd5b505afa15801561454d573d6000803e3d6000fd5b505050506040513d602081101561456357600080fd5b505160255460408051633fda978d60e11b815261010090920460ff16600483015230602483015260026044830152519192506001600160a01b03831691637fb52f1a91606480820192602092909190829003018186803b158015612fab57600080fd5b6001600160a01b038216600090815260018401602052604081205460ff90811690600a908416600381106145f657fe5b602081049091015460ff601f9092166101000a900481169116101590509392505050565b60028201546003830154101561467157808260020183600301548154811061463e57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506146a2565b600282018054600181018255600091825260209091200180546001600160a01b0319166001600160a01b0383161790555b5060030180546001019055565b602981815481106146bc57fe5b9060005260206000200160006146d291906149ed565b602a81815481106146df57fe5b60009182526020822001556029546000190181146147815760298054600019810190811061470957fe5b906000526020600020016029828154811061472057fe5b9060005260206000200190805460018160011615610100020316600290046147499291906148dc565b50602a8054600019810190811061475c57fe5b9060005260206000200154602a828154811061477457fe5b6000918252602090912001555b6029805490614794906000198301614a38565b50602a805490611b5e906000198301614a5c565b6000805b836003015481101561314c57826001600160a01b03168460020182815481106147d157fe5b6000918252602090912001546001600160a01b031614156148d4578360020181815481106147fb57fe5b600091825260209091200180546001600160a01b031916905560038401546000190181146148bf578360020160018560030154038154811061483957fe5b6000918252602090912001546002850180546001600160a01b03909216918390811061486157fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550836002016001856003015403815481106148a557fe5b600091825260209091200180546001600160a01b03191690555b50506003820180546000190190556001611d9e565b6001016147ac565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106149155780548555614951565b8280016001018555821561495157600052602060002091601f016020900482015b82811115614951578254825591600101919060010190614936565b5061495d929150614a7c565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106149a257805160ff1916838001178555614951565b82800160010185558215614951579182015b828111156149515782518255916020019190600101906149b4565b60405180606001604052806003906020820280388339509192915050565b50805460018160011615610100020316600290046000825580601f10614a135750612e4f565b601f016020900490600052602060002090810190612e4f9190614a7c565b5060009055565b815481835581811115611dbe57600083815260209020611dbe918101908301614a96565b815481835581811115611dbe57600083815260209020611dbe9181019083015b61197c91905b8082111561495d5760008155600101614a82565b61197c91905b8082111561495d576000614ab082826149ed565b50600101614a9c56fea265627a7a723158206879b03766c190742bf126167a819935ae8642bc65c00366eaf423ee681053eb64736f6c63430005110032a265627a7a723158201db3c1018948ea54b59b4fb0b9c4ffb2167e1006e99884e34d532bbdc709790e64736f6c63430005110032"

// DeployBaseGroupFactory deploys a new Ethereum contract, binding an instance of BaseGroupFactory to it.
func DeployBaseGroupFactory(auth *bind.TransactOpts, backend bind.ContractBackend, _spaceAddr common.Address) (common.Address, *types.Transaction, *BaseGroupFactory, error) {
	parsed, err := abi.JSON(strings.NewReader(BaseGroupFactoryABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(BaseGroupFactoryBin), backend, _spaceAddr)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &BaseGroupFactory{BaseGroupFactoryCaller: BaseGroupFactoryCaller{contract: contract}, BaseGroupFactoryTransactor: BaseGroupFactoryTransactor{contract: contract}, BaseGroupFactoryFilterer: BaseGroupFactoryFilterer{contract: contract}}, nil
}

// BaseGroupFactory is an auto generated Go binding around an Ethereum contract.
type BaseGroupFactory struct {
	BaseGroupFactoryCaller     // Read-only binding to the contract
	BaseGroupFactoryTransactor // Write-only binding to the contract
	BaseGroupFactoryFilterer   // Log filterer for contract events
}

// BaseGroupFactoryCaller is an auto generated read-only Go binding around an Ethereum contract.
type BaseGroupFactoryCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseGroupFactoryTransactor is an auto generated write-only Go binding around an Ethereum contract.
type BaseGroupFactoryTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseGroupFactoryFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type BaseGroupFactoryFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseGroupFactorySession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type BaseGroupFactorySession struct {
	Contract     *BaseGroupFactory // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// BaseGroupFactoryCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type BaseGroupFactoryCallerSession struct {
	Contract *BaseGroupFactoryCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts           // Call options to use throughout this session
}

// BaseGroupFactoryTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type BaseGroupFactoryTransactorSession struct {
	Contract     *BaseGroupFactoryTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts           // Transaction auth options to use throughout this session
}

// BaseGroupFactoryRaw is an auto generated low-level Go binding around an Ethereum contract.
type BaseGroupFactoryRaw struct {
	Contract *BaseGroupFactory // Generic contract binding to access the raw methods on
}

// BaseGroupFactoryCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type BaseGroupFactoryCallerRaw struct {
	Contract *BaseGroupFactoryCaller // Generic read-only contract binding to access the raw methods on
}

// BaseGroupFactoryTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type BaseGroupFactoryTransactorRaw struct {
	Contract *BaseGroupFactoryTransactor // Generic write-only contract binding to access the raw methods on
}

// NewBaseGroupFactory creates a new instance of BaseGroupFactory, bound to a specific deployed contract.
func NewBaseGroupFactory(address common.Address, backend bind.ContractBackend) (*BaseGroupFactory, error) {
	contract, err := bindBaseGroupFactory(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &BaseGroupFactory{BaseGroupFactoryCaller: BaseGroupFactoryCaller{contract: contract}, BaseGroupFactoryTransactor: BaseGroupFactoryTransactor{contract: contract}, BaseGroupFactoryFilterer: BaseGroupFactoryFilterer{contract: contract}}, nil
}

// NewBaseGroupFactoryCaller creates a new read-only instance of BaseGroupFactory, bound to a specific deployed contract.
func NewBaseGroupFactoryCaller(address common.Address, caller bind.ContractCaller) (*BaseGroupFactoryCaller, error) {
	contract, err := bindBaseGroupFactory(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &BaseGroupFactoryCaller{contract: contract}, nil
}

// NewBaseGroupFactoryTransactor creates a new write-only instance of BaseGroupFactory, bound to a specific deployed contract.
func NewBaseGroupFactoryTransactor(address common.Address, transactor bind.ContractTransactor) (*BaseGroupFactoryTransactor, error) {
	contract, err := bindBaseGroupFactory(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &BaseGroupFactoryTransactor{contract: contract}, nil
}

// NewBaseGroupFactoryFilterer creates a new log filterer instance of BaseGroupFactory, bound to a specific deployed contract.
func NewBaseGroupFactoryFilterer(address common.Address, filterer bind.ContractFilterer) (*BaseGroupFactoryFilterer, error) {
	contract, err := bindBaseGroupFactory(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &BaseGroupFactoryFilterer{contract: contract}, nil
}

// bindBaseGroupFactory binds a generic wrapper to an already deployed contract.
func bindBaseGroupFactory(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(BaseGroupFactoryABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BaseGroupFactory *BaseGroupFactoryRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BaseGroupFactory.Contract.BaseGroupFactoryCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BaseGroupFactory *BaseGroupFactoryRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseGroupFactory.Contract.BaseGroupFactoryTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BaseGroupFactory *BaseGroupFactoryRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BaseGroupFactory.Contract.BaseGroupFactoryTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BaseGroupFactory *BaseGroupFactoryCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BaseGroupFactory.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BaseGroupFactory *BaseGroupFactoryTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseGroupFactory.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BaseGroupFactory *BaseGroupFactoryTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BaseGroupFactory.Contract.contract.Transact(opts, method, params...)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseGroupFactory *BaseGroupFactoryCaller) ContentSpace(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseGroupFactory.contract.Call(opts, out, "contentSpace")
	return *ret0, err
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseGroupFactory *BaseGroupFactorySession) ContentSpace() (common.Address, error) {
	return _BaseGroupFactory.Contract.ContentSpace(&_BaseGroupFactory.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseGroupFactory *BaseGroupFactoryCallerSession) ContentSpace() (common.Address, error) {
	return _BaseGroupFactory.Contract.ContentSpace(&_BaseGroupFactory.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseGroupFactory *BaseGroupFactoryCaller) Creator(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseGroupFactory.contract.Call(opts, out, "creator")
	return *ret0, err
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseGroupFactory *BaseGroupFactorySession) Creator() (common.Address, error) {
	return _BaseGroupFactory.Contract.Creator(&_BaseGroupFactory.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseGroupFactory *BaseGroupFactoryCallerSession) Creator() (common.Address, error) {
	return _BaseGroupFactory.Contract.Creator(&_BaseGroupFactory.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseGroupFactory *BaseGroupFactoryCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseGroupFactory.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseGroupFactory *BaseGroupFactorySession) Owner() (common.Address, error) {
	return _BaseGroupFactory.Contract.Owner(&_BaseGroupFactory.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseGroupFactory *BaseGroupFactoryCallerSession) Owner() (common.Address, error) {
	return _BaseGroupFactory.Contract.Owner(&_BaseGroupFactory.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseGroupFactory *BaseGroupFactoryCaller) Version(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _BaseGroupFactory.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseGroupFactory *BaseGroupFactorySession) Version() ([32]byte, error) {
	return _BaseGroupFactory.Contract.Version(&_BaseGroupFactory.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseGroupFactory *BaseGroupFactoryCallerSession) Version() ([32]byte, error) {
	return _BaseGroupFactory.Contract.Version(&_BaseGroupFactory.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseGroupFactory *BaseGroupFactoryCaller) VersionAPI(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _BaseGroupFactory.contract.Call(opts, out, "versionAPI")
	return *ret0, err
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseGroupFactory *BaseGroupFactorySession) VersionAPI() ([32]byte, error) {
	return _BaseGroupFactory.Contract.VersionAPI(&_BaseGroupFactory.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseGroupFactory *BaseGroupFactoryCallerSession) VersionAPI() ([32]byte, error) {
	return _BaseGroupFactory.Contract.VersionAPI(&_BaseGroupFactory.CallOpts)
}

// CreateGroup is a paid mutator transaction binding the contract method 0x575185ed.
//
// Solidity: function createGroup() returns(address)
func (_BaseGroupFactory *BaseGroupFactoryTransactor) CreateGroup(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseGroupFactory.contract.Transact(opts, "createGroup")
}

// CreateGroup is a paid mutator transaction binding the contract method 0x575185ed.
//
// Solidity: function createGroup() returns(address)
func (_BaseGroupFactory *BaseGroupFactorySession) CreateGroup() (*types.Transaction, error) {
	return _BaseGroupFactory.Contract.CreateGroup(&_BaseGroupFactory.TransactOpts)
}

// CreateGroup is a paid mutator transaction binding the contract method 0x575185ed.
//
// Solidity: function createGroup() returns(address)
func (_BaseGroupFactory *BaseGroupFactoryTransactorSession) CreateGroup() (*types.Transaction, error) {
	return _BaseGroupFactory.Contract.CreateGroup(&_BaseGroupFactory.TransactOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseGroupFactory *BaseGroupFactoryTransactor) Kill(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseGroupFactory.contract.Transact(opts, "kill")
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseGroupFactory *BaseGroupFactorySession) Kill() (*types.Transaction, error) {
	return _BaseGroupFactory.Contract.Kill(&_BaseGroupFactory.TransactOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseGroupFactory *BaseGroupFactoryTransactorSession) Kill() (*types.Transaction, error) {
	return _BaseGroupFactory.Contract.Kill(&_BaseGroupFactory.TransactOpts)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseGroupFactory *BaseGroupFactoryTransactor) TransferCreatorship(opts *bind.TransactOpts, newCreator common.Address) (*types.Transaction, error) {
	return _BaseGroupFactory.contract.Transact(opts, "transferCreatorship", newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseGroupFactory *BaseGroupFactorySession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _BaseGroupFactory.Contract.TransferCreatorship(&_BaseGroupFactory.TransactOpts, newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseGroupFactory *BaseGroupFactoryTransactorSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _BaseGroupFactory.Contract.TransferCreatorship(&_BaseGroupFactory.TransactOpts, newCreator)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseGroupFactory *BaseGroupFactoryTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _BaseGroupFactory.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseGroupFactory *BaseGroupFactorySession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _BaseGroupFactory.Contract.TransferOwnership(&_BaseGroupFactory.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseGroupFactory *BaseGroupFactoryTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _BaseGroupFactory.Contract.TransferOwnership(&_BaseGroupFactory.TransactOpts, newOwner)
}

// BaseLibraryABI is the input ABI used to generate the binding from.
const BaseLibraryABI = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"address_KMS\",\"type\":\"address\"},{\"internalType\":\"addresspayable\",\"name\":\"_content_space\",\"type\":\"address\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"contextHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestTimestamp\",\"type\":\"uint256\"}],\"name\":\"AccessRequestV3\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"group\",\"type\":\"address\"}],\"name\":\"AccessorGroupAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"group\",\"type\":\"address\"}],\"name\":\"AccessorGroupRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"note\",\"type\":\"string\"}],\"name\":\"ApproveContent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"}],\"name\":\"ApproveContentRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spaceAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"objectHash\",\"type\":\"string\"}],\"name\":\"CommitPending\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"content_type\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spaceAddress\",\"type\":\"address\"}],\"name\":\"ContentObjectCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spaceAddress\",\"type\":\"address\"}],\"name\":\"ContentObjectDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contentType\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contentContract\",\"type\":\"address\"}],\"name\":\"ContentTypeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contentType\",\"type\":\"address\"}],\"name\":\"ContentTypeRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"group\",\"type\":\"address\"}],\"name\":\"ContributorGroupAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"group\",\"type\":\"address\"}],\"name\":\"ContributorGroupRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"ObjectMetaChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"group\",\"type\":\"address\"}],\"name\":\"ReviewerGroupAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"group\",\"type\":\"address\"}],\"name\":\"ReviewerGroupRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"operationCode\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"UnauthorizedOperation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addressKms\",\"type\":\"address\"}],\"name\":\"UpdateKmsAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"objectHash\",\"type\":\"string\"}],\"name\":\"UpdateRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spaceAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"objectHash\",\"type\":\"string\"}],\"name\":\"VersionConfirm\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spaceAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"versionHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"index\",\"type\":\"int256\"}],\"name\":\"VersionDelete\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contentSpace\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"visibility\",\"type\":\"uint8\"}],\"name\":\"VisibilityChanged\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"CAN_ACCESS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CAN_EDIT\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CAN_SEE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"addresspayable[]\",\"name\":\"\",\"type\":\"address[]\"}],\"name\":\"accessRequestV3\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"accessorGroups\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"accessorGroupsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"group\",\"type\":\"address\"}],\"name\":\"addAccessorGroup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"content_type\",\"type\":\"address\"},{\"internalType\":\"addresspayable\",\"name\":\"content_contract\",\"type\":\"address\"}],\"name\":\"addContentType\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"group\",\"type\":\"address\"}],\"name\":\"addContributorGroup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"group\",\"type\":\"address\"}],\"name\":\"addReviewerGroup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"addressKMS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"approvalRequests\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"approvalRequestsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"content_contract\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"note\",\"type\":\"string\"}],\"name\":\"approveContent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canCommit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canConfirm\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"canContribute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canEdit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"canPublish\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canPublish\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"canReview\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"clearPending\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_objectHash\",\"type\":\"string\"}],\"name\":\"commit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"commitPending\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"confirmCommit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentSpace\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contentTypeContracts\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contentTypes\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentTypesLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contributorGroups\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contributorGroupsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"countVersionHashes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"content_type\",\"type\":\"address\"}],\"name\":\"createContent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"_contentAddr\",\"type\":\"address\"}],\"name\":\"deleteContent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_versionHash\",\"type\":\"string\"}],\"name\":\"deleteVersion\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"typeHash\",\"type\":\"bytes32\"}],\"name\":\"findTypeByHash\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"getMeta\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getPendingApprovalRequest\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"hasAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"hasEditorRight\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"indexCategory\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"objectHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"objectTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"parentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"contentObj\",\"type\":\"address\"}],\"name\":\"publish\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"putMeta\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"group\",\"type\":\"address\"}],\"name\":\"removeAccessorGroup\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"content_type\",\"type\":\"address\"}],\"name\":\"removeContentType\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"group\",\"type\":\"address\"}],\"name\":\"removeContributorGroup\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"group\",\"type\":\"address\"}],\"name\":\"removeReviewerGroup\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"requiresReview\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"reviewerGroups\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reviewerGroupsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"address_KMS\",\"type\":\"address\"}],\"name\":\"setAddressKMS\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"group\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setGroupRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"stakeholder\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_visibility_code\",\"type\":\"uint8\"}],\"name\":\"setVisibility\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"submitApprovalRequest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newCreator\",\"type\":\"address\"}],\"name\":\"transferCreatorship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"address_KMS\",\"type\":\"address\"}],\"name\":\"updateAddressKMS\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"updateRequest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"content_type\",\"type\":\"address\"}],\"name\":\"validType\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"versionAPI\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"versionHashes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"versionTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"visibility\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"content_type\",\"type\":\"address\"}],\"name\":\"whitelistedType\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// BaseLibraryFuncSigs maps the 4-byte function signature to its string representation.
var BaseLibraryFuncSigs = map[string]string{
	"97ac4fd2": "CAN_ACCESS()",
	"ef1d7dc2": "CAN_EDIT()",
	"100508a2": "CAN_SEE()",
	"1bf7a912": "accessRequestV3(bytes32[],address[])",
	"2c11f392": "accessorGroups(uint256)",
	"e5538fd2": "accessorGroupsLength()",
	"1d0f4351": "addAccessorGroup(address)",
	"0f58a786": "addContentType(address,address)",
	"679a9a3c": "addContributorGroup(address)",
	"dc3c29c0": "addReviewerGroup(address)",
	"32eaf21b": "addressKMS()",
	"8cb13c2e": "approvalRequests(uint256)",
	"16308394": "approvalRequestsLength()",
	"87e86b2c": "approveContent(address,bool,string)",
	"6e375427": "canCommit()",
	"14cfabb3": "canConfirm()",
	"0eaec2c5": "canContribute(address)",
	"81beeb64": "canEdit()",
	"cbcd4461": "canPublish()",
	"9b55f901": "canPublish(address)",
	"29d00219": "canReview(address)",
	"5f6a1301": "clearPending()",
	"9867db74": "commit(string)",
	"375a6e7c": "commitPending()",
	"446e8826": "confirmCommit()",
	"af570c04": "contentSpace()",
	"1cdbee5a": "contentTypeContracts(address)",
	"991a3a7c": "contentTypes(uint256)",
	"c65bcbe2": "contentTypesLength()",
	"2393553b": "contributorGroups(uint256)",
	"470750bb": "contributorGroupsLength()",
	"331b86c0": "countVersionHashes()",
	"1e35d8fa": "createContent(address)",
	"02d05d3f": "creator()",
	"87fcd0b8": "deleteContent(address)",
	"e1a70717": "deleteVersion(string)",
	"1f2caaec": "findTypeByHash(bytes32)",
	"ac55c906": "getMeta(bytes)",
	"63dab9d4": "getPendingApprovalRequest(uint256)",
	"95a078e8": "hasAccess(address)",
	"67e5c3bf": "hasEditorRight(address)",
	"6380501f": "indexCategory()",
	"24d7806c": "isAdmin(address)",
	"41c0e1b5": "kill()",
	"e02dd9c2": "objectHash()",
	"40b87a26": "objectTimestamp()",
	"8da5cb5b": "owner()",
	"00821de3": "parentAddress()",
	"628449fd": "pendingHash()",
	"2cf99422": "publish(address)",
	"e542b7cb": "putMeta(bytes,bytes)",
	"e8de515f": "removeAccessorGroup(address)",
	"fd089196": "removeContentType(address)",
	"386493e0": "removeContributorGroup(address)",
	"1b969895": "removeReviewerGroup(address)",
	"3dd71d99": "requiresReview()",
	"952e464b": "reviewerGroups(uint256)",
	"21770a84": "reviewerGroupsLength()",
	"c9e8e72d": "setAddressKMS(address)",
	"22e564eb": "setGroupRights(address,uint8,uint8)",
	"0fe1b5a2": "setRights(address,uint8,uint8)",
	"aa024e8b": "setVisibility(uint8)",
	"49102e61": "submitApprovalRequest()",
	"6d2e4b1b": "transferCreatorship(address)",
	"f2fde38b": "transferOwnership(address)",
	"011e01a5": "updateAddressKMS(address)",
	"c287e0ed": "updateRequest()",
	"29dedde5": "validType(address)",
	"54fd4d50": "version()",
	"5f4fcae1": "versionAPI()",
	"7ca8f618": "versionHashes(uint256)",
	"7886f747": "versionTimestamp(uint256)",
	"29adec14": "visibility()",
	"9cb121ba": "whitelistedType(address)",
}

// BaseLibraryBin is the compiled bytecode used for deploying new contracts.
var BaseLibraryBin = ""

// DeployBaseLibrary deploys a new Ethereum contract, binding an instance of BaseLibrary to it.
func DeployBaseLibrary(auth *bind.TransactOpts, backend bind.ContractBackend, address_KMS common.Address, _content_space common.Address) (common.Address, *types.Transaction, *BaseLibrary, error) {
	parsed, err := abi.JSON(strings.NewReader(BaseLibraryABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(BaseLibraryBin), backend, address_KMS, _content_space)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &BaseLibrary{BaseLibraryCaller: BaseLibraryCaller{contract: contract}, BaseLibraryTransactor: BaseLibraryTransactor{contract: contract}, BaseLibraryFilterer: BaseLibraryFilterer{contract: contract}}, nil
}

// BaseLibrary is an auto generated Go binding around an Ethereum contract.
type BaseLibrary struct {
	BaseLibraryCaller     // Read-only binding to the contract
	BaseLibraryTransactor // Write-only binding to the contract
	BaseLibraryFilterer   // Log filterer for contract events
}

// BaseLibraryCaller is an auto generated read-only Go binding around an Ethereum contract.
type BaseLibraryCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseLibraryTransactor is an auto generated write-only Go binding around an Ethereum contract.
type BaseLibraryTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseLibraryFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type BaseLibraryFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseLibrarySession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type BaseLibrarySession struct {
	Contract     *BaseLibrary      // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// BaseLibraryCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type BaseLibraryCallerSession struct {
	Contract *BaseLibraryCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts      // Call options to use throughout this session
}

// BaseLibraryTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type BaseLibraryTransactorSession struct {
	Contract     *BaseLibraryTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts      // Transaction auth options to use throughout this session
}

// BaseLibraryRaw is an auto generated low-level Go binding around an Ethereum contract.
type BaseLibraryRaw struct {
	Contract *BaseLibrary // Generic contract binding to access the raw methods on
}

// BaseLibraryCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type BaseLibraryCallerRaw struct {
	Contract *BaseLibraryCaller // Generic read-only contract binding to access the raw methods on
}

// BaseLibraryTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type BaseLibraryTransactorRaw struct {
	Contract *BaseLibraryTransactor // Generic write-only contract binding to access the raw methods on
}

// NewBaseLibrary creates a new instance of BaseLibrary, bound to a specific deployed contract.
func NewBaseLibrary(address common.Address, backend bind.ContractBackend) (*BaseLibrary, error) {
	contract, err := bindBaseLibrary(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &BaseLibrary{BaseLibraryCaller: BaseLibraryCaller{contract: contract}, BaseLibraryTransactor: BaseLibraryTransactor{contract: contract}, BaseLibraryFilterer: BaseLibraryFilterer{contract: contract}}, nil
}

// NewBaseLibraryCaller creates a new read-only instance of BaseLibrary, bound to a specific deployed contract.
func NewBaseLibraryCaller(address common.Address, caller bind.ContractCaller) (*BaseLibraryCaller, error) {
	contract, err := bindBaseLibrary(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &BaseLibraryCaller{contract: contract}, nil
}

// NewBaseLibraryTransactor creates a new write-only instance of BaseLibrary, bound to a specific deployed contract.
func NewBaseLibraryTransactor(address common.Address, transactor bind.ContractTransactor) (*BaseLibraryTransactor, error) {
	contract, err := bindBaseLibrary(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &BaseLibraryTransactor{contract: contract}, nil
}

// NewBaseLibraryFilterer creates a new log filterer instance of BaseLibrary, bound to a specific deployed contract.
func NewBaseLibraryFilterer(address common.Address, filterer bind.ContractFilterer) (*BaseLibraryFilterer, error) {
	contract, err := bindBaseLibrary(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &BaseLibraryFilterer{contract: contract}, nil
}

// bindBaseLibrary binds a generic wrapper to an already deployed contract.
func bindBaseLibrary(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(BaseLibraryABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BaseLibrary *BaseLibraryRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BaseLibrary.Contract.BaseLibraryCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BaseLibrary *BaseLibraryRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseLibrary.Contract.BaseLibraryTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BaseLibrary *BaseLibraryRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BaseLibrary.Contract.BaseLibraryTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BaseLibrary *BaseLibraryCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BaseLibrary.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BaseLibrary *BaseLibraryTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseLibrary.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BaseLibrary *BaseLibraryTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BaseLibrary.Contract.contract.Transact(opts, method, params...)
}

// CANACCESS is a free data retrieval call binding the contract method 0x97ac4fd2.
//
// Solidity: function CAN_ACCESS() constant returns(uint8)
func (_BaseLibrary *BaseLibraryCaller) CANACCESS(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "CAN_ACCESS")
	return *ret0, err
}

// CANACCESS is a free data retrieval call binding the contract method 0x97ac4fd2.
//
// Solidity: function CAN_ACCESS() constant returns(uint8)
func (_BaseLibrary *BaseLibrarySession) CANACCESS() (uint8, error) {
	return _BaseLibrary.Contract.CANACCESS(&_BaseLibrary.CallOpts)
}

// CANACCESS is a free data retrieval call binding the contract method 0x97ac4fd2.
//
// Solidity: function CAN_ACCESS() constant returns(uint8)
func (_BaseLibrary *BaseLibraryCallerSession) CANACCESS() (uint8, error) {
	return _BaseLibrary.Contract.CANACCESS(&_BaseLibrary.CallOpts)
}

// CANEDIT is a free data retrieval call binding the contract method 0xef1d7dc2.
//
// Solidity: function CAN_EDIT() constant returns(uint8)
func (_BaseLibrary *BaseLibraryCaller) CANEDIT(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "CAN_EDIT")
	return *ret0, err
}

// CANEDIT is a free data retrieval call binding the contract method 0xef1d7dc2.
//
// Solidity: function CAN_EDIT() constant returns(uint8)
func (_BaseLibrary *BaseLibrarySession) CANEDIT() (uint8, error) {
	return _BaseLibrary.Contract.CANEDIT(&_BaseLibrary.CallOpts)
}

// CANEDIT is a free data retrieval call binding the contract method 0xef1d7dc2.
//
// Solidity: function CAN_EDIT() constant returns(uint8)
func (_BaseLibrary *BaseLibraryCallerSession) CANEDIT() (uint8, error) {
	return _BaseLibrary.Contract.CANEDIT(&_BaseLibrary.CallOpts)
}

// CANSEE is a free data retrieval call binding the contract method 0x100508a2.
//
// Solidity: function CAN_SEE() constant returns(uint8)
func (_BaseLibrary *BaseLibraryCaller) CANSEE(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "CAN_SEE")
	return *ret0, err
}

// CANSEE is a free data retrieval call binding the contract method 0x100508a2.
//
// Solidity: function CAN_SEE() constant returns(uint8)
func (_BaseLibrary *BaseLibrarySession) CANSEE() (uint8, error) {
	return _BaseLibrary.Contract.CANSEE(&_BaseLibrary.CallOpts)
}

// CANSEE is a free data retrieval call binding the contract method 0x100508a2.
//
// Solidity: function CAN_SEE() constant returns(uint8)
func (_BaseLibrary *BaseLibraryCallerSession) CANSEE() (uint8, error) {
	return _BaseLibrary.Contract.CANSEE(&_BaseLibrary.CallOpts)
}

// AccessorGroups is a free data retrieval call binding the contract method 0x2c11f392.
//
// Solidity: function accessorGroups(uint256 ) constant returns(address)
func (_BaseLibrary *BaseLibraryCaller) AccessorGroups(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "accessorGroups", arg0)
	return *ret0, err
}

// AccessorGroups is a free data retrieval call binding the contract method 0x2c11f392.
//
// Solidity: function accessorGroups(uint256 ) constant returns(address)
func (_BaseLibrary *BaseLibrarySession) AccessorGroups(arg0 *big.Int) (common.Address, error) {
	return _BaseLibrary.Contract.AccessorGroups(&_BaseLibrary.CallOpts, arg0)
}

// AccessorGroups is a free data retrieval call binding the contract method 0x2c11f392.
//
// Solidity: function accessorGroups(uint256 ) constant returns(address)
func (_BaseLibrary *BaseLibraryCallerSession) AccessorGroups(arg0 *big.Int) (common.Address, error) {
	return _BaseLibrary.Contract.AccessorGroups(&_BaseLibrary.CallOpts, arg0)
}

// AccessorGroupsLength is a free data retrieval call binding the contract method 0xe5538fd2.
//
// Solidity: function accessorGroupsLength() constant returns(uint256)
func (_BaseLibrary *BaseLibraryCaller) AccessorGroupsLength(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "accessorGroupsLength")
	return *ret0, err
}

// AccessorGroupsLength is a free data retrieval call binding the contract method 0xe5538fd2.
//
// Solidity: function accessorGroupsLength() constant returns(uint256)
func (_BaseLibrary *BaseLibrarySession) AccessorGroupsLength() (*big.Int, error) {
	return _BaseLibrary.Contract.AccessorGroupsLength(&_BaseLibrary.CallOpts)
}

// AccessorGroupsLength is a free data retrieval call binding the contract method 0xe5538fd2.
//
// Solidity: function accessorGroupsLength() constant returns(uint256)
func (_BaseLibrary *BaseLibraryCallerSession) AccessorGroupsLength() (*big.Int, error) {
	return _BaseLibrary.Contract.AccessorGroupsLength(&_BaseLibrary.CallOpts)
}

// AddressKMS is a free data retrieval call binding the contract method 0x32eaf21b.
//
// Solidity: function addressKMS() constant returns(address)
func (_BaseLibrary *BaseLibraryCaller) AddressKMS(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "addressKMS")
	return *ret0, err
}

// AddressKMS is a free data retrieval call binding the contract method 0x32eaf21b.
//
// Solidity: function addressKMS() constant returns(address)
func (_BaseLibrary *BaseLibrarySession) AddressKMS() (common.Address, error) {
	return _BaseLibrary.Contract.AddressKMS(&_BaseLibrary.CallOpts)
}

// AddressKMS is a free data retrieval call binding the contract method 0x32eaf21b.
//
// Solidity: function addressKMS() constant returns(address)
func (_BaseLibrary *BaseLibraryCallerSession) AddressKMS() (common.Address, error) {
	return _BaseLibrary.Contract.AddressKMS(&_BaseLibrary.CallOpts)
}

// ApprovalRequests is a free data retrieval call binding the contract method 0x8cb13c2e.
//
// Solidity: function approvalRequests(uint256 ) constant returns(address)
func (_BaseLibrary *BaseLibraryCaller) ApprovalRequests(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "approvalRequests", arg0)
	return *ret0, err
}

// ApprovalRequests is a free data retrieval call binding the contract method 0x8cb13c2e.
//
// Solidity: function approvalRequests(uint256 ) constant returns(address)
func (_BaseLibrary *BaseLibrarySession) ApprovalRequests(arg0 *big.Int) (common.Address, error) {
	return _BaseLibrary.Contract.ApprovalRequests(&_BaseLibrary.CallOpts, arg0)
}

// ApprovalRequests is a free data retrieval call binding the contract method 0x8cb13c2e.
//
// Solidity: function approvalRequests(uint256 ) constant returns(address)
func (_BaseLibrary *BaseLibraryCallerSession) ApprovalRequests(arg0 *big.Int) (common.Address, error) {
	return _BaseLibrary.Contract.ApprovalRequests(&_BaseLibrary.CallOpts, arg0)
}

// ApprovalRequestsLength is a free data retrieval call binding the contract method 0x16308394.
//
// Solidity: function approvalRequestsLength() constant returns(uint256)
func (_BaseLibrary *BaseLibraryCaller) ApprovalRequestsLength(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "approvalRequestsLength")
	return *ret0, err
}

// ApprovalRequestsLength is a free data retrieval call binding the contract method 0x16308394.
//
// Solidity: function approvalRequestsLength() constant returns(uint256)
func (_BaseLibrary *BaseLibrarySession) ApprovalRequestsLength() (*big.Int, error) {
	return _BaseLibrary.Contract.ApprovalRequestsLength(&_BaseLibrary.CallOpts)
}

// ApprovalRequestsLength is a free data retrieval call binding the contract method 0x16308394.
//
// Solidity: function approvalRequestsLength() constant returns(uint256)
func (_BaseLibrary *BaseLibraryCallerSession) ApprovalRequestsLength() (*big.Int, error) {
	return _BaseLibrary.Contract.ApprovalRequestsLength(&_BaseLibrary.CallOpts)
}

// CanCommit is a free data retrieval call binding the contract method 0x6e375427.
//
// Solidity: function canCommit() constant returns(bool)
func (_BaseLibrary *BaseLibraryCaller) CanCommit(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "canCommit")
	return *ret0, err
}

// CanCommit is a free data retrieval call binding the contract method 0x6e375427.
//
// Solidity: function canCommit() constant returns(bool)
func (_BaseLibrary *BaseLibrarySession) CanCommit() (bool, error) {
	return _BaseLibrary.Contract.CanCommit(&_BaseLibrary.CallOpts)
}

// CanCommit is a free data retrieval call binding the contract method 0x6e375427.
//
// Solidity: function canCommit() constant returns(bool)
func (_BaseLibrary *BaseLibraryCallerSession) CanCommit() (bool, error) {
	return _BaseLibrary.Contract.CanCommit(&_BaseLibrary.CallOpts)
}

// CanConfirm is a free data retrieval call binding the contract method 0x14cfabb3.
//
// Solidity: function canConfirm() constant returns(bool)
func (_BaseLibrary *BaseLibraryCaller) CanConfirm(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "canConfirm")
	return *ret0, err
}

// CanConfirm is a free data retrieval call binding the contract method 0x14cfabb3.
//
// Solidity: function canConfirm() constant returns(bool)
func (_BaseLibrary *BaseLibrarySession) CanConfirm() (bool, error) {
	return _BaseLibrary.Contract.CanConfirm(&_BaseLibrary.CallOpts)
}

// CanConfirm is a free data retrieval call binding the contract method 0x14cfabb3.
//
// Solidity: function canConfirm() constant returns(bool)
func (_BaseLibrary *BaseLibraryCallerSession) CanConfirm() (bool, error) {
	return _BaseLibrary.Contract.CanConfirm(&_BaseLibrary.CallOpts)
}

// CanContribute is a free data retrieval call binding the contract method 0x0eaec2c5.
//
// Solidity: function canContribute(address _candidate) constant returns(bool)
func (_BaseLibrary *BaseLibraryCaller) CanContribute(opts *bind.CallOpts, _candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "canContribute", _candidate)
	return *ret0, err
}

// CanContribute is a free data retrieval call binding the contract method 0x0eaec2c5.
//
// Solidity: function canContribute(address _candidate) constant returns(bool)
func (_BaseLibrary *BaseLibrarySession) CanContribute(_candidate common.Address) (bool, error) {
	return _BaseLibrary.Contract.CanContribute(&_BaseLibrary.CallOpts, _candidate)
}

// CanContribute is a free data retrieval call binding the contract method 0x0eaec2c5.
//
// Solidity: function canContribute(address _candidate) constant returns(bool)
func (_BaseLibrary *BaseLibraryCallerSession) CanContribute(_candidate common.Address) (bool, error) {
	return _BaseLibrary.Contract.CanContribute(&_BaseLibrary.CallOpts, _candidate)
}

// CanEdit is a free data retrieval call binding the contract method 0x81beeb64.
//
// Solidity: function canEdit() constant returns(bool)
func (_BaseLibrary *BaseLibraryCaller) CanEdit(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "canEdit")
	return *ret0, err
}

// CanEdit is a free data retrieval call binding the contract method 0x81beeb64.
//
// Solidity: function canEdit() constant returns(bool)
func (_BaseLibrary *BaseLibrarySession) CanEdit() (bool, error) {
	return _BaseLibrary.Contract.CanEdit(&_BaseLibrary.CallOpts)
}

// CanEdit is a free data retrieval call binding the contract method 0x81beeb64.
//
// Solidity: function canEdit() constant returns(bool)
func (_BaseLibrary *BaseLibraryCallerSession) CanEdit() (bool, error) {
	return _BaseLibrary.Contract.CanEdit(&_BaseLibrary.CallOpts)
}

// CanPublish is a free data retrieval call binding the contract method 0x9b55f901.
//
// Solidity: function canPublish(address _candidate) constant returns(bool)
func (_BaseLibrary *BaseLibraryCaller) CanPublish(opts *bind.CallOpts, _candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "canPublish", _candidate)
	return *ret0, err
}

// CanPublish is a free data retrieval call binding the contract method 0x9b55f901.
//
// Solidity: function canPublish(address _candidate) constant returns(bool)
func (_BaseLibrary *BaseLibrarySession) CanPublish(_candidate common.Address) (bool, error) {
	return _BaseLibrary.Contract.CanPublish(&_BaseLibrary.CallOpts, _candidate)
}

// CanPublish is a free data retrieval call binding the contract method 0x9b55f901.
//
// Solidity: function canPublish(address _candidate) constant returns(bool)
func (_BaseLibrary *BaseLibraryCallerSession) CanPublish(_candidate common.Address) (bool, error) {
	return _BaseLibrary.Contract.CanPublish(&_BaseLibrary.CallOpts, _candidate)
}

// CanPublish0 is a free data retrieval call binding the contract method 0xcbcd4461.
//
// Solidity: function canPublish() constant returns(bool)
func (_BaseLibrary *BaseLibraryCaller) CanPublish0(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "canPublish0")
	return *ret0, err
}

// CanPublish0 is a free data retrieval call binding the contract method 0xcbcd4461.
//
// Solidity: function canPublish() constant returns(bool)
func (_BaseLibrary *BaseLibrarySession) CanPublish0() (bool, error) {
	return _BaseLibrary.Contract.CanPublish0(&_BaseLibrary.CallOpts)
}

// CanPublish0 is a free data retrieval call binding the contract method 0xcbcd4461.
//
// Solidity: function canPublish() constant returns(bool)
func (_BaseLibrary *BaseLibraryCallerSession) CanPublish0() (bool, error) {
	return _BaseLibrary.Contract.CanPublish0(&_BaseLibrary.CallOpts)
}

// CanReview is a free data retrieval call binding the contract method 0x29d00219.
//
// Solidity: function canReview(address _candidate) constant returns(bool)
func (_BaseLibrary *BaseLibraryCaller) CanReview(opts *bind.CallOpts, _candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "canReview", _candidate)
	return *ret0, err
}

// CanReview is a free data retrieval call binding the contract method 0x29d00219.
//
// Solidity: function canReview(address _candidate) constant returns(bool)
func (_BaseLibrary *BaseLibrarySession) CanReview(_candidate common.Address) (bool, error) {
	return _BaseLibrary.Contract.CanReview(&_BaseLibrary.CallOpts, _candidate)
}

// CanReview is a free data retrieval call binding the contract method 0x29d00219.
//
// Solidity: function canReview(address _candidate) constant returns(bool)
func (_BaseLibrary *BaseLibraryCallerSession) CanReview(_candidate common.Address) (bool, error) {
	return _BaseLibrary.Contract.CanReview(&_BaseLibrary.CallOpts, _candidate)
}

// CommitPending is a free data retrieval call binding the contract method 0x375a6e7c.
//
// Solidity: function commitPending() constant returns(bool)
func (_BaseLibrary *BaseLibraryCaller) CommitPending(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "commitPending")
	return *ret0, err
}

// CommitPending is a free data retrieval call binding the contract method 0x375a6e7c.
//
// Solidity: function commitPending() constant returns(bool)
func (_BaseLibrary *BaseLibrarySession) CommitPending() (bool, error) {
	return _BaseLibrary.Contract.CommitPending(&_BaseLibrary.CallOpts)
}

// CommitPending is a free data retrieval call binding the contract method 0x375a6e7c.
//
// Solidity: function commitPending() constant returns(bool)
func (_BaseLibrary *BaseLibraryCallerSession) CommitPending() (bool, error) {
	return _BaseLibrary.Contract.CommitPending(&_BaseLibrary.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseLibrary *BaseLibraryCaller) ContentSpace(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "contentSpace")
	return *ret0, err
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseLibrary *BaseLibrarySession) ContentSpace() (common.Address, error) {
	return _BaseLibrary.Contract.ContentSpace(&_BaseLibrary.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseLibrary *BaseLibraryCallerSession) ContentSpace() (common.Address, error) {
	return _BaseLibrary.Contract.ContentSpace(&_BaseLibrary.CallOpts)
}

// ContentTypeContracts is a free data retrieval call binding the contract method 0x1cdbee5a.
//
// Solidity: function contentTypeContracts(address ) constant returns(address)
func (_BaseLibrary *BaseLibraryCaller) ContentTypeContracts(opts *bind.CallOpts, arg0 common.Address) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "contentTypeContracts", arg0)
	return *ret0, err
}

// ContentTypeContracts is a free data retrieval call binding the contract method 0x1cdbee5a.
//
// Solidity: function contentTypeContracts(address ) constant returns(address)
func (_BaseLibrary *BaseLibrarySession) ContentTypeContracts(arg0 common.Address) (common.Address, error) {
	return _BaseLibrary.Contract.ContentTypeContracts(&_BaseLibrary.CallOpts, arg0)
}

// ContentTypeContracts is a free data retrieval call binding the contract method 0x1cdbee5a.
//
// Solidity: function contentTypeContracts(address ) constant returns(address)
func (_BaseLibrary *BaseLibraryCallerSession) ContentTypeContracts(arg0 common.Address) (common.Address, error) {
	return _BaseLibrary.Contract.ContentTypeContracts(&_BaseLibrary.CallOpts, arg0)
}

// ContentTypes is a free data retrieval call binding the contract method 0x991a3a7c.
//
// Solidity: function contentTypes(uint256 ) constant returns(address)
func (_BaseLibrary *BaseLibraryCaller) ContentTypes(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "contentTypes", arg0)
	return *ret0, err
}

// ContentTypes is a free data retrieval call binding the contract method 0x991a3a7c.
//
// Solidity: function contentTypes(uint256 ) constant returns(address)
func (_BaseLibrary *BaseLibrarySession) ContentTypes(arg0 *big.Int) (common.Address, error) {
	return _BaseLibrary.Contract.ContentTypes(&_BaseLibrary.CallOpts, arg0)
}

// ContentTypes is a free data retrieval call binding the contract method 0x991a3a7c.
//
// Solidity: function contentTypes(uint256 ) constant returns(address)
func (_BaseLibrary *BaseLibraryCallerSession) ContentTypes(arg0 *big.Int) (common.Address, error) {
	return _BaseLibrary.Contract.ContentTypes(&_BaseLibrary.CallOpts, arg0)
}

// ContentTypesLength is a free data retrieval call binding the contract method 0xc65bcbe2.
//
// Solidity: function contentTypesLength() constant returns(uint256)
func (_BaseLibrary *BaseLibraryCaller) ContentTypesLength(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "contentTypesLength")
	return *ret0, err
}

// ContentTypesLength is a free data retrieval call binding the contract method 0xc65bcbe2.
//
// Solidity: function contentTypesLength() constant returns(uint256)
func (_BaseLibrary *BaseLibrarySession) ContentTypesLength() (*big.Int, error) {
	return _BaseLibrary.Contract.ContentTypesLength(&_BaseLibrary.CallOpts)
}

// ContentTypesLength is a free data retrieval call binding the contract method 0xc65bcbe2.
//
// Solidity: function contentTypesLength() constant returns(uint256)
func (_BaseLibrary *BaseLibraryCallerSession) ContentTypesLength() (*big.Int, error) {
	return _BaseLibrary.Contract.ContentTypesLength(&_BaseLibrary.CallOpts)
}

// ContributorGroups is a free data retrieval call binding the contract method 0x2393553b.
//
// Solidity: function contributorGroups(uint256 ) constant returns(address)
func (_BaseLibrary *BaseLibraryCaller) ContributorGroups(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "contributorGroups", arg0)
	return *ret0, err
}

// ContributorGroups is a free data retrieval call binding the contract method 0x2393553b.
//
// Solidity: function contributorGroups(uint256 ) constant returns(address)
func (_BaseLibrary *BaseLibrarySession) ContributorGroups(arg0 *big.Int) (common.Address, error) {
	return _BaseLibrary.Contract.ContributorGroups(&_BaseLibrary.CallOpts, arg0)
}

// ContributorGroups is a free data retrieval call binding the contract method 0x2393553b.
//
// Solidity: function contributorGroups(uint256 ) constant returns(address)
func (_BaseLibrary *BaseLibraryCallerSession) ContributorGroups(arg0 *big.Int) (common.Address, error) {
	return _BaseLibrary.Contract.ContributorGroups(&_BaseLibrary.CallOpts, arg0)
}

// ContributorGroupsLength is a free data retrieval call binding the contract method 0x470750bb.
//
// Solidity: function contributorGroupsLength() constant returns(uint256)
func (_BaseLibrary *BaseLibraryCaller) ContributorGroupsLength(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "contributorGroupsLength")
	return *ret0, err
}

// ContributorGroupsLength is a free data retrieval call binding the contract method 0x470750bb.
//
// Solidity: function contributorGroupsLength() constant returns(uint256)
func (_BaseLibrary *BaseLibrarySession) ContributorGroupsLength() (*big.Int, error) {
	return _BaseLibrary.Contract.ContributorGroupsLength(&_BaseLibrary.CallOpts)
}

// ContributorGroupsLength is a free data retrieval call binding the contract method 0x470750bb.
//
// Solidity: function contributorGroupsLength() constant returns(uint256)
func (_BaseLibrary *BaseLibraryCallerSession) ContributorGroupsLength() (*big.Int, error) {
	return _BaseLibrary.Contract.ContributorGroupsLength(&_BaseLibrary.CallOpts)
}

// CountVersionHashes is a free data retrieval call binding the contract method 0x331b86c0.
//
// Solidity: function countVersionHashes() constant returns(uint256)
func (_BaseLibrary *BaseLibraryCaller) CountVersionHashes(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "countVersionHashes")
	return *ret0, err
}

// CountVersionHashes is a free data retrieval call binding the contract method 0x331b86c0.
//
// Solidity: function countVersionHashes() constant returns(uint256)
func (_BaseLibrary *BaseLibrarySession) CountVersionHashes() (*big.Int, error) {
	return _BaseLibrary.Contract.CountVersionHashes(&_BaseLibrary.CallOpts)
}

// CountVersionHashes is a free data retrieval call binding the contract method 0x331b86c0.
//
// Solidity: function countVersionHashes() constant returns(uint256)
func (_BaseLibrary *BaseLibraryCallerSession) CountVersionHashes() (*big.Int, error) {
	return _BaseLibrary.Contract.CountVersionHashes(&_BaseLibrary.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseLibrary *BaseLibraryCaller) Creator(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "creator")
	return *ret0, err
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseLibrary *BaseLibrarySession) Creator() (common.Address, error) {
	return _BaseLibrary.Contract.Creator(&_BaseLibrary.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseLibrary *BaseLibraryCallerSession) Creator() (common.Address, error) {
	return _BaseLibrary.Contract.Creator(&_BaseLibrary.CallOpts)
}

// FindTypeByHash is a free data retrieval call binding the contract method 0x1f2caaec.
//
// Solidity: function findTypeByHash(bytes32 typeHash) constant returns(address)
func (_BaseLibrary *BaseLibraryCaller) FindTypeByHash(opts *bind.CallOpts, typeHash [32]byte) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "findTypeByHash", typeHash)
	return *ret0, err
}

// FindTypeByHash is a free data retrieval call binding the contract method 0x1f2caaec.
//
// Solidity: function findTypeByHash(bytes32 typeHash) constant returns(address)
func (_BaseLibrary *BaseLibrarySession) FindTypeByHash(typeHash [32]byte) (common.Address, error) {
	return _BaseLibrary.Contract.FindTypeByHash(&_BaseLibrary.CallOpts, typeHash)
}

// FindTypeByHash is a free data retrieval call binding the contract method 0x1f2caaec.
//
// Solidity: function findTypeByHash(bytes32 typeHash) constant returns(address)
func (_BaseLibrary *BaseLibraryCallerSession) FindTypeByHash(typeHash [32]byte) (common.Address, error) {
	return _BaseLibrary.Contract.FindTypeByHash(&_BaseLibrary.CallOpts, typeHash)
}

// GetMeta is a free data retrieval call binding the contract method 0xac55c906.
//
// Solidity: function getMeta(bytes key) constant returns(bytes)
func (_BaseLibrary *BaseLibraryCaller) GetMeta(opts *bind.CallOpts, key []byte) ([]byte, error) {
	var (
		ret0 = new([]byte)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "getMeta", key)
	return *ret0, err
}

// GetMeta is a free data retrieval call binding the contract method 0xac55c906.
//
// Solidity: function getMeta(bytes key) constant returns(bytes)
func (_BaseLibrary *BaseLibrarySession) GetMeta(key []byte) ([]byte, error) {
	return _BaseLibrary.Contract.GetMeta(&_BaseLibrary.CallOpts, key)
}

// GetMeta is a free data retrieval call binding the contract method 0xac55c906.
//
// Solidity: function getMeta(bytes key) constant returns(bytes)
func (_BaseLibrary *BaseLibraryCallerSession) GetMeta(key []byte) ([]byte, error) {
	return _BaseLibrary.Contract.GetMeta(&_BaseLibrary.CallOpts, key)
}

// GetPendingApprovalRequest is a free data retrieval call binding the contract method 0x63dab9d4.
//
// Solidity: function getPendingApprovalRequest(uint256 index) constant returns(address)
func (_BaseLibrary *BaseLibraryCaller) GetPendingApprovalRequest(opts *bind.CallOpts, index *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "getPendingApprovalRequest", index)
	return *ret0, err
}

// GetPendingApprovalRequest is a free data retrieval call binding the contract method 0x63dab9d4.
//
// Solidity: function getPendingApprovalRequest(uint256 index) constant returns(address)
func (_BaseLibrary *BaseLibrarySession) GetPendingApprovalRequest(index *big.Int) (common.Address, error) {
	return _BaseLibrary.Contract.GetPendingApprovalRequest(&_BaseLibrary.CallOpts, index)
}

// GetPendingApprovalRequest is a free data retrieval call binding the contract method 0x63dab9d4.
//
// Solidity: function getPendingApprovalRequest(uint256 index) constant returns(address)
func (_BaseLibrary *BaseLibraryCallerSession) GetPendingApprovalRequest(index *big.Int) (common.Address, error) {
	return _BaseLibrary.Contract.GetPendingApprovalRequest(&_BaseLibrary.CallOpts, index)
}

// HasAccess is a free data retrieval call binding the contract method 0x95a078e8.
//
// Solidity: function hasAccess(address candidate) constant returns(bool)
func (_BaseLibrary *BaseLibraryCaller) HasAccess(opts *bind.CallOpts, candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "hasAccess", candidate)
	return *ret0, err
}

// HasAccess is a free data retrieval call binding the contract method 0x95a078e8.
//
// Solidity: function hasAccess(address candidate) constant returns(bool)
func (_BaseLibrary *BaseLibrarySession) HasAccess(candidate common.Address) (bool, error) {
	return _BaseLibrary.Contract.HasAccess(&_BaseLibrary.CallOpts, candidate)
}

// HasAccess is a free data retrieval call binding the contract method 0x95a078e8.
//
// Solidity: function hasAccess(address candidate) constant returns(bool)
func (_BaseLibrary *BaseLibraryCallerSession) HasAccess(candidate common.Address) (bool, error) {
	return _BaseLibrary.Contract.HasAccess(&_BaseLibrary.CallOpts, candidate)
}

// HasEditorRight is a free data retrieval call binding the contract method 0x67e5c3bf.
//
// Solidity: function hasEditorRight(address candidate) constant returns(bool)
func (_BaseLibrary *BaseLibraryCaller) HasEditorRight(opts *bind.CallOpts, candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "hasEditorRight", candidate)
	return *ret0, err
}

// HasEditorRight is a free data retrieval call binding the contract method 0x67e5c3bf.
//
// Solidity: function hasEditorRight(address candidate) constant returns(bool)
func (_BaseLibrary *BaseLibrarySession) HasEditorRight(candidate common.Address) (bool, error) {
	return _BaseLibrary.Contract.HasEditorRight(&_BaseLibrary.CallOpts, candidate)
}

// HasEditorRight is a free data retrieval call binding the contract method 0x67e5c3bf.
//
// Solidity: function hasEditorRight(address candidate) constant returns(bool)
func (_BaseLibrary *BaseLibraryCallerSession) HasEditorRight(candidate common.Address) (bool, error) {
	return _BaseLibrary.Contract.HasEditorRight(&_BaseLibrary.CallOpts, candidate)
}

// IndexCategory is a free data retrieval call binding the contract method 0x6380501f.
//
// Solidity: function indexCategory() constant returns(uint8)
func (_BaseLibrary *BaseLibraryCaller) IndexCategory(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "indexCategory")
	return *ret0, err
}

// IndexCategory is a free data retrieval call binding the contract method 0x6380501f.
//
// Solidity: function indexCategory() constant returns(uint8)
func (_BaseLibrary *BaseLibrarySession) IndexCategory() (uint8, error) {
	return _BaseLibrary.Contract.IndexCategory(&_BaseLibrary.CallOpts)
}

// IndexCategory is a free data retrieval call binding the contract method 0x6380501f.
//
// Solidity: function indexCategory() constant returns(uint8)
func (_BaseLibrary *BaseLibraryCallerSession) IndexCategory() (uint8, error) {
	return _BaseLibrary.Contract.IndexCategory(&_BaseLibrary.CallOpts)
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(address _candidate) constant returns(bool)
func (_BaseLibrary *BaseLibraryCaller) IsAdmin(opts *bind.CallOpts, _candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "isAdmin", _candidate)
	return *ret0, err
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(address _candidate) constant returns(bool)
func (_BaseLibrary *BaseLibrarySession) IsAdmin(_candidate common.Address) (bool, error) {
	return _BaseLibrary.Contract.IsAdmin(&_BaseLibrary.CallOpts, _candidate)
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(address _candidate) constant returns(bool)
func (_BaseLibrary *BaseLibraryCallerSession) IsAdmin(_candidate common.Address) (bool, error) {
	return _BaseLibrary.Contract.IsAdmin(&_BaseLibrary.CallOpts, _candidate)
}

// ObjectHash is a free data retrieval call binding the contract method 0xe02dd9c2.
//
// Solidity: function objectHash() constant returns(string)
func (_BaseLibrary *BaseLibraryCaller) ObjectHash(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "objectHash")
	return *ret0, err
}

// ObjectHash is a free data retrieval call binding the contract method 0xe02dd9c2.
//
// Solidity: function objectHash() constant returns(string)
func (_BaseLibrary *BaseLibrarySession) ObjectHash() (string, error) {
	return _BaseLibrary.Contract.ObjectHash(&_BaseLibrary.CallOpts)
}

// ObjectHash is a free data retrieval call binding the contract method 0xe02dd9c2.
//
// Solidity: function objectHash() constant returns(string)
func (_BaseLibrary *BaseLibraryCallerSession) ObjectHash() (string, error) {
	return _BaseLibrary.Contract.ObjectHash(&_BaseLibrary.CallOpts)
}

// ObjectTimestamp is a free data retrieval call binding the contract method 0x40b87a26.
//
// Solidity: function objectTimestamp() constant returns(uint256)
func (_BaseLibrary *BaseLibraryCaller) ObjectTimestamp(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "objectTimestamp")
	return *ret0, err
}

// ObjectTimestamp is a free data retrieval call binding the contract method 0x40b87a26.
//
// Solidity: function objectTimestamp() constant returns(uint256)
func (_BaseLibrary *BaseLibrarySession) ObjectTimestamp() (*big.Int, error) {
	return _BaseLibrary.Contract.ObjectTimestamp(&_BaseLibrary.CallOpts)
}

// ObjectTimestamp is a free data retrieval call binding the contract method 0x40b87a26.
//
// Solidity: function objectTimestamp() constant returns(uint256)
func (_BaseLibrary *BaseLibraryCallerSession) ObjectTimestamp() (*big.Int, error) {
	return _BaseLibrary.Contract.ObjectTimestamp(&_BaseLibrary.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseLibrary *BaseLibraryCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseLibrary *BaseLibrarySession) Owner() (common.Address, error) {
	return _BaseLibrary.Contract.Owner(&_BaseLibrary.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseLibrary *BaseLibraryCallerSession) Owner() (common.Address, error) {
	return _BaseLibrary.Contract.Owner(&_BaseLibrary.CallOpts)
}

// ParentAddress is a free data retrieval call binding the contract method 0x00821de3.
//
// Solidity: function parentAddress() constant returns(address)
func (_BaseLibrary *BaseLibraryCaller) ParentAddress(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "parentAddress")
	return *ret0, err
}

// ParentAddress is a free data retrieval call binding the contract method 0x00821de3.
//
// Solidity: function parentAddress() constant returns(address)
func (_BaseLibrary *BaseLibrarySession) ParentAddress() (common.Address, error) {
	return _BaseLibrary.Contract.ParentAddress(&_BaseLibrary.CallOpts)
}

// ParentAddress is a free data retrieval call binding the contract method 0x00821de3.
//
// Solidity: function parentAddress() constant returns(address)
func (_BaseLibrary *BaseLibraryCallerSession) ParentAddress() (common.Address, error) {
	return _BaseLibrary.Contract.ParentAddress(&_BaseLibrary.CallOpts)
}

// PendingHash is a free data retrieval call binding the contract method 0x628449fd.
//
// Solidity: function pendingHash() constant returns(string)
func (_BaseLibrary *BaseLibraryCaller) PendingHash(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "pendingHash")
	return *ret0, err
}

// PendingHash is a free data retrieval call binding the contract method 0x628449fd.
//
// Solidity: function pendingHash() constant returns(string)
func (_BaseLibrary *BaseLibrarySession) PendingHash() (string, error) {
	return _BaseLibrary.Contract.PendingHash(&_BaseLibrary.CallOpts)
}

// PendingHash is a free data retrieval call binding the contract method 0x628449fd.
//
// Solidity: function pendingHash() constant returns(string)
func (_BaseLibrary *BaseLibraryCallerSession) PendingHash() (string, error) {
	return _BaseLibrary.Contract.PendingHash(&_BaseLibrary.CallOpts)
}

// RequiresReview is a free data retrieval call binding the contract method 0x3dd71d99.
//
// Solidity: function requiresReview() constant returns(bool)
func (_BaseLibrary *BaseLibraryCaller) RequiresReview(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "requiresReview")
	return *ret0, err
}

// RequiresReview is a free data retrieval call binding the contract method 0x3dd71d99.
//
// Solidity: function requiresReview() constant returns(bool)
func (_BaseLibrary *BaseLibrarySession) RequiresReview() (bool, error) {
	return _BaseLibrary.Contract.RequiresReview(&_BaseLibrary.CallOpts)
}

// RequiresReview is a free data retrieval call binding the contract method 0x3dd71d99.
//
// Solidity: function requiresReview() constant returns(bool)
func (_BaseLibrary *BaseLibraryCallerSession) RequiresReview() (bool, error) {
	return _BaseLibrary.Contract.RequiresReview(&_BaseLibrary.CallOpts)
}

// ReviewerGroups is a free data retrieval call binding the contract method 0x952e464b.
//
// Solidity: function reviewerGroups(uint256 ) constant returns(address)
func (_BaseLibrary *BaseLibraryCaller) ReviewerGroups(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "reviewerGroups", arg0)
	return *ret0, err
}

// ReviewerGroups is a free data retrieval call binding the contract method 0x952e464b.
//
// Solidity: function reviewerGroups(uint256 ) constant returns(address)
func (_BaseLibrary *BaseLibrarySession) ReviewerGroups(arg0 *big.Int) (common.Address, error) {
	return _BaseLibrary.Contract.ReviewerGroups(&_BaseLibrary.CallOpts, arg0)
}

// ReviewerGroups is a free data retrieval call binding the contract method 0x952e464b.
//
// Solidity: function reviewerGroups(uint256 ) constant returns(address)
func (_BaseLibrary *BaseLibraryCallerSession) ReviewerGroups(arg0 *big.Int) (common.Address, error) {
	return _BaseLibrary.Contract.ReviewerGroups(&_BaseLibrary.CallOpts, arg0)
}

// ReviewerGroupsLength is a free data retrieval call binding the contract method 0x21770a84.
//
// Solidity: function reviewerGroupsLength() constant returns(uint256)
func (_BaseLibrary *BaseLibraryCaller) ReviewerGroupsLength(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "reviewerGroupsLength")
	return *ret0, err
}

// ReviewerGroupsLength is a free data retrieval call binding the contract method 0x21770a84.
//
// Solidity: function reviewerGroupsLength() constant returns(uint256)
func (_BaseLibrary *BaseLibrarySession) ReviewerGroupsLength() (*big.Int, error) {
	return _BaseLibrary.Contract.ReviewerGroupsLength(&_BaseLibrary.CallOpts)
}

// ReviewerGroupsLength is a free data retrieval call binding the contract method 0x21770a84.
//
// Solidity: function reviewerGroupsLength() constant returns(uint256)
func (_BaseLibrary *BaseLibraryCallerSession) ReviewerGroupsLength() (*big.Int, error) {
	return _BaseLibrary.Contract.ReviewerGroupsLength(&_BaseLibrary.CallOpts)
}

// ValidType is a free data retrieval call binding the contract method 0x29dedde5.
//
// Solidity: function validType(address content_type) constant returns(bool)
func (_BaseLibrary *BaseLibraryCaller) ValidType(opts *bind.CallOpts, content_type common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "validType", content_type)
	return *ret0, err
}

// ValidType is a free data retrieval call binding the contract method 0x29dedde5.
//
// Solidity: function validType(address content_type) constant returns(bool)
func (_BaseLibrary *BaseLibrarySession) ValidType(content_type common.Address) (bool, error) {
	return _BaseLibrary.Contract.ValidType(&_BaseLibrary.CallOpts, content_type)
}

// ValidType is a free data retrieval call binding the contract method 0x29dedde5.
//
// Solidity: function validType(address content_type) constant returns(bool)
func (_BaseLibrary *BaseLibraryCallerSession) ValidType(content_type common.Address) (bool, error) {
	return _BaseLibrary.Contract.ValidType(&_BaseLibrary.CallOpts, content_type)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseLibrary *BaseLibraryCaller) Version(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseLibrary *BaseLibrarySession) Version() ([32]byte, error) {
	return _BaseLibrary.Contract.Version(&_BaseLibrary.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseLibrary *BaseLibraryCallerSession) Version() ([32]byte, error) {
	return _BaseLibrary.Contract.Version(&_BaseLibrary.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseLibrary *BaseLibraryCaller) VersionAPI(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "versionAPI")
	return *ret0, err
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseLibrary *BaseLibrarySession) VersionAPI() ([32]byte, error) {
	return _BaseLibrary.Contract.VersionAPI(&_BaseLibrary.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseLibrary *BaseLibraryCallerSession) VersionAPI() ([32]byte, error) {
	return _BaseLibrary.Contract.VersionAPI(&_BaseLibrary.CallOpts)
}

// VersionHashes is a free data retrieval call binding the contract method 0x7ca8f618.
//
// Solidity: function versionHashes(uint256 ) constant returns(string)
func (_BaseLibrary *BaseLibraryCaller) VersionHashes(opts *bind.CallOpts, arg0 *big.Int) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "versionHashes", arg0)
	return *ret0, err
}

// VersionHashes is a free data retrieval call binding the contract method 0x7ca8f618.
//
// Solidity: function versionHashes(uint256 ) constant returns(string)
func (_BaseLibrary *BaseLibrarySession) VersionHashes(arg0 *big.Int) (string, error) {
	return _BaseLibrary.Contract.VersionHashes(&_BaseLibrary.CallOpts, arg0)
}

// VersionHashes is a free data retrieval call binding the contract method 0x7ca8f618.
//
// Solidity: function versionHashes(uint256 ) constant returns(string)
func (_BaseLibrary *BaseLibraryCallerSession) VersionHashes(arg0 *big.Int) (string, error) {
	return _BaseLibrary.Contract.VersionHashes(&_BaseLibrary.CallOpts, arg0)
}

// VersionTimestamp is a free data retrieval call binding the contract method 0x7886f747.
//
// Solidity: function versionTimestamp(uint256 ) constant returns(uint256)
func (_BaseLibrary *BaseLibraryCaller) VersionTimestamp(opts *bind.CallOpts, arg0 *big.Int) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "versionTimestamp", arg0)
	return *ret0, err
}

// VersionTimestamp is a free data retrieval call binding the contract method 0x7886f747.
//
// Solidity: function versionTimestamp(uint256 ) constant returns(uint256)
func (_BaseLibrary *BaseLibrarySession) VersionTimestamp(arg0 *big.Int) (*big.Int, error) {
	return _BaseLibrary.Contract.VersionTimestamp(&_BaseLibrary.CallOpts, arg0)
}

// VersionTimestamp is a free data retrieval call binding the contract method 0x7886f747.
//
// Solidity: function versionTimestamp(uint256 ) constant returns(uint256)
func (_BaseLibrary *BaseLibraryCallerSession) VersionTimestamp(arg0 *big.Int) (*big.Int, error) {
	return _BaseLibrary.Contract.VersionTimestamp(&_BaseLibrary.CallOpts, arg0)
}

// Visibility is a free data retrieval call binding the contract method 0x29adec14.
//
// Solidity: function visibility() constant returns(uint8)
func (_BaseLibrary *BaseLibraryCaller) Visibility(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "visibility")
	return *ret0, err
}

// Visibility is a free data retrieval call binding the contract method 0x29adec14.
//
// Solidity: function visibility() constant returns(uint8)
func (_BaseLibrary *BaseLibrarySession) Visibility() (uint8, error) {
	return _BaseLibrary.Contract.Visibility(&_BaseLibrary.CallOpts)
}

// Visibility is a free data retrieval call binding the contract method 0x29adec14.
//
// Solidity: function visibility() constant returns(uint8)
func (_BaseLibrary *BaseLibraryCallerSession) Visibility() (uint8, error) {
	return _BaseLibrary.Contract.Visibility(&_BaseLibrary.CallOpts)
}

// WhitelistedType is a free data retrieval call binding the contract method 0x9cb121ba.
//
// Solidity: function whitelistedType(address content_type) constant returns(bool)
func (_BaseLibrary *BaseLibraryCaller) WhitelistedType(opts *bind.CallOpts, content_type common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseLibrary.contract.Call(opts, out, "whitelistedType", content_type)
	return *ret0, err
}

// WhitelistedType is a free data retrieval call binding the contract method 0x9cb121ba.
//
// Solidity: function whitelistedType(address content_type) constant returns(bool)
func (_BaseLibrary *BaseLibrarySession) WhitelistedType(content_type common.Address) (bool, error) {
	return _BaseLibrary.Contract.WhitelistedType(&_BaseLibrary.CallOpts, content_type)
}

// WhitelistedType is a free data retrieval call binding the contract method 0x9cb121ba.
//
// Solidity: function whitelistedType(address content_type) constant returns(bool)
func (_BaseLibrary *BaseLibraryCallerSession) WhitelistedType(content_type common.Address) (bool, error) {
	return _BaseLibrary.Contract.WhitelistedType(&_BaseLibrary.CallOpts, content_type)
}

// AccessRequestV3 is a paid mutator transaction binding the contract method 0x1bf7a912.
//
// Solidity: function accessRequestV3(bytes32[] , address[] ) returns(bool)
func (_BaseLibrary *BaseLibraryTransactor) AccessRequestV3(opts *bind.TransactOpts, arg0 [][32]byte, arg1 []common.Address) (*types.Transaction, error) {
	return _BaseLibrary.contract.Transact(opts, "accessRequestV3", arg0, arg1)
}

// AccessRequestV3 is a paid mutator transaction binding the contract method 0x1bf7a912.
//
// Solidity: function accessRequestV3(bytes32[] , address[] ) returns(bool)
func (_BaseLibrary *BaseLibrarySession) AccessRequestV3(arg0 [][32]byte, arg1 []common.Address) (*types.Transaction, error) {
	return _BaseLibrary.Contract.AccessRequestV3(&_BaseLibrary.TransactOpts, arg0, arg1)
}

// AccessRequestV3 is a paid mutator transaction binding the contract method 0x1bf7a912.
//
// Solidity: function accessRequestV3(bytes32[] , address[] ) returns(bool)
func (_BaseLibrary *BaseLibraryTransactorSession) AccessRequestV3(arg0 [][32]byte, arg1 []common.Address) (*types.Transaction, error) {
	return _BaseLibrary.Contract.AccessRequestV3(&_BaseLibrary.TransactOpts, arg0, arg1)
}

// AddAccessorGroup is a paid mutator transaction binding the contract method 0x1d0f4351.
//
// Solidity: function addAccessorGroup(address group) returns()
func (_BaseLibrary *BaseLibraryTransactor) AddAccessorGroup(opts *bind.TransactOpts, group common.Address) (*types.Transaction, error) {
	return _BaseLibrary.contract.Transact(opts, "addAccessorGroup", group)
}

// AddAccessorGroup is a paid mutator transaction binding the contract method 0x1d0f4351.
//
// Solidity: function addAccessorGroup(address group) returns()
func (_BaseLibrary *BaseLibrarySession) AddAccessorGroup(group common.Address) (*types.Transaction, error) {
	return _BaseLibrary.Contract.AddAccessorGroup(&_BaseLibrary.TransactOpts, group)
}

// AddAccessorGroup is a paid mutator transaction binding the contract method 0x1d0f4351.
//
// Solidity: function addAccessorGroup(address group) returns()
func (_BaseLibrary *BaseLibraryTransactorSession) AddAccessorGroup(group common.Address) (*types.Transaction, error) {
	return _BaseLibrary.Contract.AddAccessorGroup(&_BaseLibrary.TransactOpts, group)
}

// AddContentType is a paid mutator transaction binding the contract method 0x0f58a786.
//
// Solidity: function addContentType(address content_type, address content_contract) returns()
func (_BaseLibrary *BaseLibraryTransactor) AddContentType(opts *bind.TransactOpts, content_type common.Address, content_contract common.Address) (*types.Transaction, error) {
	return _BaseLibrary.contract.Transact(opts, "addContentType", content_type, content_contract)
}

// AddContentType is a paid mutator transaction binding the contract method 0x0f58a786.
//
// Solidity: function addContentType(address content_type, address content_contract) returns()
func (_BaseLibrary *BaseLibrarySession) AddContentType(content_type common.Address, content_contract common.Address) (*types.Transaction, error) {
	return _BaseLibrary.Contract.AddContentType(&_BaseLibrary.TransactOpts, content_type, content_contract)
}

// AddContentType is a paid mutator transaction binding the contract method 0x0f58a786.
//
// Solidity: function addContentType(address content_type, address content_contract) returns()
func (_BaseLibrary *BaseLibraryTransactorSession) AddContentType(content_type common.Address, content_contract common.Address) (*types.Transaction, error) {
	return _BaseLibrary.Contract.AddContentType(&_BaseLibrary.TransactOpts, content_type, content_contract)
}

// AddContributorGroup is a paid mutator transaction binding the contract method 0x679a9a3c.
//
// Solidity: function addContributorGroup(address group) returns()
func (_BaseLibrary *BaseLibraryTransactor) AddContributorGroup(opts *bind.TransactOpts, group common.Address) (*types.Transaction, error) {
	return _BaseLibrary.contract.Transact(opts, "addContributorGroup", group)
}

// AddContributorGroup is a paid mutator transaction binding the contract method 0x679a9a3c.
//
// Solidity: function addContributorGroup(address group) returns()
func (_BaseLibrary *BaseLibrarySession) AddContributorGroup(group common.Address) (*types.Transaction, error) {
	return _BaseLibrary.Contract.AddContributorGroup(&_BaseLibrary.TransactOpts, group)
}

// AddContributorGroup is a paid mutator transaction binding the contract method 0x679a9a3c.
//
// Solidity: function addContributorGroup(address group) returns()
func (_BaseLibrary *BaseLibraryTransactorSession) AddContributorGroup(group common.Address) (*types.Transaction, error) {
	return _BaseLibrary.Contract.AddContributorGroup(&_BaseLibrary.TransactOpts, group)
}

// AddReviewerGroup is a paid mutator transaction binding the contract method 0xdc3c29c0.
//
// Solidity: function addReviewerGroup(address group) returns()
func (_BaseLibrary *BaseLibraryTransactor) AddReviewerGroup(opts *bind.TransactOpts, group common.Address) (*types.Transaction, error) {
	return _BaseLibrary.contract.Transact(opts, "addReviewerGroup", group)
}

// AddReviewerGroup is a paid mutator transaction binding the contract method 0xdc3c29c0.
//
// Solidity: function addReviewerGroup(address group) returns()
func (_BaseLibrary *BaseLibrarySession) AddReviewerGroup(group common.Address) (*types.Transaction, error) {
	return _BaseLibrary.Contract.AddReviewerGroup(&_BaseLibrary.TransactOpts, group)
}

// AddReviewerGroup is a paid mutator transaction binding the contract method 0xdc3c29c0.
//
// Solidity: function addReviewerGroup(address group) returns()
func (_BaseLibrary *BaseLibraryTransactorSession) AddReviewerGroup(group common.Address) (*types.Transaction, error) {
	return _BaseLibrary.Contract.AddReviewerGroup(&_BaseLibrary.TransactOpts, group)
}

// ApproveContent is a paid mutator transaction binding the contract method 0x87e86b2c.
//
// Solidity: function approveContent(address content_contract, bool approved, string note) returns(bool)
func (_BaseLibrary *BaseLibraryTransactor) ApproveContent(opts *bind.TransactOpts, content_contract common.Address, approved bool, note string) (*types.Transaction, error) {
	return _BaseLibrary.contract.Transact(opts, "approveContent", content_contract, approved, note)
}

// ApproveContent is a paid mutator transaction binding the contract method 0x87e86b2c.
//
// Solidity: function approveContent(address content_contract, bool approved, string note) returns(bool)
func (_BaseLibrary *BaseLibrarySession) ApproveContent(content_contract common.Address, approved bool, note string) (*types.Transaction, error) {
	return _BaseLibrary.Contract.ApproveContent(&_BaseLibrary.TransactOpts, content_contract, approved, note)
}

// ApproveContent is a paid mutator transaction binding the contract method 0x87e86b2c.
//
// Solidity: function approveContent(address content_contract, bool approved, string note) returns(bool)
func (_BaseLibrary *BaseLibraryTransactorSession) ApproveContent(content_contract common.Address, approved bool, note string) (*types.Transaction, error) {
	return _BaseLibrary.Contract.ApproveContent(&_BaseLibrary.TransactOpts, content_contract, approved, note)
}

// ClearPending is a paid mutator transaction binding the contract method 0x5f6a1301.
//
// Solidity: function clearPending() returns()
func (_BaseLibrary *BaseLibraryTransactor) ClearPending(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseLibrary.contract.Transact(opts, "clearPending")
}

// ClearPending is a paid mutator transaction binding the contract method 0x5f6a1301.
//
// Solidity: function clearPending() returns()
func (_BaseLibrary *BaseLibrarySession) ClearPending() (*types.Transaction, error) {
	return _BaseLibrary.Contract.ClearPending(&_BaseLibrary.TransactOpts)
}

// ClearPending is a paid mutator transaction binding the contract method 0x5f6a1301.
//
// Solidity: function clearPending() returns()
func (_BaseLibrary *BaseLibraryTransactorSession) ClearPending() (*types.Transaction, error) {
	return _BaseLibrary.Contract.ClearPending(&_BaseLibrary.TransactOpts)
}

// Commit is a paid mutator transaction binding the contract method 0x9867db74.
//
// Solidity: function commit(string _objectHash) returns()
func (_BaseLibrary *BaseLibraryTransactor) Commit(opts *bind.TransactOpts, _objectHash string) (*types.Transaction, error) {
	return _BaseLibrary.contract.Transact(opts, "commit", _objectHash)
}

// Commit is a paid mutator transaction binding the contract method 0x9867db74.
//
// Solidity: function commit(string _objectHash) returns()
func (_BaseLibrary *BaseLibrarySession) Commit(_objectHash string) (*types.Transaction, error) {
	return _BaseLibrary.Contract.Commit(&_BaseLibrary.TransactOpts, _objectHash)
}

// Commit is a paid mutator transaction binding the contract method 0x9867db74.
//
// Solidity: function commit(string _objectHash) returns()
func (_BaseLibrary *BaseLibraryTransactorSession) Commit(_objectHash string) (*types.Transaction, error) {
	return _BaseLibrary.Contract.Commit(&_BaseLibrary.TransactOpts, _objectHash)
}

// ConfirmCommit is a paid mutator transaction binding the contract method 0x446e8826.
//
// Solidity: function confirmCommit() returns(bool)
func (_BaseLibrary *BaseLibraryTransactor) ConfirmCommit(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseLibrary.contract.Transact(opts, "confirmCommit")
}

// ConfirmCommit is a paid mutator transaction binding the contract method 0x446e8826.
//
// Solidity: function confirmCommit() returns(bool)
func (_BaseLibrary *BaseLibrarySession) ConfirmCommit() (*types.Transaction, error) {
	return _BaseLibrary.Contract.ConfirmCommit(&_BaseLibrary.TransactOpts)
}

// ConfirmCommit is a paid mutator transaction binding the contract method 0x446e8826.
//
// Solidity: function confirmCommit() returns(bool)
func (_BaseLibrary *BaseLibraryTransactorSession) ConfirmCommit() (*types.Transaction, error) {
	return _BaseLibrary.Contract.ConfirmCommit(&_BaseLibrary.TransactOpts)
}

// CreateContent is a paid mutator transaction binding the contract method 0x1e35d8fa.
//
// Solidity: function createContent(address content_type) returns(address)
func (_BaseLibrary *BaseLibraryTransactor) CreateContent(opts *bind.TransactOpts, content_type common.Address) (*types.Transaction, error) {
	return _BaseLibrary.contract.Transact(opts, "createContent", content_type)
}

// CreateContent is a paid mutator transaction binding the contract method 0x1e35d8fa.
//
// Solidity: function createContent(address content_type) returns(address)
func (_BaseLibrary *BaseLibrarySession) CreateContent(content_type common.Address) (*types.Transaction, error) {
	return _BaseLibrary.Contract.CreateContent(&_BaseLibrary.TransactOpts, content_type)
}

// CreateContent is a paid mutator transaction binding the contract method 0x1e35d8fa.
//
// Solidity: function createContent(address content_type) returns(address)
func (_BaseLibrary *BaseLibraryTransactorSession) CreateContent(content_type common.Address) (*types.Transaction, error) {
	return _BaseLibrary.Contract.CreateContent(&_BaseLibrary.TransactOpts, content_type)
}

// DeleteContent is a paid mutator transaction binding the contract method 0x87fcd0b8.
//
// Solidity: function deleteContent(address _contentAddr) returns()
func (_BaseLibrary *BaseLibraryTransactor) DeleteContent(opts *bind.TransactOpts, _contentAddr common.Address) (*types.Transaction, error) {
	return _BaseLibrary.contract.Transact(opts, "deleteContent", _contentAddr)
}

// DeleteContent is a paid mutator transaction binding the contract method 0x87fcd0b8.
//
// Solidity: function deleteContent(address _contentAddr) returns()
func (_BaseLibrary *BaseLibrarySession) DeleteContent(_contentAddr common.Address) (*types.Transaction, error) {
	return _BaseLibrary.Contract.DeleteContent(&_BaseLibrary.TransactOpts, _contentAddr)
}

// DeleteContent is a paid mutator transaction binding the contract method 0x87fcd0b8.
//
// Solidity: function deleteContent(address _contentAddr) returns()
func (_BaseLibrary *BaseLibraryTransactorSession) DeleteContent(_contentAddr common.Address) (*types.Transaction, error) {
	return _BaseLibrary.Contract.DeleteContent(&_BaseLibrary.TransactOpts, _contentAddr)
}

// DeleteVersion is a paid mutator transaction binding the contract method 0xe1a70717.
//
// Solidity: function deleteVersion(string _versionHash) returns(int256)
func (_BaseLibrary *BaseLibraryTransactor) DeleteVersion(opts *bind.TransactOpts, _versionHash string) (*types.Transaction, error) {
	return _BaseLibrary.contract.Transact(opts, "deleteVersion", _versionHash)
}

// DeleteVersion is a paid mutator transaction binding the contract method 0xe1a70717.
//
// Solidity: function deleteVersion(string _versionHash) returns(int256)
func (_BaseLibrary *BaseLibrarySession) DeleteVersion(_versionHash string) (*types.Transaction, error) {
	return _BaseLibrary.Contract.DeleteVersion(&_BaseLibrary.TransactOpts, _versionHash)
}

// DeleteVersion is a paid mutator transaction binding the contract method 0xe1a70717.
//
// Solidity: function deleteVersion(string _versionHash) returns(int256)
func (_BaseLibrary *BaseLibraryTransactorSession) DeleteVersion(_versionHash string) (*types.Transaction, error) {
	return _BaseLibrary.Contract.DeleteVersion(&_BaseLibrary.TransactOpts, _versionHash)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseLibrary *BaseLibraryTransactor) Kill(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseLibrary.contract.Transact(opts, "kill")
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseLibrary *BaseLibrarySession) Kill() (*types.Transaction, error) {
	return _BaseLibrary.Contract.Kill(&_BaseLibrary.TransactOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseLibrary *BaseLibraryTransactorSession) Kill() (*types.Transaction, error) {
	return _BaseLibrary.Contract.Kill(&_BaseLibrary.TransactOpts)
}

// Publish is a paid mutator transaction binding the contract method 0x2cf99422.
//
// Solidity: function publish(address contentObj) returns(bool)
func (_BaseLibrary *BaseLibraryTransactor) Publish(opts *bind.TransactOpts, contentObj common.Address) (*types.Transaction, error) {
	return _BaseLibrary.contract.Transact(opts, "publish", contentObj)
}

// Publish is a paid mutator transaction binding the contract method 0x2cf99422.
//
// Solidity: function publish(address contentObj) returns(bool)
func (_BaseLibrary *BaseLibrarySession) Publish(contentObj common.Address) (*types.Transaction, error) {
	return _BaseLibrary.Contract.Publish(&_BaseLibrary.TransactOpts, contentObj)
}

// Publish is a paid mutator transaction binding the contract method 0x2cf99422.
//
// Solidity: function publish(address contentObj) returns(bool)
func (_BaseLibrary *BaseLibraryTransactorSession) Publish(contentObj common.Address) (*types.Transaction, error) {
	return _BaseLibrary.Contract.Publish(&_BaseLibrary.TransactOpts, contentObj)
}

// PutMeta is a paid mutator transaction binding the contract method 0xe542b7cb.
//
// Solidity: function putMeta(bytes key, bytes value) returns()
func (_BaseLibrary *BaseLibraryTransactor) PutMeta(opts *bind.TransactOpts, key []byte, value []byte) (*types.Transaction, error) {
	return _BaseLibrary.contract.Transact(opts, "putMeta", key, value)
}

// PutMeta is a paid mutator transaction binding the contract method 0xe542b7cb.
//
// Solidity: function putMeta(bytes key, bytes value) returns()
func (_BaseLibrary *BaseLibrarySession) PutMeta(key []byte, value []byte) (*types.Transaction, error) {
	return _BaseLibrary.Contract.PutMeta(&_BaseLibrary.TransactOpts, key, value)
}

// PutMeta is a paid mutator transaction binding the contract method 0xe542b7cb.
//
// Solidity: function putMeta(bytes key, bytes value) returns()
func (_BaseLibrary *BaseLibraryTransactorSession) PutMeta(key []byte, value []byte) (*types.Transaction, error) {
	return _BaseLibrary.Contract.PutMeta(&_BaseLibrary.TransactOpts, key, value)
}

// RemoveAccessorGroup is a paid mutator transaction binding the contract method 0xe8de515f.
//
// Solidity: function removeAccessorGroup(address group) returns(bool)
func (_BaseLibrary *BaseLibraryTransactor) RemoveAccessorGroup(opts *bind.TransactOpts, group common.Address) (*types.Transaction, error) {
	return _BaseLibrary.contract.Transact(opts, "removeAccessorGroup", group)
}

// RemoveAccessorGroup is a paid mutator transaction binding the contract method 0xe8de515f.
//
// Solidity: function removeAccessorGroup(address group) returns(bool)
func (_BaseLibrary *BaseLibrarySession) RemoveAccessorGroup(group common.Address) (*types.Transaction, error) {
	return _BaseLibrary.Contract.RemoveAccessorGroup(&_BaseLibrary.TransactOpts, group)
}

// RemoveAccessorGroup is a paid mutator transaction binding the contract method 0xe8de515f.
//
// Solidity: function removeAccessorGroup(address group) returns(bool)
func (_BaseLibrary *BaseLibraryTransactorSession) RemoveAccessorGroup(group common.Address) (*types.Transaction, error) {
	return _BaseLibrary.Contract.RemoveAccessorGroup(&_BaseLibrary.TransactOpts, group)
}

// RemoveContentType is a paid mutator transaction binding the contract method 0xfd089196.
//
// Solidity: function removeContentType(address content_type) returns(bool)
func (_BaseLibrary *BaseLibraryTransactor) RemoveContentType(opts *bind.TransactOpts, content_type common.Address) (*types.Transaction, error) {
	return _BaseLibrary.contract.Transact(opts, "removeContentType", content_type)
}

// RemoveContentType is a paid mutator transaction binding the contract method 0xfd089196.
//
// Solidity: function removeContentType(address content_type) returns(bool)
func (_BaseLibrary *BaseLibrarySession) RemoveContentType(content_type common.Address) (*types.Transaction, error) {
	return _BaseLibrary.Contract.RemoveContentType(&_BaseLibrary.TransactOpts, content_type)
}

// RemoveContentType is a paid mutator transaction binding the contract method 0xfd089196.
//
// Solidity: function removeContentType(address content_type) returns(bool)
func (_BaseLibrary *BaseLibraryTransactorSession) RemoveContentType(content_type common.Address) (*types.Transaction, error) {
	return _BaseLibrary.Contract.RemoveContentType(&_BaseLibrary.TransactOpts, content_type)
}

// RemoveContributorGroup is a paid mutator transaction binding the contract method 0x386493e0.
//
// Solidity: function removeContributorGroup(address group) returns(bool)
func (_BaseLibrary *BaseLibraryTransactor) RemoveContributorGroup(opts *bind.TransactOpts, group common.Address) (*types.Transaction, error) {
	return _BaseLibrary.contract.Transact(opts, "removeContributorGroup", group)
}

// RemoveContributorGroup is a paid mutator transaction binding the contract method 0x386493e0.
//
// Solidity: function removeContributorGroup(address group) returns(bool)
func (_BaseLibrary *BaseLibrarySession) RemoveContributorGroup(group common.Address) (*types.Transaction, error) {
	return _BaseLibrary.Contract.RemoveContributorGroup(&_BaseLibrary.TransactOpts, group)
}

// RemoveContributorGroup is a paid mutator transaction binding the contract method 0x386493e0.
//
// Solidity: function removeContributorGroup(address group) returns(bool)
func (_BaseLibrary *BaseLibraryTransactorSession) RemoveContributorGroup(group common.Address) (*types.Transaction, error) {
	return _BaseLibrary.Contract.RemoveContributorGroup(&_BaseLibrary.TransactOpts, group)
}

// RemoveReviewerGroup is a paid mutator transaction binding the contract method 0x1b969895.
//
// Solidity: function removeReviewerGroup(address group) returns(bool)
func (_BaseLibrary *BaseLibraryTransactor) RemoveReviewerGroup(opts *bind.TransactOpts, group common.Address) (*types.Transaction, error) {
	return _BaseLibrary.contract.Transact(opts, "removeReviewerGroup", group)
}

// RemoveReviewerGroup is a paid mutator transaction binding the contract method 0x1b969895.
//
// Solidity: function removeReviewerGroup(address group) returns(bool)
func (_BaseLibrary *BaseLibrarySession) RemoveReviewerGroup(group common.Address) (*types.Transaction, error) {
	return _BaseLibrary.Contract.RemoveReviewerGroup(&_BaseLibrary.TransactOpts, group)
}

// RemoveReviewerGroup is a paid mutator transaction binding the contract method 0x1b969895.
//
// Solidity: function removeReviewerGroup(address group) returns(bool)
func (_BaseLibrary *BaseLibraryTransactorSession) RemoveReviewerGroup(group common.Address) (*types.Transaction, error) {
	return _BaseLibrary.Contract.RemoveReviewerGroup(&_BaseLibrary.TransactOpts, group)
}

// SetAddressKMS is a paid mutator transaction binding the contract method 0xc9e8e72d.
//
// Solidity: function setAddressKMS(address address_KMS) returns()
func (_BaseLibrary *BaseLibraryTransactor) SetAddressKMS(opts *bind.TransactOpts, address_KMS common.Address) (*types.Transaction, error) {
	return _BaseLibrary.contract.Transact(opts, "setAddressKMS", address_KMS)
}

// SetAddressKMS is a paid mutator transaction binding the contract method 0xc9e8e72d.
//
// Solidity: function setAddressKMS(address address_KMS) returns()
func (_BaseLibrary *BaseLibrarySession) SetAddressKMS(address_KMS common.Address) (*types.Transaction, error) {
	return _BaseLibrary.Contract.SetAddressKMS(&_BaseLibrary.TransactOpts, address_KMS)
}

// SetAddressKMS is a paid mutator transaction binding the contract method 0xc9e8e72d.
//
// Solidity: function setAddressKMS(address address_KMS) returns()
func (_BaseLibrary *BaseLibraryTransactorSession) SetAddressKMS(address_KMS common.Address) (*types.Transaction, error) {
	return _BaseLibrary.Contract.SetAddressKMS(&_BaseLibrary.TransactOpts, address_KMS)
}

// SetGroupRights is a paid mutator transaction binding the contract method 0x22e564eb.
//
// Solidity: function setGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_BaseLibrary *BaseLibraryTransactor) SetGroupRights(opts *bind.TransactOpts, group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseLibrary.contract.Transact(opts, "setGroupRights", group, access_type, access)
}

// SetGroupRights is a paid mutator transaction binding the contract method 0x22e564eb.
//
// Solidity: function setGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_BaseLibrary *BaseLibrarySession) SetGroupRights(group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseLibrary.Contract.SetGroupRights(&_BaseLibrary.TransactOpts, group, access_type, access)
}

// SetGroupRights is a paid mutator transaction binding the contract method 0x22e564eb.
//
// Solidity: function setGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_BaseLibrary *BaseLibraryTransactorSession) SetGroupRights(group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseLibrary.Contract.SetGroupRights(&_BaseLibrary.TransactOpts, group, access_type, access)
}

// SetRights is a paid mutator transaction binding the contract method 0x0fe1b5a2.
//
// Solidity: function setRights(address stakeholder, uint8 access_type, uint8 access) returns()
func (_BaseLibrary *BaseLibraryTransactor) SetRights(opts *bind.TransactOpts, stakeholder common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseLibrary.contract.Transact(opts, "setRights", stakeholder, access_type, access)
}

// SetRights is a paid mutator transaction binding the contract method 0x0fe1b5a2.
//
// Solidity: function setRights(address stakeholder, uint8 access_type, uint8 access) returns()
func (_BaseLibrary *BaseLibrarySession) SetRights(stakeholder common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseLibrary.Contract.SetRights(&_BaseLibrary.TransactOpts, stakeholder, access_type, access)
}

// SetRights is a paid mutator transaction binding the contract method 0x0fe1b5a2.
//
// Solidity: function setRights(address stakeholder, uint8 access_type, uint8 access) returns()
func (_BaseLibrary *BaseLibraryTransactorSession) SetRights(stakeholder common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseLibrary.Contract.SetRights(&_BaseLibrary.TransactOpts, stakeholder, access_type, access)
}

// SetVisibility is a paid mutator transaction binding the contract method 0xaa024e8b.
//
// Solidity: function setVisibility(uint8 _visibility_code) returns()
func (_BaseLibrary *BaseLibraryTransactor) SetVisibility(opts *bind.TransactOpts, _visibility_code uint8) (*types.Transaction, error) {
	return _BaseLibrary.contract.Transact(opts, "setVisibility", _visibility_code)
}

// SetVisibility is a paid mutator transaction binding the contract method 0xaa024e8b.
//
// Solidity: function setVisibility(uint8 _visibility_code) returns()
func (_BaseLibrary *BaseLibrarySession) SetVisibility(_visibility_code uint8) (*types.Transaction, error) {
	return _BaseLibrary.Contract.SetVisibility(&_BaseLibrary.TransactOpts, _visibility_code)
}

// SetVisibility is a paid mutator transaction binding the contract method 0xaa024e8b.
//
// Solidity: function setVisibility(uint8 _visibility_code) returns()
func (_BaseLibrary *BaseLibraryTransactorSession) SetVisibility(_visibility_code uint8) (*types.Transaction, error) {
	return _BaseLibrary.Contract.SetVisibility(&_BaseLibrary.TransactOpts, _visibility_code)
}

// SubmitApprovalRequest is a paid mutator transaction binding the contract method 0x49102e61.
//
// Solidity: function submitApprovalRequest() returns(bool)
func (_BaseLibrary *BaseLibraryTransactor) SubmitApprovalRequest(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseLibrary.contract.Transact(opts, "submitApprovalRequest")
}

// SubmitApprovalRequest is a paid mutator transaction binding the contract method 0x49102e61.
//
// Solidity: function submitApprovalRequest() returns(bool)
func (_BaseLibrary *BaseLibrarySession) SubmitApprovalRequest() (*types.Transaction, error) {
	return _BaseLibrary.Contract.SubmitApprovalRequest(&_BaseLibrary.TransactOpts)
}

// SubmitApprovalRequest is a paid mutator transaction binding the contract method 0x49102e61.
//
// Solidity: function submitApprovalRequest() returns(bool)
func (_BaseLibrary *BaseLibraryTransactorSession) SubmitApprovalRequest() (*types.Transaction, error) {
	return _BaseLibrary.Contract.SubmitApprovalRequest(&_BaseLibrary.TransactOpts)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseLibrary *BaseLibraryTransactor) TransferCreatorship(opts *bind.TransactOpts, newCreator common.Address) (*types.Transaction, error) {
	return _BaseLibrary.contract.Transact(opts, "transferCreatorship", newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseLibrary *BaseLibrarySession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _BaseLibrary.Contract.TransferCreatorship(&_BaseLibrary.TransactOpts, newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseLibrary *BaseLibraryTransactorSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _BaseLibrary.Contract.TransferCreatorship(&_BaseLibrary.TransactOpts, newCreator)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseLibrary *BaseLibraryTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _BaseLibrary.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseLibrary *BaseLibrarySession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _BaseLibrary.Contract.TransferOwnership(&_BaseLibrary.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseLibrary *BaseLibraryTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _BaseLibrary.Contract.TransferOwnership(&_BaseLibrary.TransactOpts, newOwner)
}

// UpdateAddressKMS is a paid mutator transaction binding the contract method 0x011e01a5.
//
// Solidity: function updateAddressKMS(address address_KMS) returns()
func (_BaseLibrary *BaseLibraryTransactor) UpdateAddressKMS(opts *bind.TransactOpts, address_KMS common.Address) (*types.Transaction, error) {
	return _BaseLibrary.contract.Transact(opts, "updateAddressKMS", address_KMS)
}

// UpdateAddressKMS is a paid mutator transaction binding the contract method 0x011e01a5.
//
// Solidity: function updateAddressKMS(address address_KMS) returns()
func (_BaseLibrary *BaseLibrarySession) UpdateAddressKMS(address_KMS common.Address) (*types.Transaction, error) {
	return _BaseLibrary.Contract.UpdateAddressKMS(&_BaseLibrary.TransactOpts, address_KMS)
}

// UpdateAddressKMS is a paid mutator transaction binding the contract method 0x011e01a5.
//
// Solidity: function updateAddressKMS(address address_KMS) returns()
func (_BaseLibrary *BaseLibraryTransactorSession) UpdateAddressKMS(address_KMS common.Address) (*types.Transaction, error) {
	return _BaseLibrary.Contract.UpdateAddressKMS(&_BaseLibrary.TransactOpts, address_KMS)
}

// UpdateRequest is a paid mutator transaction binding the contract method 0xc287e0ed.
//
// Solidity: function updateRequest() returns()
func (_BaseLibrary *BaseLibraryTransactor) UpdateRequest(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseLibrary.contract.Transact(opts, "updateRequest")
}

// UpdateRequest is a paid mutator transaction binding the contract method 0xc287e0ed.
//
// Solidity: function updateRequest() returns()
func (_BaseLibrary *BaseLibrarySession) UpdateRequest() (*types.Transaction, error) {
	return _BaseLibrary.Contract.UpdateRequest(&_BaseLibrary.TransactOpts)
}

// UpdateRequest is a paid mutator transaction binding the contract method 0xc287e0ed.
//
// Solidity: function updateRequest() returns()
func (_BaseLibrary *BaseLibraryTransactorSession) UpdateRequest() (*types.Transaction, error) {
	return _BaseLibrary.Contract.UpdateRequest(&_BaseLibrary.TransactOpts)
}

// BaseLibraryAccessRequestV3Iterator is returned from FilterAccessRequestV3 and is used to iterate over the raw logs and unpacked data for AccessRequestV3 events raised by the BaseLibrary contract.
type BaseLibraryAccessRequestV3Iterator struct {
	Event *BaseLibraryAccessRequestV3 // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseLibraryAccessRequestV3Iterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseLibraryAccessRequestV3)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseLibraryAccessRequestV3)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseLibraryAccessRequestV3Iterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseLibraryAccessRequestV3Iterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseLibraryAccessRequestV3 represents a AccessRequestV3 event raised by the BaseLibrary contract.
type BaseLibraryAccessRequestV3 struct {
	RequestNonce     *big.Int
	ParentAddress    common.Address
	ContextHash      [32]byte
	Accessor         common.Address
	RequestTimestamp *big.Int
	Raw              types.Log // Blockchain specific contextual infos
}

// FilterAccessRequestV3 is a free log retrieval operation binding the contract event 0x545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c7.
//
// Solidity: event AccessRequestV3(uint256 requestNonce, address parentAddress, bytes32 contextHash, address accessor, uint256 requestTimestamp)
func (_BaseLibrary *BaseLibraryFilterer) FilterAccessRequestV3(opts *bind.FilterOpts) (*BaseLibraryAccessRequestV3Iterator, error) {

	logs, sub, err := _BaseLibrary.contract.FilterLogs(opts, "AccessRequestV3")
	if err != nil {
		return nil, err
	}
	return &BaseLibraryAccessRequestV3Iterator{contract: _BaseLibrary.contract, event: "AccessRequestV3", logs: logs, sub: sub}, nil
}

// WatchAccessRequestV3 is a free log subscription operation binding the contract event 0x545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c7.
//
// Solidity: event AccessRequestV3(uint256 requestNonce, address parentAddress, bytes32 contextHash, address accessor, uint256 requestTimestamp)
func (_BaseLibrary *BaseLibraryFilterer) WatchAccessRequestV3(opts *bind.WatchOpts, sink chan<- *BaseLibraryAccessRequestV3) (event.Subscription, error) {

	logs, sub, err := _BaseLibrary.contract.WatchLogs(opts, "AccessRequestV3")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseLibraryAccessRequestV3)
				if err := _BaseLibrary.contract.UnpackLog(event, "AccessRequestV3", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAccessRequestV3 is a log parse operation binding the contract event 0x545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c7.
//
// Solidity: event AccessRequestV3(uint256 requestNonce, address parentAddress, bytes32 contextHash, address accessor, uint256 requestTimestamp)
func (_BaseLibrary *BaseLibraryFilterer) ParseAccessRequestV3(log types.Log) (*BaseLibraryAccessRequestV3, error) {
	event := new(BaseLibraryAccessRequestV3)
	if err := _BaseLibrary.contract.UnpackLog(event, "AccessRequestV3", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseLibraryAccessorGroupAddedIterator is returned from FilterAccessorGroupAdded and is used to iterate over the raw logs and unpacked data for AccessorGroupAdded events raised by the BaseLibrary contract.
type BaseLibraryAccessorGroupAddedIterator struct {
	Event *BaseLibraryAccessorGroupAdded // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseLibraryAccessorGroupAddedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseLibraryAccessorGroupAdded)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseLibraryAccessorGroupAdded)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseLibraryAccessorGroupAddedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseLibraryAccessorGroupAddedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseLibraryAccessorGroupAdded represents a AccessorGroupAdded event raised by the BaseLibrary contract.
type BaseLibraryAccessorGroupAdded struct {
	Group common.Address
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterAccessorGroupAdded is a free log retrieval operation binding the contract event 0x3a94857e4393737f73edb175a7d0c195c7f635d9ae995e12740616ec55c9d411.
//
// Solidity: event AccessorGroupAdded(address group)
func (_BaseLibrary *BaseLibraryFilterer) FilterAccessorGroupAdded(opts *bind.FilterOpts) (*BaseLibraryAccessorGroupAddedIterator, error) {

	logs, sub, err := _BaseLibrary.contract.FilterLogs(opts, "AccessorGroupAdded")
	if err != nil {
		return nil, err
	}
	return &BaseLibraryAccessorGroupAddedIterator{contract: _BaseLibrary.contract, event: "AccessorGroupAdded", logs: logs, sub: sub}, nil
}

// WatchAccessorGroupAdded is a free log subscription operation binding the contract event 0x3a94857e4393737f73edb175a7d0c195c7f635d9ae995e12740616ec55c9d411.
//
// Solidity: event AccessorGroupAdded(address group)
func (_BaseLibrary *BaseLibraryFilterer) WatchAccessorGroupAdded(opts *bind.WatchOpts, sink chan<- *BaseLibraryAccessorGroupAdded) (event.Subscription, error) {

	logs, sub, err := _BaseLibrary.contract.WatchLogs(opts, "AccessorGroupAdded")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseLibraryAccessorGroupAdded)
				if err := _BaseLibrary.contract.UnpackLog(event, "AccessorGroupAdded", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAccessorGroupAdded is a log parse operation binding the contract event 0x3a94857e4393737f73edb175a7d0c195c7f635d9ae995e12740616ec55c9d411.
//
// Solidity: event AccessorGroupAdded(address group)
func (_BaseLibrary *BaseLibraryFilterer) ParseAccessorGroupAdded(log types.Log) (*BaseLibraryAccessorGroupAdded, error) {
	event := new(BaseLibraryAccessorGroupAdded)
	if err := _BaseLibrary.contract.UnpackLog(event, "AccessorGroupAdded", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseLibraryAccessorGroupRemovedIterator is returned from FilterAccessorGroupRemoved and is used to iterate over the raw logs and unpacked data for AccessorGroupRemoved events raised by the BaseLibrary contract.
type BaseLibraryAccessorGroupRemovedIterator struct {
	Event *BaseLibraryAccessorGroupRemoved // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseLibraryAccessorGroupRemovedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseLibraryAccessorGroupRemoved)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseLibraryAccessorGroupRemoved)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseLibraryAccessorGroupRemovedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseLibraryAccessorGroupRemovedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseLibraryAccessorGroupRemoved represents a AccessorGroupRemoved event raised by the BaseLibrary contract.
type BaseLibraryAccessorGroupRemoved struct {
	Group common.Address
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterAccessorGroupRemoved is a free log retrieval operation binding the contract event 0xc5224c4118417a068eeac7d714e6d8af6f99ec3fb611bc965185460b0e38f081.
//
// Solidity: event AccessorGroupRemoved(address group)
func (_BaseLibrary *BaseLibraryFilterer) FilterAccessorGroupRemoved(opts *bind.FilterOpts) (*BaseLibraryAccessorGroupRemovedIterator, error) {

	logs, sub, err := _BaseLibrary.contract.FilterLogs(opts, "AccessorGroupRemoved")
	if err != nil {
		return nil, err
	}
	return &BaseLibraryAccessorGroupRemovedIterator{contract: _BaseLibrary.contract, event: "AccessorGroupRemoved", logs: logs, sub: sub}, nil
}

// WatchAccessorGroupRemoved is a free log subscription operation binding the contract event 0xc5224c4118417a068eeac7d714e6d8af6f99ec3fb611bc965185460b0e38f081.
//
// Solidity: event AccessorGroupRemoved(address group)
func (_BaseLibrary *BaseLibraryFilterer) WatchAccessorGroupRemoved(opts *bind.WatchOpts, sink chan<- *BaseLibraryAccessorGroupRemoved) (event.Subscription, error) {

	logs, sub, err := _BaseLibrary.contract.WatchLogs(opts, "AccessorGroupRemoved")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseLibraryAccessorGroupRemoved)
				if err := _BaseLibrary.contract.UnpackLog(event, "AccessorGroupRemoved", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAccessorGroupRemoved is a log parse operation binding the contract event 0xc5224c4118417a068eeac7d714e6d8af6f99ec3fb611bc965185460b0e38f081.
//
// Solidity: event AccessorGroupRemoved(address group)
func (_BaseLibrary *BaseLibraryFilterer) ParseAccessorGroupRemoved(log types.Log) (*BaseLibraryAccessorGroupRemoved, error) {
	event := new(BaseLibraryAccessorGroupRemoved)
	if err := _BaseLibrary.contract.UnpackLog(event, "AccessorGroupRemoved", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseLibraryApproveContentIterator is returned from FilterApproveContent and is used to iterate over the raw logs and unpacked data for ApproveContent events raised by the BaseLibrary contract.
type BaseLibraryApproveContentIterator struct {
	Event *BaseLibraryApproveContent // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseLibraryApproveContentIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseLibraryApproveContent)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseLibraryApproveContent)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseLibraryApproveContentIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseLibraryApproveContentIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseLibraryApproveContent represents a ApproveContent event raised by the BaseLibrary contract.
type BaseLibraryApproveContent struct {
	ContentAddress common.Address
	Approved       bool
	Note           string
	Raw            types.Log // Blockchain specific contextual infos
}

// FilterApproveContent is a free log retrieval operation binding the contract event 0x70234ce475fee4ab40e5e55cf533f67f12b47ef4c860e62dd7affa84ead4b442.
//
// Solidity: event ApproveContent(address contentAddress, bool approved, string note)
func (_BaseLibrary *BaseLibraryFilterer) FilterApproveContent(opts *bind.FilterOpts) (*BaseLibraryApproveContentIterator, error) {

	logs, sub, err := _BaseLibrary.contract.FilterLogs(opts, "ApproveContent")
	if err != nil {
		return nil, err
	}
	return &BaseLibraryApproveContentIterator{contract: _BaseLibrary.contract, event: "ApproveContent", logs: logs, sub: sub}, nil
}

// WatchApproveContent is a free log subscription operation binding the contract event 0x70234ce475fee4ab40e5e55cf533f67f12b47ef4c860e62dd7affa84ead4b442.
//
// Solidity: event ApproveContent(address contentAddress, bool approved, string note)
func (_BaseLibrary *BaseLibraryFilterer) WatchApproveContent(opts *bind.WatchOpts, sink chan<- *BaseLibraryApproveContent) (event.Subscription, error) {

	logs, sub, err := _BaseLibrary.contract.WatchLogs(opts, "ApproveContent")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseLibraryApproveContent)
				if err := _BaseLibrary.contract.UnpackLog(event, "ApproveContent", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseApproveContent is a log parse operation binding the contract event 0x70234ce475fee4ab40e5e55cf533f67f12b47ef4c860e62dd7affa84ead4b442.
//
// Solidity: event ApproveContent(address contentAddress, bool approved, string note)
func (_BaseLibrary *BaseLibraryFilterer) ParseApproveContent(log types.Log) (*BaseLibraryApproveContent, error) {
	event := new(BaseLibraryApproveContent)
	if err := _BaseLibrary.contract.UnpackLog(event, "ApproveContent", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseLibraryApproveContentRequestIterator is returned from FilterApproveContentRequest and is used to iterate over the raw logs and unpacked data for ApproveContentRequest events raised by the BaseLibrary contract.
type BaseLibraryApproveContentRequestIterator struct {
	Event *BaseLibraryApproveContentRequest // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseLibraryApproveContentRequestIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseLibraryApproveContentRequest)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseLibraryApproveContentRequest)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseLibraryApproveContentRequestIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseLibraryApproveContentRequestIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseLibraryApproveContentRequest represents a ApproveContentRequest event raised by the BaseLibrary contract.
type BaseLibraryApproveContentRequest struct {
	ContentAddress common.Address
	Submitter      common.Address
	Raw            types.Log // Blockchain specific contextual infos
}

// FilterApproveContentRequest is a free log retrieval operation binding the contract event 0x0588a34cf0de4e025d359c89ca4bacbcbf175440909952d91c814412d9da996a.
//
// Solidity: event ApproveContentRequest(address contentAddress, address submitter)
func (_BaseLibrary *BaseLibraryFilterer) FilterApproveContentRequest(opts *bind.FilterOpts) (*BaseLibraryApproveContentRequestIterator, error) {

	logs, sub, err := _BaseLibrary.contract.FilterLogs(opts, "ApproveContentRequest")
	if err != nil {
		return nil, err
	}
	return &BaseLibraryApproveContentRequestIterator{contract: _BaseLibrary.contract, event: "ApproveContentRequest", logs: logs, sub: sub}, nil
}

// WatchApproveContentRequest is a free log subscription operation binding the contract event 0x0588a34cf0de4e025d359c89ca4bacbcbf175440909952d91c814412d9da996a.
//
// Solidity: event ApproveContentRequest(address contentAddress, address submitter)
func (_BaseLibrary *BaseLibraryFilterer) WatchApproveContentRequest(opts *bind.WatchOpts, sink chan<- *BaseLibraryApproveContentRequest) (event.Subscription, error) {

	logs, sub, err := _BaseLibrary.contract.WatchLogs(opts, "ApproveContentRequest")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseLibraryApproveContentRequest)
				if err := _BaseLibrary.contract.UnpackLog(event, "ApproveContentRequest", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseApproveContentRequest is a log parse operation binding the contract event 0x0588a34cf0de4e025d359c89ca4bacbcbf175440909952d91c814412d9da996a.
//
// Solidity: event ApproveContentRequest(address contentAddress, address submitter)
func (_BaseLibrary *BaseLibraryFilterer) ParseApproveContentRequest(log types.Log) (*BaseLibraryApproveContentRequest, error) {
	event := new(BaseLibraryApproveContentRequest)
	if err := _BaseLibrary.contract.UnpackLog(event, "ApproveContentRequest", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseLibraryCommitPendingIterator is returned from FilterCommitPending and is used to iterate over the raw logs and unpacked data for CommitPending events raised by the BaseLibrary contract.
type BaseLibraryCommitPendingIterator struct {
	Event *BaseLibraryCommitPending // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseLibraryCommitPendingIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseLibraryCommitPending)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseLibraryCommitPending)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseLibraryCommitPendingIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseLibraryCommitPendingIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseLibraryCommitPending represents a CommitPending event raised by the BaseLibrary contract.
type BaseLibraryCommitPending struct {
	SpaceAddress  common.Address
	ParentAddress common.Address
	ObjectHash    string
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterCommitPending is a free log retrieval operation binding the contract event 0xb3ac059d88af6016aca1aebb7b3e796f2e7420435c59c563687814e9b85daa75.
//
// Solidity: event CommitPending(address spaceAddress, address parentAddress, string objectHash)
func (_BaseLibrary *BaseLibraryFilterer) FilterCommitPending(opts *bind.FilterOpts) (*BaseLibraryCommitPendingIterator, error) {

	logs, sub, err := _BaseLibrary.contract.FilterLogs(opts, "CommitPending")
	if err != nil {
		return nil, err
	}
	return &BaseLibraryCommitPendingIterator{contract: _BaseLibrary.contract, event: "CommitPending", logs: logs, sub: sub}, nil
}

// WatchCommitPending is a free log subscription operation binding the contract event 0xb3ac059d88af6016aca1aebb7b3e796f2e7420435c59c563687814e9b85daa75.
//
// Solidity: event CommitPending(address spaceAddress, address parentAddress, string objectHash)
func (_BaseLibrary *BaseLibraryFilterer) WatchCommitPending(opts *bind.WatchOpts, sink chan<- *BaseLibraryCommitPending) (event.Subscription, error) {

	logs, sub, err := _BaseLibrary.contract.WatchLogs(opts, "CommitPending")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseLibraryCommitPending)
				if err := _BaseLibrary.contract.UnpackLog(event, "CommitPending", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseCommitPending is a log parse operation binding the contract event 0xb3ac059d88af6016aca1aebb7b3e796f2e7420435c59c563687814e9b85daa75.
//
// Solidity: event CommitPending(address spaceAddress, address parentAddress, string objectHash)
func (_BaseLibrary *BaseLibraryFilterer) ParseCommitPending(log types.Log) (*BaseLibraryCommitPending, error) {
	event := new(BaseLibraryCommitPending)
	if err := _BaseLibrary.contract.UnpackLog(event, "CommitPending", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseLibraryContentObjectCreatedIterator is returned from FilterContentObjectCreated and is used to iterate over the raw logs and unpacked data for ContentObjectCreated events raised by the BaseLibrary contract.
type BaseLibraryContentObjectCreatedIterator struct {
	Event *BaseLibraryContentObjectCreated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseLibraryContentObjectCreatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseLibraryContentObjectCreated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseLibraryContentObjectCreated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseLibraryContentObjectCreatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseLibraryContentObjectCreatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseLibraryContentObjectCreated represents a ContentObjectCreated event raised by the BaseLibrary contract.
type BaseLibraryContentObjectCreated struct {
	ContentAddress common.Address
	ContentType    common.Address
	SpaceAddress   common.Address
	Raw            types.Log // Blockchain specific contextual infos
}

// FilterContentObjectCreated is a free log retrieval operation binding the contract event 0xadc3945407fc9e1f5763b74624698197e96e741e6e7c683373498712ba3eb878.
//
// Solidity: event ContentObjectCreated(address contentAddress, address content_type, address spaceAddress)
func (_BaseLibrary *BaseLibraryFilterer) FilterContentObjectCreated(opts *bind.FilterOpts) (*BaseLibraryContentObjectCreatedIterator, error) {

	logs, sub, err := _BaseLibrary.contract.FilterLogs(opts, "ContentObjectCreated")
	if err != nil {
		return nil, err
	}
	return &BaseLibraryContentObjectCreatedIterator{contract: _BaseLibrary.contract, event: "ContentObjectCreated", logs: logs, sub: sub}, nil
}

// WatchContentObjectCreated is a free log subscription operation binding the contract event 0xadc3945407fc9e1f5763b74624698197e96e741e6e7c683373498712ba3eb878.
//
// Solidity: event ContentObjectCreated(address contentAddress, address content_type, address spaceAddress)
func (_BaseLibrary *BaseLibraryFilterer) WatchContentObjectCreated(opts *bind.WatchOpts, sink chan<- *BaseLibraryContentObjectCreated) (event.Subscription, error) {

	logs, sub, err := _BaseLibrary.contract.WatchLogs(opts, "ContentObjectCreated")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseLibraryContentObjectCreated)
				if err := _BaseLibrary.contract.UnpackLog(event, "ContentObjectCreated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseContentObjectCreated is a log parse operation binding the contract event 0xadc3945407fc9e1f5763b74624698197e96e741e6e7c683373498712ba3eb878.
//
// Solidity: event ContentObjectCreated(address contentAddress, address content_type, address spaceAddress)
func (_BaseLibrary *BaseLibraryFilterer) ParseContentObjectCreated(log types.Log) (*BaseLibraryContentObjectCreated, error) {
	event := new(BaseLibraryContentObjectCreated)
	if err := _BaseLibrary.contract.UnpackLog(event, "ContentObjectCreated", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseLibraryContentObjectDeletedIterator is returned from FilterContentObjectDeleted and is used to iterate over the raw logs and unpacked data for ContentObjectDeleted events raised by the BaseLibrary contract.
type BaseLibraryContentObjectDeletedIterator struct {
	Event *BaseLibraryContentObjectDeleted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseLibraryContentObjectDeletedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseLibraryContentObjectDeleted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseLibraryContentObjectDeleted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseLibraryContentObjectDeletedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseLibraryContentObjectDeletedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseLibraryContentObjectDeleted represents a ContentObjectDeleted event raised by the BaseLibrary contract.
type BaseLibraryContentObjectDeleted struct {
	ContentAddress common.Address
	SpaceAddress   common.Address
	Raw            types.Log // Blockchain specific contextual infos
}

// FilterContentObjectDeleted is a free log retrieval operation binding the contract event 0x36500cee87b0da1746889a3483dccb525acfc40b8c0f2218e164c6cdf1482a3e.
//
// Solidity: event ContentObjectDeleted(address contentAddress, address spaceAddress)
func (_BaseLibrary *BaseLibraryFilterer) FilterContentObjectDeleted(opts *bind.FilterOpts) (*BaseLibraryContentObjectDeletedIterator, error) {

	logs, sub, err := _BaseLibrary.contract.FilterLogs(opts, "ContentObjectDeleted")
	if err != nil {
		return nil, err
	}
	return &BaseLibraryContentObjectDeletedIterator{contract: _BaseLibrary.contract, event: "ContentObjectDeleted", logs: logs, sub: sub}, nil
}

// WatchContentObjectDeleted is a free log subscription operation binding the contract event 0x36500cee87b0da1746889a3483dccb525acfc40b8c0f2218e164c6cdf1482a3e.
//
// Solidity: event ContentObjectDeleted(address contentAddress, address spaceAddress)
func (_BaseLibrary *BaseLibraryFilterer) WatchContentObjectDeleted(opts *bind.WatchOpts, sink chan<- *BaseLibraryContentObjectDeleted) (event.Subscription, error) {

	logs, sub, err := _BaseLibrary.contract.WatchLogs(opts, "ContentObjectDeleted")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseLibraryContentObjectDeleted)
				if err := _BaseLibrary.contract.UnpackLog(event, "ContentObjectDeleted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseContentObjectDeleted is a log parse operation binding the contract event 0x36500cee87b0da1746889a3483dccb525acfc40b8c0f2218e164c6cdf1482a3e.
//
// Solidity: event ContentObjectDeleted(address contentAddress, address spaceAddress)
func (_BaseLibrary *BaseLibraryFilterer) ParseContentObjectDeleted(log types.Log) (*BaseLibraryContentObjectDeleted, error) {
	event := new(BaseLibraryContentObjectDeleted)
	if err := _BaseLibrary.contract.UnpackLog(event, "ContentObjectDeleted", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseLibraryContentTypeAddedIterator is returned from FilterContentTypeAdded and is used to iterate over the raw logs and unpacked data for ContentTypeAdded events raised by the BaseLibrary contract.
type BaseLibraryContentTypeAddedIterator struct {
	Event *BaseLibraryContentTypeAdded // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseLibraryContentTypeAddedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseLibraryContentTypeAdded)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseLibraryContentTypeAdded)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseLibraryContentTypeAddedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseLibraryContentTypeAddedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseLibraryContentTypeAdded represents a ContentTypeAdded event raised by the BaseLibrary contract.
type BaseLibraryContentTypeAdded struct {
	ContentType     common.Address
	ContentContract common.Address
	Raw             types.Log // Blockchain specific contextual infos
}

// FilterContentTypeAdded is a free log retrieval operation binding the contract event 0x280016f7418306a55542432120fd1a239ef9fcc1a92694d8d44ca76be0249ea7.
//
// Solidity: event ContentTypeAdded(address contentType, address contentContract)
func (_BaseLibrary *BaseLibraryFilterer) FilterContentTypeAdded(opts *bind.FilterOpts) (*BaseLibraryContentTypeAddedIterator, error) {

	logs, sub, err := _BaseLibrary.contract.FilterLogs(opts, "ContentTypeAdded")
	if err != nil {
		return nil, err
	}
	return &BaseLibraryContentTypeAddedIterator{contract: _BaseLibrary.contract, event: "ContentTypeAdded", logs: logs, sub: sub}, nil
}

// WatchContentTypeAdded is a free log subscription operation binding the contract event 0x280016f7418306a55542432120fd1a239ef9fcc1a92694d8d44ca76be0249ea7.
//
// Solidity: event ContentTypeAdded(address contentType, address contentContract)
func (_BaseLibrary *BaseLibraryFilterer) WatchContentTypeAdded(opts *bind.WatchOpts, sink chan<- *BaseLibraryContentTypeAdded) (event.Subscription, error) {

	logs, sub, err := _BaseLibrary.contract.WatchLogs(opts, "ContentTypeAdded")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseLibraryContentTypeAdded)
				if err := _BaseLibrary.contract.UnpackLog(event, "ContentTypeAdded", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseContentTypeAdded is a log parse operation binding the contract event 0x280016f7418306a55542432120fd1a239ef9fcc1a92694d8d44ca76be0249ea7.
//
// Solidity: event ContentTypeAdded(address contentType, address contentContract)
func (_BaseLibrary *BaseLibraryFilterer) ParseContentTypeAdded(log types.Log) (*BaseLibraryContentTypeAdded, error) {
	event := new(BaseLibraryContentTypeAdded)
	if err := _BaseLibrary.contract.UnpackLog(event, "ContentTypeAdded", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseLibraryContentTypeRemovedIterator is returned from FilterContentTypeRemoved and is used to iterate over the raw logs and unpacked data for ContentTypeRemoved events raised by the BaseLibrary contract.
type BaseLibraryContentTypeRemovedIterator struct {
	Event *BaseLibraryContentTypeRemoved // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseLibraryContentTypeRemovedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseLibraryContentTypeRemoved)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseLibraryContentTypeRemoved)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseLibraryContentTypeRemovedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseLibraryContentTypeRemovedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseLibraryContentTypeRemoved represents a ContentTypeRemoved event raised by the BaseLibrary contract.
type BaseLibraryContentTypeRemoved struct {
	ContentType common.Address
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterContentTypeRemoved is a free log retrieval operation binding the contract event 0xd41375b9d347dfe722f90a780731abd23b7855f9cf14ea7063c4cab5f9ae58e2.
//
// Solidity: event ContentTypeRemoved(address contentType)
func (_BaseLibrary *BaseLibraryFilterer) FilterContentTypeRemoved(opts *bind.FilterOpts) (*BaseLibraryContentTypeRemovedIterator, error) {

	logs, sub, err := _BaseLibrary.contract.FilterLogs(opts, "ContentTypeRemoved")
	if err != nil {
		return nil, err
	}
	return &BaseLibraryContentTypeRemovedIterator{contract: _BaseLibrary.contract, event: "ContentTypeRemoved", logs: logs, sub: sub}, nil
}

// WatchContentTypeRemoved is a free log subscription operation binding the contract event 0xd41375b9d347dfe722f90a780731abd23b7855f9cf14ea7063c4cab5f9ae58e2.
//
// Solidity: event ContentTypeRemoved(address contentType)
func (_BaseLibrary *BaseLibraryFilterer) WatchContentTypeRemoved(opts *bind.WatchOpts, sink chan<- *BaseLibraryContentTypeRemoved) (event.Subscription, error) {

	logs, sub, err := _BaseLibrary.contract.WatchLogs(opts, "ContentTypeRemoved")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseLibraryContentTypeRemoved)
				if err := _BaseLibrary.contract.UnpackLog(event, "ContentTypeRemoved", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseContentTypeRemoved is a log parse operation binding the contract event 0xd41375b9d347dfe722f90a780731abd23b7855f9cf14ea7063c4cab5f9ae58e2.
//
// Solidity: event ContentTypeRemoved(address contentType)
func (_BaseLibrary *BaseLibraryFilterer) ParseContentTypeRemoved(log types.Log) (*BaseLibraryContentTypeRemoved, error) {
	event := new(BaseLibraryContentTypeRemoved)
	if err := _BaseLibrary.contract.UnpackLog(event, "ContentTypeRemoved", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseLibraryContributorGroupAddedIterator is returned from FilterContributorGroupAdded and is used to iterate over the raw logs and unpacked data for ContributorGroupAdded events raised by the BaseLibrary contract.
type BaseLibraryContributorGroupAddedIterator struct {
	Event *BaseLibraryContributorGroupAdded // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseLibraryContributorGroupAddedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseLibraryContributorGroupAdded)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseLibraryContributorGroupAdded)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseLibraryContributorGroupAddedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseLibraryContributorGroupAddedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseLibraryContributorGroupAdded represents a ContributorGroupAdded event raised by the BaseLibrary contract.
type BaseLibraryContributorGroupAdded struct {
	Group common.Address
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterContributorGroupAdded is a free log retrieval operation binding the contract event 0x218673669018c25b89bfbf1b58d0075e37c8847ef16e707b92355b7833e97d61.
//
// Solidity: event ContributorGroupAdded(address group)
func (_BaseLibrary *BaseLibraryFilterer) FilterContributorGroupAdded(opts *bind.FilterOpts) (*BaseLibraryContributorGroupAddedIterator, error) {

	logs, sub, err := _BaseLibrary.contract.FilterLogs(opts, "ContributorGroupAdded")
	if err != nil {
		return nil, err
	}
	return &BaseLibraryContributorGroupAddedIterator{contract: _BaseLibrary.contract, event: "ContributorGroupAdded", logs: logs, sub: sub}, nil
}

// WatchContributorGroupAdded is a free log subscription operation binding the contract event 0x218673669018c25b89bfbf1b58d0075e37c8847ef16e707b92355b7833e97d61.
//
// Solidity: event ContributorGroupAdded(address group)
func (_BaseLibrary *BaseLibraryFilterer) WatchContributorGroupAdded(opts *bind.WatchOpts, sink chan<- *BaseLibraryContributorGroupAdded) (event.Subscription, error) {

	logs, sub, err := _BaseLibrary.contract.WatchLogs(opts, "ContributorGroupAdded")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseLibraryContributorGroupAdded)
				if err := _BaseLibrary.contract.UnpackLog(event, "ContributorGroupAdded", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseContributorGroupAdded is a log parse operation binding the contract event 0x218673669018c25b89bfbf1b58d0075e37c8847ef16e707b92355b7833e97d61.
//
// Solidity: event ContributorGroupAdded(address group)
func (_BaseLibrary *BaseLibraryFilterer) ParseContributorGroupAdded(log types.Log) (*BaseLibraryContributorGroupAdded, error) {
	event := new(BaseLibraryContributorGroupAdded)
	if err := _BaseLibrary.contract.UnpackLog(event, "ContributorGroupAdded", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseLibraryContributorGroupRemovedIterator is returned from FilterContributorGroupRemoved and is used to iterate over the raw logs and unpacked data for ContributorGroupRemoved events raised by the BaseLibrary contract.
type BaseLibraryContributorGroupRemovedIterator struct {
	Event *BaseLibraryContributorGroupRemoved // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseLibraryContributorGroupRemovedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseLibraryContributorGroupRemoved)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseLibraryContributorGroupRemoved)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseLibraryContributorGroupRemovedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseLibraryContributorGroupRemovedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseLibraryContributorGroupRemoved represents a ContributorGroupRemoved event raised by the BaseLibrary contract.
type BaseLibraryContributorGroupRemoved struct {
	Group common.Address
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterContributorGroupRemoved is a free log retrieval operation binding the contract event 0xbbd97daa1862eb12f77ed128a557406737cee07b131b1e2d7140dff2005e197c.
//
// Solidity: event ContributorGroupRemoved(address group)
func (_BaseLibrary *BaseLibraryFilterer) FilterContributorGroupRemoved(opts *bind.FilterOpts) (*BaseLibraryContributorGroupRemovedIterator, error) {

	logs, sub, err := _BaseLibrary.contract.FilterLogs(opts, "ContributorGroupRemoved")
	if err != nil {
		return nil, err
	}
	return &BaseLibraryContributorGroupRemovedIterator{contract: _BaseLibrary.contract, event: "ContributorGroupRemoved", logs: logs, sub: sub}, nil
}

// WatchContributorGroupRemoved is a free log subscription operation binding the contract event 0xbbd97daa1862eb12f77ed128a557406737cee07b131b1e2d7140dff2005e197c.
//
// Solidity: event ContributorGroupRemoved(address group)
func (_BaseLibrary *BaseLibraryFilterer) WatchContributorGroupRemoved(opts *bind.WatchOpts, sink chan<- *BaseLibraryContributorGroupRemoved) (event.Subscription, error) {

	logs, sub, err := _BaseLibrary.contract.WatchLogs(opts, "ContributorGroupRemoved")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseLibraryContributorGroupRemoved)
				if err := _BaseLibrary.contract.UnpackLog(event, "ContributorGroupRemoved", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseContributorGroupRemoved is a log parse operation binding the contract event 0xbbd97daa1862eb12f77ed128a557406737cee07b131b1e2d7140dff2005e197c.
//
// Solidity: event ContributorGroupRemoved(address group)
func (_BaseLibrary *BaseLibraryFilterer) ParseContributorGroupRemoved(log types.Log) (*BaseLibraryContributorGroupRemoved, error) {
	event := new(BaseLibraryContributorGroupRemoved)
	if err := _BaseLibrary.contract.UnpackLog(event, "ContributorGroupRemoved", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseLibraryObjectMetaChangedIterator is returned from FilterObjectMetaChanged and is used to iterate over the raw logs and unpacked data for ObjectMetaChanged events raised by the BaseLibrary contract.
type BaseLibraryObjectMetaChangedIterator struct {
	Event *BaseLibraryObjectMetaChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseLibraryObjectMetaChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseLibraryObjectMetaChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseLibraryObjectMetaChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseLibraryObjectMetaChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseLibraryObjectMetaChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseLibraryObjectMetaChanged represents a ObjectMetaChanged event raised by the BaseLibrary contract.
type BaseLibraryObjectMetaChanged struct {
	Key []byte
	Raw types.Log // Blockchain specific contextual infos
}

// FilterObjectMetaChanged is a free log retrieval operation binding the contract event 0xe2b310ec9dabdc05229a748e07666c3bc9c46c6ef465cce30d0aa3aa64a0644c.
//
// Solidity: event ObjectMetaChanged(bytes key)
func (_BaseLibrary *BaseLibraryFilterer) FilterObjectMetaChanged(opts *bind.FilterOpts) (*BaseLibraryObjectMetaChangedIterator, error) {

	logs, sub, err := _BaseLibrary.contract.FilterLogs(opts, "ObjectMetaChanged")
	if err != nil {
		return nil, err
	}
	return &BaseLibraryObjectMetaChangedIterator{contract: _BaseLibrary.contract, event: "ObjectMetaChanged", logs: logs, sub: sub}, nil
}

// WatchObjectMetaChanged is a free log subscription operation binding the contract event 0xe2b310ec9dabdc05229a748e07666c3bc9c46c6ef465cce30d0aa3aa64a0644c.
//
// Solidity: event ObjectMetaChanged(bytes key)
func (_BaseLibrary *BaseLibraryFilterer) WatchObjectMetaChanged(opts *bind.WatchOpts, sink chan<- *BaseLibraryObjectMetaChanged) (event.Subscription, error) {

	logs, sub, err := _BaseLibrary.contract.WatchLogs(opts, "ObjectMetaChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseLibraryObjectMetaChanged)
				if err := _BaseLibrary.contract.UnpackLog(event, "ObjectMetaChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseObjectMetaChanged is a log parse operation binding the contract event 0xe2b310ec9dabdc05229a748e07666c3bc9c46c6ef465cce30d0aa3aa64a0644c.
//
// Solidity: event ObjectMetaChanged(bytes key)
func (_BaseLibrary *BaseLibraryFilterer) ParseObjectMetaChanged(log types.Log) (*BaseLibraryObjectMetaChanged, error) {
	event := new(BaseLibraryObjectMetaChanged)
	if err := _BaseLibrary.contract.UnpackLog(event, "ObjectMetaChanged", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseLibraryReviewerGroupAddedIterator is returned from FilterReviewerGroupAdded and is used to iterate over the raw logs and unpacked data for ReviewerGroupAdded events raised by the BaseLibrary contract.
type BaseLibraryReviewerGroupAddedIterator struct {
	Event *BaseLibraryReviewerGroupAdded // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseLibraryReviewerGroupAddedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseLibraryReviewerGroupAdded)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseLibraryReviewerGroupAdded)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseLibraryReviewerGroupAddedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseLibraryReviewerGroupAddedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseLibraryReviewerGroupAdded represents a ReviewerGroupAdded event raised by the BaseLibrary contract.
type BaseLibraryReviewerGroupAdded struct {
	Group common.Address
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterReviewerGroupAdded is a free log retrieval operation binding the contract event 0x1b88a571cc8ac2e87512f05648e79d184f5cc0cbb2889bc487c41f8b9a3202eb.
//
// Solidity: event ReviewerGroupAdded(address group)
func (_BaseLibrary *BaseLibraryFilterer) FilterReviewerGroupAdded(opts *bind.FilterOpts) (*BaseLibraryReviewerGroupAddedIterator, error) {

	logs, sub, err := _BaseLibrary.contract.FilterLogs(opts, "ReviewerGroupAdded")
	if err != nil {
		return nil, err
	}
	return &BaseLibraryReviewerGroupAddedIterator{contract: _BaseLibrary.contract, event: "ReviewerGroupAdded", logs: logs, sub: sub}, nil
}

// WatchReviewerGroupAdded is a free log subscription operation binding the contract event 0x1b88a571cc8ac2e87512f05648e79d184f5cc0cbb2889bc487c41f8b9a3202eb.
//
// Solidity: event ReviewerGroupAdded(address group)
func (_BaseLibrary *BaseLibraryFilterer) WatchReviewerGroupAdded(opts *bind.WatchOpts, sink chan<- *BaseLibraryReviewerGroupAdded) (event.Subscription, error) {

	logs, sub, err := _BaseLibrary.contract.WatchLogs(opts, "ReviewerGroupAdded")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseLibraryReviewerGroupAdded)
				if err := _BaseLibrary.contract.UnpackLog(event, "ReviewerGroupAdded", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseReviewerGroupAdded is a log parse operation binding the contract event 0x1b88a571cc8ac2e87512f05648e79d184f5cc0cbb2889bc487c41f8b9a3202eb.
//
// Solidity: event ReviewerGroupAdded(address group)
func (_BaseLibrary *BaseLibraryFilterer) ParseReviewerGroupAdded(log types.Log) (*BaseLibraryReviewerGroupAdded, error) {
	event := new(BaseLibraryReviewerGroupAdded)
	if err := _BaseLibrary.contract.UnpackLog(event, "ReviewerGroupAdded", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseLibraryReviewerGroupRemovedIterator is returned from FilterReviewerGroupRemoved and is used to iterate over the raw logs and unpacked data for ReviewerGroupRemoved events raised by the BaseLibrary contract.
type BaseLibraryReviewerGroupRemovedIterator struct {
	Event *BaseLibraryReviewerGroupRemoved // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseLibraryReviewerGroupRemovedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseLibraryReviewerGroupRemoved)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseLibraryReviewerGroupRemoved)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseLibraryReviewerGroupRemovedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseLibraryReviewerGroupRemovedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseLibraryReviewerGroupRemoved represents a ReviewerGroupRemoved event raised by the BaseLibrary contract.
type BaseLibraryReviewerGroupRemoved struct {
	Group common.Address
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterReviewerGroupRemoved is a free log retrieval operation binding the contract event 0xdf9d78c5635b72b709c85300a786eb7238acbe5bffe01c60c16464e45c6eb6eb.
//
// Solidity: event ReviewerGroupRemoved(address group)
func (_BaseLibrary *BaseLibraryFilterer) FilterReviewerGroupRemoved(opts *bind.FilterOpts) (*BaseLibraryReviewerGroupRemovedIterator, error) {

	logs, sub, err := _BaseLibrary.contract.FilterLogs(opts, "ReviewerGroupRemoved")
	if err != nil {
		return nil, err
	}
	return &BaseLibraryReviewerGroupRemovedIterator{contract: _BaseLibrary.contract, event: "ReviewerGroupRemoved", logs: logs, sub: sub}, nil
}

// WatchReviewerGroupRemoved is a free log subscription operation binding the contract event 0xdf9d78c5635b72b709c85300a786eb7238acbe5bffe01c60c16464e45c6eb6eb.
//
// Solidity: event ReviewerGroupRemoved(address group)
func (_BaseLibrary *BaseLibraryFilterer) WatchReviewerGroupRemoved(opts *bind.WatchOpts, sink chan<- *BaseLibraryReviewerGroupRemoved) (event.Subscription, error) {

	logs, sub, err := _BaseLibrary.contract.WatchLogs(opts, "ReviewerGroupRemoved")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseLibraryReviewerGroupRemoved)
				if err := _BaseLibrary.contract.UnpackLog(event, "ReviewerGroupRemoved", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseReviewerGroupRemoved is a log parse operation binding the contract event 0xdf9d78c5635b72b709c85300a786eb7238acbe5bffe01c60c16464e45c6eb6eb.
//
// Solidity: event ReviewerGroupRemoved(address group)
func (_BaseLibrary *BaseLibraryFilterer) ParseReviewerGroupRemoved(log types.Log) (*BaseLibraryReviewerGroupRemoved, error) {
	event := new(BaseLibraryReviewerGroupRemoved)
	if err := _BaseLibrary.contract.UnpackLog(event, "ReviewerGroupRemoved", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseLibraryUnauthorizedOperationIterator is returned from FilterUnauthorizedOperation and is used to iterate over the raw logs and unpacked data for UnauthorizedOperation events raised by the BaseLibrary contract.
type BaseLibraryUnauthorizedOperationIterator struct {
	Event *BaseLibraryUnauthorizedOperation // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseLibraryUnauthorizedOperationIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseLibraryUnauthorizedOperation)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseLibraryUnauthorizedOperation)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseLibraryUnauthorizedOperationIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseLibraryUnauthorizedOperationIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseLibraryUnauthorizedOperation represents a UnauthorizedOperation event raised by the BaseLibrary contract.
type BaseLibraryUnauthorizedOperation struct {
	OperationCode *big.Int
	Candidate     common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterUnauthorizedOperation is a free log retrieval operation binding the contract event 0x23de2adc3e22f171f66b3e5a333e17feb9dc30ba9570933bd259cb6c13ef7ab7.
//
// Solidity: event UnauthorizedOperation(uint256 operationCode, address candidate)
func (_BaseLibrary *BaseLibraryFilterer) FilterUnauthorizedOperation(opts *bind.FilterOpts) (*BaseLibraryUnauthorizedOperationIterator, error) {

	logs, sub, err := _BaseLibrary.contract.FilterLogs(opts, "UnauthorizedOperation")
	if err != nil {
		return nil, err
	}
	return &BaseLibraryUnauthorizedOperationIterator{contract: _BaseLibrary.contract, event: "UnauthorizedOperation", logs: logs, sub: sub}, nil
}

// WatchUnauthorizedOperation is a free log subscription operation binding the contract event 0x23de2adc3e22f171f66b3e5a333e17feb9dc30ba9570933bd259cb6c13ef7ab7.
//
// Solidity: event UnauthorizedOperation(uint256 operationCode, address candidate)
func (_BaseLibrary *BaseLibraryFilterer) WatchUnauthorizedOperation(opts *bind.WatchOpts, sink chan<- *BaseLibraryUnauthorizedOperation) (event.Subscription, error) {

	logs, sub, err := _BaseLibrary.contract.WatchLogs(opts, "UnauthorizedOperation")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseLibraryUnauthorizedOperation)
				if err := _BaseLibrary.contract.UnpackLog(event, "UnauthorizedOperation", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseUnauthorizedOperation is a log parse operation binding the contract event 0x23de2adc3e22f171f66b3e5a333e17feb9dc30ba9570933bd259cb6c13ef7ab7.
//
// Solidity: event UnauthorizedOperation(uint256 operationCode, address candidate)
func (_BaseLibrary *BaseLibraryFilterer) ParseUnauthorizedOperation(log types.Log) (*BaseLibraryUnauthorizedOperation, error) {
	event := new(BaseLibraryUnauthorizedOperation)
	if err := _BaseLibrary.contract.UnpackLog(event, "UnauthorizedOperation", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseLibraryUpdateKmsAddressIterator is returned from FilterUpdateKmsAddress and is used to iterate over the raw logs and unpacked data for UpdateKmsAddress events raised by the BaseLibrary contract.
type BaseLibraryUpdateKmsAddressIterator struct {
	Event *BaseLibraryUpdateKmsAddress // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseLibraryUpdateKmsAddressIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseLibraryUpdateKmsAddress)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseLibraryUpdateKmsAddress)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseLibraryUpdateKmsAddressIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseLibraryUpdateKmsAddressIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseLibraryUpdateKmsAddress represents a UpdateKmsAddress event raised by the BaseLibrary contract.
type BaseLibraryUpdateKmsAddress struct {
	AddressKms common.Address
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterUpdateKmsAddress is a free log retrieval operation binding the contract event 0x74538e2fbd034afddf32b42c5939d211ce86c7683f9768f1a4969746f81f8608.
//
// Solidity: event UpdateKmsAddress(address addressKms)
func (_BaseLibrary *BaseLibraryFilterer) FilterUpdateKmsAddress(opts *bind.FilterOpts) (*BaseLibraryUpdateKmsAddressIterator, error) {

	logs, sub, err := _BaseLibrary.contract.FilterLogs(opts, "UpdateKmsAddress")
	if err != nil {
		return nil, err
	}
	return &BaseLibraryUpdateKmsAddressIterator{contract: _BaseLibrary.contract, event: "UpdateKmsAddress", logs: logs, sub: sub}, nil
}

// WatchUpdateKmsAddress is a free log subscription operation binding the contract event 0x74538e2fbd034afddf32b42c5939d211ce86c7683f9768f1a4969746f81f8608.
//
// Solidity: event UpdateKmsAddress(address addressKms)
func (_BaseLibrary *BaseLibraryFilterer) WatchUpdateKmsAddress(opts *bind.WatchOpts, sink chan<- *BaseLibraryUpdateKmsAddress) (event.Subscription, error) {

	logs, sub, err := _BaseLibrary.contract.WatchLogs(opts, "UpdateKmsAddress")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseLibraryUpdateKmsAddress)
				if err := _BaseLibrary.contract.UnpackLog(event, "UpdateKmsAddress", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseUpdateKmsAddress is a log parse operation binding the contract event 0x74538e2fbd034afddf32b42c5939d211ce86c7683f9768f1a4969746f81f8608.
//
// Solidity: event UpdateKmsAddress(address addressKms)
func (_BaseLibrary *BaseLibraryFilterer) ParseUpdateKmsAddress(log types.Log) (*BaseLibraryUpdateKmsAddress, error) {
	event := new(BaseLibraryUpdateKmsAddress)
	if err := _BaseLibrary.contract.UnpackLog(event, "UpdateKmsAddress", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseLibraryUpdateRequestIterator is returned from FilterUpdateRequest and is used to iterate over the raw logs and unpacked data for UpdateRequest events raised by the BaseLibrary contract.
type BaseLibraryUpdateRequestIterator struct {
	Event *BaseLibraryUpdateRequest // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseLibraryUpdateRequestIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseLibraryUpdateRequest)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseLibraryUpdateRequest)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseLibraryUpdateRequestIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseLibraryUpdateRequestIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseLibraryUpdateRequest represents a UpdateRequest event raised by the BaseLibrary contract.
type BaseLibraryUpdateRequest struct {
	ObjectHash string
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterUpdateRequest is a free log retrieval operation binding the contract event 0x403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b65.
//
// Solidity: event UpdateRequest(string objectHash)
func (_BaseLibrary *BaseLibraryFilterer) FilterUpdateRequest(opts *bind.FilterOpts) (*BaseLibraryUpdateRequestIterator, error) {

	logs, sub, err := _BaseLibrary.contract.FilterLogs(opts, "UpdateRequest")
	if err != nil {
		return nil, err
	}
	return &BaseLibraryUpdateRequestIterator{contract: _BaseLibrary.contract, event: "UpdateRequest", logs: logs, sub: sub}, nil
}

// WatchUpdateRequest is a free log subscription operation binding the contract event 0x403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b65.
//
// Solidity: event UpdateRequest(string objectHash)
func (_BaseLibrary *BaseLibraryFilterer) WatchUpdateRequest(opts *bind.WatchOpts, sink chan<- *BaseLibraryUpdateRequest) (event.Subscription, error) {

	logs, sub, err := _BaseLibrary.contract.WatchLogs(opts, "UpdateRequest")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseLibraryUpdateRequest)
				if err := _BaseLibrary.contract.UnpackLog(event, "UpdateRequest", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseUpdateRequest is a log parse operation binding the contract event 0x403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b65.
//
// Solidity: event UpdateRequest(string objectHash)
func (_BaseLibrary *BaseLibraryFilterer) ParseUpdateRequest(log types.Log) (*BaseLibraryUpdateRequest, error) {
	event := new(BaseLibraryUpdateRequest)
	if err := _BaseLibrary.contract.UnpackLog(event, "UpdateRequest", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseLibraryVersionConfirmIterator is returned from FilterVersionConfirm and is used to iterate over the raw logs and unpacked data for VersionConfirm events raised by the BaseLibrary contract.
type BaseLibraryVersionConfirmIterator struct {
	Event *BaseLibraryVersionConfirm // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseLibraryVersionConfirmIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseLibraryVersionConfirm)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseLibraryVersionConfirm)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseLibraryVersionConfirmIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseLibraryVersionConfirmIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseLibraryVersionConfirm represents a VersionConfirm event raised by the BaseLibrary contract.
type BaseLibraryVersionConfirm struct {
	SpaceAddress  common.Address
	ParentAddress common.Address
	ObjectHash    string
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterVersionConfirm is a free log retrieval operation binding the contract event 0xbdaffceabaaa783aa187fea6c2e815541d29e2290bf3f7d3c4fc53672b68f7df.
//
// Solidity: event VersionConfirm(address spaceAddress, address parentAddress, string objectHash)
func (_BaseLibrary *BaseLibraryFilterer) FilterVersionConfirm(opts *bind.FilterOpts) (*BaseLibraryVersionConfirmIterator, error) {

	logs, sub, err := _BaseLibrary.contract.FilterLogs(opts, "VersionConfirm")
	if err != nil {
		return nil, err
	}
	return &BaseLibraryVersionConfirmIterator{contract: _BaseLibrary.contract, event: "VersionConfirm", logs: logs, sub: sub}, nil
}

// WatchVersionConfirm is a free log subscription operation binding the contract event 0xbdaffceabaaa783aa187fea6c2e815541d29e2290bf3f7d3c4fc53672b68f7df.
//
// Solidity: event VersionConfirm(address spaceAddress, address parentAddress, string objectHash)
func (_BaseLibrary *BaseLibraryFilterer) WatchVersionConfirm(opts *bind.WatchOpts, sink chan<- *BaseLibraryVersionConfirm) (event.Subscription, error) {

	logs, sub, err := _BaseLibrary.contract.WatchLogs(opts, "VersionConfirm")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseLibraryVersionConfirm)
				if err := _BaseLibrary.contract.UnpackLog(event, "VersionConfirm", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseVersionConfirm is a log parse operation binding the contract event 0xbdaffceabaaa783aa187fea6c2e815541d29e2290bf3f7d3c4fc53672b68f7df.
//
// Solidity: event VersionConfirm(address spaceAddress, address parentAddress, string objectHash)
func (_BaseLibrary *BaseLibraryFilterer) ParseVersionConfirm(log types.Log) (*BaseLibraryVersionConfirm, error) {
	event := new(BaseLibraryVersionConfirm)
	if err := _BaseLibrary.contract.UnpackLog(event, "VersionConfirm", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseLibraryVersionDeleteIterator is returned from FilterVersionDelete and is used to iterate over the raw logs and unpacked data for VersionDelete events raised by the BaseLibrary contract.
type BaseLibraryVersionDeleteIterator struct {
	Event *BaseLibraryVersionDelete // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseLibraryVersionDeleteIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseLibraryVersionDelete)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseLibraryVersionDelete)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseLibraryVersionDeleteIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseLibraryVersionDeleteIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseLibraryVersionDelete represents a VersionDelete event raised by the BaseLibrary contract.
type BaseLibraryVersionDelete struct {
	SpaceAddress common.Address
	VersionHash  string
	Index        *big.Int
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterVersionDelete is a free log retrieval operation binding the contract event 0x238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51.
//
// Solidity: event VersionDelete(address spaceAddress, string versionHash, int256 index)
func (_BaseLibrary *BaseLibraryFilterer) FilterVersionDelete(opts *bind.FilterOpts) (*BaseLibraryVersionDeleteIterator, error) {

	logs, sub, err := _BaseLibrary.contract.FilterLogs(opts, "VersionDelete")
	if err != nil {
		return nil, err
	}
	return &BaseLibraryVersionDeleteIterator{contract: _BaseLibrary.contract, event: "VersionDelete", logs: logs, sub: sub}, nil
}

// WatchVersionDelete is a free log subscription operation binding the contract event 0x238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51.
//
// Solidity: event VersionDelete(address spaceAddress, string versionHash, int256 index)
func (_BaseLibrary *BaseLibraryFilterer) WatchVersionDelete(opts *bind.WatchOpts, sink chan<- *BaseLibraryVersionDelete) (event.Subscription, error) {

	logs, sub, err := _BaseLibrary.contract.WatchLogs(opts, "VersionDelete")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseLibraryVersionDelete)
				if err := _BaseLibrary.contract.UnpackLog(event, "VersionDelete", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseVersionDelete is a log parse operation binding the contract event 0x238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51.
//
// Solidity: event VersionDelete(address spaceAddress, string versionHash, int256 index)
func (_BaseLibrary *BaseLibraryFilterer) ParseVersionDelete(log types.Log) (*BaseLibraryVersionDelete, error) {
	event := new(BaseLibraryVersionDelete)
	if err := _BaseLibrary.contract.UnpackLog(event, "VersionDelete", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseLibraryVisibilityChangedIterator is returned from FilterVisibilityChanged and is used to iterate over the raw logs and unpacked data for VisibilityChanged events raised by the BaseLibrary contract.
type BaseLibraryVisibilityChangedIterator struct {
	Event *BaseLibraryVisibilityChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseLibraryVisibilityChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseLibraryVisibilityChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseLibraryVisibilityChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseLibraryVisibilityChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseLibraryVisibilityChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseLibraryVisibilityChanged represents a VisibilityChanged event raised by the BaseLibrary contract.
type BaseLibraryVisibilityChanged struct {
	ContentSpace  common.Address
	ParentAddress common.Address
	Visibility    uint8
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterVisibilityChanged is a free log retrieval operation binding the contract event 0x369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500.
//
// Solidity: event VisibilityChanged(address contentSpace, address parentAddress, uint8 visibility)
func (_BaseLibrary *BaseLibraryFilterer) FilterVisibilityChanged(opts *bind.FilterOpts) (*BaseLibraryVisibilityChangedIterator, error) {

	logs, sub, err := _BaseLibrary.contract.FilterLogs(opts, "VisibilityChanged")
	if err != nil {
		return nil, err
	}
	return &BaseLibraryVisibilityChangedIterator{contract: _BaseLibrary.contract, event: "VisibilityChanged", logs: logs, sub: sub}, nil
}

// WatchVisibilityChanged is a free log subscription operation binding the contract event 0x369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500.
//
// Solidity: event VisibilityChanged(address contentSpace, address parentAddress, uint8 visibility)
func (_BaseLibrary *BaseLibraryFilterer) WatchVisibilityChanged(opts *bind.WatchOpts, sink chan<- *BaseLibraryVisibilityChanged) (event.Subscription, error) {

	logs, sub, err := _BaseLibrary.contract.WatchLogs(opts, "VisibilityChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseLibraryVisibilityChanged)
				if err := _BaseLibrary.contract.UnpackLog(event, "VisibilityChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseVisibilityChanged is a log parse operation binding the contract event 0x369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500.
//
// Solidity: event VisibilityChanged(address contentSpace, address parentAddress, uint8 visibility)
func (_BaseLibrary *BaseLibraryFilterer) ParseVisibilityChanged(log types.Log) (*BaseLibraryVisibilityChanged, error) {
	event := new(BaseLibraryVisibilityChanged)
	if err := _BaseLibrary.contract.UnpackLog(event, "VisibilityChanged", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseLibraryFactoryABI is the input ABI used to generate the binding from.
const BaseLibraryFactoryABI = "[{\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"_spaceAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentSpace\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"address_KMS\",\"type\":\"address\"}],\"name\":\"createLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newCreator\",\"type\":\"address\"}],\"name\":\"transferCreatorship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"versionAPI\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// BaseLibraryFactoryFuncSigs maps the 4-byte function signature to its string representation.
var BaseLibraryFactoryFuncSigs = map[string]string{
	"af570c04": "contentSpace()",
	"40b89f06": "createLibrary(address)",
	"02d05d3f": "creator()",
	"41c0e1b5": "kill()",
	"8da5cb5b": "owner()",
	"6d2e4b1b": "transferCreatorship(address)",
	"f2fde38b": "transferOwnership(address)",
	"54fd4d50": "version()",
	"5f4fcae1": "versionAPI()",
}

// BaseLibraryFactoryBin is the compiled bytecode used for deploying new contracts.
var BaseLibraryFactoryBin = "0x60806040527f4f776e61626c653230323030393238313130303030504f000000000000000000600055620332e360ec1b6001557f426173654c6962466163746f72793230323030393238313130303030504f000060055534801561006257600080fd5b50604051614f86380380614f868339818101604052602081101561008557600080fd5b5051600280546001600160a01b0319908116321790915560038054821633179055600480546001600160a01b0390931692909116919091179055614eb8806100ce6000396000f3fe6080604052600436106100865760003560e01c80635f4fcae1116100595780635f4fcae1146101285780636d2e4b1b1461013d5780638da5cb5b14610170578063af570c0414610185578063f2fde38b1461019a57610086565b806302d05d3f1461008857806340b89f06146100b957806341c0e1b5146100ec57806354fd4d5014610101575b005b34801561009457600080fd5b5061009d6101cd565b604080516001600160a01b039092168252519081900360200190f35b3480156100c557600080fd5b5061009d600480360360208110156100dc57600080fd5b50356001600160a01b03166101dc565b3480156100f857600080fd5b5061008661047e565b34801561010d57600080fd5b506101166104a3565b60408051918252519081900360200190f35b34801561013457600080fd5b506101166104a9565b34801561014957600080fd5b506100866004803603602081101561016057600080fd5b50356001600160a01b03166104af565b34801561017c57600080fd5b5061009d6104fb565b34801561019157600080fd5b5061009d61050a565b3480156101a657600080fd5b50610086600480360360208110156101bd57600080fd5b50356001600160a01b0316610519565b6002546001600160a01b031681565b6004546000906001600160a01b031633146101f657600080fd5b60008233604051610206906106a7565b6001600160a01b03928316815291166020820152604080519182900301906000f080158015610239573d6000803e3d6000fd5b5060048054604080516363e6ffdd60e01b815232938101939093525192935083926001600160a01b039091169160009183916363e6ffdd916024808301926020929190829003018186803b15801561029057600080fd5b505afa1580156102a4573d6000803e3d6000fd5b505050506040513d60208110156102ba57600080fd5b5051905060006102c982610565565b9050806103a6576040805163f2fde38b60e01b8152326004820152905183916001600160a01b0387169163f2fde38b9160248082019260009290919082900301818387803b15801561031a57600080fd5b505af115801561032e573d6000803e3d6000fd5b50506040805163f17bda9160e01b81526001600160a01b038a81166004830152600060248301819052600260448401529251908616945063f17bda9193506064808301939282900301818387803b15801561038857600080fd5b505af115801561039c573d6000803e3d6000fd5b5050505050610471565b604080516307f0dad160e11b81523260048201526000602482018190526002604483015291516001600160a01b03871692630fe1b5a2926064808201939182900301818387803b1580156103f957600080fd5b505af115801561040d573d6000803e3d6000fd5b50506040805163f2fde38b60e01b815232600482015290516001600160a01b038816935063f2fde38b9250602480830192600092919082900301818387803b15801561045857600080fd5b505af115801561046c573d6000803e3d6000fd5b505050505b509293505050505b919050565b6003546001600160a01b0316331461049557600080fd5b6003546001600160a01b0316ff5b60055481565b60015481565b6002546001600160a01b031633146104c657600080fd5b6001600160a01b0381166104d957600080fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031681565b6004546001600160a01b031681565b6003546001600160a01b0316331461053057600080fd5b6001600160a01b03811661054357600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b604080516b76657273696f6e415049282960a01b8152815190819003600c018120600482526024820183526020820180516001600160e01b03166001600160e01b03199092169190911781529151815160009384936060936001600160a01b03881693919290918291908083835b602083106105f25780518252601f1990920191602091820191016105d3565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610652576040519150601f19603f3d011682016040523d82523d6000602084013e610657565b606091505b50909250905081158061066957508051155b8061068d57508060008151811061067c57fe5b01602001516001600160f81b031916155b1561069d57600092505050610479565b5060019392505050565b6147cf806106b58339019056fe608060408190527f4f776e61626c653230323030393238313130303030504f0000000000000000006000908155620332e360ec1b60019081557f41636365737369626c653230323030363236313231363030504f0000000000006007556008805460ff191690911761ff00191690557f4564697461626c653230323030393238313130303030504f00000000000000006009557f436f6e7461696e657232303230303331363133353330304d4c0000000000000060105560138190557f426173654c6962726172793230323030393238313130303030504f00000000006015556019819055601a819055601b819055601d556147cf388190039081908339818101604052604081101561011157600080fd5b50805160209091015160028054326001600160a01b03199182161790915560038054339083161790556004805482166001600160a01b0393841617905560118054909116919092161790556008805461ffff19166103001790556146558061017a6000396000f3fe6080604052600436106104305760003560e01c8063628449fd11610229578063991a3a7c1161012e578063cbcd4461116100b6578063e5538fd21161007a578063e5538fd214611302578063e8de515f14611317578063ef1d7dc21461134a578063f2fde38b1461135f578063fd0891961461139257610430565b8063cbcd4461146110be578063dc3c29c0146110d3578063e02dd9c214611106578063e1a707171461111b578063e542b7cb146111cc57610430565b8063ac55c906116100fd578063ac55c90614610f9b578063af570c041461104c578063c287e0ed14611061578063c65bcbe214611076578063c9e8e72d1461108b57610430565b8063991a3a7c14610ede5780639b55f90114610f085780639cb121ba14610f3b578063aa024e8b14610f6e57610430565b806381beeb64116101b15780638da5cb5b116101805780638da5cb5b14610da6578063952e464b14610dbb57806395a078e814610de557806397ac4fd214610e185780639867db7414610e2d57610430565b806381beeb6414610c6c57806387e86b2c14610c8157806387fcd0b814610d495780638cb13c2e14610d7c57610430565b806367e5c3bf116101f857806367e5c3bf14610b9d5780636d2e4b1b14610bd05780636e37542714610c035780637886f74714610c185780637ca8f61814610c4257610430565b8063628449fd14610aa15780636380501f14610b2b57806363dab9d414610b40578063679a9a3c14610b6a57610430565b806324d7806c1161033a578063386493e0116102c2578063470750bb11610286578063470750bb14610a3857806349102e6114610a4d57806354fd4d5014610a625780635f4fcae114610a775780635f6a130114610a8c57610430565b8063386493e0146109be5780633dd71d99146109f157806340b87a2614610a0657806341c0e1b514610a1b578063446e882614610a3057610430565b80632c11f392116103095780632c11f392146109225780632cf994221461094c57806332eaf21b1461097f578063331b86c014610994578063375a6e7c146109a957610430565b806324d7806c1461087457806329adec14146108a757806329d00219146108bc57806329dedde5146108ef57610430565b80631b969895116103bd5780631e35d8fa1161038c5780631e35d8fa146107945780631f2caaec146107c757806321770a84146107f157806322e564eb146108065780632393553b1461084a57610430565b80631b969895146105d85780631bf7a9121461060b5780631cdbee5a1461072e5780631d0f43511461076157610430565b80630f58a786116104045780630f58a786146104f25780630fe1b5a21461052d578063100508a21461057157806314cfabb31461059c57806316308394146105b157610430565b8062821de314610432578063011e01a51461046357806302d05d3f146104965780630eaec2c5146104ab575b005b34801561043e57600080fd5b506104476113c5565b604080516001600160a01b039092168252519081900360200190f35b34801561046f57600080fd5b506104306004803603602081101561048657600080fd5b50356001600160a01b03166113d5565b3480156104a257600080fd5b50610447611440565b3480156104b757600080fd5b506104de600480360360208110156104ce57600080fd5b50356001600160a01b031661144f565b604080519115158252519081900360200190f35b3480156104fe57600080fd5b506104306004803603604081101561051557600080fd5b506001600160a01b03813581169160200135166114cc565b34801561053957600080fd5b506104306004803603606081101561055057600080fd5b506001600160a01b038135169060ff60208201358116916040013516611628565b34801561057d57600080fd5b506105866116ed565b6040805160ff9092168252519081900360200190f35b3480156105a857600080fd5b506104de6116f2565b3480156105bd57600080fd5b506105c6611776565b60408051918252519081900360200190f35b3480156105e457600080fd5b506104de600480360360208110156105fb57600080fd5b50356001600160a01b031661177c565b6104de6004803603604081101561062157600080fd5b810190602081018135600160201b81111561063b57600080fd5b82018360208201111561064d57600080fd5b803590602001918460208302840111600160201b8311171561066e57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156106bd57600080fd5b8201836020820111156106cf57600080fd5b803590602001918460208302840111600160201b831117156106f057600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955061186e945050505050565b34801561073a57600080fd5b506104476004803603602081101561075157600080fd5b50356001600160a01b031661190a565b34801561076d57600080fd5b506104306004803603602081101561078457600080fd5b50356001600160a01b0316611925565b3480156107a057600080fd5b50610447600480360360208110156107b757600080fd5b50356001600160a01b031661199d565b3480156107d357600080fd5b50610447600480360360208110156107ea57600080fd5b5035611ad2565b3480156107fd57600080fd5b506105c6611cef565b34801561081257600080fd5b506104306004803603606081101561082957600080fd5b506001600160a01b038135169060ff60208201358116916040013516611cf5565b34801561085657600080fd5b506104476004803603602081101561086d57600080fd5b503561213b565b34801561088057600080fd5b506104de6004803603602081101561089757600080fd5b50356001600160a01b0316612162565b3480156108b357600080fd5b5061058661218b565b3480156108c857600080fd5b506104de600480360360208110156108df57600080fd5b50356001600160a01b0316612194565b3480156108fb57600080fd5b506104de6004803603602081101561091257600080fd5b50356001600160a01b0316612217565b34801561092e57600080fd5b506104476004803603602081101561094557600080fd5b5035612235565b34801561095857600080fd5b506104de6004803603602081101561096f57600080fd5b50356001600160a01b0316612242565b34801561098b57600080fd5b5061044761235a565b3480156109a057600080fd5b506105c6612369565b3480156109b557600080fd5b506104de61236f565b3480156109ca57600080fd5b506104de600480360360208110156109e157600080fd5b50356001600160a01b0316612378565b3480156109fd57600080fd5b506104de6123ee565b348015610a1257600080fd5b506105c66123f6565b348015610a2757600080fd5b506104306123fc565b6104de612421565b348015610a4457600080fd5b506105c661261d565b348015610a5957600080fd5b506104de612623565b348015610a6e57600080fd5b506105c6612838565b348015610a8357600080fd5b506105c661283e565b348015610a9857600080fd5b50610430612844565b348015610aad57600080fd5b50610ab6612880565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610af0578181015183820152602001610ad8565b50505050905090810190601f168015610b1d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610b3757600080fd5b5061058661290e565b348015610b4c57600080fd5b5061044760048036036020811015610b6357600080fd5b503561291c565b348015610b7657600080fd5b5061043060048036036020811015610b8d57600080fd5b50356001600160a01b0316612966565b348015610ba957600080fd5b506104de60048036036020811015610bc057600080fd5b50356001600160a01b03166129db565b348015610bdc57600080fd5b5061043060048036036020811015610bf357600080fd5b50356001600160a01b0316612b3c565b348015610c0f57600080fd5b506104de612b88565b348015610c2457600080fd5b506105c660048036036020811015610c3b57600080fd5b5035612b97565b348015610c4e57600080fd5b50610ab660048036036020811015610c6557600080fd5b5035612bb5565b348015610c7857600080fd5b506104de612c28565b348015610c8d57600080fd5b506104de60048036036060811015610ca457600080fd5b6001600160a01b03823516916020810135151591810190606081016040820135600160201b811115610cd557600080fd5b820183602082011115610ce757600080fd5b803590602001918460018302840111600160201b83111715610d0857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550612c33945050505050565b348015610d5557600080fd5b5061043060048036036020811015610d6c57600080fd5b50356001600160a01b0316612f47565b348015610d8857600080fd5b5061044760048036036020811015610d9f57600080fd5b5035612ffb565b348015610db257600080fd5b50610447613008565b348015610dc757600080fd5b5061044760048036036020811015610dde57600080fd5b5035613017565b348015610df157600080fd5b506104de60048036036020811015610e0857600080fd5b50356001600160a01b0316613024565b348015610e2457600080fd5b50610586613148565b348015610e3957600080fd5b5061043060048036036020811015610e5057600080fd5b810190602081018135600160201b811115610e6a57600080fd5b820183602082011115610e7c57600080fd5b803590602001918460018302840111600160201b83111715610e9d57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061314d945050505050565b348015610eea57600080fd5b5061044760048036036020811015610f0157600080fd5b5035613278565b348015610f1457600080fd5b506104de60048036036020811015610f2b57600080fd5b50356001600160a01b0316613285565b348015610f4757600080fd5b506104de60048036036020811015610f5e57600080fd5b50356001600160a01b03166132b3565b348015610f7a57600080fd5b5061043060048036036020811015610f9157600080fd5b503560ff16613308565b348015610fa757600080fd5b50610ab660048036036020811015610fbe57600080fd5b810190602081018135600160201b811115610fd857600080fd5b820183602082011115610fea57600080fd5b803590602001918460018302840111600160201b8311171561100b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550613380945050505050565b34801561105857600080fd5b50610447613527565b34801561106d57600080fd5b50610430613536565b34801561108257600080fd5b506105c66135f6565b34801561109757600080fd5b50610430600480360360208110156110ae57600080fd5b50356001600160a01b03166135fc565b3480156110ca57600080fd5b506104de613635565b3480156110df57600080fd5b50610430600480360360208110156110f657600080fd5b50356001600160a01b0316613667565b34801561111257600080fd5b50610ab66136db565b34801561112757600080fd5b506105c66004803603602081101561113e57600080fd5b810190602081018135600160201b81111561115857600080fd5b82018360208201111561116a57600080fd5b803590602001918460018302840111600160201b8311171561118b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550613736945050505050565b3480156111d857600080fd5b50610430600480360360408110156111ef57600080fd5b810190602081018135600160201b81111561120957600080fd5b82018360208201111561121b57600080fd5b803590602001918460018302840111600160201b8311171561123c57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561128e57600080fd5b8201836020820111156112a057600080fd5b803590602001918460018302840111600160201b831117156112c157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550613b9c945050505050565b34801561130e57600080fd5b506105c6613d8b565b34801561132357600080fd5b506104de6004803603602081101561133a57600080fd5b50356001600160a01b0316613d91565b34801561135657600080fd5b50610586613e6e565b34801561136b57600080fd5b506104306004803603602081101561138257600080fd5b50356001600160a01b0316613e73565b34801561139e57600080fd5b506104de600480360360208110156113b557600080fd5b50356001600160a01b0316613ebf565b6004546001600160a01b03165b90565b6113dd612c28565b6113e657600080fd5b601180546001600160a01b0319166001600160a01b03838116919091179182905560408051929091168252517f74538e2fbd034afddf32b42c5939d211ce86c7683f9768f1a4969746f81f8608916020908290030190a150565b6002546001600160a01b031681565b600061145a826129db565b806114c457506114c48260168054806020026020016040519081016040528092919081815260200182805480156114ba57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161149c575b5050505050614051565b90505b919050565b6003546001600160a01b031633146114e357600080fd5b6001600160a01b0382811660009081526014602052604090205416158015611511575061150f826132b3565b155b156115bb576012546013541015611565578160126013548154811061153257fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506115b1565b601280546001810182556000919091527fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec34440180546001600160a01b0319166001600160a01b0384161790555b6013805460010190555b6001600160a01b0382811660008181526014602090815260409182902080546001600160a01b0319169486169485179055815192835282019290925281517f280016f7418306a55542432120fd1a239ef9fcc1a92694d8d44ca76be0249ea7929181900390910190a15050565b611630612c28565b61163957600080fd5b60048054604080516363e6ffdd60e01b81526001600160a01b03878116948201949094529051929091169160009183916363e6ffdd91602480820192602092909190829003018186803b15801561168f57600080fd5b505afa1580156116a3573d6000803e3d6000fd5b505050506040513d60208110156116b957600080fd5b505190506001600160a01b0381166116db576116d6858585611cf5565b6116e6565b6116e6818585611cf5565b5050505050565b600181565b600480546040805163099a0f8560e21b81523393810193909352516000926001600160a01b039092169182916326683e1491602480820192602092909190829003018186803b15801561174457600080fd5b505afa158015611758573d6000803e3d6000fd5b505050506040513d602081101561176e57600080fd5b505191505090565b601d5481565b6000611786612c28565b61178f57600080fd5b601a5461179e8360178361413f565b601a81905581111561186557604080516001600160a01b038516815290517fdf9d78c5635b72b709c85300a786eb7238acbe5bffe01c60c16464e45c6eb6eb9181900360200190a161184a83601880548060200260200160405190810160405280929190818152602001828054801561184057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611822575b5050505050614253565b61185b5761185b8360016000611628565b60019150506114c7565b50600092915050565b600061187933613024565b61188257600080fd5b604080513060601b60208083019190915242603480840182905284518085039091018152605484018086528151919093012090915260006074830181905260948301523360b48301526103e80260d482015290517f545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c79181900360f40190a15060015b92915050565b6014602052600090815260409020546001600160a01b031681565b61192d612c28565b61193657600080fd5b601b546119458260188361429f565b601b81905581101561199957604080516001600160a01b038416815290517f3a94857e4393737f73edb175a7d0c195c7f635d9ae995e12740616ec55c9d4119181900360200190a161199982600180611628565b5050565b60003332146119f3576040805162461bcd60e51b815260206004820152601960248201527f6f6e6c79206469726563742063616c6c7320616c6c6f77656400000000000000604482015290519081900360640190fd5b600480546040805163bf4e088f60e01b815230938101939093526001600160a01b0385811660248501529051600093919092169163bf4e088f9160448082019260209290919082900301818787803b158015611a4e57600080fd5b505af1158015611a62573d6000803e3d6000fd5b505050506040513d6020811015611a7857600080fd5b5051600454604080516001600160a01b038085168252808816602083015290921682820152519192507fadc3945407fc9e1f5763b74624698197e96e741e6e7c683373498712ba3eb878919081900360600190a192915050565b6000805b60125481101561186557600060128281548110611aef57fe5b60009182526020808320909101546040805180840189905281518082038501815281830180845281519190950120637016ece160e11b90945290516001600160a01b0390921694509192849263e02dd9c29260448083019392829003018186803b158015611b5c57600080fd5b505afa158015611b70573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015611b9957600080fd5b8101908080516040519392919084600160201b821115611bb857600080fd5b908301906020820185811115611bcd57600080fd5b8251600160201b811182820188101715611be657600080fd5b82525081516020918201929091019080838360005b83811015611c13578181015183820152602001611bfb565b50505050905090810190601f168015611c405780820380516001836020036101000a031916815260200191505b506040525050506040516020018082805190602001908083835b60208310611c795780518252601f199092019160209182019101611c5a565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001201415611ce65760128281548110611cc757fe5b6000918252602090912001546001600160a01b031692506114c7915050565b50600101611ad6565b601a5481565b6000839050806001600160a01b031663091600e66040518163ffffffff1660e01b815260040160206040518083038186803b158015611d3357600080fd5b505afa158015611d47573d6000803e3d6000fd5b505050506040513d6020811015611d5d57600080fd5b5051600854610100900460ff90811691161415611de8576040805162f7bd4560e61b815230600482015260ff80861660248301528416604482015290516001600160a01b03831691633def514091606480830192600092919082900301818387803b158015611dcb57600080fd5b505af1158015611ddf573d6000803e3d6000fd5b50505050612135565b806001600160a01b03166312915a306040518163ffffffff1660e01b815260040160206040518083038186803b158015611e2157600080fd5b505afa158015611e35573d6000803e3d6000fd5b505050506040513d6020811015611e4b57600080fd5b5051600854610100900460ff90811691161415611eba576040805163f17bda9160e01b815230600482015260ff80861660248301528416604482015290516001600160a01b0383169163f17bda9191606480830192600092919082900301818387803b158015611dcb57600080fd5b806001600160a01b03166316aed2326040518163ffffffff1660e01b815260040160206040518083038186803b158015611ef357600080fd5b505afa158015611f07573d6000803e3d6000fd5b505050506040513d6020811015611f1d57600080fd5b5051600854610100900460ff90811691161415611f8c5760408051633e5dbdf960e11b815230600482015260ff80861660248301528416604482015290516001600160a01b03831691637cbb7bf291606480830192600092919082900301818387803b158015611dcb57600080fd5b806001600160a01b03166368a0469a6040518163ffffffff1660e01b815260040160206040518083038186803b158015611fc557600080fd5b505afa158015611fd9573d6000803e3d6000fd5b505050506040513d6020811015611fef57600080fd5b5051600854610100900460ff9081169116141561205e5760408051638635adb560e01b815230600482015260ff80861660248301528416604482015290516001600160a01b03831691638635adb591606480830192600092919082900301818387803b158015611dcb57600080fd5b806001600160a01b0316636373a4116040518163ffffffff1660e01b815260040160206040518083038186803b15801561209757600080fd5b505afa1580156120ab573d6000803e3d6000fd5b505050506040513d60208110156120c157600080fd5b5051600854610100900460ff9081169116141561213057604080516301126e5d60e51b815230600482015260ff80861660248301528416604482015290516001600160a01b0383169163224dcba091606480830192600092919082900301818387803b158015611dcb57600080fd5b600080fd5b50505050565b6016818154811061214857fe5b6000918252602090912001546001600160a01b0316905081565b6003546000906001600160a01b0383811691161415612183575060016114c7565b506000919050565b60085460ff1681565b6003546000906001600160a01b03838116911614156121b5575060016114c7565b6114c48260178054806020026020016040519081016040528092919081815260200182805480156114ba576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161149c575050505050614051565b60006013546000141561222c575060016114c7565b6114c4826132b3565b6018818154811061214857fe5b6000336001600160a01b0383161461225957600080fd5b6000829050806001600160a01b0316638280dd8f60016040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b1580156122a557600080fd5b505af11580156122b9573d6000803e3d6000fd5b505050506040513d60208110156122cf57600080fd5b5050604080516327c1c21d60e01b8152905160009182916001600160a01b038516916327c1c21d916004808301926020929190829003018186803b15801561231657600080fd5b505afa15801561232a573d6000803e3d6000fd5b505050506040513d602081101561234057600080fd5b5051131561235357612350612623565b90505b9392505050565b6011546001600160a01b031681565b600c5490565b600f5460ff1681565b6000612382612c28565b61238b57600080fd5b60195461239a8360168361413f565b601981905581111561186557604080516001600160a01b038516815290517fbbd97daa1862eb12f77ed128a557406737cee07b131b1e2d7140dff2005e197c9181900360200190a161185b83600080611628565b601a54151590565b600b5481565b6003546001600160a01b0316331461241357600080fd5b6003546001600160a01b0316ff5b600061242b6116f2565b61243457600080fd5b600f5460ff1661244357600080fd5b600a5460026000196101006001841615020190911604156124ee57600c80546001818101808455600093909352600a80546124b5937fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c70192600261010091831615919091026000190190911604614463565b5050600b54600d80546001810182556000919091527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb501555b600e805461251191600a9160026000196101006001841615020190911604614463565b5042600b5560408051602081019182905260009081905261253491600e916144e8565b50600f805460ff191690556004547fbdaffceabaaa783aa187fea6c2e815541d29e2290bf3f7d3c4fc53672b68f7df906001600160a01b03166125756113c5565b604080516001600160a01b038085168252831660208201526060918101828152600a805460026000196101006001841615020190911604938301849052926080830190849080156126075780601f106125dc57610100808354040283529160200191612607565b820191906000526020600020905b8154815290600101906020018083116125ea57829003601f168201915b505094505050505060405180910390a150600190565b60195481565b6000338061262f6123ee565b61270257806001600160a01b0316638280dd8f60006040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b15801561267a57600080fd5b505af115801561268e573d6000803e3d6000fd5b505050506040513d60208110156126a457600080fd5b5050604080516001600160a01b038416815260016020820152606081830181905260009082015290517f70234ce475fee4ab40e5e55cf533f67f12b47ef4c860e62dd7affa84ead4b4429181900360a00190a16001925050506113d2565b6001600160a01b0382166000908152601e60205260409020541561272b576000925050506113d2565b601c54601d54101561277a5781601c601d548154811061274757fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506127c6565b601c80546001810182556000919091527f0e4562a10381dec21b205ed72637e6b1b523bdd0e4d4d50af5cd23dd4500a2110180546001600160a01b0319166001600160a01b0384161790555b601d80546001600160a01b0384166000818152601e60209081526040918290206001948501905584549093019093558251908152339181019190915281517f0588a34cf0de4e025d359c89ca4bacbcbf175440909952d91c814412d9da996a929181900390910190a160019250505090565b60155481565b60015481565b61284c612b88565b61285557600080fd5b60408051602081019182905260009081905261287391600e916144e8565b50600f805460ff19169055565b600e805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156129065780601f106128db57610100808354040283529160200191612906565b820191906000526020600020905b8154815290600101906020018083116128e957829003601f168201915b505050505081565b600854610100900460ff1681565b6000601d5460001480612931575081601d5411155b1561293e575060006114c7565b601c828154811061294b57fe5b6000918252602090912001546001600160a01b031692915050565b61296e612c28565b61297757600080fd5b6019546129868260168361429f565b601981905581101561199957604080516001600160a01b038416815290517f218673669018c25b89bfbf1b58d0075e37c8847ef16e707b92355b7833e97d619181900360200190a16119998260006001611628565b6003546000906001600160a01b0383811691161480612a025750600854606460ff90911610155b15612a0f575060016114c7565b600854610100900460ff1615612b345760048054604080516363e6ffdd60e01b81526001600160a01b03868116948201949094529051600093909216916363e6ffdd91602480820192602092909190829003018186803b158015612a7257600080fd5b505afa158015612a86573d6000803e3d6000fd5b505050506040513d6020811015612a9c57600080fd5b505160085460408051633fda978d60e11b815261010090920460ff16600483015230602483015260026044830152519192506001600160a01b03831691637fb52f1a91606480820192602092909190829003018186803b158015612aff57600080fd5b505afa158015612b13573d6000803e3d6000fd5b505050506040513d6020811015612b2957600080fd5b505191506114c79050565b5060006114c7565b6002546001600160a01b03163314612b5357600080fd5b6001600160a01b038116612b6657600080fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000612b92612c28565b905090565b600d8181548110612ba457fe5b600091825260209091200154905081565b600c8181548110612bc257fe5b600091825260209182902001805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152935090918301828280156129065780601f106128db57610100808354040283529160200191612906565b6000612b92336129db565b6000612c3e33612194565b1515600114612c4c57600080fd5b6001600160a01b0384166000908152601e6020526040902054601c80546000199092019186919083908110612c7d57fe5b6000918252602080832090910180546001600160a01b0319169055601d80546000190181556001600160a01b0389168352601e909152604082209190915554821015612d73576000601c601d5481548110612cd457fe5b600091825260209091200154601c80546001600160a01b039092169250829185908110612cfd57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550601c601d5481548110612d3a57fe5b6000918252602080832090910180546001600160a01b03191690556001600160a01b03929092168152601e909152604090206001830190555b6000816001600160a01b03166327c1c21d6040518163ffffffff1660e01b815260040160206040518083038186803b158015612dae57600080fd5b505afa158015612dc2573d6000803e3d6000fd5b505050506040513d6020811015612dd857600080fd5b505190506000811315612f3a57600060018715151415612dfa57506000612dff565b506000195b826001600160a01b0316638280dd8f826040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b158015612e4557600080fd5b505af1158015612e59573d6000803e3d6000fd5b505050506040513d6020811015612e6f57600080fd5b5050604080516001600160a01b038a168152881515602082810191909152606092820183815289519383019390935288517f70234ce475fee4ab40e5e55cf533f67f12b47ef4c860e62dd7affa84ead4b442938c938c938c93919291608084019185019080838360005b83811015612ef1578181015183820152602001612ed9565b50505050905090810190601f168015612f1e5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a16001945050505050612353565b5060009695505050505050565b612f4f612c28565b612f5857600080fd5b6000819050806001600160a01b03166341c0e1b56040518163ffffffff1660e01b8152600401600060405180830381600087803b158015612f9857600080fd5b505af1158015612fac573d6000803e3d6000fd5b5050600454604080516001600160a01b038088168252909216602083015280517f36500cee87b0da1746889a3483dccb525acfc40b8c0f2218e164c6cdf1482a3e945091829003019150a15050565b601c818154811061214857fe5b6003546001600160a01b031681565b6017818154811061214857fe5b6003546000906001600160a01b038381169116148061304b5750600854600a60ff90911610155b15613058575060016114c7565b600854610100900460ff1615612b345760048054604080516363e6ffdd60e01b81526001600160a01b03868116948201949094529051600093909216916363e6ffdd91602480820192602092909190829003018186803b1580156130bb57600080fd5b505afa1580156130cf573d6000803e3d6000fd5b505050506040513d60208110156130e557600080fd5b505160085460408051633fda978d60e11b815261010090920460ff16600483015230602483015260016044830152519192506001600160a01b03831691637fb52f1a91606480820192602092909190829003018186803b158015612aff57600080fd5b600a81565b613155612b88565b61315e57600080fd5b600f5460ff161561316e57600080fd5b608081511061317c57600080fd5b805161318f90600e9060208401906144e8565b50600f805460ff191660011790556004547fb3ac059d88af6016aca1aebb7b3e796f2e7420435c59c563687814e9b85daa75906001600160a01b03166131d36113c5565b604080516001600160a01b038085168252831660208201526060918101828152600e805460026000196101006001841615020190911604938301849052926080830190849080156132655780601f1061323a57610100808354040283529160200191613265565b820191906000526020600020905b81548152906001019060200180831161324857829003601f168201915b505094505050505060405180910390a150565b6012818154811061214857fe5b6003546000906001600160a01b03838116911614806114c45750506003546001600160a01b03163314919050565b600080805b60135481101561330157836001600160a01b0316601282815481106132d957fe5b6000918252602090912001546001600160a01b031614156132f957600191505b6001016132b8565b5092915050565b613310612c28565b61331957600080fd5b6008805460ff191660ff8381169190911791829055600454604080516001600160a01b039092168083526020830152929091168183015290517f369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500916060908290030190a150565b606060208251116134355781518083015160008181526005602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845293949390918301828280156134275780601f106133fc57610100808354040283529160200191613427565b820191906000526020600020905b81548152906001019060200180831161340a57829003601f168201915b5050505050925050506114c7565b6006826040518082805190602001908083835b602083106134675780518252601f199092019160209182019101613448565b518151600019602094850361010090810a820192831692199390931691909117909252949092019687526040805197889003820188208054601f600260018316159098029095011695909504928301829004820288018201905281875292945092505083018282801561351b5780601f106134f05761010080835404028352916020019161351b565b820191906000526020600020905b8154815290600101906020018083116134fe57829003601f168201915b50505050509050919050565b6004546001600160a01b031681565b61353e612c28565b61354757600080fd5b604080516020808252600a8054600260001961010060018416150201909116049183018290527f403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b65939092918291820190849080156135e65780601f106135bb576101008083540402835291602001916135e6565b820191906000526020600020905b8154815290600101906020018083116135c957829003601f168201915b50509250505060405180910390a1565b60135481565b6003546001600160a01b0316331461361357600080fd5b601180546001600160a01b0319166001600160a01b0392909216919091179055565b6003546000906001600160a01b03163314806136545750613654612c28565b15613661575060016113d2565b50600090565b61366f612c28565b61367857600080fd5b601a546136878260178361429f565b601a81905581101561199957604080516001600160a01b038416815290517f1b88a571cc8ac2e87512f05648e79d184f5cc0cbb2889bc487c41f8b9a3202eb9181900360200190a161199982600180611628565b600a805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156129065780601f106128db57610100808354040283529160200191612906565b6000613740612b88565b61374957600080fd5b6000826040516020018082805190602001908083835b6020831061377e5780518252601f19909201916020918201910161375f565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012090506000600a604051602001808280546001816001161561010002031660029004801561381d5780601f106137fb57610100808354040283529182019161381d565b820191906000526020600020905b815481529060010190602001808311613809575b5050915050604051602081830303815290604052805190602001209050808214156139ed57600c546138725760408051602081019182905260009081905261386791600a916144e8565b506000600b55613911565b600080805b600c548110156138c65781600d828154811061388f57fe5b906000526020600020015411156138be57809250600d81815481106138b057fe5b906000526020600020015491505b600101613877565b50600c82815481106138d457fe5b90600052602060002001600a90805460018160011615610100020316600290046138ff929190614463565b50600b81905561390e82614367565b50505b7f238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51600460009054906101000a90046001600160a01b031685600060405180846001600160a01b03166001600160a01b0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b838110156139a657818101518382015260200161398e565b50505050905090810190601f1680156139d35780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a16000925050506114c7565b60001960005b600c54811015613ab4576000600c8281548110613a0c57fe5b906000526020600020016040516020018082805460018160011615610100020316600290048015613a745780601f10613a52576101008083540402835291820191613a74565b820191906000526020600020905b815481529060010190602001808311613a60575b505091505060405160208183030381529060405280519060200120905080851415613aab57613aa282614367565b81925050613ab4565b506001016139f3565b50806000191415613ac457600080fd5b7f238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51600460009054906101000a90046001600160a01b0316868360405180846001600160a01b03166001600160a01b0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015613b58578181015183820152602001613b40565b50505050905090810190601f168015613b855780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1949350505050565b613ba533612162565b613bae57600080fd5b6020825111613c06578151808301516000818152600560205260408120919291613bd791614556565b825115613bff5760008281526005602090815260409091208451613bfd928601906144e8565b505b5050613cee565b6006826040518082805190602001908083835b60208310613c385780518252601f199092019160209182019101613c19565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220613c71925090506000614556565b805115613cee57806006836040518082805190602001908083835b60208310613cab5780518252601f199092019160209182019101613c8c565b51815160209384036101000a60001901801990921691161790529201948552506040519384900381019093208451613cec95919491909101925090506144e8565b505b7fe2b310ec9dabdc05229a748e07666c3bc9c46c6ef465cce30d0aa3aa64a0644c826040518080602001828103825283818151815260200191508051906020019080838360005b83811015613d4d578181015183820152602001613d35565b50505050905090810190601f168015613d7a5780820380516001836020036101000a031916815260200191505b509250505060405180910390a15050565b601b5481565b6000613d9b612c28565b613da457600080fd5b601b54613db38360188361413f565b601b81905581111561186557604080516001600160a01b038516815290517fc5224c4118417a068eeac7d714e6d8af6f99ec3fb611bc965185460b0e38f0819181900360200190a1613e5d836017805480602002602001604051908101604052809291908181526020018280548015611840576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311611822575050505050614253565b611865576118658360016000611628565b606481565b6003546001600160a01b03163314613e8a57600080fd5b6001600160a01b038116613e9d57600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6003546000906001600160a01b03163314613ed957600080fd5b6013546000190160005b60135481101561404757836001600160a01b031660128281548110613f0457fe5b6000918252602090912001546001600160a01b0316141561403f5760128181548110613f2c57fe5b600091825260209091200180546001600160a01b0319169055808214613fd45760128281548110613f5957fe5b600091825260209091200154601280546001600160a01b039092169183908110613f7f57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060128281548110613fba57fe5b600091825260209091200180546001600160a01b03191690555b60138290556001600160a01b03841660008181526014602090815260409182902080546001600160a01b0319169055815192835290517fd41375b9d347dfe722f90a780731abd23b7855f9cf14ea7063c4cab5f9ae58e29281900390910190a16001925050506114c7565b600101613ee3565b5060009392505050565b6000805b82518110156140475760006001600160a01b031683828151811061407557fe5b60200260200101516001600160a01b03161461413757600083828151811061409957fe5b60200260200101519050806001600160a01b03166395a078e8866040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b1580156140f957600080fd5b505afa15801561410d573d6000803e3d6000fd5b505050506040513d602081101561412357600080fd5b50511561413557600192505050611904565b505b600101614055565b6000805b8281101561424a5783818154811061415757fe5b6000918252602090912001546001600160a01b03868116911614156142425783818154811061418257fe5b600091825260209091200180546001600160a01b031916905560001983018114614236578360018403815481106141b557fe5b9060005260206000200160009054906101000a90046001600160a01b03168482815481106141df57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555083600184038154811061421c57fe5b600091825260209091200180546001600160a01b03191690555b50506000198101612353565b600101614143565b50909392505050565b6000805b82518110156140475782818151811061426c57fe5b60200260200101516001600160a01b0316846001600160a01b03161415614297576001915050611904565b600101614257565b6000805b828110156142e7578381815481106142b757fe5b6000918252602090912001546001600160a01b03868116911614156142df5782915050612353565b6001016142a3565b50825482101561433157838383815481106142fe57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555061435d565b82546001810184556000848152602090200180546001600160a01b0319166001600160a01b0386161790555b5060010192915050565b600c818154811061437457fe5b90600052602060002001600061438a9190614556565b600d818154811061439757fe5b6000918252602082200155600c5460001901811461443957600c805460001981019081106143c157fe5b90600052602060002001600c82815481106143d857fe5b906000526020600020019080546001816001161561010002031660029004614401929190614463565b50600d8054600019810190811061441457fe5b9060005260206000200154600d828154811061442c57fe5b6000918252602090912001555b600c80549061444c90600019830161459a565b50600d8054906119999060001983016145c3565b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061449c57805485556144d8565b828001600101855582156144d857600052602060002091601f016020900482015b828111156144d85782548255916001019190600101906144bd565b506144e49291506145e3565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061452957805160ff19168380011785556144d8565b828001600101855582156144d8579182015b828111156144d857825182559160200191906001019061453b565b50805460018160011615610100020316600290046000825580601f1061457c5750614460565b601f01602090049060005260206000209081019061446091906145e3565b8154818355818111156145be576000838152602090206145be9181019083016145fd565b505050565b8154818355818111156145be576000838152602090206145be9181019083015b6113d291905b808211156144e457600081556001016145e9565b6113d291905b808211156144e45760006146178282614556565b5060010161460356fea265627a7a72315820d9b7d2bcf91bf6a9d26d1e9619788048a98ceff310a4b70cd1548708035698b964736f6c63430005110032a265627a7a72315820b0eeecd63a4a62e61bccc92667fe15877c3b2d4b8a3682d72d070a7c8acc35db64736f6c63430005110032"

// DeployBaseLibraryFactory deploys a new Ethereum contract, binding an instance of BaseLibraryFactory to it.
func DeployBaseLibraryFactory(auth *bind.TransactOpts, backend bind.ContractBackend, _spaceAddr common.Address) (common.Address, *types.Transaction, *BaseLibraryFactory, error) {
	parsed, err := abi.JSON(strings.NewReader(BaseLibraryFactoryABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(BaseLibraryFactoryBin), backend, _spaceAddr)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &BaseLibraryFactory{BaseLibraryFactoryCaller: BaseLibraryFactoryCaller{contract: contract}, BaseLibraryFactoryTransactor: BaseLibraryFactoryTransactor{contract: contract}, BaseLibraryFactoryFilterer: BaseLibraryFactoryFilterer{contract: contract}}, nil
}

// BaseLibraryFactory is an auto generated Go binding around an Ethereum contract.
type BaseLibraryFactory struct {
	BaseLibraryFactoryCaller     // Read-only binding to the contract
	BaseLibraryFactoryTransactor // Write-only binding to the contract
	BaseLibraryFactoryFilterer   // Log filterer for contract events
}

// BaseLibraryFactoryCaller is an auto generated read-only Go binding around an Ethereum contract.
type BaseLibraryFactoryCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseLibraryFactoryTransactor is an auto generated write-only Go binding around an Ethereum contract.
type BaseLibraryFactoryTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseLibraryFactoryFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type BaseLibraryFactoryFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseLibraryFactorySession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type BaseLibraryFactorySession struct {
	Contract     *BaseLibraryFactory // Generic contract binding to set the session for
	CallOpts     bind.CallOpts       // Call options to use throughout this session
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// BaseLibraryFactoryCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type BaseLibraryFactoryCallerSession struct {
	Contract *BaseLibraryFactoryCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts             // Call options to use throughout this session
}

// BaseLibraryFactoryTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type BaseLibraryFactoryTransactorSession struct {
	Contract     *BaseLibraryFactoryTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts             // Transaction auth options to use throughout this session
}

// BaseLibraryFactoryRaw is an auto generated low-level Go binding around an Ethereum contract.
type BaseLibraryFactoryRaw struct {
	Contract *BaseLibraryFactory // Generic contract binding to access the raw methods on
}

// BaseLibraryFactoryCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type BaseLibraryFactoryCallerRaw struct {
	Contract *BaseLibraryFactoryCaller // Generic read-only contract binding to access the raw methods on
}

// BaseLibraryFactoryTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type BaseLibraryFactoryTransactorRaw struct {
	Contract *BaseLibraryFactoryTransactor // Generic write-only contract binding to access the raw methods on
}

// NewBaseLibraryFactory creates a new instance of BaseLibraryFactory, bound to a specific deployed contract.
func NewBaseLibraryFactory(address common.Address, backend bind.ContractBackend) (*BaseLibraryFactory, error) {
	contract, err := bindBaseLibraryFactory(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &BaseLibraryFactory{BaseLibraryFactoryCaller: BaseLibraryFactoryCaller{contract: contract}, BaseLibraryFactoryTransactor: BaseLibraryFactoryTransactor{contract: contract}, BaseLibraryFactoryFilterer: BaseLibraryFactoryFilterer{contract: contract}}, nil
}

// NewBaseLibraryFactoryCaller creates a new read-only instance of BaseLibraryFactory, bound to a specific deployed contract.
func NewBaseLibraryFactoryCaller(address common.Address, caller bind.ContractCaller) (*BaseLibraryFactoryCaller, error) {
	contract, err := bindBaseLibraryFactory(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &BaseLibraryFactoryCaller{contract: contract}, nil
}

// NewBaseLibraryFactoryTransactor creates a new write-only instance of BaseLibraryFactory, bound to a specific deployed contract.
func NewBaseLibraryFactoryTransactor(address common.Address, transactor bind.ContractTransactor) (*BaseLibraryFactoryTransactor, error) {
	contract, err := bindBaseLibraryFactory(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &BaseLibraryFactoryTransactor{contract: contract}, nil
}

// NewBaseLibraryFactoryFilterer creates a new log filterer instance of BaseLibraryFactory, bound to a specific deployed contract.
func NewBaseLibraryFactoryFilterer(address common.Address, filterer bind.ContractFilterer) (*BaseLibraryFactoryFilterer, error) {
	contract, err := bindBaseLibraryFactory(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &BaseLibraryFactoryFilterer{contract: contract}, nil
}

// bindBaseLibraryFactory binds a generic wrapper to an already deployed contract.
func bindBaseLibraryFactory(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(BaseLibraryFactoryABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BaseLibraryFactory *BaseLibraryFactoryRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BaseLibraryFactory.Contract.BaseLibraryFactoryCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BaseLibraryFactory *BaseLibraryFactoryRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseLibraryFactory.Contract.BaseLibraryFactoryTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BaseLibraryFactory *BaseLibraryFactoryRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BaseLibraryFactory.Contract.BaseLibraryFactoryTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BaseLibraryFactory *BaseLibraryFactoryCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BaseLibraryFactory.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BaseLibraryFactory *BaseLibraryFactoryTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseLibraryFactory.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BaseLibraryFactory *BaseLibraryFactoryTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BaseLibraryFactory.Contract.contract.Transact(opts, method, params...)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseLibraryFactory *BaseLibraryFactoryCaller) ContentSpace(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseLibraryFactory.contract.Call(opts, out, "contentSpace")
	return *ret0, err
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseLibraryFactory *BaseLibraryFactorySession) ContentSpace() (common.Address, error) {
	return _BaseLibraryFactory.Contract.ContentSpace(&_BaseLibraryFactory.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseLibraryFactory *BaseLibraryFactoryCallerSession) ContentSpace() (common.Address, error) {
	return _BaseLibraryFactory.Contract.ContentSpace(&_BaseLibraryFactory.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseLibraryFactory *BaseLibraryFactoryCaller) Creator(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseLibraryFactory.contract.Call(opts, out, "creator")
	return *ret0, err
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseLibraryFactory *BaseLibraryFactorySession) Creator() (common.Address, error) {
	return _BaseLibraryFactory.Contract.Creator(&_BaseLibraryFactory.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseLibraryFactory *BaseLibraryFactoryCallerSession) Creator() (common.Address, error) {
	return _BaseLibraryFactory.Contract.Creator(&_BaseLibraryFactory.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseLibraryFactory *BaseLibraryFactoryCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseLibraryFactory.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseLibraryFactory *BaseLibraryFactorySession) Owner() (common.Address, error) {
	return _BaseLibraryFactory.Contract.Owner(&_BaseLibraryFactory.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseLibraryFactory *BaseLibraryFactoryCallerSession) Owner() (common.Address, error) {
	return _BaseLibraryFactory.Contract.Owner(&_BaseLibraryFactory.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseLibraryFactory *BaseLibraryFactoryCaller) Version(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _BaseLibraryFactory.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseLibraryFactory *BaseLibraryFactorySession) Version() ([32]byte, error) {
	return _BaseLibraryFactory.Contract.Version(&_BaseLibraryFactory.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseLibraryFactory *BaseLibraryFactoryCallerSession) Version() ([32]byte, error) {
	return _BaseLibraryFactory.Contract.Version(&_BaseLibraryFactory.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseLibraryFactory *BaseLibraryFactoryCaller) VersionAPI(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _BaseLibraryFactory.contract.Call(opts, out, "versionAPI")
	return *ret0, err
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseLibraryFactory *BaseLibraryFactorySession) VersionAPI() ([32]byte, error) {
	return _BaseLibraryFactory.Contract.VersionAPI(&_BaseLibraryFactory.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseLibraryFactory *BaseLibraryFactoryCallerSession) VersionAPI() ([32]byte, error) {
	return _BaseLibraryFactory.Contract.VersionAPI(&_BaseLibraryFactory.CallOpts)
}

// CreateLibrary is a paid mutator transaction binding the contract method 0x40b89f06.
//
// Solidity: function createLibrary(address address_KMS) returns(address)
func (_BaseLibraryFactory *BaseLibraryFactoryTransactor) CreateLibrary(opts *bind.TransactOpts, address_KMS common.Address) (*types.Transaction, error) {
	return _BaseLibraryFactory.contract.Transact(opts, "createLibrary", address_KMS)
}

// CreateLibrary is a paid mutator transaction binding the contract method 0x40b89f06.
//
// Solidity: function createLibrary(address address_KMS) returns(address)
func (_BaseLibraryFactory *BaseLibraryFactorySession) CreateLibrary(address_KMS common.Address) (*types.Transaction, error) {
	return _BaseLibraryFactory.Contract.CreateLibrary(&_BaseLibraryFactory.TransactOpts, address_KMS)
}

// CreateLibrary is a paid mutator transaction binding the contract method 0x40b89f06.
//
// Solidity: function createLibrary(address address_KMS) returns(address)
func (_BaseLibraryFactory *BaseLibraryFactoryTransactorSession) CreateLibrary(address_KMS common.Address) (*types.Transaction, error) {
	return _BaseLibraryFactory.Contract.CreateLibrary(&_BaseLibraryFactory.TransactOpts, address_KMS)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseLibraryFactory *BaseLibraryFactoryTransactor) Kill(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseLibraryFactory.contract.Transact(opts, "kill")
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseLibraryFactory *BaseLibraryFactorySession) Kill() (*types.Transaction, error) {
	return _BaseLibraryFactory.Contract.Kill(&_BaseLibraryFactory.TransactOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseLibraryFactory *BaseLibraryFactoryTransactorSession) Kill() (*types.Transaction, error) {
	return _BaseLibraryFactory.Contract.Kill(&_BaseLibraryFactory.TransactOpts)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseLibraryFactory *BaseLibraryFactoryTransactor) TransferCreatorship(opts *bind.TransactOpts, newCreator common.Address) (*types.Transaction, error) {
	return _BaseLibraryFactory.contract.Transact(opts, "transferCreatorship", newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseLibraryFactory *BaseLibraryFactorySession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _BaseLibraryFactory.Contract.TransferCreatorship(&_BaseLibraryFactory.TransactOpts, newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseLibraryFactory *BaseLibraryFactoryTransactorSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _BaseLibraryFactory.Contract.TransferCreatorship(&_BaseLibraryFactory.TransactOpts, newCreator)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseLibraryFactory *BaseLibraryFactoryTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _BaseLibraryFactory.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseLibraryFactory *BaseLibraryFactorySession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _BaseLibraryFactory.Contract.TransferOwnership(&_BaseLibraryFactory.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseLibraryFactory *BaseLibraryFactoryTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _BaseLibraryFactory.Contract.TransferOwnership(&_BaseLibraryFactory.TransactOpts, newOwner)
}

// BaseTenantSpaceABI is the input ABI used to generate the binding from.
const BaseTenantSpaceABI = "[{\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"_contentSpace\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_tenantName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_kmsAddr\",\"type\":\"address\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"contextHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestTimestamp\",\"type\":\"uint256\"}],\"name\":\"AccessRequestV3\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"groupId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"groupAddr\",\"type\":\"address\"}],\"name\":\"AddTenantGroup\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"ident\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"ord\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"prev\",\"type\":\"bool\"}],\"name\":\"BitSetAndGet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spaceAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"objectHash\",\"type\":\"string\"}],\"name\":\"CommitPending\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contentType\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contentContract\",\"type\":\"address\"}],\"name\":\"ContentTypeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contentType\",\"type\":\"address\"}],\"name\":\"ContentTypeRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"ident\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"slot\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"val\",\"type\":\"uint32\"}],\"name\":\"CounterIncremented\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"version\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"CreateTenant\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes4[]\",\"name\":\"func4Bytes\",\"type\":\"bytes4[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"funcAddr\",\"type\":\"address\"}],\"name\":\"FunctionsAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"GetAccessWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"ObjectMetaChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"groupId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"groupAddr\",\"type\":\"address\"}],\"name\":\"RemoveTenantGroup\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"prevManager\",\"type\":\"address\"}],\"name\":\"SetFactoryManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"prevManager\",\"type\":\"address\"}],\"name\":\"SetKmsManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"prevManager\",\"type\":\"address\"}],\"name\":\"SetNodeManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"prevManager\",\"type\":\"address\"}],\"name\":\"SetUserManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"objectHash\",\"type\":\"string\"}],\"name\":\"UpdateRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spaceAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"objectHash\",\"type\":\"string\"}],\"name\":\"VersionConfirm\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spaceAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"versionHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"index\",\"type\":\"int256\"}],\"name\":\"VersionDelete\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contentSpace\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"visibility\",\"type\":\"uint8\"}],\"name\":\"VisibilityChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"ident\",\"type\":\"bytes32\"}],\"name\":\"WordGroupDeleted\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"CAN_ACCESS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CAN_EDIT\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CAN_SEE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GROUP_ID_ADMIN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"addresspayable[]\",\"name\":\"\",\"type\":\"address[]\"}],\"name\":\"accessRequestV3\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"content_type\",\"type\":\"address\"},{\"internalType\":\"addresspayable\",\"name\":\"content_contract\",\"type\":\"address\"}],\"name\":\"addContentType\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes4[]\",\"name\":\"_func4Bytes\",\"type\":\"bytes4[]\"},{\"internalType\":\"address\",\"name\":\"_funcAddr\",\"type\":\"address\"}],\"name\":\"addFuncs\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"},{\"internalType\":\"addresspayable\",\"name\":\"_groupAddr\",\"type\":\"address\"}],\"name\":\"addGroup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"listKey\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"itemVal\",\"type\":\"string\"}],\"name\":\"addListItem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"addressKMS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_func4Bytes\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"_p1\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_p2\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_encAuthToken\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"_v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"callFuncUintAddr\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canCommit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canConfirm\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"canContribute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canEdit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"canNodePublish\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"canPublish\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"canReview\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_func4Bytes\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"_encAuthToken\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"_v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"checkCallFunc\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_kmsAddr\",\"type\":\"address\"}],\"name\":\"checkKMSAddr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"clearPending\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_objectHash\",\"type\":\"string\"}],\"name\":\"commit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"commitPending\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"confirmCommit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentSpace\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contentTypeContracts\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contentTypes\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentTypesLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"countVersionHashes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"addresspayable\",\"name\":\"_contentType\",\"type\":\"address\"}],\"name\":\"createContent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createContentType\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createGroup\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_kmsAddress\",\"type\":\"address\"}],\"name\":\"createLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"_userAddr\",\"type\":\"address\"}],\"name\":\"createUserWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"defLeewaySecs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"defTokenExpSecs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ident\",\"type\":\"bytes32\"}],\"name\":\"deleteGroup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_versionHash\",\"type\":\"string\"}],\"name\":\"deleteVersion\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"factoryManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"typeHash\",\"type\":\"bytes32\"}],\"name\":\"findTypeByHash\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"name\":\"funcMapping\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ident\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"_ord\",\"type\":\"uint8\"}],\"name\":\"getBit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ident\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"_ord\",\"type\":\"uint8\"}],\"name\":\"getCounter\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_kmsAddr\",\"type\":\"address\"}],\"name\":\"getKMSID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_kmsID\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_prefix\",\"type\":\"bytes\"}],\"name\":\"getKMSInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"getMeta\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTenantID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"groupIds\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"groupsMapping\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"hasAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"hasEditorRight\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ident\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"_ord\",\"type\":\"uint8\"}],\"name\":\"incrementCounter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"indexCategory\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"kmsManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"listKey\",\"type\":\"bytes32\"}],\"name\":\"listLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"listsMapping\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nodeManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"objectHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"objectTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"parentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"contentObj\",\"type\":\"address\"}],\"name\":\"publish\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"putMeta\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"content_type\",\"type\":\"address\"}],\"name\":\"removeContentType\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_groupAddr\",\"type\":\"address\"}],\"name\":\"removeGroup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"listKey\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"itemOrd\",\"type\":\"uint256\"}],\"name\":\"removeListOrd\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"requiresReview\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"address_KMS\",\"type\":\"address\"}],\"name\":\"setAddressKMS\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ident\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"_ord\",\"type\":\"uint8\"}],\"name\":\"setAndGetBit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ident\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"_ord\",\"type\":\"uint8\"}],\"name\":\"setAndGetBitInternal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_desc\",\"type\":\"string\"}],\"name\":\"setDescription\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factMan\",\"type\":\"address\"}],\"name\":\"setFactoryManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"group\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setGroupRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_kmsMan\",\"type\":\"address\"}],\"name\":\"setKmsManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nodeMan\",\"type\":\"address\"}],\"name\":\"setNodeManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"stakeholder\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userMan\",\"type\":\"address\"}],\"name\":\"setUserManager\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_visibility_code\",\"type\":\"uint8\"}],\"name\":\"setVisibility\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newCreator\",\"type\":\"address\"}],\"name\":\"transferCreatorship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"updateRequest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"userManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddr\",\"type\":\"address\"}],\"name\":\"userWallets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"content_type\",\"type\":\"address\"}],\"name\":\"validType\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"versionAPI\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"versionHashes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"versionTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"visibility\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"content_type\",\"type\":\"address\"}],\"name\":\"whitelistedType\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// BaseTenantSpaceFuncSigs maps the 4-byte function signature to its string representation.
var BaseTenantSpaceFuncSigs = map[string]string{
	"97ac4fd2": "CAN_ACCESS()",
	"ef1d7dc2": "CAN_EDIT()",
	"100508a2": "CAN_SEE()",
	"58d40b25": "GROUP_ID_ADMIN()",
	"1bf7a912": "accessRequestV3(bytes32[],address[])",
	"0f58a786": "addContentType(address,address)",
	"0a581edc": "addFuncs(bytes4[],address)",
	"65d8dd34": "addGroup(bytes32,address)",
	"74daf3a0": "addListItem(bytes32,string)",
	"32eaf21b": "addressKMS()",
	"9c075d67": "callFuncUintAddr(bytes4,uint256,address,bytes,uint8,bytes32,bytes32)",
	"6e375427": "canCommit()",
	"14cfabb3": "canConfirm()",
	"0eaec2c5": "canContribute(address)",
	"81beeb64": "canEdit()",
	"26683e14": "canNodePublish(address)",
	"9b55f901": "canPublish(address)",
	"29d00219": "canReview(address)",
	"ed1f6456": "checkCallFunc(bytes4,bytes,uint8,bytes32,bytes32)",
	"d6be0f49": "checkKMSAddr(address)",
	"5f6a1301": "clearPending()",
	"9867db74": "commit(string)",
	"375a6e7c": "commitPending()",
	"446e8826": "confirmCommit()",
	"af570c04": "contentSpace()",
	"1cdbee5a": "contentTypeContracts(address)",
	"991a3a7c": "contentTypes(uint256)",
	"c65bcbe2": "contentTypesLength()",
	"331b86c0": "countVersionHashes()",
	"bf4e088f": "createContent(address,address)",
	"b8cfaf05": "createContentType()",
	"575185ed": "createGroup()",
	"40b89f06": "createLibrary(address)",
	"e7cf0c66": "createUserWallet(address)",
	"02d05d3f": "creator()",
	"d21a8c94": "defLeewaySecs()",
	"f1df8140": "defTokenExpSecs()",
	"e57097c9": "deleteGroup(bytes32)",
	"e1a70717": "deleteVersion(string)",
	"7284e416": "description()",
	"032b5a73": "factoryManager()",
	"1f2caaec": "findTypeByHash(bytes32)",
	"c2a21f14": "funcMapping(bytes4)",
	"30f846a2": "getBit(bytes32,uint8)",
	"e1954b61": "getCounter(bytes32,uint8)",
	"589aafc1": "getKMSID(address)",
	"268bfac4": "getKMSInfo(string,bytes)",
	"ac55c906": "getMeta(bytes)",
	"401262c8": "getTenantID()",
	"4093d7a1": "groupIds(uint256)",
	"ea8a3ed8": "groupsMapping(bytes32,uint256)",
	"95a078e8": "hasAccess(address)",
	"67e5c3bf": "hasEditorRight(address)",
	"7558cbf0": "incrementCounter(bytes32,uint8)",
	"6380501f": "indexCategory()",
	"24d7806c": "isAdmin(address)",
	"41c0e1b5": "kill()",
	"ac65b649": "kmsManager()",
	"11a3fa38": "listLength(bytes32)",
	"4d368f10": "listsMapping(bytes32,uint256)",
	"06fdde03": "name()",
	"9bb5cd3f": "nodeManager()",
	"e02dd9c2": "objectHash()",
	"40b87a26": "objectTimestamp()",
	"8da5cb5b": "owner()",
	"00821de3": "parentAddress()",
	"628449fd": "pendingHash()",
	"2cf99422": "publish(address)",
	"e542b7cb": "putMeta(bytes,bytes)",
	"fd089196": "removeContentType(address)",
	"cb3899b3": "removeGroup(bytes32,address)",
	"1fa12f11": "removeListOrd(bytes32,uint256)",
	"3dd71d99": "requiresReview()",
	"c9e8e72d": "setAddressKMS(address)",
	"24d7c18d": "setAndGetBit(bytes32,uint8)",
	"33f12cf4": "setAndGetBitInternal(bytes32,uint8)",
	"90c3f38f": "setDescription(string)",
	"430e621e": "setFactoryManager(address)",
	"22e564eb": "setGroupRights(address,uint8,uint8)",
	"87e38281": "setKmsManager(address)",
	"1319e7e1": "setNodeManager(address)",
	"0fe1b5a2": "setRights(address,uint8,uint8)",
	"97d0b02c": "setUserManager(address)",
	"aa024e8b": "setVisibility(uint8)",
	"a9059cbb": "transfer(address,uint256)",
	"6d2e4b1b": "transferCreatorship(address)",
	"f2fde38b": "transferOwnership(address)",
	"c287e0ed": "updateRequest()",
	"5c8a7687": "userManager()",
	"63e6ffdd": "userWallets(address)",
	"29dedde5": "validType(address)",
	"54fd4d50": "version()",
	"5f4fcae1": "versionAPI()",
	"7ca8f618": "versionHashes(uint256)",
	"7886f747": "versionTimestamp(uint256)",
	"29adec14": "visibility()",
	"9cb121ba": "whitelistedType(address)",
}

// BaseTenantSpaceBin is the compiled bytecode used for deploying new contracts.
var BaseTenantSpaceBin = "0x608060408190527f4f776e61626c653230323030393238313130303030504f0000000000000000006000908155620332e360ec1b60019081557f41636365737369626c653230323030363236313231363030504f0000000000006008556009805460ff191690911761ff00191690557f4564697461626c653230323030393238313130303030504f0000000000000000600a557f436f6e7461696e657232303230303331363133353330304d4c000000000000006011556014557f4261736554656e616e7453706163653230323030353034313230303030504f00601655620151806019556078601a556200666438819003908190833981810160405260608110156200010b57600080fd5b8151602083018051604051929492938301929190846401000000008211156200013357600080fd5b9083019060208201858111156200014957600080fd5b82516401000000008111828201881017156200016457600080fd5b82525081516020918201929091019080838360005b838110156200019357818101518382015260200162000179565b50505050905090810190601f168015620001c15780820380516001836020036101000a031916815260200191505b50604052602090810151600280546001600160a01b031990811632179091556003805490911633179055845190935062000202925060179185019062000380565b506000839050806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200024257600080fd5b505afa15801562000257573d6000803e3d6000fd5b505050506040513d60208110156200026e57600080fd5b50516001600160a01b0316331480620002fd57506040805163d6be0f4960e01b815233600482015290516000916001600160a01b0384169163d6be0f4991602480820192602092909190829003018186803b158015620002cd57600080fd5b505afa158015620002e2573d6000803e3d6000fd5b505050506040513d6020811015620002f957600080fd5b5051115b6200030757600080fd5b600480546001600160a01b038087166001600160a01b031992831617909255601280548584169216919091179055601654600354604080519283529216602082015281517fc2fe67ac699789805c53a93eea70eb0e316deaf8db4b810382d2412ba4fcb4c8929181900390910190a15050505062000425565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003c357805160ff1916838001178555620003f3565b82800160010185558215620003f3579182015b82811115620003f3578251825591602001919060010190620003d6565b506200040192915062000405565b5090565b6200042291905b808211156200040157600081556001016200040c565b90565b61622f80620004356000396000f3fe60806040526004361061053d5760003560e01c806363e6ffdd116102bd578063aa024e8b11610180578063d6be0f49116100e7578063e7cf0c66116100a0578063ef1d7dc21161007a578063ef1d7dc214611be6578063f1df814014611bfb578063f2fde38b14611c10578063fd08919614611c435761053d565b8063e7cf0c6614611ab3578063ea8a3ed814611ae6578063ed1f645614611b165761053d565b8063d6be0f491461180e578063e02dd9c214611841578063e1954b6114611856578063e1a70717146118a2578063e542b7cb14611953578063e57097c914611a895761053d565b8063c287e0ed11610139578063c287e0ed1461172f578063c2a21f1414611744578063c65bcbe214611778578063c9e8e72d1461178d578063cb3899b3146117c0578063d21a8c94146117f95761053d565b8063aa024e8b146115d7578063ac55c90614611604578063ac65b649146116b5578063af570c04146116ca578063b8cfaf05146116df578063bf4e088f146116f45761053d565b80638da5cb5b11610224578063991a3a7c116101dd578063991a3a7c146114475780639b55f901146106dd5780639bb5cd3f146114715780639c075d67146114865780639cb121ba1461156b578063a9059cbb1461159e5761053d565b80638da5cb5b1461125557806390c3f38f1461126a57806395a078e81461131b57806397ac4fd21461134e57806397d0b02c146113635780639867db74146113965761053d565b806374daf3a01161027657806374daf3a0146110ce5780637558cbf0146111865780637886f747146111b95780637ca8f618146111e357806381beeb641461120d57806387e38281146112225761053d565b806363e6ffdd14610fd257806365d8dd341461100557806367e5c3bf1461103e5780636d2e4b1b146110715780636e375427146110a45780637284e416146110b95761053d565b80632cf9942211610405578063430e621e1161036c57806358d40b251161032557806358d40b2514610f545780635c8a768714610f695780635f4fcae114610f7e5780635f6a130114610f93578063628449fd14610fa85780636380501f14610fbd5761053d565b8063430e621e14610e8c578063446e882614610ebf5780634d368f1014610ec757806354fd4d5014610ef7578063575185ed14610f0c578063589aafc114610f215761053d565b80633dd71d99116103be5780633dd71d9914610ddb578063401262c814610df05780634093d7a114610e0557806340b87a2614610e2f57806340b89f0614610e4457806341c0e1b514610e775761053d565b80632cf9942214610d0357806330f846a214610d3657806332eaf21b14610d69578063331b86c014610d7e57806333f12cf414610d93578063375a6e7c14610dc65761053d565b80631bf7a912116104a957806324d7c18d1161046257806324d7c18d14610a7957806326683e1414610aac578063268bfac414610adf57806329adec1414610c8857806329d0021914610c9d57806329dedde514610cd05761053d565b80631bf7a912146108525780631cdbee5a146109755780631f2caaec146109a85780631fa12f11146109d257806322e564eb14610a0257806324d7806c14610a465761053d565b80630f58a786116104fb5780630f58a786146107245780630fe1b5a21461075f578063100508a2146107a357806311a3fa38146107ce5780631319e7e11461080a57806314cfabb31461083d5761053d565b8062821de31461053f57806302d05d3f14610570578063032b5a731461058557806306fdde031461059a5780630a581edc146106245780630eaec2c5146106dd575b005b34801561054b57600080fd5b50610554611c76565b604080516001600160a01b039092168252519081900360200190f35b34801561057c57600080fd5b50610554611c86565b34801561059157600080fd5b50610554611c95565b3480156105a657600080fd5b506105af611ca4565b6040805160208082528351818301528351919283929083019185019080838360005b838110156105e95781810151838201526020016105d1565b50505050905090810190601f1680156106165780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561063057600080fd5b5061053d6004803603604081101561064757600080fd5b810190602081018135600160201b81111561066157600080fd5b82018360208201111561067357600080fd5b803590602001918460208302840111600160201b8311171561069457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550505090356001600160a01b03169150611d329050565b3480156106e957600080fd5b506107106004803603602081101561070057600080fd5b50356001600160a01b0316611e3f565b604080519115158252519081900360200190f35b34801561073057600080fd5b5061053d6004803603604081101561074757600080fd5b506001600160a01b0381358116916020013516611e70565b34801561076b57600080fd5b5061053d6004803603606081101561078257600080fd5b506001600160a01b038135169060ff60208201358116916040013516611fcc565b3480156107af57600080fd5b506107b8612091565b6040805160ff9092168252519081900360200190f35b3480156107da57600080fd5b506107f8600480360360208110156107f157600080fd5b5035612096565b60408051918252519081900360200190f35b34801561081657600080fd5b5061053d6004803603602081101561082d57600080fd5b50356001600160a01b03166120a8565b34801561084957600080fd5b50610710612128565b6107106004803603604081101561086857600080fd5b810190602081018135600160201b81111561088257600080fd5b82018360208201111561089457600080fd5b803590602001918460208302840111600160201b831117156108b557600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561090457600080fd5b82018360208201111561091657600080fd5b803590602001918460208302840111600160201b8311171561093757600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550612232945050505050565b34801561098157600080fd5b506105546004803603602081101561099857600080fd5b50356001600160a01b03166122ce565b3480156109b457600080fd5b50610554600480360360208110156109cb57600080fd5b50356122e9565b3480156109de57600080fd5b5061053d600480360360408110156109f557600080fd5b508035906020013561250f565b348015610a0e57600080fd5b5061053d60048036036060811015610a2557600080fd5b506001600160a01b038135169060ff602082013581169160400135166125fe565b348015610a5257600080fd5b5061071060048036036020811015610a6957600080fd5b50356001600160a01b0316612a3e565b348015610a8557600080fd5b5061071060048036036040811015610a9c57600080fd5b508035906020013560ff16612c3e565b348015610ab857600080fd5b5061071060048036036020811015610acf57600080fd5b50356001600160a01b0316612c63565b348015610aeb57600080fd5b50610baa60048036036040811015610b0257600080fd5b810190602081018135600160201b811115610b1c57600080fd5b820183602082011115610b2e57600080fd5b803590602001918460018302840111600160201b83111715610b4f57600080fd5b919390929091602081019035600160201b811115610b6c57600080fd5b820183602082011115610b7e57600080fd5b803590602001918460018302840111600160201b83111715610b9f57600080fd5b509092509050612d77565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b83811015610beb578181015183820152602001610bd3565b50505050905090810190601f168015610c185780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015610c4b578181015183820152602001610c33565b50505050905090810190601f168015610c785780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b348015610c9457600080fd5b506107b8613216565b348015610ca957600080fd5b5061071060048036036020811015610cc057600080fd5b50356001600160a01b031661321f565b348015610cdc57600080fd5b5061071060048036036020811015610cf357600080fd5b50356001600160a01b0316613225565b348015610d0f57600080fd5b5061071060048036036020811015610d2657600080fd5b50356001600160a01b0316613243565b348015610d4257600080fd5b5061071060048036036040811015610d5957600080fd5b508035906020013560ff16613346565b348015610d7557600080fd5b506105546133b3565b348015610d8a57600080fd5b506107f86133c2565b348015610d9f57600080fd5b5061071060048036036040811015610db657600080fd5b508035906020013560ff166133c8565b348015610dd257600080fd5b506107106134e4565b348015610de757600080fd5b506107106134ed565b348015610dfc57600080fd5b506105af6134f2565b348015610e1157600080fd5b506107f860048036036020811015610e2857600080fd5b503561356a565b348015610e3b57600080fd5b506107f8613588565b348015610e5057600080fd5b5061055460048036036020811015610e6757600080fd5b50356001600160a01b031661358e565b348015610e8357600080fd5b5061053d61366c565b348015610e9857600080fd5b5061053d60048036036020811015610eaf57600080fd5b50356001600160a01b0316613691565b61071061370d565b348015610ed357600080fd5b506105af60048036036040811015610eea57600080fd5b5080359060200135613909565b348015610f0357600080fd5b506107f861398a565b348015610f1857600080fd5b50610554613990565b348015610f2d57600080fd5b506105af60048036036020811015610f4457600080fd5b50356001600160a01b0316613a60565b348015610f6057600080fd5b506107f8613cf6565b348015610f7557600080fd5b50610554613d09565b348015610f8a57600080fd5b506107f8613d18565b348015610f9f57600080fd5b5061053d613d1e565b348015610fb457600080fd5b506105af613d5a565b348015610fc957600080fd5b506107b8613db5565b348015610fde57600080fd5b5061055460048036036020811015610ff557600080fd5b50356001600160a01b0316613dc3565b34801561101157600080fd5b5061053d6004803603604081101561102857600080fd5b50803590602001356001600160a01b0316613e75565b34801561104a57600080fd5b506107106004803603602081101561106157600080fd5b50356001600160a01b0316613fe0565b34801561107d57600080fd5b5061053d6004803603602081101561109457600080fd5b50356001600160a01b0316614141565b3480156110b057600080fd5b5061071061418d565b3480156110c557600080fd5b506105af61419e565b3480156110da57600080fd5b5061053d600480360360408110156110f157600080fd5b81359190810190604081016020820135600160201b81111561111257600080fd5b82018360208201111561112457600080fd5b803590602001918460018302840111600160201b8311171561114557600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506141f9945050505050565b34801561119257600080fd5b5061053d600480360360408110156111a957600080fd5b508035906020013560ff1661423f565b3480156111c557600080fd5b506107f8600480360360208110156111dc57600080fd5b503561433c565b3480156111ef57600080fd5b506105af6004803603602081101561120657600080fd5b5035614349565b34801561121957600080fd5b506107106143bc565b34801561122e57600080fd5b5061053d6004803603602081101561124557600080fd5b50356001600160a01b03166143cc565b34801561126157600080fd5b50610554614448565b34801561127657600080fd5b5061053d6004803603602081101561128d57600080fd5b810190602081018135600160201b8111156112a757600080fd5b8201836020820111156112b957600080fd5b803590602001918460018302840111600160201b831117156112da57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550614457945050505050565b34801561132757600080fd5b506107106004803603602081101561133e57600080fd5b50356001600160a01b031661447c565b34801561135a57600080fd5b506107b86145a0565b34801561136f57600080fd5b5061053d6004803603602081101561138657600080fd5b50356001600160a01b03166145a5565b3480156113a257600080fd5b5061053d600480360360208110156113b957600080fd5b810190602081018135600160201b8111156113d357600080fd5b8201836020820111156113e557600080fd5b803590602001918460018302840111600160201b8311171561140657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550614621945050505050565b34801561145357600080fd5b506105546004803603602081101561146a57600080fd5b503561474c565b34801561147d57600080fd5b50610554614773565b34801561149257600080fd5b5061053d600480360360e08110156114a957600080fd5b6001600160e01b0319823516916020810135916001600160a01b036040830135169190810190608081016060820135600160201b8111156114e957600080fd5b8201836020820111156114fb57600080fd5b803590602001918460018302840111600160201b8311171561151c57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505060ff8335169350505060208101359060400135614782565b34801561157757600080fd5b506107106004803603602081101561158e57600080fd5b50356001600160a01b0316614930565b3480156115aa57600080fd5b5061053d600480360360408110156115c157600080fd5b506001600160a01b038135169060200135614985565b3480156115e357600080fd5b5061053d600480360360208110156115fa57600080fd5b503560ff166149d2565b34801561161057600080fd5b506105af6004803603602081101561162757600080fd5b810190602081018135600160201b81111561164157600080fd5b82018360208201111561165357600080fd5b803590602001918460018302840111600160201b8311171561167457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550614a4a945050505050565b3480156116c157600080fd5b50610554614bf1565b3480156116d657600080fd5b50610554614c00565b3480156116eb57600080fd5b50610554614c0f565b34801561170057600080fd5b506105546004803603604081101561171757600080fd5b506001600160a01b0381358116916020013516614cb7565b34801561173b57600080fd5b5061053d614de3565b34801561175057600080fd5b506105546004803603602081101561176757600080fd5b50356001600160e01b031916614ea3565b34801561178457600080fd5b506107f8614ebe565b34801561179957600080fd5b5061053d600480360360208110156117b057600080fd5b50356001600160a01b0316614ec4565b3480156117cc57600080fd5b5061053d600480360360408110156117e357600080fd5b50803590602001356001600160a01b0316614efd565b34801561180557600080fd5b506107f86150d0565b34801561181a57600080fd5b506107f86004803603602081101561183157600080fd5b50356001600160a01b03166150d6565b34801561184d57600080fd5b506105af615188565b34801561186257600080fd5b506118896004803603604081101561187957600080fd5b508035906020013560ff166151e3565b6040805163ffffffff9092168252519081900360200190f35b3480156118ae57600080fd5b506107f8600480360360208110156118c557600080fd5b810190602081018135600160201b8111156118df57600080fd5b8201836020820111156118f157600080fd5b803590602001918460018302840111600160201b8311171561191257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550615235945050505050565b34801561195f57600080fd5b5061053d6004803603604081101561197657600080fd5b810190602081018135600160201b81111561199057600080fd5b8201836020820111156119a257600080fd5b803590602001918460018302840111600160201b831117156119c357600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b811115611a1557600080fd5b820183602082011115611a2757600080fd5b803590602001918460018302840111600160201b83111715611a4857600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061569b945050505050565b348015611a9557600080fd5b5061053d60048036036020811015611aac57600080fd5b503561588a565b348015611abf57600080fd5b5061055460048036036020811015611ad657600080fd5b50356001600160a01b03166158ed565b348015611af257600080fd5b5061055460048036036040811015611b0957600080fd5b50803590602001356159a3565b348015611b2257600080fd5b50610710600480360360a0811015611b3957600080fd5b6001600160e01b03198235169190810190604081016020820135600160201b811115611b6457600080fd5b820183602082011115611b7657600080fd5b803590602001918460018302840111600160201b83111715611b9757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505060ff83351693505050602081013590604001356159d8565b348015611bf257600080fd5b506107b8615b35565b348015611c0757600080fd5b506107f8615b3a565b348015611c1c57600080fd5b5061053d60048036036020811015611c3357600080fd5b50356001600160a01b0316615b40565b348015611c4f57600080fd5b5061071060048036036020811015611c6657600080fd5b50356001600160a01b0316615b8c565b6004546001600160a01b03165b90565b6002546001600160a01b031681565b6021546001600160a01b031681565b6017805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015611d2a5780601f10611cff57610100808354040283529160200191611d2a565b820191906000526020600020905b815481529060010190602001808311611d0d57829003601f168201915b505050505081565b611d3b33612a3e565b611d4457600080fd5b60005b8251811015611dab5781601e6000858481518110611d6157fe5b6020908102919091018101516001600160e01b031916825281019190915260400160002080546001600160a01b0319166001600160a01b0392909216919091179055600101611d47565b507f2fd37118a7338c6d45366419ced87ba93589ba1cca2489e8fb42b55de887426682826040518080602001836001600160a01b03166001600160a01b03168152602001828103825284818151815260200191508051906020019060200280838360005b83811015611e27578181015183820152602001611e0f565b50505050905001935050505060405180910390a15050565b6003546000906001600160a01b0383811691161480611e6857506003546001600160a01b031633145b90505b919050565b6003546001600160a01b03163314611e8757600080fd5b6001600160a01b0382811660009081526015602052604090205416158015611eb55750611eb382614930565b155b15611f5f576013546014541015611f095781601360145481548110611ed657fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550611f55565b601380546001810182556000919091527f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a0900180546001600160a01b0319166001600160a01b0384161790555b6014805460010190555b6001600160a01b0382811660008181526015602090815260409182902080546001600160a01b0319169486169485179055815192835282019290925281517f280016f7418306a55542432120fd1a239ef9fcc1a92694d8d44ca76be0249ea7929181900390910190a15050565b611fd46143bc565b611fdd57600080fd5b60048054604080516363e6ffdd60e01b81526001600160a01b03878116948201949094529051929091169160009183916363e6ffdd91602480820192602092909190829003018186803b15801561203357600080fd5b505afa158015612047573d6000803e3d6000fd5b505050506040513d602081101561205d57600080fd5b505190506001600160a01b03811661207f5761207a8585856125fe565b61208a565b61208a8185856125fe565b5050505050565b600181565b6000908152601d602052604090205490565b6120b133612a3e565b6120ba57600080fd5b60208054604080516001600160a01b0380861682529092169282019290925281517f9b77357b839fea8829ce30918f67eb91de08caa0e5272af43a86af5334b56177929181900390910190a1602080546001600160a01b0319166001600160a01b0392909216919091179055565b6020546000906001600160a01b0316156121b557602080546040805163099a0f8560e21b815233600482015290516001600160a01b03909216926326683e1492602480840193829003018186803b15801561218257600080fd5b505afa158015612196573d6000803e3d6000fd5b505050506040513d60208110156121ac57600080fd5b50519050611c83565b600480546040805163099a0f8560e21b81523393810193909352516001600160a01b03909116916326683e14916024808301926020929190829003018186803b15801561220157600080fd5b505afa158015612215573d6000803e3d6000fd5b505050506040513d602081101561222b57600080fd5b5051905090565b600061223d3361447c565b61224657600080fd5b604080513060601b60208083019190915242603480840182905284518085039091018152605484018086528151919093012090915260006074830181905260948301523360b48301526103e80260d482015290517f545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c79181900360f40190a15060015b92915050565b6015602052600090815260409020546001600160a01b031681565b6000805b6013548110156125065760006013828154811061230657fe5b60009182526020808320909101546040805180840189905281518082038501815281830180845281519190950120637016ece160e11b90945290516001600160a01b0390921694509192849263e02dd9c29260448083019392829003018186803b15801561237357600080fd5b505afa158015612387573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156123b057600080fd5b8101908080516040519392919084600160201b8211156123cf57600080fd5b9083019060208201858111156123e457600080fd5b8251600160201b8111828201881017156123fd57600080fd5b82525081516020918201929091019080838360005b8381101561242a578181015183820152602001612412565b50505050905090810190601f1680156124575780820380516001836020036101000a031916815260200191505b506040525050506040516020018082805190602001908083835b602083106124905780518252601f199092019160209182019101612471565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012014156124fd57601382815481106124de57fe5b6000918252602090912001546001600160a01b03169250611e6b915050565b506001016122ed565b50600092915050565b61251833612a3e565b61252157600080fd5b6000828152601d602052604090205460001901808210156125a9576000838152601d6020526040902080548290811061255657fe5b90600052602060002001601d6000858152602001908152602001600020838154811061257e57fe5b9060005260206000200190805460018160011615610100020316600290046125a7929190616037565b505b6000838152601d602052604090208054829081106125c357fe5b9060005260206000200160006125d991906160bc565b6000838152601d602052604090208054906125f8906000198301616100565b50505050565b6000839050806001600160a01b031663091600e66040518163ffffffff1660e01b815260040160206040518083038186803b15801561263c57600080fd5b505afa158015612650573d6000803e3d6000fd5b505050506040513d602081101561266657600080fd5b5051600954610100900460ff908116911614156126f1576040805162f7bd4560e61b815230600482015260ff80861660248301528416604482015290516001600160a01b03831691633def514091606480830192600092919082900301818387803b1580156126d457600080fd5b505af11580156126e8573d6000803e3d6000fd5b505050506125f8565b806001600160a01b03166312915a306040518163ffffffff1660e01b815260040160206040518083038186803b15801561272a57600080fd5b505afa15801561273e573d6000803e3d6000fd5b505050506040513d602081101561275457600080fd5b5051600954610100900460ff908116911614156127c3576040805163f17bda9160e01b815230600482015260ff80861660248301528416604482015290516001600160a01b0383169163f17bda9191606480830192600092919082900301818387803b1580156126d457600080fd5b806001600160a01b03166316aed2326040518163ffffffff1660e01b815260040160206040518083038186803b1580156127fc57600080fd5b505afa158015612810573d6000803e3d6000fd5b505050506040513d602081101561282657600080fd5b5051600954610100900460ff908116911614156128955760408051633e5dbdf960e11b815230600482015260ff80861660248301528416604482015290516001600160a01b03831691637cbb7bf291606480830192600092919082900301818387803b1580156126d457600080fd5b806001600160a01b03166368a0469a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156128ce57600080fd5b505afa1580156128e2573d6000803e3d6000fd5b505050506040513d60208110156128f857600080fd5b5051600954610100900460ff908116911614156129675760408051638635adb560e01b815230600482015260ff80861660248301528416604482015290516001600160a01b03831691638635adb591606480830192600092919082900301818387803b1580156126d457600080fd5b806001600160a01b0316636373a4116040518163ffffffff1660e01b815260040160206040518083038186803b1580156129a057600080fd5b505afa1580156129b4573d6000803e3d6000fd5b505050506040513d60208110156129ca57600080fd5b5051600954610100900460ff90811691161415612a3957604080516301126e5d60e51b815230600482015260ff80861660248301528416604482015290516001600160a01b0383169163224dcba091606480830192600092919082900301818387803b1580156126d457600080fd5b600080fd5b6003546000906001600160a01b0383811691161415612a5f57506001611e6b565b6b3a32b730b73a2fb0b236b4b760a11b600052601b60209081527f0a58d5f3ee890e812ab4348db38dcfb4af382fa21d010a42202bfcfb1bf9ee178054604080518285028101850190915281815260609390929190830182828015612aed57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612acf575b50939450600093505050505b8151811015612c34576000828281518110612b1057fe5b6020908102919091018101516040805163d8961c8d60e01b81526001600160a01b0389811660048301526000602483015291519294509084169263d8961c8d92604480840193829003018186803b158015612b6a57600080fd5b505afa158015612b7e573d6000803e3d6000fd5b505050506040513d6020811015612b9457600080fd5b505180612c1a57506040805163d8961c8d60e01b81526001600160a01b0387811660048301526001602483015291519183169163d8961c8d91604480820192602092909190829003018186803b158015612bed57600080fd5b505afa158015612c01573d6000803e3d6000fd5b505050506040513d6020811015612c1757600080fd5b50515b15612c2b5760019350505050611e6b565b50600101612af9565b5060009392505050565b6000612c4933612a3e565b612c5257600080fd5b612c5c83836133c8565b9392505050565b6020546000906001600160a01b031615612cf457602080546040805163099a0f8560e21b81526001600160a01b038681166004830152915191909216926326683e149260248082019391829003018186803b158015612cc157600080fd5b505afa158015612cd5573d6000803e3d6000fd5b505050506040513d6020811015612ceb57600080fd5b50519050611e6b565b600480546040805163099a0f8560e21b81526001600160a01b0386811694820194909452905192909116916326683e1491602480820192602092909190829003018186803b158015612d4557600080fd5b505afa158015612d59573d6000803e3d6000fd5b505050506040513d6020811015612d6f57600080fd5b505192915050565b60225460609081906001600160a01b031615612fcf57602254604080516309a2feb160e21b815260048101918252604481018890526001600160a01b039092169163268bfac49189918991899189919081906024810190606401878780828437600083820152601f01601f191690910184810383528581526020019050858580828437600081840152601f19601f820116905080830192505050965050505050505060006040518083038186803b158015612e3157600080fd5b505afa158015612e45573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040908152811015612e6e57600080fd5b8101908080516040519392919084600160201b821115612e8d57600080fd5b908301906020820185811115612ea257600080fd5b8251600160201b811182820188101715612ebb57600080fd5b82525081516020918201929091019080838360005b83811015612ee8578181015183820152602001612ed0565b50505050905090810190601f168015612f155780820380516001836020036101000a031916815260200191505b5060405260200180516040519392919084600160201b821115612f3757600080fd5b908301906020820185811115612f4c57600080fd5b8251600160201b811182820188101715612f6557600080fd5b82525081516020918201929091019080838360005b83811015612f92578181015183820152602001612f7a565b50505050905090810190601f168015612fbf5780820380516001836020036101000a031916815260200191505b506040525050509150915061320d565b60048054604080516309a2feb160e21b8152928301908152604483018890526001600160a01b039091169163268bfac49189918991899189919081906024810190606401878780828437600083820152601f01601f191690910184810383528581526020019050858580828437600081840152601f19601f820116905080830192505050965050505050505060006040518083038186803b15801561307357600080fd5b505afa158015613087573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160409081528110156130b057600080fd5b8101908080516040519392919084600160201b8211156130cf57600080fd5b9083019060208201858111156130e457600080fd5b8251600160201b8111828201881017156130fd57600080fd5b82525081516020918201929091019080838360005b8381101561312a578181015183820152602001613112565b50505050905090810190601f1680156131575780820380516001836020036101000a031916815260200191505b5060405260200180516040519392919084600160201b82111561317957600080fd5b90830190602082018581111561318e57600080fd5b8251600160201b8111828201881017156131a757600080fd5b82525081516020918201929091019080838360005b838110156131d45781810151838201526020016131bc565b50505050905090810190601f1680156132015780820380516001836020036101000a031916815260200191505b50604052505050915091505b94509492505050565b60095460ff1681565b50600090565b60006014546000141561323a57506001611e6b565b611e6882614930565b6000336001600160a01b0383161461325a57600080fd5b6000829050806001600160a01b0316638280dd8f60006040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b1580156132a657600080fd5b505af11580156132ba573d6000803e3d6000fd5b505050506040513d60208110156132d057600080fd5b5050604080516327c1c21d60e01b815290516001600160a01b038316916327c1c21d916004808301926020929190829003018186803b15801561331257600080fd5b505afa158015613326573d6000803e3d6000fd5b505050506040513d602081101561333c57600080fd5b5051159392505050565b6000828152600760209081526040822060ff8481169290920490911690601f8416906001821b908190846008811061337a57fe5b600881049091015460046007909216919091026101000a90041663ffffffff16156133a65760016133a9565b60005b9695505050505050565b6012546001600160a01b031681565b600d5490565b60006133d333612a3e565b6133dc57600080fd5b6000838152600760209081526040822060ff8581169290920490911691601f8516916001831b91908290856008811061341157fe5b600881049091015460046007909216919091026101000a90041663ffffffff161561343d576001613440565b60005b9050806134975760008781526007602052604090208290856008811061346257fe5b60088104909101805463ffffffff60046007909416939093026101000a80820484169094178316840292909302199092161790555b6040805188815260ff881660208201528215158183015290517f4d04842102a74d85e502eec18f3048954c6d6e1d1c368c7bc49edcdcd45e9c3d9181900360600190a19695505050505050565b60105460ff1681565b600090565b6b3a32b730b73a2fb0b236b4b760a11b6000908152601b6020527f0a58d5f3ee890e812ab4348db38dcfb4af382fa21d010a42202bfcfb1bf9ee1780546060929190829061353c57fe5b6000918252602090912001546001600160a01b0316905061356461355e615d14565b82615d19565b91505090565b601c818154811061357757fe5b600091825260209091200154905081565b600c5481565b6021546000906001600160a01b031615613605576021546040805163205c4f8360e11b81526001600160a01b038581166004830152915191909216916340b89f069160248083019260209291908290030181600087803b1580156135f157600080fd5b505af1158015612cd5573d6000803e3d6000fd5b600480546040805163205c4f8360e11b81526001600160a01b0386811694820194909452905192909116916340b89f06916024808201926020929091908290030181600087803b15801561365857600080fd5b505af1158015612d59573d6000803e3d6000fd5b6003546001600160a01b0316331461368357600080fd5b6003546001600160a01b0316ff5b61369a33612a3e565b6136a357600080fd5b602154604080516001600160a01b038085168252909216602083015280517ffa2af382c197e27affb4e04f89f42556c71015346416b56be15b3aee3c87f6619281900390910190a1602180546001600160a01b0319166001600160a01b0392909216919091179055565b6000613717612128565b61372057600080fd5b60105460ff1661372f57600080fd5b600b5460026000196101006001841615020190911604156137da57600d80546001818101808455600093909352600b80546137a1937fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb50192600261010091831615919091026000190190911604616037565b5050600c54600e80546001810182556000919091527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd01555b600f80546137fd91600b9160026000196101006001841615020190911604616037565b5042600c5560408051602081019182905260009081905261382091600f91616124565b506010805460ff191690556004547fbdaffceabaaa783aa187fea6c2e815541d29e2290bf3f7d3c4fc53672b68f7df906001600160a01b0316613861611c76565b604080516001600160a01b038085168252831660208201526060918101828152600b805460026000196101006001841615020190911604938301849052926080830190849080156138f35780601f106138c8576101008083540402835291602001916138f3565b820191906000526020600020905b8154815290600101906020018083116138d657829003601f168201915b505094505050505060405180910390a150600190565b601d602052816000526040600020818154811061392257fe5b600091825260209182902001805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152945090925090830182828015611d2a5780601f10611cff57610100808354040283529160200191611d2a565b60165481565b6021546000906001600160a01b031615613a0857602160009054906101000a90046001600160a01b03166001600160a01b031663575185ed6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156139f457600080fd5b505af1158015612196573d6000803e3d6000fd5b600480546040805163575185ed60e01b815290516001600160a01b039092169263575185ed9282820192602092908290030181600087803b158015613a4c57600080fd5b505af1158015612215573d6000803e3d6000fd5b6022546060906001600160a01b031615613bb3576022546040805163589aafc160e01b81526001600160a01b0385811660048301529151919092169163589aafc1916024808301926000929190829003018186803b158015613ac157600080fd5b505afa158015613ad5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015613afe57600080fd5b8101908080516040519392919084600160201b821115613b1d57600080fd5b908301906020820185811115613b3257600080fd5b8251600160201b811182820188101715613b4b57600080fd5b82525081516020918201929091019080838360005b83811015613b78578181015183820152602001613b60565b50505050905090810190601f168015613ba55780820380516001836020036101000a031916815260200191505b506040525050509050611e6b565b600480546040805163589aafc160e01b81526001600160a01b03868116948201949094529051929091169163589aafc191602480820192600092909190829003018186803b158015613c0457600080fd5b505afa158015613c18573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015613c4157600080fd5b8101908080516040519392919084600160201b821115613c6057600080fd5b908301906020820185811115613c7557600080fd5b8251600160201b811182820188101715613c8e57600080fd5b82525081516020918201929091019080838360005b83811015613cbb578181015183820152602001613ca3565b50505050905090810190601f168015613ce85780820380516001836020036101000a031916815260200191505b506040525050509050919050565b6b3a32b730b73a2fb0b236b4b760a11b81565b601f546001600160a01b031681565b60015481565b613d2661418d565b613d2f57600080fd5b604080516020810191829052600090819052613d4d91600f91616124565b506010805460ff19169055565b600f805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015611d2a5780601f10611cff57610100808354040283529160200191611d2a565b600954610100900460ff1681565b601f546000906001600160a01b031615613e2457601f54604080516363e6ffdd60e01b81526001600160a01b038581166004830152915191909216916363e6ffdd916024808301926020929190829003018186803b158015612cc157600080fd5b60048054604080516363e6ffdd60e01b81526001600160a01b0386811694820194909452905192909116916363e6ffdd91602480820192602092909190829003018186803b158015612d4557600080fd5b613e7e33612a3e565b613e8757600080fd5b6001600160a01b038116613e9a57600080fd5b60005b6000838152601b6020526040902054811015613f1e576b3a32b730b73a2fb0b236b4b760a11b831415613ecf57600080fd5b6000838152601b6020526040902080546001600160a01b038416919083908110613ef557fe5b6000918252602090912001546001600160a01b03161415613f165750613fdc565b600101613e9d565b506000828152601b602090815260408220805460018082018084559285529290932090920180546001600160a01b0319166001600160a01b0385161790551415613f9857601c80546001810182556000919091527f0e4562a10381dec21b205ed72637e6b1b523bdd0e4d4d50af5cd23dd4500a211018290555b604080518381526001600160a01b038316602082015281517f145b7e243e91890686f5ba84dd1254f7497f549ffb955f4871b3d27d4137d471929181900390910190a15b5050565b6003546000906001600160a01b03838116911614806140075750600954606460ff90911610155b1561401457506001611e6b565b600954610100900460ff16156141395760048054604080516363e6ffdd60e01b81526001600160a01b03868116948201949094529051600093909216916363e6ffdd91602480820192602092909190829003018186803b15801561407757600080fd5b505afa15801561408b573d6000803e3d6000fd5b505050506040513d60208110156140a157600080fd5b505160095460408051633fda978d60e11b815261010090920460ff16600483015230602483015260026044830152519192506001600160a01b03831691637fb52f1a91606480820192602092909190829003018186803b15801561410457600080fd5b505afa158015614118573d6000803e3d6000fd5b505050506040513d602081101561412e57600080fd5b50519150611e6b9050565b506000611e6b565b6002546001600160a01b0316331461415857600080fd5b6001600160a01b03811661416b57600080fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b0316331490565b6018805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015611d2a5780601f10611cff57610100808354040283529160200191611d2a565b61420233612a3e565b61420b57600080fd5b6000828152601d60209081526040822080546001810180835591845292829020845191936125f89391019190850190616124565b61424833612a3e565b61425157600080fd5b60088160ff161061426157600080fd5b600082815260076020526040812060ff83166008811061427d57fe5b600891828204019190066004029054906101000a900463ffffffff169050600760008481526020019081526020016000206000018260ff16600881106142bf57fe5b600881049091018054600163ffffffff60046007909516949094026101000a80830485169190910184168102908402199091161790556040805185815260ff8516602082015291831682820152517f77a2025a71f0f345cfd7e8a699b42215025b6ab4706dcfaa29393790aa63383f9181900360600190a1505050565b600e818154811061357757fe5b600d818154811061435657fe5b600091825260209182902001805460408051601f6002600019610100600187161502019094169390930492830185900485028101850190915281815293509091830182828015611d2a5780601f10611cff57610100808354040283529160200191611d2a565b60006143c733613fe0565b905090565b6143d533612a3e565b6143de57600080fd5b602254604080516001600160a01b038085168252909216602083015280517f78cf028637abb89c0df6a78afd3d4403d03e5eb532390543d498bb346ee964779281900390910190a1602280546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031681565b61446033612a3e565b61446957600080fd5b8051613fdc906018906020840190616124565b6003546000906001600160a01b03838116911614806144a35750600954600a60ff90911610155b156144b057506001611e6b565b600954610100900460ff16156141395760048054604080516363e6ffdd60e01b81526001600160a01b03868116948201949094529051600093909216916363e6ffdd91602480820192602092909190829003018186803b15801561451357600080fd5b505afa158015614527573d6000803e3d6000fd5b505050506040513d602081101561453d57600080fd5b505160095460408051633fda978d60e11b815261010090920460ff16600483015230602483015260016044830152519192506001600160a01b03831691637fb52f1a91606480820192602092909190829003018186803b15801561410457600080fd5b600a81565b6145ae33612a3e565b6145b757600080fd5b601f54604080516001600160a01b038085168252909216602083015280517fc104e41939e1b09c10a83f97ac30b2d1f48605f4630aa8c64633501740ce02999281900390910190a1601f80546001600160a01b0319166001600160a01b0392909216919091179055565b61462961418d565b61463257600080fd5b60105460ff161561464257600080fd5b608081511061465057600080fd5b805161466390600f906020840190616124565b506010805460ff191660011790556004547fb3ac059d88af6016aca1aebb7b3e796f2e7420435c59c563687814e9b85daa75906001600160a01b03166146a7611c76565b604080516001600160a01b038085168252831660208201526060918101828152600f805460026000196101006001841615020190911604938301849052926080830190849080156147395780601f1061470e57610100808354040283529160200191614739565b820191906000526020600020905b81548152906001019060200180831161471c57829003601f168201915b505094505050505060405180910390a150565b6013818154811061475957fe5b6000918252602090912001546001600160a01b0316905081565b6020546001600160a01b031681565b61478f87858585856159d8565b61479857600080fd5b6001600160e01b031987166000908152601e60209081526040808320549051604481018a90526001600160a01b0389811660648301526060602483018181528a5160848501528a51929094169594909386938e938c938f938f939092839260a4909201918701908083838e5b8381101561481c578181015183820152602001614804565b50505050905090810190601f1680156148495780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990991698909817885251815191979096508695509350915081905083835b602083106148af5780518252601f199092019160209182019101614890565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d806000811461490f576040519150601f19603f3d011682016040523d82523d6000602084013e614914565b606091505b5090925090508161492457600080fd5b50505050505050505050565b600080805b60145481101561497e57836001600160a01b03166013828154811061495657fe5b6000918252602090912001546001600160a01b0316141561497657600191505b600101614935565b5092915050565b61498e33612a3e565b61499757600080fd5b6040516001600160a01b0383169082156108fc029083906000818181858888f193505050501580156149cd573d6000803e3d6000fd5b505050565b6149da6143bc565b6149e357600080fd5b6009805460ff191660ff8381169190911791829055600454604080516001600160a01b039092168083526020830152929091168183015290517f369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500916060908290030190a150565b60606020825111614aff5781518083015160008181526005602090815260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084529394939091830182828015614af15780601f10614ac657610100808354040283529160200191614af1565b820191906000526020600020905b815481529060010190602001808311614ad457829003601f168201915b505050505092505050611e6b565b6006826040518082805190602001908083835b60208310614b315780518252601f199092019160209182019101614b12565b518151600019602094850361010090810a820192831692199390931691909117909252949092019687526040805197889003820188208054601f6002600183161590980290950116959095049283018290048202880182019052818752929450925050830182828015614be55780601f10614bba57610100808354040283529160200191614be5565b820191906000526020600020905b815481529060010190602001808311614bc857829003601f168201915b50505050509050919050565b6022546001600160a01b031681565b6004546001600160a01b031681565b6021546000906001600160a01b031615614c7357602160009054906101000a90046001600160a01b03166001600160a01b031663b8cfaf056040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156139f457600080fd5b600480546040805163b8cfaf0560e01b815290516001600160a01b039092169263b8cfaf059282820192602092908290030181600087803b158015613a4c57600080fd5b6021546000906001600160a01b031615614d55576021546040805163bf4e088f60e01b81526001600160a01b03868116600483015285811660248301529151919092169163bf4e088f9160448083019260209291908290030181600087803b158015614d2257600080fd5b505af1158015614d36573d6000803e3d6000fd5b505050506040513d6020811015614d4c57600080fd5b505190506122c8565b600480546040805163bf4e088f60e01b81526001600160a01b038781169482019490945285841660248201529051929091169163bf4e088f916044808201926020929091908290030181600087803b158015614db057600080fd5b505af1158015614dc4573d6000803e3d6000fd5b505050506040513d6020811015614dda57600080fd5b50519392505050565b614deb6143bc565b614df457600080fd5b604080516020808252600b8054600260001961010060018416150201909116049183018290527f403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b6593909291829182019084908015614e935780601f10614e6857610100808354040283529160200191614e93565b820191906000526020600020905b815481529060010190602001808311614e7657829003601f168201915b50509250505060405180910390a1565b601e602052600090815260409020546001600160a01b031681565b60145481565b6003546001600160a01b03163314614edb57600080fd5b601280546001600160a01b0319166001600160a01b0392909216919091179055565b614f0633612a3e565b614f0f57600080fd5b6b3a32b730b73a2fb0b236b4b760a11b821415614f2b57600080fd5b60005b6000838152601b60205260409020548110156149cd576000838152601b6020526040902080546001600160a01b038416919083908110614f6a57fe5b6000918252602090912001546001600160a01b031614156150c8576000838152601b60205260409020546000198101821461501f576000848152601b6020526040902080546000198301908110614fbd57fe5b6000918252602080832090910154868352601b909152604090912080546001600160a01b039092169184908110614ff057fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b6000848152601b602052604090208054600019830190811061503d57fe5b6000918252602080832090910180546001600160a01b0319169055858252601b905260409020805460001901906150749082616192565b5061507e84615d8b565b604080518581526001600160a01b038516602082015281517fa4ba7d16ec48ae0b1af6cf3707ad062b11503d59527bca97e68886e7f6991456929181900390910190a15050613fdc565b600101614f2e565b601a5481565b6022546000906001600160a01b031615615137576022546040805163d6be0f4960e01b81526001600160a01b0385811660048301529151919092169163d6be0f49916024808301926020929190829003018186803b158015612cc157600080fd5b600480546040805163d6be0f4960e01b81526001600160a01b03868116948201949094529051929091169163d6be0f4991602480820192602092909190829003018186803b158015612d4557600080fd5b600b805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015611d2a5780601f10611cff57610100808354040283529160200191611d2a565b600060088260ff16106151f557600080fd5b600083815260076020526040902060ff83166008811061521157fe5b600891828204019190066004029054906101000a900463ffffffff16905092915050565b600061523f61418d565b61524857600080fd5b6000826040516020018082805190602001908083835b6020831061527d5780518252601f19909201916020918201910161525e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012090506000600b604051602001808280546001816001161561010002031660029004801561531c5780601f106152fa57610100808354040283529182019161531c565b820191906000526020600020905b815481529060010190602001808311615308575b5050915050604051602081830303815290604052805190602001209050808214156154ec57600d546153715760408051602081019182905260009081905261536691600b91616124565b506000600c55615410565b600080805b600d548110156153c55781600e828154811061538e57fe5b906000526020600020015411156153bd57809250600e81815481106153af57fe5b906000526020600020015491505b600101615376565b50600d82815481106153d357fe5b90600052602060002001600b90805460018160011615610100020316600290046153fe929190616037565b50600c81905561540d82615e4b565b50505b7f238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51600460009054906101000a90046001600160a01b031685600060405180846001600160a01b03166001600160a01b0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b838110156154a557818101518382015260200161548d565b50505050905090810190601f1680156154d25780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1600092505050611e6b565b60001960005b600d548110156155b3576000600d828154811061550b57fe5b9060005260206000200160405160200180828054600181600116156101000203166002900480156155735780601f10615551576101008083540402835291820191615573565b820191906000526020600020905b81548152906001019060200180831161555f575b5050915050604051602081830303815290604052805190602001209050808514156155aa576155a182615e4b565b819250506155b3565b506001016154f2565b508060001914156155c357600080fd5b7f238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51600460009054906101000a90046001600160a01b0316868360405180846001600160a01b03166001600160a01b0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561565757818101518382015260200161563f565b50505050905090810190601f1680156156845780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1949350505050565b6156a433612a3e565b6156ad57600080fd5b60208251116157055781518083015160008181526005602052604081209192916156d6916160bc565b8251156156fe57600082815260056020908152604090912084516156fc92860190616124565b505b50506157ed565b6006826040518082805190602001908083835b602083106157375780518252601f199092019160209182019101615718565b51815160209384036101000a600019018019909216911617905292019485525060405193849003019092206157709250905060006160bc565b8051156157ed57806006836040518082805190602001908083835b602083106157aa5780518252601f19909201916020918201910161578b565b51815160209384036101000a600019018019909216911617905292019485525060405193849003810190932084516157eb9591949190910192509050616124565b505b7fe2b310ec9dabdc05229a748e07666c3bc9c46c6ef465cce30d0aa3aa64a0644c826040518080602001828103825283818151815260200191508051906020019080838360005b8381101561584c578181015183820152602001615834565b50505050905090810190601f1680156158795780820380516001836020036101000a031916815260200191505b509250505060405180910390a15050565b61589333612a3e565b61589c57600080fd5b6000818152600760205260408120906158b582826161b6565b50506040805182815290517f87d0c300430cf9ba25931ff8bf37f633abe097e533463927bbfdc1e9ae1d0e9f9181900360200190a150565b601f546000906001600160a01b03161561595057601f54604080516373e7863360e11b81526001600160a01b0385811660048301529151919092169163e7cf0c669160248083019260209291908290030181600087803b1580156135f157600080fd5b60048054604080516373e7863360e11b81526001600160a01b03868116948201949094529051929091169163e7cf0c66916024808201926020929091908290030181600087803b15801561365857600080fd5b601b60205281600052604060002081815481106159bc57fe5b6000918252602090912001546001600160a01b03169150829050565b6001600160e01b031985166000908152601e60205260408120546001600160a01b031680615a0557600080fd5b60006001878051906020012087878760405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015615a6b573d6000803e3d6000fd5b505050602060405103519050615a8081612a3e565b615a8f57600092505050615b2c565b6000615ab6604051806040016040528060038152602001621a5a5960ea1b81525089615f44565b90506001600160a01b0381163014615ad45760009350505050615b2c565b6000615afb604051806040016040528060038152602001621a585d60ea1b8152508a615fd2565b90508015615b235760006103e88204601a544201039050601954811115615b2157600080fd5b505b60019450505050505b95945050505050565b606481565b60195481565b6003546001600160a01b03163314615b5757600080fd5b6001600160a01b038116615b6a57600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6003546000906001600160a01b03163314615ba657600080fd5b6014546000190160005b601454811015612c3457836001600160a01b031660138281548110615bd157fe5b6000918252602090912001546001600160a01b03161415615d0c5760138181548110615bf957fe5b600091825260209091200180546001600160a01b0319169055808214615ca15760138281548110615c2657fe5b600091825260209091200154601380546001600160a01b039092169183908110615c4c57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060138281548110615c8757fe5b600091825260209091200180546001600160a01b03191690555b60148290556001600160a01b03841660008181526015602090815260409182902080546001600160a01b0319169055815192835290517fd41375b9d347dfe722f90a780731abd23b7855f9cf14ea7063c4cab5f9ae58e29281900390910190a1600192505050611e6b565b600101615bb0565b600e90565b604080517f6d616b654944537472696e6728696e742c6164647265737329000000000000008152815190819003601901812080825260048201859052600882018490526060929091859160ff919081602881856000fa80615d7957600080fd5b50604080820190529695505050505050565b6000818152601b6020526040902054615e485760005b601c54811015613fdc5781601c8281548110615db957fe5b90600052602060002001541415615e4057601c54600019018114615e0e57601c80546000198101908110615de957fe5b9060005260206000200154601c8281548110615e0157fe5b6000918252602090912001555b601c80546000198101908110615e2057fe5b6000918252602082200155601c80546000190190615e3e9082616192565b505b600101615da1565b50565b600d8181548110615e5857fe5b906000526020600020016000615e6e91906160bc565b600e8181548110615e7b57fe5b6000918252602082200155600d54600019018114615f1d57600d80546000198101908110615ea557fe5b90600052602060002001600d8281548110615ebc57fe5b906000526020600020019080546001816001161561010002031660029004615ee5929190616037565b50600e80546000198101908110615ef857fe5b9060005260206000200154600e8281548110615f1057fe5b6000918252602090912001555b600d805490615f30906000198301616100565b50600e805490613fdc906000198301616192565b604080517f6765744164647265737328737472696e672c627974657329000000000000000081529051908190036018018120825181835260208501516004840181905260009360fe92906024820190865b83811015615fb2576020818a018101516024848401015201615f95565b506020818383886000fa808015612a395750505198975050505050505050565b604080517467657455696e7428737472696e672c62797465732960581b81529051908190036015018120825181835260208501516004840181905260009360fe929060248201908683811015615fb2576020818a018101516024848401015201615f95565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061607057805485556160ac565b828001600101855582156160ac57600052602060002091601f016020900482015b828111156160ac578254825591600101919060010190616091565b506160b89291506161bd565b5090565b50805460018160011615610100020316600290046000825580601f106160e25750615e48565b601f016020900490600052602060002090810190615e4891906161bd565b8154818355818111156149cd576000838152602090206149cd9181019083016161d7565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061616557805160ff19168380011785556160ac565b828001600101855582156160ac579182015b828111156160ac578251825591602001919060010190616177565b8154818355818111156149cd576000838152602090206149cd9181019083016161bd565b5060009055565b611c8391905b808211156160b857600081556001016161c3565b611c8391905b808211156160b85760006161f182826160bc565b506001016161dd56fea265627a7a72315820f96578ab07ca1fe62fadd663e81b16750cc7502392d4212aff6b47b8604b779c64736f6c63430005110032"

// DeployBaseTenantSpace deploys a new Ethereum contract, binding an instance of BaseTenantSpace to it.
func DeployBaseTenantSpace(auth *bind.TransactOpts, backend bind.ContractBackend, _contentSpace common.Address, _tenantName string, _kmsAddr common.Address) (common.Address, *types.Transaction, *BaseTenantSpace, error) {
	parsed, err := abi.JSON(strings.NewReader(BaseTenantSpaceABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(BaseTenantSpaceBin), backend, _contentSpace, _tenantName, _kmsAddr)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &BaseTenantSpace{BaseTenantSpaceCaller: BaseTenantSpaceCaller{contract: contract}, BaseTenantSpaceTransactor: BaseTenantSpaceTransactor{contract: contract}, BaseTenantSpaceFilterer: BaseTenantSpaceFilterer{contract: contract}}, nil
}

// BaseTenantSpace is an auto generated Go binding around an Ethereum contract.
type BaseTenantSpace struct {
	BaseTenantSpaceCaller     // Read-only binding to the contract
	BaseTenantSpaceTransactor // Write-only binding to the contract
	BaseTenantSpaceFilterer   // Log filterer for contract events
}

// BaseTenantSpaceCaller is an auto generated read-only Go binding around an Ethereum contract.
type BaseTenantSpaceCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseTenantSpaceTransactor is an auto generated write-only Go binding around an Ethereum contract.
type BaseTenantSpaceTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseTenantSpaceFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type BaseTenantSpaceFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseTenantSpaceSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type BaseTenantSpaceSession struct {
	Contract     *BaseTenantSpace  // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// BaseTenantSpaceCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type BaseTenantSpaceCallerSession struct {
	Contract *BaseTenantSpaceCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts          // Call options to use throughout this session
}

// BaseTenantSpaceTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type BaseTenantSpaceTransactorSession struct {
	Contract     *BaseTenantSpaceTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts          // Transaction auth options to use throughout this session
}

// BaseTenantSpaceRaw is an auto generated low-level Go binding around an Ethereum contract.
type BaseTenantSpaceRaw struct {
	Contract *BaseTenantSpace // Generic contract binding to access the raw methods on
}

// BaseTenantSpaceCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type BaseTenantSpaceCallerRaw struct {
	Contract *BaseTenantSpaceCaller // Generic read-only contract binding to access the raw methods on
}

// BaseTenantSpaceTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type BaseTenantSpaceTransactorRaw struct {
	Contract *BaseTenantSpaceTransactor // Generic write-only contract binding to access the raw methods on
}

// NewBaseTenantSpace creates a new instance of BaseTenantSpace, bound to a specific deployed contract.
func NewBaseTenantSpace(address common.Address, backend bind.ContractBackend) (*BaseTenantSpace, error) {
	contract, err := bindBaseTenantSpace(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &BaseTenantSpace{BaseTenantSpaceCaller: BaseTenantSpaceCaller{contract: contract}, BaseTenantSpaceTransactor: BaseTenantSpaceTransactor{contract: contract}, BaseTenantSpaceFilterer: BaseTenantSpaceFilterer{contract: contract}}, nil
}

// NewBaseTenantSpaceCaller creates a new read-only instance of BaseTenantSpace, bound to a specific deployed contract.
func NewBaseTenantSpaceCaller(address common.Address, caller bind.ContractCaller) (*BaseTenantSpaceCaller, error) {
	contract, err := bindBaseTenantSpace(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &BaseTenantSpaceCaller{contract: contract}, nil
}

// NewBaseTenantSpaceTransactor creates a new write-only instance of BaseTenantSpace, bound to a specific deployed contract.
func NewBaseTenantSpaceTransactor(address common.Address, transactor bind.ContractTransactor) (*BaseTenantSpaceTransactor, error) {
	contract, err := bindBaseTenantSpace(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &BaseTenantSpaceTransactor{contract: contract}, nil
}

// NewBaseTenantSpaceFilterer creates a new log filterer instance of BaseTenantSpace, bound to a specific deployed contract.
func NewBaseTenantSpaceFilterer(address common.Address, filterer bind.ContractFilterer) (*BaseTenantSpaceFilterer, error) {
	contract, err := bindBaseTenantSpace(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &BaseTenantSpaceFilterer{contract: contract}, nil
}

// bindBaseTenantSpace binds a generic wrapper to an already deployed contract.
func bindBaseTenantSpace(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(BaseTenantSpaceABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BaseTenantSpace *BaseTenantSpaceRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BaseTenantSpace.Contract.BaseTenantSpaceCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BaseTenantSpace *BaseTenantSpaceRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.BaseTenantSpaceTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BaseTenantSpace *BaseTenantSpaceRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.BaseTenantSpaceTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BaseTenantSpace *BaseTenantSpaceCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BaseTenantSpace.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BaseTenantSpace *BaseTenantSpaceTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BaseTenantSpace *BaseTenantSpaceTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.contract.Transact(opts, method, params...)
}

// CANACCESS is a free data retrieval call binding the contract method 0x97ac4fd2.
//
// Solidity: function CAN_ACCESS() constant returns(uint8)
func (_BaseTenantSpace *BaseTenantSpaceCaller) CANACCESS(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "CAN_ACCESS")
	return *ret0, err
}

// CANACCESS is a free data retrieval call binding the contract method 0x97ac4fd2.
//
// Solidity: function CAN_ACCESS() constant returns(uint8)
func (_BaseTenantSpace *BaseTenantSpaceSession) CANACCESS() (uint8, error) {
	return _BaseTenantSpace.Contract.CANACCESS(&_BaseTenantSpace.CallOpts)
}

// CANACCESS is a free data retrieval call binding the contract method 0x97ac4fd2.
//
// Solidity: function CAN_ACCESS() constant returns(uint8)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) CANACCESS() (uint8, error) {
	return _BaseTenantSpace.Contract.CANACCESS(&_BaseTenantSpace.CallOpts)
}

// CANEDIT is a free data retrieval call binding the contract method 0xef1d7dc2.
//
// Solidity: function CAN_EDIT() constant returns(uint8)
func (_BaseTenantSpace *BaseTenantSpaceCaller) CANEDIT(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "CAN_EDIT")
	return *ret0, err
}

// CANEDIT is a free data retrieval call binding the contract method 0xef1d7dc2.
//
// Solidity: function CAN_EDIT() constant returns(uint8)
func (_BaseTenantSpace *BaseTenantSpaceSession) CANEDIT() (uint8, error) {
	return _BaseTenantSpace.Contract.CANEDIT(&_BaseTenantSpace.CallOpts)
}

// CANEDIT is a free data retrieval call binding the contract method 0xef1d7dc2.
//
// Solidity: function CAN_EDIT() constant returns(uint8)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) CANEDIT() (uint8, error) {
	return _BaseTenantSpace.Contract.CANEDIT(&_BaseTenantSpace.CallOpts)
}

// CANSEE is a free data retrieval call binding the contract method 0x100508a2.
//
// Solidity: function CAN_SEE() constant returns(uint8)
func (_BaseTenantSpace *BaseTenantSpaceCaller) CANSEE(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "CAN_SEE")
	return *ret0, err
}

// CANSEE is a free data retrieval call binding the contract method 0x100508a2.
//
// Solidity: function CAN_SEE() constant returns(uint8)
func (_BaseTenantSpace *BaseTenantSpaceSession) CANSEE() (uint8, error) {
	return _BaseTenantSpace.Contract.CANSEE(&_BaseTenantSpace.CallOpts)
}

// CANSEE is a free data retrieval call binding the contract method 0x100508a2.
//
// Solidity: function CAN_SEE() constant returns(uint8)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) CANSEE() (uint8, error) {
	return _BaseTenantSpace.Contract.CANSEE(&_BaseTenantSpace.CallOpts)
}

// GROUPIDADMIN is a free data retrieval call binding the contract method 0x58d40b25.
//
// Solidity: function GROUP_ID_ADMIN() constant returns(bytes32)
func (_BaseTenantSpace *BaseTenantSpaceCaller) GROUPIDADMIN(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "GROUP_ID_ADMIN")
	return *ret0, err
}

// GROUPIDADMIN is a free data retrieval call binding the contract method 0x58d40b25.
//
// Solidity: function GROUP_ID_ADMIN() constant returns(bytes32)
func (_BaseTenantSpace *BaseTenantSpaceSession) GROUPIDADMIN() ([32]byte, error) {
	return _BaseTenantSpace.Contract.GROUPIDADMIN(&_BaseTenantSpace.CallOpts)
}

// GROUPIDADMIN is a free data retrieval call binding the contract method 0x58d40b25.
//
// Solidity: function GROUP_ID_ADMIN() constant returns(bytes32)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) GROUPIDADMIN() ([32]byte, error) {
	return _BaseTenantSpace.Contract.GROUPIDADMIN(&_BaseTenantSpace.CallOpts)
}

// AddressKMS is a free data retrieval call binding the contract method 0x32eaf21b.
//
// Solidity: function addressKMS() constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceCaller) AddressKMS(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "addressKMS")
	return *ret0, err
}

// AddressKMS is a free data retrieval call binding the contract method 0x32eaf21b.
//
// Solidity: function addressKMS() constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceSession) AddressKMS() (common.Address, error) {
	return _BaseTenantSpace.Contract.AddressKMS(&_BaseTenantSpace.CallOpts)
}

// AddressKMS is a free data retrieval call binding the contract method 0x32eaf21b.
//
// Solidity: function addressKMS() constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) AddressKMS() (common.Address, error) {
	return _BaseTenantSpace.Contract.AddressKMS(&_BaseTenantSpace.CallOpts)
}

// CanCommit is a free data retrieval call binding the contract method 0x6e375427.
//
// Solidity: function canCommit() constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceCaller) CanCommit(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "canCommit")
	return *ret0, err
}

// CanCommit is a free data retrieval call binding the contract method 0x6e375427.
//
// Solidity: function canCommit() constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceSession) CanCommit() (bool, error) {
	return _BaseTenantSpace.Contract.CanCommit(&_BaseTenantSpace.CallOpts)
}

// CanCommit is a free data retrieval call binding the contract method 0x6e375427.
//
// Solidity: function canCommit() constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) CanCommit() (bool, error) {
	return _BaseTenantSpace.Contract.CanCommit(&_BaseTenantSpace.CallOpts)
}

// CanConfirm is a free data retrieval call binding the contract method 0x14cfabb3.
//
// Solidity: function canConfirm() constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceCaller) CanConfirm(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "canConfirm")
	return *ret0, err
}

// CanConfirm is a free data retrieval call binding the contract method 0x14cfabb3.
//
// Solidity: function canConfirm() constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceSession) CanConfirm() (bool, error) {
	return _BaseTenantSpace.Contract.CanConfirm(&_BaseTenantSpace.CallOpts)
}

// CanConfirm is a free data retrieval call binding the contract method 0x14cfabb3.
//
// Solidity: function canConfirm() constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) CanConfirm() (bool, error) {
	return _BaseTenantSpace.Contract.CanConfirm(&_BaseTenantSpace.CallOpts)
}

// CanContribute is a free data retrieval call binding the contract method 0x0eaec2c5.
//
// Solidity: function canContribute(address _candidate) constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceCaller) CanContribute(opts *bind.CallOpts, _candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "canContribute", _candidate)
	return *ret0, err
}

// CanContribute is a free data retrieval call binding the contract method 0x0eaec2c5.
//
// Solidity: function canContribute(address _candidate) constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceSession) CanContribute(_candidate common.Address) (bool, error) {
	return _BaseTenantSpace.Contract.CanContribute(&_BaseTenantSpace.CallOpts, _candidate)
}

// CanContribute is a free data retrieval call binding the contract method 0x0eaec2c5.
//
// Solidity: function canContribute(address _candidate) constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) CanContribute(_candidate common.Address) (bool, error) {
	return _BaseTenantSpace.Contract.CanContribute(&_BaseTenantSpace.CallOpts, _candidate)
}

// CanEdit is a free data retrieval call binding the contract method 0x81beeb64.
//
// Solidity: function canEdit() constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceCaller) CanEdit(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "canEdit")
	return *ret0, err
}

// CanEdit is a free data retrieval call binding the contract method 0x81beeb64.
//
// Solidity: function canEdit() constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceSession) CanEdit() (bool, error) {
	return _BaseTenantSpace.Contract.CanEdit(&_BaseTenantSpace.CallOpts)
}

// CanEdit is a free data retrieval call binding the contract method 0x81beeb64.
//
// Solidity: function canEdit() constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) CanEdit() (bool, error) {
	return _BaseTenantSpace.Contract.CanEdit(&_BaseTenantSpace.CallOpts)
}

// CanNodePublish is a free data retrieval call binding the contract method 0x26683e14.
//
// Solidity: function canNodePublish(address _candidate) constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceCaller) CanNodePublish(opts *bind.CallOpts, _candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "canNodePublish", _candidate)
	return *ret0, err
}

// CanNodePublish is a free data retrieval call binding the contract method 0x26683e14.
//
// Solidity: function canNodePublish(address _candidate) constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceSession) CanNodePublish(_candidate common.Address) (bool, error) {
	return _BaseTenantSpace.Contract.CanNodePublish(&_BaseTenantSpace.CallOpts, _candidate)
}

// CanNodePublish is a free data retrieval call binding the contract method 0x26683e14.
//
// Solidity: function canNodePublish(address _candidate) constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) CanNodePublish(_candidate common.Address) (bool, error) {
	return _BaseTenantSpace.Contract.CanNodePublish(&_BaseTenantSpace.CallOpts, _candidate)
}

// CanPublish is a free data retrieval call binding the contract method 0x9b55f901.
//
// Solidity: function canPublish(address _candidate) constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceCaller) CanPublish(opts *bind.CallOpts, _candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "canPublish", _candidate)
	return *ret0, err
}

// CanPublish is a free data retrieval call binding the contract method 0x9b55f901.
//
// Solidity: function canPublish(address _candidate) constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceSession) CanPublish(_candidate common.Address) (bool, error) {
	return _BaseTenantSpace.Contract.CanPublish(&_BaseTenantSpace.CallOpts, _candidate)
}

// CanPublish is a free data retrieval call binding the contract method 0x9b55f901.
//
// Solidity: function canPublish(address _candidate) constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) CanPublish(_candidate common.Address) (bool, error) {
	return _BaseTenantSpace.Contract.CanPublish(&_BaseTenantSpace.CallOpts, _candidate)
}

// CanReview is a free data retrieval call binding the contract method 0x29d00219.
//
// Solidity: function canReview(address ) constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceCaller) CanReview(opts *bind.CallOpts, arg0 common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "canReview", arg0)
	return *ret0, err
}

// CanReview is a free data retrieval call binding the contract method 0x29d00219.
//
// Solidity: function canReview(address ) constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceSession) CanReview(arg0 common.Address) (bool, error) {
	return _BaseTenantSpace.Contract.CanReview(&_BaseTenantSpace.CallOpts, arg0)
}

// CanReview is a free data retrieval call binding the contract method 0x29d00219.
//
// Solidity: function canReview(address ) constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) CanReview(arg0 common.Address) (bool, error) {
	return _BaseTenantSpace.Contract.CanReview(&_BaseTenantSpace.CallOpts, arg0)
}

// CheckCallFunc is a free data retrieval call binding the contract method 0xed1f6456.
//
// Solidity: function checkCallFunc(bytes4 _func4Bytes, bytes _encAuthToken, uint8 _v, bytes32 _r, bytes32 _s) constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceCaller) CheckCallFunc(opts *bind.CallOpts, _func4Bytes [4]byte, _encAuthToken []byte, _v uint8, _r [32]byte, _s [32]byte) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "checkCallFunc", _func4Bytes, _encAuthToken, _v, _r, _s)
	return *ret0, err
}

// CheckCallFunc is a free data retrieval call binding the contract method 0xed1f6456.
//
// Solidity: function checkCallFunc(bytes4 _func4Bytes, bytes _encAuthToken, uint8 _v, bytes32 _r, bytes32 _s) constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceSession) CheckCallFunc(_func4Bytes [4]byte, _encAuthToken []byte, _v uint8, _r [32]byte, _s [32]byte) (bool, error) {
	return _BaseTenantSpace.Contract.CheckCallFunc(&_BaseTenantSpace.CallOpts, _func4Bytes, _encAuthToken, _v, _r, _s)
}

// CheckCallFunc is a free data retrieval call binding the contract method 0xed1f6456.
//
// Solidity: function checkCallFunc(bytes4 _func4Bytes, bytes _encAuthToken, uint8 _v, bytes32 _r, bytes32 _s) constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) CheckCallFunc(_func4Bytes [4]byte, _encAuthToken []byte, _v uint8, _r [32]byte, _s [32]byte) (bool, error) {
	return _BaseTenantSpace.Contract.CheckCallFunc(&_BaseTenantSpace.CallOpts, _func4Bytes, _encAuthToken, _v, _r, _s)
}

// CheckKMSAddr is a free data retrieval call binding the contract method 0xd6be0f49.
//
// Solidity: function checkKMSAddr(address _kmsAddr) constant returns(uint256)
func (_BaseTenantSpace *BaseTenantSpaceCaller) CheckKMSAddr(opts *bind.CallOpts, _kmsAddr common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "checkKMSAddr", _kmsAddr)
	return *ret0, err
}

// CheckKMSAddr is a free data retrieval call binding the contract method 0xd6be0f49.
//
// Solidity: function checkKMSAddr(address _kmsAddr) constant returns(uint256)
func (_BaseTenantSpace *BaseTenantSpaceSession) CheckKMSAddr(_kmsAddr common.Address) (*big.Int, error) {
	return _BaseTenantSpace.Contract.CheckKMSAddr(&_BaseTenantSpace.CallOpts, _kmsAddr)
}

// CheckKMSAddr is a free data retrieval call binding the contract method 0xd6be0f49.
//
// Solidity: function checkKMSAddr(address _kmsAddr) constant returns(uint256)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) CheckKMSAddr(_kmsAddr common.Address) (*big.Int, error) {
	return _BaseTenantSpace.Contract.CheckKMSAddr(&_BaseTenantSpace.CallOpts, _kmsAddr)
}

// CommitPending is a free data retrieval call binding the contract method 0x375a6e7c.
//
// Solidity: function commitPending() constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceCaller) CommitPending(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "commitPending")
	return *ret0, err
}

// CommitPending is a free data retrieval call binding the contract method 0x375a6e7c.
//
// Solidity: function commitPending() constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceSession) CommitPending() (bool, error) {
	return _BaseTenantSpace.Contract.CommitPending(&_BaseTenantSpace.CallOpts)
}

// CommitPending is a free data retrieval call binding the contract method 0x375a6e7c.
//
// Solidity: function commitPending() constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) CommitPending() (bool, error) {
	return _BaseTenantSpace.Contract.CommitPending(&_BaseTenantSpace.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceCaller) ContentSpace(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "contentSpace")
	return *ret0, err
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceSession) ContentSpace() (common.Address, error) {
	return _BaseTenantSpace.Contract.ContentSpace(&_BaseTenantSpace.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) ContentSpace() (common.Address, error) {
	return _BaseTenantSpace.Contract.ContentSpace(&_BaseTenantSpace.CallOpts)
}

// ContentTypeContracts is a free data retrieval call binding the contract method 0x1cdbee5a.
//
// Solidity: function contentTypeContracts(address ) constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceCaller) ContentTypeContracts(opts *bind.CallOpts, arg0 common.Address) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "contentTypeContracts", arg0)
	return *ret0, err
}

// ContentTypeContracts is a free data retrieval call binding the contract method 0x1cdbee5a.
//
// Solidity: function contentTypeContracts(address ) constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceSession) ContentTypeContracts(arg0 common.Address) (common.Address, error) {
	return _BaseTenantSpace.Contract.ContentTypeContracts(&_BaseTenantSpace.CallOpts, arg0)
}

// ContentTypeContracts is a free data retrieval call binding the contract method 0x1cdbee5a.
//
// Solidity: function contentTypeContracts(address ) constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) ContentTypeContracts(arg0 common.Address) (common.Address, error) {
	return _BaseTenantSpace.Contract.ContentTypeContracts(&_BaseTenantSpace.CallOpts, arg0)
}

// ContentTypes is a free data retrieval call binding the contract method 0x991a3a7c.
//
// Solidity: function contentTypes(uint256 ) constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceCaller) ContentTypes(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "contentTypes", arg0)
	return *ret0, err
}

// ContentTypes is a free data retrieval call binding the contract method 0x991a3a7c.
//
// Solidity: function contentTypes(uint256 ) constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceSession) ContentTypes(arg0 *big.Int) (common.Address, error) {
	return _BaseTenantSpace.Contract.ContentTypes(&_BaseTenantSpace.CallOpts, arg0)
}

// ContentTypes is a free data retrieval call binding the contract method 0x991a3a7c.
//
// Solidity: function contentTypes(uint256 ) constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) ContentTypes(arg0 *big.Int) (common.Address, error) {
	return _BaseTenantSpace.Contract.ContentTypes(&_BaseTenantSpace.CallOpts, arg0)
}

// ContentTypesLength is a free data retrieval call binding the contract method 0xc65bcbe2.
//
// Solidity: function contentTypesLength() constant returns(uint256)
func (_BaseTenantSpace *BaseTenantSpaceCaller) ContentTypesLength(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "contentTypesLength")
	return *ret0, err
}

// ContentTypesLength is a free data retrieval call binding the contract method 0xc65bcbe2.
//
// Solidity: function contentTypesLength() constant returns(uint256)
func (_BaseTenantSpace *BaseTenantSpaceSession) ContentTypesLength() (*big.Int, error) {
	return _BaseTenantSpace.Contract.ContentTypesLength(&_BaseTenantSpace.CallOpts)
}

// ContentTypesLength is a free data retrieval call binding the contract method 0xc65bcbe2.
//
// Solidity: function contentTypesLength() constant returns(uint256)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) ContentTypesLength() (*big.Int, error) {
	return _BaseTenantSpace.Contract.ContentTypesLength(&_BaseTenantSpace.CallOpts)
}

// CountVersionHashes is a free data retrieval call binding the contract method 0x331b86c0.
//
// Solidity: function countVersionHashes() constant returns(uint256)
func (_BaseTenantSpace *BaseTenantSpaceCaller) CountVersionHashes(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "countVersionHashes")
	return *ret0, err
}

// CountVersionHashes is a free data retrieval call binding the contract method 0x331b86c0.
//
// Solidity: function countVersionHashes() constant returns(uint256)
func (_BaseTenantSpace *BaseTenantSpaceSession) CountVersionHashes() (*big.Int, error) {
	return _BaseTenantSpace.Contract.CountVersionHashes(&_BaseTenantSpace.CallOpts)
}

// CountVersionHashes is a free data retrieval call binding the contract method 0x331b86c0.
//
// Solidity: function countVersionHashes() constant returns(uint256)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) CountVersionHashes() (*big.Int, error) {
	return _BaseTenantSpace.Contract.CountVersionHashes(&_BaseTenantSpace.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceCaller) Creator(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "creator")
	return *ret0, err
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceSession) Creator() (common.Address, error) {
	return _BaseTenantSpace.Contract.Creator(&_BaseTenantSpace.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) Creator() (common.Address, error) {
	return _BaseTenantSpace.Contract.Creator(&_BaseTenantSpace.CallOpts)
}

// DefLeewaySecs is a free data retrieval call binding the contract method 0xd21a8c94.
//
// Solidity: function defLeewaySecs() constant returns(uint256)
func (_BaseTenantSpace *BaseTenantSpaceCaller) DefLeewaySecs(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "defLeewaySecs")
	return *ret0, err
}

// DefLeewaySecs is a free data retrieval call binding the contract method 0xd21a8c94.
//
// Solidity: function defLeewaySecs() constant returns(uint256)
func (_BaseTenantSpace *BaseTenantSpaceSession) DefLeewaySecs() (*big.Int, error) {
	return _BaseTenantSpace.Contract.DefLeewaySecs(&_BaseTenantSpace.CallOpts)
}

// DefLeewaySecs is a free data retrieval call binding the contract method 0xd21a8c94.
//
// Solidity: function defLeewaySecs() constant returns(uint256)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) DefLeewaySecs() (*big.Int, error) {
	return _BaseTenantSpace.Contract.DefLeewaySecs(&_BaseTenantSpace.CallOpts)
}

// DefTokenExpSecs is a free data retrieval call binding the contract method 0xf1df8140.
//
// Solidity: function defTokenExpSecs() constant returns(uint256)
func (_BaseTenantSpace *BaseTenantSpaceCaller) DefTokenExpSecs(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "defTokenExpSecs")
	return *ret0, err
}

// DefTokenExpSecs is a free data retrieval call binding the contract method 0xf1df8140.
//
// Solidity: function defTokenExpSecs() constant returns(uint256)
func (_BaseTenantSpace *BaseTenantSpaceSession) DefTokenExpSecs() (*big.Int, error) {
	return _BaseTenantSpace.Contract.DefTokenExpSecs(&_BaseTenantSpace.CallOpts)
}

// DefTokenExpSecs is a free data retrieval call binding the contract method 0xf1df8140.
//
// Solidity: function defTokenExpSecs() constant returns(uint256)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) DefTokenExpSecs() (*big.Int, error) {
	return _BaseTenantSpace.Contract.DefTokenExpSecs(&_BaseTenantSpace.CallOpts)
}

// Description is a free data retrieval call binding the contract method 0x7284e416.
//
// Solidity: function description() constant returns(string)
func (_BaseTenantSpace *BaseTenantSpaceCaller) Description(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "description")
	return *ret0, err
}

// Description is a free data retrieval call binding the contract method 0x7284e416.
//
// Solidity: function description() constant returns(string)
func (_BaseTenantSpace *BaseTenantSpaceSession) Description() (string, error) {
	return _BaseTenantSpace.Contract.Description(&_BaseTenantSpace.CallOpts)
}

// Description is a free data retrieval call binding the contract method 0x7284e416.
//
// Solidity: function description() constant returns(string)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) Description() (string, error) {
	return _BaseTenantSpace.Contract.Description(&_BaseTenantSpace.CallOpts)
}

// FactoryManager is a free data retrieval call binding the contract method 0x032b5a73.
//
// Solidity: function factoryManager() constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceCaller) FactoryManager(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "factoryManager")
	return *ret0, err
}

// FactoryManager is a free data retrieval call binding the contract method 0x032b5a73.
//
// Solidity: function factoryManager() constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceSession) FactoryManager() (common.Address, error) {
	return _BaseTenantSpace.Contract.FactoryManager(&_BaseTenantSpace.CallOpts)
}

// FactoryManager is a free data retrieval call binding the contract method 0x032b5a73.
//
// Solidity: function factoryManager() constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) FactoryManager() (common.Address, error) {
	return _BaseTenantSpace.Contract.FactoryManager(&_BaseTenantSpace.CallOpts)
}

// FindTypeByHash is a free data retrieval call binding the contract method 0x1f2caaec.
//
// Solidity: function findTypeByHash(bytes32 typeHash) constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceCaller) FindTypeByHash(opts *bind.CallOpts, typeHash [32]byte) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "findTypeByHash", typeHash)
	return *ret0, err
}

// FindTypeByHash is a free data retrieval call binding the contract method 0x1f2caaec.
//
// Solidity: function findTypeByHash(bytes32 typeHash) constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceSession) FindTypeByHash(typeHash [32]byte) (common.Address, error) {
	return _BaseTenantSpace.Contract.FindTypeByHash(&_BaseTenantSpace.CallOpts, typeHash)
}

// FindTypeByHash is a free data retrieval call binding the contract method 0x1f2caaec.
//
// Solidity: function findTypeByHash(bytes32 typeHash) constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) FindTypeByHash(typeHash [32]byte) (common.Address, error) {
	return _BaseTenantSpace.Contract.FindTypeByHash(&_BaseTenantSpace.CallOpts, typeHash)
}

// FuncMapping is a free data retrieval call binding the contract method 0xc2a21f14.
//
// Solidity: function funcMapping(bytes4 ) constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceCaller) FuncMapping(opts *bind.CallOpts, arg0 [4]byte) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "funcMapping", arg0)
	return *ret0, err
}

// FuncMapping is a free data retrieval call binding the contract method 0xc2a21f14.
//
// Solidity: function funcMapping(bytes4 ) constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceSession) FuncMapping(arg0 [4]byte) (common.Address, error) {
	return _BaseTenantSpace.Contract.FuncMapping(&_BaseTenantSpace.CallOpts, arg0)
}

// FuncMapping is a free data retrieval call binding the contract method 0xc2a21f14.
//
// Solidity: function funcMapping(bytes4 ) constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) FuncMapping(arg0 [4]byte) (common.Address, error) {
	return _BaseTenantSpace.Contract.FuncMapping(&_BaseTenantSpace.CallOpts, arg0)
}

// GetBit is a free data retrieval call binding the contract method 0x30f846a2.
//
// Solidity: function getBit(bytes32 _ident, uint8 _ord) constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceCaller) GetBit(opts *bind.CallOpts, _ident [32]byte, _ord uint8) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "getBit", _ident, _ord)
	return *ret0, err
}

// GetBit is a free data retrieval call binding the contract method 0x30f846a2.
//
// Solidity: function getBit(bytes32 _ident, uint8 _ord) constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceSession) GetBit(_ident [32]byte, _ord uint8) (bool, error) {
	return _BaseTenantSpace.Contract.GetBit(&_BaseTenantSpace.CallOpts, _ident, _ord)
}

// GetBit is a free data retrieval call binding the contract method 0x30f846a2.
//
// Solidity: function getBit(bytes32 _ident, uint8 _ord) constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) GetBit(_ident [32]byte, _ord uint8) (bool, error) {
	return _BaseTenantSpace.Contract.GetBit(&_BaseTenantSpace.CallOpts, _ident, _ord)
}

// GetCounter is a free data retrieval call binding the contract method 0xe1954b61.
//
// Solidity: function getCounter(bytes32 _ident, uint8 _ord) constant returns(uint32)
func (_BaseTenantSpace *BaseTenantSpaceCaller) GetCounter(opts *bind.CallOpts, _ident [32]byte, _ord uint8) (uint32, error) {
	var (
		ret0 = new(uint32)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "getCounter", _ident, _ord)
	return *ret0, err
}

// GetCounter is a free data retrieval call binding the contract method 0xe1954b61.
//
// Solidity: function getCounter(bytes32 _ident, uint8 _ord) constant returns(uint32)
func (_BaseTenantSpace *BaseTenantSpaceSession) GetCounter(_ident [32]byte, _ord uint8) (uint32, error) {
	return _BaseTenantSpace.Contract.GetCounter(&_BaseTenantSpace.CallOpts, _ident, _ord)
}

// GetCounter is a free data retrieval call binding the contract method 0xe1954b61.
//
// Solidity: function getCounter(bytes32 _ident, uint8 _ord) constant returns(uint32)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) GetCounter(_ident [32]byte, _ord uint8) (uint32, error) {
	return _BaseTenantSpace.Contract.GetCounter(&_BaseTenantSpace.CallOpts, _ident, _ord)
}

// GetKMSID is a free data retrieval call binding the contract method 0x589aafc1.
//
// Solidity: function getKMSID(address _kmsAddr) constant returns(string)
func (_BaseTenantSpace *BaseTenantSpaceCaller) GetKMSID(opts *bind.CallOpts, _kmsAddr common.Address) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "getKMSID", _kmsAddr)
	return *ret0, err
}

// GetKMSID is a free data retrieval call binding the contract method 0x589aafc1.
//
// Solidity: function getKMSID(address _kmsAddr) constant returns(string)
func (_BaseTenantSpace *BaseTenantSpaceSession) GetKMSID(_kmsAddr common.Address) (string, error) {
	return _BaseTenantSpace.Contract.GetKMSID(&_BaseTenantSpace.CallOpts, _kmsAddr)
}

// GetKMSID is a free data retrieval call binding the contract method 0x589aafc1.
//
// Solidity: function getKMSID(address _kmsAddr) constant returns(string)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) GetKMSID(_kmsAddr common.Address) (string, error) {
	return _BaseTenantSpace.Contract.GetKMSID(&_BaseTenantSpace.CallOpts, _kmsAddr)
}

// GetKMSInfo is a free data retrieval call binding the contract method 0x268bfac4.
//
// Solidity: function getKMSInfo(string _kmsID, bytes _prefix) constant returns(string, string)
func (_BaseTenantSpace *BaseTenantSpaceCaller) GetKMSInfo(opts *bind.CallOpts, _kmsID string, _prefix []byte) (string, string, error) {
	var (
		ret0 = new(string)
		ret1 = new(string)
	)
	out := &[]interface{}{
		ret0,
		ret1,
	}
	err := _BaseTenantSpace.contract.Call(opts, out, "getKMSInfo", _kmsID, _prefix)
	return *ret0, *ret1, err
}

// GetKMSInfo is a free data retrieval call binding the contract method 0x268bfac4.
//
// Solidity: function getKMSInfo(string _kmsID, bytes _prefix) constant returns(string, string)
func (_BaseTenantSpace *BaseTenantSpaceSession) GetKMSInfo(_kmsID string, _prefix []byte) (string, string, error) {
	return _BaseTenantSpace.Contract.GetKMSInfo(&_BaseTenantSpace.CallOpts, _kmsID, _prefix)
}

// GetKMSInfo is a free data retrieval call binding the contract method 0x268bfac4.
//
// Solidity: function getKMSInfo(string _kmsID, bytes _prefix) constant returns(string, string)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) GetKMSInfo(_kmsID string, _prefix []byte) (string, string, error) {
	return _BaseTenantSpace.Contract.GetKMSInfo(&_BaseTenantSpace.CallOpts, _kmsID, _prefix)
}

// GetMeta is a free data retrieval call binding the contract method 0xac55c906.
//
// Solidity: function getMeta(bytes key) constant returns(bytes)
func (_BaseTenantSpace *BaseTenantSpaceCaller) GetMeta(opts *bind.CallOpts, key []byte) ([]byte, error) {
	var (
		ret0 = new([]byte)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "getMeta", key)
	return *ret0, err
}

// GetMeta is a free data retrieval call binding the contract method 0xac55c906.
//
// Solidity: function getMeta(bytes key) constant returns(bytes)
func (_BaseTenantSpace *BaseTenantSpaceSession) GetMeta(key []byte) ([]byte, error) {
	return _BaseTenantSpace.Contract.GetMeta(&_BaseTenantSpace.CallOpts, key)
}

// GetMeta is a free data retrieval call binding the contract method 0xac55c906.
//
// Solidity: function getMeta(bytes key) constant returns(bytes)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) GetMeta(key []byte) ([]byte, error) {
	return _BaseTenantSpace.Contract.GetMeta(&_BaseTenantSpace.CallOpts, key)
}

// GetTenantID is a free data retrieval call binding the contract method 0x401262c8.
//
// Solidity: function getTenantID() constant returns(string)
func (_BaseTenantSpace *BaseTenantSpaceCaller) GetTenantID(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "getTenantID")
	return *ret0, err
}

// GetTenantID is a free data retrieval call binding the contract method 0x401262c8.
//
// Solidity: function getTenantID() constant returns(string)
func (_BaseTenantSpace *BaseTenantSpaceSession) GetTenantID() (string, error) {
	return _BaseTenantSpace.Contract.GetTenantID(&_BaseTenantSpace.CallOpts)
}

// GetTenantID is a free data retrieval call binding the contract method 0x401262c8.
//
// Solidity: function getTenantID() constant returns(string)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) GetTenantID() (string, error) {
	return _BaseTenantSpace.Contract.GetTenantID(&_BaseTenantSpace.CallOpts)
}

// GroupIds is a free data retrieval call binding the contract method 0x4093d7a1.
//
// Solidity: function groupIds(uint256 ) constant returns(bytes32)
func (_BaseTenantSpace *BaseTenantSpaceCaller) GroupIds(opts *bind.CallOpts, arg0 *big.Int) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "groupIds", arg0)
	return *ret0, err
}

// GroupIds is a free data retrieval call binding the contract method 0x4093d7a1.
//
// Solidity: function groupIds(uint256 ) constant returns(bytes32)
func (_BaseTenantSpace *BaseTenantSpaceSession) GroupIds(arg0 *big.Int) ([32]byte, error) {
	return _BaseTenantSpace.Contract.GroupIds(&_BaseTenantSpace.CallOpts, arg0)
}

// GroupIds is a free data retrieval call binding the contract method 0x4093d7a1.
//
// Solidity: function groupIds(uint256 ) constant returns(bytes32)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) GroupIds(arg0 *big.Int) ([32]byte, error) {
	return _BaseTenantSpace.Contract.GroupIds(&_BaseTenantSpace.CallOpts, arg0)
}

// GroupsMapping is a free data retrieval call binding the contract method 0xea8a3ed8.
//
// Solidity: function groupsMapping(bytes32 , uint256 ) constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceCaller) GroupsMapping(opts *bind.CallOpts, arg0 [32]byte, arg1 *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "groupsMapping", arg0, arg1)
	return *ret0, err
}

// GroupsMapping is a free data retrieval call binding the contract method 0xea8a3ed8.
//
// Solidity: function groupsMapping(bytes32 , uint256 ) constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceSession) GroupsMapping(arg0 [32]byte, arg1 *big.Int) (common.Address, error) {
	return _BaseTenantSpace.Contract.GroupsMapping(&_BaseTenantSpace.CallOpts, arg0, arg1)
}

// GroupsMapping is a free data retrieval call binding the contract method 0xea8a3ed8.
//
// Solidity: function groupsMapping(bytes32 , uint256 ) constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) GroupsMapping(arg0 [32]byte, arg1 *big.Int) (common.Address, error) {
	return _BaseTenantSpace.Contract.GroupsMapping(&_BaseTenantSpace.CallOpts, arg0, arg1)
}

// HasAccess is a free data retrieval call binding the contract method 0x95a078e8.
//
// Solidity: function hasAccess(address candidate) constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceCaller) HasAccess(opts *bind.CallOpts, candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "hasAccess", candidate)
	return *ret0, err
}

// HasAccess is a free data retrieval call binding the contract method 0x95a078e8.
//
// Solidity: function hasAccess(address candidate) constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceSession) HasAccess(candidate common.Address) (bool, error) {
	return _BaseTenantSpace.Contract.HasAccess(&_BaseTenantSpace.CallOpts, candidate)
}

// HasAccess is a free data retrieval call binding the contract method 0x95a078e8.
//
// Solidity: function hasAccess(address candidate) constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) HasAccess(candidate common.Address) (bool, error) {
	return _BaseTenantSpace.Contract.HasAccess(&_BaseTenantSpace.CallOpts, candidate)
}

// HasEditorRight is a free data retrieval call binding the contract method 0x67e5c3bf.
//
// Solidity: function hasEditorRight(address candidate) constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceCaller) HasEditorRight(opts *bind.CallOpts, candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "hasEditorRight", candidate)
	return *ret0, err
}

// HasEditorRight is a free data retrieval call binding the contract method 0x67e5c3bf.
//
// Solidity: function hasEditorRight(address candidate) constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceSession) HasEditorRight(candidate common.Address) (bool, error) {
	return _BaseTenantSpace.Contract.HasEditorRight(&_BaseTenantSpace.CallOpts, candidate)
}

// HasEditorRight is a free data retrieval call binding the contract method 0x67e5c3bf.
//
// Solidity: function hasEditorRight(address candidate) constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) HasEditorRight(candidate common.Address) (bool, error) {
	return _BaseTenantSpace.Contract.HasEditorRight(&_BaseTenantSpace.CallOpts, candidate)
}

// IndexCategory is a free data retrieval call binding the contract method 0x6380501f.
//
// Solidity: function indexCategory() constant returns(uint8)
func (_BaseTenantSpace *BaseTenantSpaceCaller) IndexCategory(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "indexCategory")
	return *ret0, err
}

// IndexCategory is a free data retrieval call binding the contract method 0x6380501f.
//
// Solidity: function indexCategory() constant returns(uint8)
func (_BaseTenantSpace *BaseTenantSpaceSession) IndexCategory() (uint8, error) {
	return _BaseTenantSpace.Contract.IndexCategory(&_BaseTenantSpace.CallOpts)
}

// IndexCategory is a free data retrieval call binding the contract method 0x6380501f.
//
// Solidity: function indexCategory() constant returns(uint8)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) IndexCategory() (uint8, error) {
	return _BaseTenantSpace.Contract.IndexCategory(&_BaseTenantSpace.CallOpts)
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(address _candidate) constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceCaller) IsAdmin(opts *bind.CallOpts, _candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "isAdmin", _candidate)
	return *ret0, err
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(address _candidate) constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceSession) IsAdmin(_candidate common.Address) (bool, error) {
	return _BaseTenantSpace.Contract.IsAdmin(&_BaseTenantSpace.CallOpts, _candidate)
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(address _candidate) constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) IsAdmin(_candidate common.Address) (bool, error) {
	return _BaseTenantSpace.Contract.IsAdmin(&_BaseTenantSpace.CallOpts, _candidate)
}

// KmsManager is a free data retrieval call binding the contract method 0xac65b649.
//
// Solidity: function kmsManager() constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceCaller) KmsManager(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "kmsManager")
	return *ret0, err
}

// KmsManager is a free data retrieval call binding the contract method 0xac65b649.
//
// Solidity: function kmsManager() constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceSession) KmsManager() (common.Address, error) {
	return _BaseTenantSpace.Contract.KmsManager(&_BaseTenantSpace.CallOpts)
}

// KmsManager is a free data retrieval call binding the contract method 0xac65b649.
//
// Solidity: function kmsManager() constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) KmsManager() (common.Address, error) {
	return _BaseTenantSpace.Contract.KmsManager(&_BaseTenantSpace.CallOpts)
}

// ListLength is a free data retrieval call binding the contract method 0x11a3fa38.
//
// Solidity: function listLength(bytes32 listKey) constant returns(uint256)
func (_BaseTenantSpace *BaseTenantSpaceCaller) ListLength(opts *bind.CallOpts, listKey [32]byte) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "listLength", listKey)
	return *ret0, err
}

// ListLength is a free data retrieval call binding the contract method 0x11a3fa38.
//
// Solidity: function listLength(bytes32 listKey) constant returns(uint256)
func (_BaseTenantSpace *BaseTenantSpaceSession) ListLength(listKey [32]byte) (*big.Int, error) {
	return _BaseTenantSpace.Contract.ListLength(&_BaseTenantSpace.CallOpts, listKey)
}

// ListLength is a free data retrieval call binding the contract method 0x11a3fa38.
//
// Solidity: function listLength(bytes32 listKey) constant returns(uint256)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) ListLength(listKey [32]byte) (*big.Int, error) {
	return _BaseTenantSpace.Contract.ListLength(&_BaseTenantSpace.CallOpts, listKey)
}

// ListsMapping is a free data retrieval call binding the contract method 0x4d368f10.
//
// Solidity: function listsMapping(bytes32 , uint256 ) constant returns(string)
func (_BaseTenantSpace *BaseTenantSpaceCaller) ListsMapping(opts *bind.CallOpts, arg0 [32]byte, arg1 *big.Int) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "listsMapping", arg0, arg1)
	return *ret0, err
}

// ListsMapping is a free data retrieval call binding the contract method 0x4d368f10.
//
// Solidity: function listsMapping(bytes32 , uint256 ) constant returns(string)
func (_BaseTenantSpace *BaseTenantSpaceSession) ListsMapping(arg0 [32]byte, arg1 *big.Int) (string, error) {
	return _BaseTenantSpace.Contract.ListsMapping(&_BaseTenantSpace.CallOpts, arg0, arg1)
}

// ListsMapping is a free data retrieval call binding the contract method 0x4d368f10.
//
// Solidity: function listsMapping(bytes32 , uint256 ) constant returns(string)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) ListsMapping(arg0 [32]byte, arg1 *big.Int) (string, error) {
	return _BaseTenantSpace.Contract.ListsMapping(&_BaseTenantSpace.CallOpts, arg0, arg1)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() constant returns(string)
func (_BaseTenantSpace *BaseTenantSpaceCaller) Name(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "name")
	return *ret0, err
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() constant returns(string)
func (_BaseTenantSpace *BaseTenantSpaceSession) Name() (string, error) {
	return _BaseTenantSpace.Contract.Name(&_BaseTenantSpace.CallOpts)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() constant returns(string)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) Name() (string, error) {
	return _BaseTenantSpace.Contract.Name(&_BaseTenantSpace.CallOpts)
}

// NodeManager is a free data retrieval call binding the contract method 0x9bb5cd3f.
//
// Solidity: function nodeManager() constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceCaller) NodeManager(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "nodeManager")
	return *ret0, err
}

// NodeManager is a free data retrieval call binding the contract method 0x9bb5cd3f.
//
// Solidity: function nodeManager() constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceSession) NodeManager() (common.Address, error) {
	return _BaseTenantSpace.Contract.NodeManager(&_BaseTenantSpace.CallOpts)
}

// NodeManager is a free data retrieval call binding the contract method 0x9bb5cd3f.
//
// Solidity: function nodeManager() constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) NodeManager() (common.Address, error) {
	return _BaseTenantSpace.Contract.NodeManager(&_BaseTenantSpace.CallOpts)
}

// ObjectHash is a free data retrieval call binding the contract method 0xe02dd9c2.
//
// Solidity: function objectHash() constant returns(string)
func (_BaseTenantSpace *BaseTenantSpaceCaller) ObjectHash(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "objectHash")
	return *ret0, err
}

// ObjectHash is a free data retrieval call binding the contract method 0xe02dd9c2.
//
// Solidity: function objectHash() constant returns(string)
func (_BaseTenantSpace *BaseTenantSpaceSession) ObjectHash() (string, error) {
	return _BaseTenantSpace.Contract.ObjectHash(&_BaseTenantSpace.CallOpts)
}

// ObjectHash is a free data retrieval call binding the contract method 0xe02dd9c2.
//
// Solidity: function objectHash() constant returns(string)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) ObjectHash() (string, error) {
	return _BaseTenantSpace.Contract.ObjectHash(&_BaseTenantSpace.CallOpts)
}

// ObjectTimestamp is a free data retrieval call binding the contract method 0x40b87a26.
//
// Solidity: function objectTimestamp() constant returns(uint256)
func (_BaseTenantSpace *BaseTenantSpaceCaller) ObjectTimestamp(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "objectTimestamp")
	return *ret0, err
}

// ObjectTimestamp is a free data retrieval call binding the contract method 0x40b87a26.
//
// Solidity: function objectTimestamp() constant returns(uint256)
func (_BaseTenantSpace *BaseTenantSpaceSession) ObjectTimestamp() (*big.Int, error) {
	return _BaseTenantSpace.Contract.ObjectTimestamp(&_BaseTenantSpace.CallOpts)
}

// ObjectTimestamp is a free data retrieval call binding the contract method 0x40b87a26.
//
// Solidity: function objectTimestamp() constant returns(uint256)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) ObjectTimestamp() (*big.Int, error) {
	return _BaseTenantSpace.Contract.ObjectTimestamp(&_BaseTenantSpace.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceSession) Owner() (common.Address, error) {
	return _BaseTenantSpace.Contract.Owner(&_BaseTenantSpace.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) Owner() (common.Address, error) {
	return _BaseTenantSpace.Contract.Owner(&_BaseTenantSpace.CallOpts)
}

// ParentAddress is a free data retrieval call binding the contract method 0x00821de3.
//
// Solidity: function parentAddress() constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceCaller) ParentAddress(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "parentAddress")
	return *ret0, err
}

// ParentAddress is a free data retrieval call binding the contract method 0x00821de3.
//
// Solidity: function parentAddress() constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceSession) ParentAddress() (common.Address, error) {
	return _BaseTenantSpace.Contract.ParentAddress(&_BaseTenantSpace.CallOpts)
}

// ParentAddress is a free data retrieval call binding the contract method 0x00821de3.
//
// Solidity: function parentAddress() constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) ParentAddress() (common.Address, error) {
	return _BaseTenantSpace.Contract.ParentAddress(&_BaseTenantSpace.CallOpts)
}

// PendingHash is a free data retrieval call binding the contract method 0x628449fd.
//
// Solidity: function pendingHash() constant returns(string)
func (_BaseTenantSpace *BaseTenantSpaceCaller) PendingHash(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "pendingHash")
	return *ret0, err
}

// PendingHash is a free data retrieval call binding the contract method 0x628449fd.
//
// Solidity: function pendingHash() constant returns(string)
func (_BaseTenantSpace *BaseTenantSpaceSession) PendingHash() (string, error) {
	return _BaseTenantSpace.Contract.PendingHash(&_BaseTenantSpace.CallOpts)
}

// PendingHash is a free data retrieval call binding the contract method 0x628449fd.
//
// Solidity: function pendingHash() constant returns(string)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) PendingHash() (string, error) {
	return _BaseTenantSpace.Contract.PendingHash(&_BaseTenantSpace.CallOpts)
}

// RequiresReview is a free data retrieval call binding the contract method 0x3dd71d99.
//
// Solidity: function requiresReview() constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceCaller) RequiresReview(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "requiresReview")
	return *ret0, err
}

// RequiresReview is a free data retrieval call binding the contract method 0x3dd71d99.
//
// Solidity: function requiresReview() constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceSession) RequiresReview() (bool, error) {
	return _BaseTenantSpace.Contract.RequiresReview(&_BaseTenantSpace.CallOpts)
}

// RequiresReview is a free data retrieval call binding the contract method 0x3dd71d99.
//
// Solidity: function requiresReview() constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) RequiresReview() (bool, error) {
	return _BaseTenantSpace.Contract.RequiresReview(&_BaseTenantSpace.CallOpts)
}

// UserManager is a free data retrieval call binding the contract method 0x5c8a7687.
//
// Solidity: function userManager() constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceCaller) UserManager(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "userManager")
	return *ret0, err
}

// UserManager is a free data retrieval call binding the contract method 0x5c8a7687.
//
// Solidity: function userManager() constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceSession) UserManager() (common.Address, error) {
	return _BaseTenantSpace.Contract.UserManager(&_BaseTenantSpace.CallOpts)
}

// UserManager is a free data retrieval call binding the contract method 0x5c8a7687.
//
// Solidity: function userManager() constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) UserManager() (common.Address, error) {
	return _BaseTenantSpace.Contract.UserManager(&_BaseTenantSpace.CallOpts)
}

// UserWallets is a free data retrieval call binding the contract method 0x63e6ffdd.
//
// Solidity: function userWallets(address _userAddr) constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceCaller) UserWallets(opts *bind.CallOpts, _userAddr common.Address) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "userWallets", _userAddr)
	return *ret0, err
}

// UserWallets is a free data retrieval call binding the contract method 0x63e6ffdd.
//
// Solidity: function userWallets(address _userAddr) constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceSession) UserWallets(_userAddr common.Address) (common.Address, error) {
	return _BaseTenantSpace.Contract.UserWallets(&_BaseTenantSpace.CallOpts, _userAddr)
}

// UserWallets is a free data retrieval call binding the contract method 0x63e6ffdd.
//
// Solidity: function userWallets(address _userAddr) constant returns(address)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) UserWallets(_userAddr common.Address) (common.Address, error) {
	return _BaseTenantSpace.Contract.UserWallets(&_BaseTenantSpace.CallOpts, _userAddr)
}

// ValidType is a free data retrieval call binding the contract method 0x29dedde5.
//
// Solidity: function validType(address content_type) constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceCaller) ValidType(opts *bind.CallOpts, content_type common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "validType", content_type)
	return *ret0, err
}

// ValidType is a free data retrieval call binding the contract method 0x29dedde5.
//
// Solidity: function validType(address content_type) constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceSession) ValidType(content_type common.Address) (bool, error) {
	return _BaseTenantSpace.Contract.ValidType(&_BaseTenantSpace.CallOpts, content_type)
}

// ValidType is a free data retrieval call binding the contract method 0x29dedde5.
//
// Solidity: function validType(address content_type) constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) ValidType(content_type common.Address) (bool, error) {
	return _BaseTenantSpace.Contract.ValidType(&_BaseTenantSpace.CallOpts, content_type)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseTenantSpace *BaseTenantSpaceCaller) Version(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseTenantSpace *BaseTenantSpaceSession) Version() ([32]byte, error) {
	return _BaseTenantSpace.Contract.Version(&_BaseTenantSpace.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) Version() ([32]byte, error) {
	return _BaseTenantSpace.Contract.Version(&_BaseTenantSpace.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseTenantSpace *BaseTenantSpaceCaller) VersionAPI(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "versionAPI")
	return *ret0, err
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseTenantSpace *BaseTenantSpaceSession) VersionAPI() ([32]byte, error) {
	return _BaseTenantSpace.Contract.VersionAPI(&_BaseTenantSpace.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) VersionAPI() ([32]byte, error) {
	return _BaseTenantSpace.Contract.VersionAPI(&_BaseTenantSpace.CallOpts)
}

// VersionHashes is a free data retrieval call binding the contract method 0x7ca8f618.
//
// Solidity: function versionHashes(uint256 ) constant returns(string)
func (_BaseTenantSpace *BaseTenantSpaceCaller) VersionHashes(opts *bind.CallOpts, arg0 *big.Int) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "versionHashes", arg0)
	return *ret0, err
}

// VersionHashes is a free data retrieval call binding the contract method 0x7ca8f618.
//
// Solidity: function versionHashes(uint256 ) constant returns(string)
func (_BaseTenantSpace *BaseTenantSpaceSession) VersionHashes(arg0 *big.Int) (string, error) {
	return _BaseTenantSpace.Contract.VersionHashes(&_BaseTenantSpace.CallOpts, arg0)
}

// VersionHashes is a free data retrieval call binding the contract method 0x7ca8f618.
//
// Solidity: function versionHashes(uint256 ) constant returns(string)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) VersionHashes(arg0 *big.Int) (string, error) {
	return _BaseTenantSpace.Contract.VersionHashes(&_BaseTenantSpace.CallOpts, arg0)
}

// VersionTimestamp is a free data retrieval call binding the contract method 0x7886f747.
//
// Solidity: function versionTimestamp(uint256 ) constant returns(uint256)
func (_BaseTenantSpace *BaseTenantSpaceCaller) VersionTimestamp(opts *bind.CallOpts, arg0 *big.Int) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "versionTimestamp", arg0)
	return *ret0, err
}

// VersionTimestamp is a free data retrieval call binding the contract method 0x7886f747.
//
// Solidity: function versionTimestamp(uint256 ) constant returns(uint256)
func (_BaseTenantSpace *BaseTenantSpaceSession) VersionTimestamp(arg0 *big.Int) (*big.Int, error) {
	return _BaseTenantSpace.Contract.VersionTimestamp(&_BaseTenantSpace.CallOpts, arg0)
}

// VersionTimestamp is a free data retrieval call binding the contract method 0x7886f747.
//
// Solidity: function versionTimestamp(uint256 ) constant returns(uint256)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) VersionTimestamp(arg0 *big.Int) (*big.Int, error) {
	return _BaseTenantSpace.Contract.VersionTimestamp(&_BaseTenantSpace.CallOpts, arg0)
}

// Visibility is a free data retrieval call binding the contract method 0x29adec14.
//
// Solidity: function visibility() constant returns(uint8)
func (_BaseTenantSpace *BaseTenantSpaceCaller) Visibility(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "visibility")
	return *ret0, err
}

// Visibility is a free data retrieval call binding the contract method 0x29adec14.
//
// Solidity: function visibility() constant returns(uint8)
func (_BaseTenantSpace *BaseTenantSpaceSession) Visibility() (uint8, error) {
	return _BaseTenantSpace.Contract.Visibility(&_BaseTenantSpace.CallOpts)
}

// Visibility is a free data retrieval call binding the contract method 0x29adec14.
//
// Solidity: function visibility() constant returns(uint8)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) Visibility() (uint8, error) {
	return _BaseTenantSpace.Contract.Visibility(&_BaseTenantSpace.CallOpts)
}

// WhitelistedType is a free data retrieval call binding the contract method 0x9cb121ba.
//
// Solidity: function whitelistedType(address content_type) constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceCaller) WhitelistedType(opts *bind.CallOpts, content_type common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _BaseTenantSpace.contract.Call(opts, out, "whitelistedType", content_type)
	return *ret0, err
}

// WhitelistedType is a free data retrieval call binding the contract method 0x9cb121ba.
//
// Solidity: function whitelistedType(address content_type) constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceSession) WhitelistedType(content_type common.Address) (bool, error) {
	return _BaseTenantSpace.Contract.WhitelistedType(&_BaseTenantSpace.CallOpts, content_type)
}

// WhitelistedType is a free data retrieval call binding the contract method 0x9cb121ba.
//
// Solidity: function whitelistedType(address content_type) constant returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceCallerSession) WhitelistedType(content_type common.Address) (bool, error) {
	return _BaseTenantSpace.Contract.WhitelistedType(&_BaseTenantSpace.CallOpts, content_type)
}

// AccessRequestV3 is a paid mutator transaction binding the contract method 0x1bf7a912.
//
// Solidity: function accessRequestV3(bytes32[] , address[] ) returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceTransactor) AccessRequestV3(opts *bind.TransactOpts, arg0 [][32]byte, arg1 []common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "accessRequestV3", arg0, arg1)
}

// AccessRequestV3 is a paid mutator transaction binding the contract method 0x1bf7a912.
//
// Solidity: function accessRequestV3(bytes32[] , address[] ) returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceSession) AccessRequestV3(arg0 [][32]byte, arg1 []common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.AccessRequestV3(&_BaseTenantSpace.TransactOpts, arg0, arg1)
}

// AccessRequestV3 is a paid mutator transaction binding the contract method 0x1bf7a912.
//
// Solidity: function accessRequestV3(bytes32[] , address[] ) returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) AccessRequestV3(arg0 [][32]byte, arg1 []common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.AccessRequestV3(&_BaseTenantSpace.TransactOpts, arg0, arg1)
}

// AddContentType is a paid mutator transaction binding the contract method 0x0f58a786.
//
// Solidity: function addContentType(address content_type, address content_contract) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactor) AddContentType(opts *bind.TransactOpts, content_type common.Address, content_contract common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "addContentType", content_type, content_contract)
}

// AddContentType is a paid mutator transaction binding the contract method 0x0f58a786.
//
// Solidity: function addContentType(address content_type, address content_contract) returns()
func (_BaseTenantSpace *BaseTenantSpaceSession) AddContentType(content_type common.Address, content_contract common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.AddContentType(&_BaseTenantSpace.TransactOpts, content_type, content_contract)
}

// AddContentType is a paid mutator transaction binding the contract method 0x0f58a786.
//
// Solidity: function addContentType(address content_type, address content_contract) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) AddContentType(content_type common.Address, content_contract common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.AddContentType(&_BaseTenantSpace.TransactOpts, content_type, content_contract)
}

// AddFuncs is a paid mutator transaction binding the contract method 0x0a581edc.
//
// Solidity: function addFuncs(bytes4[] _func4Bytes, address _funcAddr) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactor) AddFuncs(opts *bind.TransactOpts, _func4Bytes [][4]byte, _funcAddr common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "addFuncs", _func4Bytes, _funcAddr)
}

// AddFuncs is a paid mutator transaction binding the contract method 0x0a581edc.
//
// Solidity: function addFuncs(bytes4[] _func4Bytes, address _funcAddr) returns()
func (_BaseTenantSpace *BaseTenantSpaceSession) AddFuncs(_func4Bytes [][4]byte, _funcAddr common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.AddFuncs(&_BaseTenantSpace.TransactOpts, _func4Bytes, _funcAddr)
}

// AddFuncs is a paid mutator transaction binding the contract method 0x0a581edc.
//
// Solidity: function addFuncs(bytes4[] _func4Bytes, address _funcAddr) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) AddFuncs(_func4Bytes [][4]byte, _funcAddr common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.AddFuncs(&_BaseTenantSpace.TransactOpts, _func4Bytes, _funcAddr)
}

// AddGroup is a paid mutator transaction binding the contract method 0x65d8dd34.
//
// Solidity: function addGroup(bytes32 _id, address _groupAddr) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactor) AddGroup(opts *bind.TransactOpts, _id [32]byte, _groupAddr common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "addGroup", _id, _groupAddr)
}

// AddGroup is a paid mutator transaction binding the contract method 0x65d8dd34.
//
// Solidity: function addGroup(bytes32 _id, address _groupAddr) returns()
func (_BaseTenantSpace *BaseTenantSpaceSession) AddGroup(_id [32]byte, _groupAddr common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.AddGroup(&_BaseTenantSpace.TransactOpts, _id, _groupAddr)
}

// AddGroup is a paid mutator transaction binding the contract method 0x65d8dd34.
//
// Solidity: function addGroup(bytes32 _id, address _groupAddr) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) AddGroup(_id [32]byte, _groupAddr common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.AddGroup(&_BaseTenantSpace.TransactOpts, _id, _groupAddr)
}

// AddListItem is a paid mutator transaction binding the contract method 0x74daf3a0.
//
// Solidity: function addListItem(bytes32 listKey, string itemVal) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactor) AddListItem(opts *bind.TransactOpts, listKey [32]byte, itemVal string) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "addListItem", listKey, itemVal)
}

// AddListItem is a paid mutator transaction binding the contract method 0x74daf3a0.
//
// Solidity: function addListItem(bytes32 listKey, string itemVal) returns()
func (_BaseTenantSpace *BaseTenantSpaceSession) AddListItem(listKey [32]byte, itemVal string) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.AddListItem(&_BaseTenantSpace.TransactOpts, listKey, itemVal)
}

// AddListItem is a paid mutator transaction binding the contract method 0x74daf3a0.
//
// Solidity: function addListItem(bytes32 listKey, string itemVal) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) AddListItem(listKey [32]byte, itemVal string) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.AddListItem(&_BaseTenantSpace.TransactOpts, listKey, itemVal)
}

// CallFuncUintAddr is a paid mutator transaction binding the contract method 0x9c075d67.
//
// Solidity: function callFuncUintAddr(bytes4 _func4Bytes, uint256 _p1, address _p2, bytes _encAuthToken, uint8 _v, bytes32 _r, bytes32 _s) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactor) CallFuncUintAddr(opts *bind.TransactOpts, _func4Bytes [4]byte, _p1 *big.Int, _p2 common.Address, _encAuthToken []byte, _v uint8, _r [32]byte, _s [32]byte) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "callFuncUintAddr", _func4Bytes, _p1, _p2, _encAuthToken, _v, _r, _s)
}

// CallFuncUintAddr is a paid mutator transaction binding the contract method 0x9c075d67.
//
// Solidity: function callFuncUintAddr(bytes4 _func4Bytes, uint256 _p1, address _p2, bytes _encAuthToken, uint8 _v, bytes32 _r, bytes32 _s) returns()
func (_BaseTenantSpace *BaseTenantSpaceSession) CallFuncUintAddr(_func4Bytes [4]byte, _p1 *big.Int, _p2 common.Address, _encAuthToken []byte, _v uint8, _r [32]byte, _s [32]byte) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.CallFuncUintAddr(&_BaseTenantSpace.TransactOpts, _func4Bytes, _p1, _p2, _encAuthToken, _v, _r, _s)
}

// CallFuncUintAddr is a paid mutator transaction binding the contract method 0x9c075d67.
//
// Solidity: function callFuncUintAddr(bytes4 _func4Bytes, uint256 _p1, address _p2, bytes _encAuthToken, uint8 _v, bytes32 _r, bytes32 _s) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) CallFuncUintAddr(_func4Bytes [4]byte, _p1 *big.Int, _p2 common.Address, _encAuthToken []byte, _v uint8, _r [32]byte, _s [32]byte) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.CallFuncUintAddr(&_BaseTenantSpace.TransactOpts, _func4Bytes, _p1, _p2, _encAuthToken, _v, _r, _s)
}

// ClearPending is a paid mutator transaction binding the contract method 0x5f6a1301.
//
// Solidity: function clearPending() returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactor) ClearPending(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "clearPending")
}

// ClearPending is a paid mutator transaction binding the contract method 0x5f6a1301.
//
// Solidity: function clearPending() returns()
func (_BaseTenantSpace *BaseTenantSpaceSession) ClearPending() (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.ClearPending(&_BaseTenantSpace.TransactOpts)
}

// ClearPending is a paid mutator transaction binding the contract method 0x5f6a1301.
//
// Solidity: function clearPending() returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) ClearPending() (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.ClearPending(&_BaseTenantSpace.TransactOpts)
}

// Commit is a paid mutator transaction binding the contract method 0x9867db74.
//
// Solidity: function commit(string _objectHash) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactor) Commit(opts *bind.TransactOpts, _objectHash string) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "commit", _objectHash)
}

// Commit is a paid mutator transaction binding the contract method 0x9867db74.
//
// Solidity: function commit(string _objectHash) returns()
func (_BaseTenantSpace *BaseTenantSpaceSession) Commit(_objectHash string) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.Commit(&_BaseTenantSpace.TransactOpts, _objectHash)
}

// Commit is a paid mutator transaction binding the contract method 0x9867db74.
//
// Solidity: function commit(string _objectHash) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) Commit(_objectHash string) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.Commit(&_BaseTenantSpace.TransactOpts, _objectHash)
}

// ConfirmCommit is a paid mutator transaction binding the contract method 0x446e8826.
//
// Solidity: function confirmCommit() returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceTransactor) ConfirmCommit(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "confirmCommit")
}

// ConfirmCommit is a paid mutator transaction binding the contract method 0x446e8826.
//
// Solidity: function confirmCommit() returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceSession) ConfirmCommit() (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.ConfirmCommit(&_BaseTenantSpace.TransactOpts)
}

// ConfirmCommit is a paid mutator transaction binding the contract method 0x446e8826.
//
// Solidity: function confirmCommit() returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) ConfirmCommit() (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.ConfirmCommit(&_BaseTenantSpace.TransactOpts)
}

// CreateContent is a paid mutator transaction binding the contract method 0xbf4e088f.
//
// Solidity: function createContent(address _lib, address _contentType) returns(address)
func (_BaseTenantSpace *BaseTenantSpaceTransactor) CreateContent(opts *bind.TransactOpts, _lib common.Address, _contentType common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "createContent", _lib, _contentType)
}

// CreateContent is a paid mutator transaction binding the contract method 0xbf4e088f.
//
// Solidity: function createContent(address _lib, address _contentType) returns(address)
func (_BaseTenantSpace *BaseTenantSpaceSession) CreateContent(_lib common.Address, _contentType common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.CreateContent(&_BaseTenantSpace.TransactOpts, _lib, _contentType)
}

// CreateContent is a paid mutator transaction binding the contract method 0xbf4e088f.
//
// Solidity: function createContent(address _lib, address _contentType) returns(address)
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) CreateContent(_lib common.Address, _contentType common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.CreateContent(&_BaseTenantSpace.TransactOpts, _lib, _contentType)
}

// CreateContentType is a paid mutator transaction binding the contract method 0xb8cfaf05.
//
// Solidity: function createContentType() returns(address)
func (_BaseTenantSpace *BaseTenantSpaceTransactor) CreateContentType(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "createContentType")
}

// CreateContentType is a paid mutator transaction binding the contract method 0xb8cfaf05.
//
// Solidity: function createContentType() returns(address)
func (_BaseTenantSpace *BaseTenantSpaceSession) CreateContentType() (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.CreateContentType(&_BaseTenantSpace.TransactOpts)
}

// CreateContentType is a paid mutator transaction binding the contract method 0xb8cfaf05.
//
// Solidity: function createContentType() returns(address)
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) CreateContentType() (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.CreateContentType(&_BaseTenantSpace.TransactOpts)
}

// CreateGroup is a paid mutator transaction binding the contract method 0x575185ed.
//
// Solidity: function createGroup() returns(address)
func (_BaseTenantSpace *BaseTenantSpaceTransactor) CreateGroup(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "createGroup")
}

// CreateGroup is a paid mutator transaction binding the contract method 0x575185ed.
//
// Solidity: function createGroup() returns(address)
func (_BaseTenantSpace *BaseTenantSpaceSession) CreateGroup() (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.CreateGroup(&_BaseTenantSpace.TransactOpts)
}

// CreateGroup is a paid mutator transaction binding the contract method 0x575185ed.
//
// Solidity: function createGroup() returns(address)
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) CreateGroup() (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.CreateGroup(&_BaseTenantSpace.TransactOpts)
}

// CreateLibrary is a paid mutator transaction binding the contract method 0x40b89f06.
//
// Solidity: function createLibrary(address _kmsAddress) returns(address)
func (_BaseTenantSpace *BaseTenantSpaceTransactor) CreateLibrary(opts *bind.TransactOpts, _kmsAddress common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "createLibrary", _kmsAddress)
}

// CreateLibrary is a paid mutator transaction binding the contract method 0x40b89f06.
//
// Solidity: function createLibrary(address _kmsAddress) returns(address)
func (_BaseTenantSpace *BaseTenantSpaceSession) CreateLibrary(_kmsAddress common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.CreateLibrary(&_BaseTenantSpace.TransactOpts, _kmsAddress)
}

// CreateLibrary is a paid mutator transaction binding the contract method 0x40b89f06.
//
// Solidity: function createLibrary(address _kmsAddress) returns(address)
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) CreateLibrary(_kmsAddress common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.CreateLibrary(&_BaseTenantSpace.TransactOpts, _kmsAddress)
}

// CreateUserWallet is a paid mutator transaction binding the contract method 0xe7cf0c66.
//
// Solidity: function createUserWallet(address _userAddr) returns(address)
func (_BaseTenantSpace *BaseTenantSpaceTransactor) CreateUserWallet(opts *bind.TransactOpts, _userAddr common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "createUserWallet", _userAddr)
}

// CreateUserWallet is a paid mutator transaction binding the contract method 0xe7cf0c66.
//
// Solidity: function createUserWallet(address _userAddr) returns(address)
func (_BaseTenantSpace *BaseTenantSpaceSession) CreateUserWallet(_userAddr common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.CreateUserWallet(&_BaseTenantSpace.TransactOpts, _userAddr)
}

// CreateUserWallet is a paid mutator transaction binding the contract method 0xe7cf0c66.
//
// Solidity: function createUserWallet(address _userAddr) returns(address)
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) CreateUserWallet(_userAddr common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.CreateUserWallet(&_BaseTenantSpace.TransactOpts, _userAddr)
}

// DeleteGroup is a paid mutator transaction binding the contract method 0xe57097c9.
//
// Solidity: function deleteGroup(bytes32 _ident) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactor) DeleteGroup(opts *bind.TransactOpts, _ident [32]byte) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "deleteGroup", _ident)
}

// DeleteGroup is a paid mutator transaction binding the contract method 0xe57097c9.
//
// Solidity: function deleteGroup(bytes32 _ident) returns()
func (_BaseTenantSpace *BaseTenantSpaceSession) DeleteGroup(_ident [32]byte) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.DeleteGroup(&_BaseTenantSpace.TransactOpts, _ident)
}

// DeleteGroup is a paid mutator transaction binding the contract method 0xe57097c9.
//
// Solidity: function deleteGroup(bytes32 _ident) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) DeleteGroup(_ident [32]byte) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.DeleteGroup(&_BaseTenantSpace.TransactOpts, _ident)
}

// DeleteVersion is a paid mutator transaction binding the contract method 0xe1a70717.
//
// Solidity: function deleteVersion(string _versionHash) returns(int256)
func (_BaseTenantSpace *BaseTenantSpaceTransactor) DeleteVersion(opts *bind.TransactOpts, _versionHash string) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "deleteVersion", _versionHash)
}

// DeleteVersion is a paid mutator transaction binding the contract method 0xe1a70717.
//
// Solidity: function deleteVersion(string _versionHash) returns(int256)
func (_BaseTenantSpace *BaseTenantSpaceSession) DeleteVersion(_versionHash string) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.DeleteVersion(&_BaseTenantSpace.TransactOpts, _versionHash)
}

// DeleteVersion is a paid mutator transaction binding the contract method 0xe1a70717.
//
// Solidity: function deleteVersion(string _versionHash) returns(int256)
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) DeleteVersion(_versionHash string) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.DeleteVersion(&_BaseTenantSpace.TransactOpts, _versionHash)
}

// IncrementCounter is a paid mutator transaction binding the contract method 0x7558cbf0.
//
// Solidity: function incrementCounter(bytes32 _ident, uint8 _ord) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactor) IncrementCounter(opts *bind.TransactOpts, _ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "incrementCounter", _ident, _ord)
}

// IncrementCounter is a paid mutator transaction binding the contract method 0x7558cbf0.
//
// Solidity: function incrementCounter(bytes32 _ident, uint8 _ord) returns()
func (_BaseTenantSpace *BaseTenantSpaceSession) IncrementCounter(_ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.IncrementCounter(&_BaseTenantSpace.TransactOpts, _ident, _ord)
}

// IncrementCounter is a paid mutator transaction binding the contract method 0x7558cbf0.
//
// Solidity: function incrementCounter(bytes32 _ident, uint8 _ord) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) IncrementCounter(_ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.IncrementCounter(&_BaseTenantSpace.TransactOpts, _ident, _ord)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactor) Kill(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "kill")
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseTenantSpace *BaseTenantSpaceSession) Kill() (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.Kill(&_BaseTenantSpace.TransactOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) Kill() (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.Kill(&_BaseTenantSpace.TransactOpts)
}

// Publish is a paid mutator transaction binding the contract method 0x2cf99422.
//
// Solidity: function publish(address contentObj) returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceTransactor) Publish(opts *bind.TransactOpts, contentObj common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "publish", contentObj)
}

// Publish is a paid mutator transaction binding the contract method 0x2cf99422.
//
// Solidity: function publish(address contentObj) returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceSession) Publish(contentObj common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.Publish(&_BaseTenantSpace.TransactOpts, contentObj)
}

// Publish is a paid mutator transaction binding the contract method 0x2cf99422.
//
// Solidity: function publish(address contentObj) returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) Publish(contentObj common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.Publish(&_BaseTenantSpace.TransactOpts, contentObj)
}

// PutMeta is a paid mutator transaction binding the contract method 0xe542b7cb.
//
// Solidity: function putMeta(bytes key, bytes value) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactor) PutMeta(opts *bind.TransactOpts, key []byte, value []byte) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "putMeta", key, value)
}

// PutMeta is a paid mutator transaction binding the contract method 0xe542b7cb.
//
// Solidity: function putMeta(bytes key, bytes value) returns()
func (_BaseTenantSpace *BaseTenantSpaceSession) PutMeta(key []byte, value []byte) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.PutMeta(&_BaseTenantSpace.TransactOpts, key, value)
}

// PutMeta is a paid mutator transaction binding the contract method 0xe542b7cb.
//
// Solidity: function putMeta(bytes key, bytes value) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) PutMeta(key []byte, value []byte) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.PutMeta(&_BaseTenantSpace.TransactOpts, key, value)
}

// RemoveContentType is a paid mutator transaction binding the contract method 0xfd089196.
//
// Solidity: function removeContentType(address content_type) returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceTransactor) RemoveContentType(opts *bind.TransactOpts, content_type common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "removeContentType", content_type)
}

// RemoveContentType is a paid mutator transaction binding the contract method 0xfd089196.
//
// Solidity: function removeContentType(address content_type) returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceSession) RemoveContentType(content_type common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.RemoveContentType(&_BaseTenantSpace.TransactOpts, content_type)
}

// RemoveContentType is a paid mutator transaction binding the contract method 0xfd089196.
//
// Solidity: function removeContentType(address content_type) returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) RemoveContentType(content_type common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.RemoveContentType(&_BaseTenantSpace.TransactOpts, content_type)
}

// RemoveGroup is a paid mutator transaction binding the contract method 0xcb3899b3.
//
// Solidity: function removeGroup(bytes32 _id, address _groupAddr) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactor) RemoveGroup(opts *bind.TransactOpts, _id [32]byte, _groupAddr common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "removeGroup", _id, _groupAddr)
}

// RemoveGroup is a paid mutator transaction binding the contract method 0xcb3899b3.
//
// Solidity: function removeGroup(bytes32 _id, address _groupAddr) returns()
func (_BaseTenantSpace *BaseTenantSpaceSession) RemoveGroup(_id [32]byte, _groupAddr common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.RemoveGroup(&_BaseTenantSpace.TransactOpts, _id, _groupAddr)
}

// RemoveGroup is a paid mutator transaction binding the contract method 0xcb3899b3.
//
// Solidity: function removeGroup(bytes32 _id, address _groupAddr) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) RemoveGroup(_id [32]byte, _groupAddr common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.RemoveGroup(&_BaseTenantSpace.TransactOpts, _id, _groupAddr)
}

// RemoveListOrd is a paid mutator transaction binding the contract method 0x1fa12f11.
//
// Solidity: function removeListOrd(bytes32 listKey, uint256 itemOrd) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactor) RemoveListOrd(opts *bind.TransactOpts, listKey [32]byte, itemOrd *big.Int) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "removeListOrd", listKey, itemOrd)
}

// RemoveListOrd is a paid mutator transaction binding the contract method 0x1fa12f11.
//
// Solidity: function removeListOrd(bytes32 listKey, uint256 itemOrd) returns()
func (_BaseTenantSpace *BaseTenantSpaceSession) RemoveListOrd(listKey [32]byte, itemOrd *big.Int) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.RemoveListOrd(&_BaseTenantSpace.TransactOpts, listKey, itemOrd)
}

// RemoveListOrd is a paid mutator transaction binding the contract method 0x1fa12f11.
//
// Solidity: function removeListOrd(bytes32 listKey, uint256 itemOrd) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) RemoveListOrd(listKey [32]byte, itemOrd *big.Int) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.RemoveListOrd(&_BaseTenantSpace.TransactOpts, listKey, itemOrd)
}

// SetAddressKMS is a paid mutator transaction binding the contract method 0xc9e8e72d.
//
// Solidity: function setAddressKMS(address address_KMS) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactor) SetAddressKMS(opts *bind.TransactOpts, address_KMS common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "setAddressKMS", address_KMS)
}

// SetAddressKMS is a paid mutator transaction binding the contract method 0xc9e8e72d.
//
// Solidity: function setAddressKMS(address address_KMS) returns()
func (_BaseTenantSpace *BaseTenantSpaceSession) SetAddressKMS(address_KMS common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.SetAddressKMS(&_BaseTenantSpace.TransactOpts, address_KMS)
}

// SetAddressKMS is a paid mutator transaction binding the contract method 0xc9e8e72d.
//
// Solidity: function setAddressKMS(address address_KMS) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) SetAddressKMS(address_KMS common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.SetAddressKMS(&_BaseTenantSpace.TransactOpts, address_KMS)
}

// SetAndGetBit is a paid mutator transaction binding the contract method 0x24d7c18d.
//
// Solidity: function setAndGetBit(bytes32 _ident, uint8 _ord) returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceTransactor) SetAndGetBit(opts *bind.TransactOpts, _ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "setAndGetBit", _ident, _ord)
}

// SetAndGetBit is a paid mutator transaction binding the contract method 0x24d7c18d.
//
// Solidity: function setAndGetBit(bytes32 _ident, uint8 _ord) returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceSession) SetAndGetBit(_ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.SetAndGetBit(&_BaseTenantSpace.TransactOpts, _ident, _ord)
}

// SetAndGetBit is a paid mutator transaction binding the contract method 0x24d7c18d.
//
// Solidity: function setAndGetBit(bytes32 _ident, uint8 _ord) returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) SetAndGetBit(_ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.SetAndGetBit(&_BaseTenantSpace.TransactOpts, _ident, _ord)
}

// SetAndGetBitInternal is a paid mutator transaction binding the contract method 0x33f12cf4.
//
// Solidity: function setAndGetBitInternal(bytes32 _ident, uint8 _ord) returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceTransactor) SetAndGetBitInternal(opts *bind.TransactOpts, _ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "setAndGetBitInternal", _ident, _ord)
}

// SetAndGetBitInternal is a paid mutator transaction binding the contract method 0x33f12cf4.
//
// Solidity: function setAndGetBitInternal(bytes32 _ident, uint8 _ord) returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceSession) SetAndGetBitInternal(_ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.SetAndGetBitInternal(&_BaseTenantSpace.TransactOpts, _ident, _ord)
}

// SetAndGetBitInternal is a paid mutator transaction binding the contract method 0x33f12cf4.
//
// Solidity: function setAndGetBitInternal(bytes32 _ident, uint8 _ord) returns(bool)
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) SetAndGetBitInternal(_ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.SetAndGetBitInternal(&_BaseTenantSpace.TransactOpts, _ident, _ord)
}

// SetDescription is a paid mutator transaction binding the contract method 0x90c3f38f.
//
// Solidity: function setDescription(string _desc) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactor) SetDescription(opts *bind.TransactOpts, _desc string) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "setDescription", _desc)
}

// SetDescription is a paid mutator transaction binding the contract method 0x90c3f38f.
//
// Solidity: function setDescription(string _desc) returns()
func (_BaseTenantSpace *BaseTenantSpaceSession) SetDescription(_desc string) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.SetDescription(&_BaseTenantSpace.TransactOpts, _desc)
}

// SetDescription is a paid mutator transaction binding the contract method 0x90c3f38f.
//
// Solidity: function setDescription(string _desc) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) SetDescription(_desc string) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.SetDescription(&_BaseTenantSpace.TransactOpts, _desc)
}

// SetFactoryManager is a paid mutator transaction binding the contract method 0x430e621e.
//
// Solidity: function setFactoryManager(address _factMan) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactor) SetFactoryManager(opts *bind.TransactOpts, _factMan common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "setFactoryManager", _factMan)
}

// SetFactoryManager is a paid mutator transaction binding the contract method 0x430e621e.
//
// Solidity: function setFactoryManager(address _factMan) returns()
func (_BaseTenantSpace *BaseTenantSpaceSession) SetFactoryManager(_factMan common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.SetFactoryManager(&_BaseTenantSpace.TransactOpts, _factMan)
}

// SetFactoryManager is a paid mutator transaction binding the contract method 0x430e621e.
//
// Solidity: function setFactoryManager(address _factMan) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) SetFactoryManager(_factMan common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.SetFactoryManager(&_BaseTenantSpace.TransactOpts, _factMan)
}

// SetGroupRights is a paid mutator transaction binding the contract method 0x22e564eb.
//
// Solidity: function setGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactor) SetGroupRights(opts *bind.TransactOpts, group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "setGroupRights", group, access_type, access)
}

// SetGroupRights is a paid mutator transaction binding the contract method 0x22e564eb.
//
// Solidity: function setGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_BaseTenantSpace *BaseTenantSpaceSession) SetGroupRights(group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.SetGroupRights(&_BaseTenantSpace.TransactOpts, group, access_type, access)
}

// SetGroupRights is a paid mutator transaction binding the contract method 0x22e564eb.
//
// Solidity: function setGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) SetGroupRights(group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.SetGroupRights(&_BaseTenantSpace.TransactOpts, group, access_type, access)
}

// SetKmsManager is a paid mutator transaction binding the contract method 0x87e38281.
//
// Solidity: function setKmsManager(address _kmsMan) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactor) SetKmsManager(opts *bind.TransactOpts, _kmsMan common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "setKmsManager", _kmsMan)
}

// SetKmsManager is a paid mutator transaction binding the contract method 0x87e38281.
//
// Solidity: function setKmsManager(address _kmsMan) returns()
func (_BaseTenantSpace *BaseTenantSpaceSession) SetKmsManager(_kmsMan common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.SetKmsManager(&_BaseTenantSpace.TransactOpts, _kmsMan)
}

// SetKmsManager is a paid mutator transaction binding the contract method 0x87e38281.
//
// Solidity: function setKmsManager(address _kmsMan) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) SetKmsManager(_kmsMan common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.SetKmsManager(&_BaseTenantSpace.TransactOpts, _kmsMan)
}

// SetNodeManager is a paid mutator transaction binding the contract method 0x1319e7e1.
//
// Solidity: function setNodeManager(address _nodeMan) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactor) SetNodeManager(opts *bind.TransactOpts, _nodeMan common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "setNodeManager", _nodeMan)
}

// SetNodeManager is a paid mutator transaction binding the contract method 0x1319e7e1.
//
// Solidity: function setNodeManager(address _nodeMan) returns()
func (_BaseTenantSpace *BaseTenantSpaceSession) SetNodeManager(_nodeMan common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.SetNodeManager(&_BaseTenantSpace.TransactOpts, _nodeMan)
}

// SetNodeManager is a paid mutator transaction binding the contract method 0x1319e7e1.
//
// Solidity: function setNodeManager(address _nodeMan) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) SetNodeManager(_nodeMan common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.SetNodeManager(&_BaseTenantSpace.TransactOpts, _nodeMan)
}

// SetRights is a paid mutator transaction binding the contract method 0x0fe1b5a2.
//
// Solidity: function setRights(address stakeholder, uint8 access_type, uint8 access) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactor) SetRights(opts *bind.TransactOpts, stakeholder common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "setRights", stakeholder, access_type, access)
}

// SetRights is a paid mutator transaction binding the contract method 0x0fe1b5a2.
//
// Solidity: function setRights(address stakeholder, uint8 access_type, uint8 access) returns()
func (_BaseTenantSpace *BaseTenantSpaceSession) SetRights(stakeholder common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.SetRights(&_BaseTenantSpace.TransactOpts, stakeholder, access_type, access)
}

// SetRights is a paid mutator transaction binding the contract method 0x0fe1b5a2.
//
// Solidity: function setRights(address stakeholder, uint8 access_type, uint8 access) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) SetRights(stakeholder common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.SetRights(&_BaseTenantSpace.TransactOpts, stakeholder, access_type, access)
}

// SetUserManager is a paid mutator transaction binding the contract method 0x97d0b02c.
//
// Solidity: function setUserManager(address _userMan) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactor) SetUserManager(opts *bind.TransactOpts, _userMan common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "setUserManager", _userMan)
}

// SetUserManager is a paid mutator transaction binding the contract method 0x97d0b02c.
//
// Solidity: function setUserManager(address _userMan) returns()
func (_BaseTenantSpace *BaseTenantSpaceSession) SetUserManager(_userMan common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.SetUserManager(&_BaseTenantSpace.TransactOpts, _userMan)
}

// SetUserManager is a paid mutator transaction binding the contract method 0x97d0b02c.
//
// Solidity: function setUserManager(address _userMan) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) SetUserManager(_userMan common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.SetUserManager(&_BaseTenantSpace.TransactOpts, _userMan)
}

// SetVisibility is a paid mutator transaction binding the contract method 0xaa024e8b.
//
// Solidity: function setVisibility(uint8 _visibility_code) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactor) SetVisibility(opts *bind.TransactOpts, _visibility_code uint8) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "setVisibility", _visibility_code)
}

// SetVisibility is a paid mutator transaction binding the contract method 0xaa024e8b.
//
// Solidity: function setVisibility(uint8 _visibility_code) returns()
func (_BaseTenantSpace *BaseTenantSpaceSession) SetVisibility(_visibility_code uint8) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.SetVisibility(&_BaseTenantSpace.TransactOpts, _visibility_code)
}

// SetVisibility is a paid mutator transaction binding the contract method 0xaa024e8b.
//
// Solidity: function setVisibility(uint8 _visibility_code) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) SetVisibility(_visibility_code uint8) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.SetVisibility(&_BaseTenantSpace.TransactOpts, _visibility_code)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(address _to, uint256 _amount) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactor) Transfer(opts *bind.TransactOpts, _to common.Address, _amount *big.Int) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "transfer", _to, _amount)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(address _to, uint256 _amount) returns()
func (_BaseTenantSpace *BaseTenantSpaceSession) Transfer(_to common.Address, _amount *big.Int) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.Transfer(&_BaseTenantSpace.TransactOpts, _to, _amount)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(address _to, uint256 _amount) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) Transfer(_to common.Address, _amount *big.Int) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.Transfer(&_BaseTenantSpace.TransactOpts, _to, _amount)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactor) TransferCreatorship(opts *bind.TransactOpts, newCreator common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "transferCreatorship", newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseTenantSpace *BaseTenantSpaceSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.TransferCreatorship(&_BaseTenantSpace.TransactOpts, newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.TransferCreatorship(&_BaseTenantSpace.TransactOpts, newCreator)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseTenantSpace *BaseTenantSpaceSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.TransferOwnership(&_BaseTenantSpace.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.TransferOwnership(&_BaseTenantSpace.TransactOpts, newOwner)
}

// UpdateRequest is a paid mutator transaction binding the contract method 0xc287e0ed.
//
// Solidity: function updateRequest() returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactor) UpdateRequest(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseTenantSpace.contract.Transact(opts, "updateRequest")
}

// UpdateRequest is a paid mutator transaction binding the contract method 0xc287e0ed.
//
// Solidity: function updateRequest() returns()
func (_BaseTenantSpace *BaseTenantSpaceSession) UpdateRequest() (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.UpdateRequest(&_BaseTenantSpace.TransactOpts)
}

// UpdateRequest is a paid mutator transaction binding the contract method 0xc287e0ed.
//
// Solidity: function updateRequest() returns()
func (_BaseTenantSpace *BaseTenantSpaceTransactorSession) UpdateRequest() (*types.Transaction, error) {
	return _BaseTenantSpace.Contract.UpdateRequest(&_BaseTenantSpace.TransactOpts)
}

// BaseTenantSpaceAccessRequestV3Iterator is returned from FilterAccessRequestV3 and is used to iterate over the raw logs and unpacked data for AccessRequestV3 events raised by the BaseTenantSpace contract.
type BaseTenantSpaceAccessRequestV3Iterator struct {
	Event *BaseTenantSpaceAccessRequestV3 // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseTenantSpaceAccessRequestV3Iterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseTenantSpaceAccessRequestV3)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseTenantSpaceAccessRequestV3)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseTenantSpaceAccessRequestV3Iterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseTenantSpaceAccessRequestV3Iterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseTenantSpaceAccessRequestV3 represents a AccessRequestV3 event raised by the BaseTenantSpace contract.
type BaseTenantSpaceAccessRequestV3 struct {
	RequestNonce     *big.Int
	ParentAddress    common.Address
	ContextHash      [32]byte
	Accessor         common.Address
	RequestTimestamp *big.Int
	Raw              types.Log // Blockchain specific contextual infos
}

// FilterAccessRequestV3 is a free log retrieval operation binding the contract event 0x545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c7.
//
// Solidity: event AccessRequestV3(uint256 requestNonce, address parentAddress, bytes32 contextHash, address accessor, uint256 requestTimestamp)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) FilterAccessRequestV3(opts *bind.FilterOpts) (*BaseTenantSpaceAccessRequestV3Iterator, error) {

	logs, sub, err := _BaseTenantSpace.contract.FilterLogs(opts, "AccessRequestV3")
	if err != nil {
		return nil, err
	}
	return &BaseTenantSpaceAccessRequestV3Iterator{contract: _BaseTenantSpace.contract, event: "AccessRequestV3", logs: logs, sub: sub}, nil
}

// WatchAccessRequestV3 is a free log subscription operation binding the contract event 0x545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c7.
//
// Solidity: event AccessRequestV3(uint256 requestNonce, address parentAddress, bytes32 contextHash, address accessor, uint256 requestTimestamp)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) WatchAccessRequestV3(opts *bind.WatchOpts, sink chan<- *BaseTenantSpaceAccessRequestV3) (event.Subscription, error) {

	logs, sub, err := _BaseTenantSpace.contract.WatchLogs(opts, "AccessRequestV3")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseTenantSpaceAccessRequestV3)
				if err := _BaseTenantSpace.contract.UnpackLog(event, "AccessRequestV3", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAccessRequestV3 is a log parse operation binding the contract event 0x545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c7.
//
// Solidity: event AccessRequestV3(uint256 requestNonce, address parentAddress, bytes32 contextHash, address accessor, uint256 requestTimestamp)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) ParseAccessRequestV3(log types.Log) (*BaseTenantSpaceAccessRequestV3, error) {
	event := new(BaseTenantSpaceAccessRequestV3)
	if err := _BaseTenantSpace.contract.UnpackLog(event, "AccessRequestV3", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseTenantSpaceAddTenantGroupIterator is returned from FilterAddTenantGroup and is used to iterate over the raw logs and unpacked data for AddTenantGroup events raised by the BaseTenantSpace contract.
type BaseTenantSpaceAddTenantGroupIterator struct {
	Event *BaseTenantSpaceAddTenantGroup // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseTenantSpaceAddTenantGroupIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseTenantSpaceAddTenantGroup)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseTenantSpaceAddTenantGroup)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseTenantSpaceAddTenantGroupIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseTenantSpaceAddTenantGroupIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseTenantSpaceAddTenantGroup represents a AddTenantGroup event raised by the BaseTenantSpace contract.
type BaseTenantSpaceAddTenantGroup struct {
	GroupId   [32]byte
	GroupAddr common.Address
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterAddTenantGroup is a free log retrieval operation binding the contract event 0x145b7e243e91890686f5ba84dd1254f7497f549ffb955f4871b3d27d4137d471.
//
// Solidity: event AddTenantGroup(bytes32 groupId, address groupAddr)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) FilterAddTenantGroup(opts *bind.FilterOpts) (*BaseTenantSpaceAddTenantGroupIterator, error) {

	logs, sub, err := _BaseTenantSpace.contract.FilterLogs(opts, "AddTenantGroup")
	if err != nil {
		return nil, err
	}
	return &BaseTenantSpaceAddTenantGroupIterator{contract: _BaseTenantSpace.contract, event: "AddTenantGroup", logs: logs, sub: sub}, nil
}

// WatchAddTenantGroup is a free log subscription operation binding the contract event 0x145b7e243e91890686f5ba84dd1254f7497f549ffb955f4871b3d27d4137d471.
//
// Solidity: event AddTenantGroup(bytes32 groupId, address groupAddr)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) WatchAddTenantGroup(opts *bind.WatchOpts, sink chan<- *BaseTenantSpaceAddTenantGroup) (event.Subscription, error) {

	logs, sub, err := _BaseTenantSpace.contract.WatchLogs(opts, "AddTenantGroup")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseTenantSpaceAddTenantGroup)
				if err := _BaseTenantSpace.contract.UnpackLog(event, "AddTenantGroup", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAddTenantGroup is a log parse operation binding the contract event 0x145b7e243e91890686f5ba84dd1254f7497f549ffb955f4871b3d27d4137d471.
//
// Solidity: event AddTenantGroup(bytes32 groupId, address groupAddr)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) ParseAddTenantGroup(log types.Log) (*BaseTenantSpaceAddTenantGroup, error) {
	event := new(BaseTenantSpaceAddTenantGroup)
	if err := _BaseTenantSpace.contract.UnpackLog(event, "AddTenantGroup", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseTenantSpaceBitSetAndGetIterator is returned from FilterBitSetAndGet and is used to iterate over the raw logs and unpacked data for BitSetAndGet events raised by the BaseTenantSpace contract.
type BaseTenantSpaceBitSetAndGetIterator struct {
	Event *BaseTenantSpaceBitSetAndGet // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseTenantSpaceBitSetAndGetIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseTenantSpaceBitSetAndGet)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseTenantSpaceBitSetAndGet)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseTenantSpaceBitSetAndGetIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseTenantSpaceBitSetAndGetIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseTenantSpaceBitSetAndGet represents a BitSetAndGet event raised by the BaseTenantSpace contract.
type BaseTenantSpaceBitSetAndGet struct {
	Ident [32]byte
	Ord   uint8
	Prev  bool
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterBitSetAndGet is a free log retrieval operation binding the contract event 0x4d04842102a74d85e502eec18f3048954c6d6e1d1c368c7bc49edcdcd45e9c3d.
//
// Solidity: event BitSetAndGet(bytes32 ident, uint8 ord, bool prev)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) FilterBitSetAndGet(opts *bind.FilterOpts) (*BaseTenantSpaceBitSetAndGetIterator, error) {

	logs, sub, err := _BaseTenantSpace.contract.FilterLogs(opts, "BitSetAndGet")
	if err != nil {
		return nil, err
	}
	return &BaseTenantSpaceBitSetAndGetIterator{contract: _BaseTenantSpace.contract, event: "BitSetAndGet", logs: logs, sub: sub}, nil
}

// WatchBitSetAndGet is a free log subscription operation binding the contract event 0x4d04842102a74d85e502eec18f3048954c6d6e1d1c368c7bc49edcdcd45e9c3d.
//
// Solidity: event BitSetAndGet(bytes32 ident, uint8 ord, bool prev)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) WatchBitSetAndGet(opts *bind.WatchOpts, sink chan<- *BaseTenantSpaceBitSetAndGet) (event.Subscription, error) {

	logs, sub, err := _BaseTenantSpace.contract.WatchLogs(opts, "BitSetAndGet")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseTenantSpaceBitSetAndGet)
				if err := _BaseTenantSpace.contract.UnpackLog(event, "BitSetAndGet", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseBitSetAndGet is a log parse operation binding the contract event 0x4d04842102a74d85e502eec18f3048954c6d6e1d1c368c7bc49edcdcd45e9c3d.
//
// Solidity: event BitSetAndGet(bytes32 ident, uint8 ord, bool prev)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) ParseBitSetAndGet(log types.Log) (*BaseTenantSpaceBitSetAndGet, error) {
	event := new(BaseTenantSpaceBitSetAndGet)
	if err := _BaseTenantSpace.contract.UnpackLog(event, "BitSetAndGet", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseTenantSpaceCommitPendingIterator is returned from FilterCommitPending and is used to iterate over the raw logs and unpacked data for CommitPending events raised by the BaseTenantSpace contract.
type BaseTenantSpaceCommitPendingIterator struct {
	Event *BaseTenantSpaceCommitPending // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseTenantSpaceCommitPendingIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseTenantSpaceCommitPending)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseTenantSpaceCommitPending)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseTenantSpaceCommitPendingIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseTenantSpaceCommitPendingIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseTenantSpaceCommitPending represents a CommitPending event raised by the BaseTenantSpace contract.
type BaseTenantSpaceCommitPending struct {
	SpaceAddress  common.Address
	ParentAddress common.Address
	ObjectHash    string
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterCommitPending is a free log retrieval operation binding the contract event 0xb3ac059d88af6016aca1aebb7b3e796f2e7420435c59c563687814e9b85daa75.
//
// Solidity: event CommitPending(address spaceAddress, address parentAddress, string objectHash)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) FilterCommitPending(opts *bind.FilterOpts) (*BaseTenantSpaceCommitPendingIterator, error) {

	logs, sub, err := _BaseTenantSpace.contract.FilterLogs(opts, "CommitPending")
	if err != nil {
		return nil, err
	}
	return &BaseTenantSpaceCommitPendingIterator{contract: _BaseTenantSpace.contract, event: "CommitPending", logs: logs, sub: sub}, nil
}

// WatchCommitPending is a free log subscription operation binding the contract event 0xb3ac059d88af6016aca1aebb7b3e796f2e7420435c59c563687814e9b85daa75.
//
// Solidity: event CommitPending(address spaceAddress, address parentAddress, string objectHash)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) WatchCommitPending(opts *bind.WatchOpts, sink chan<- *BaseTenantSpaceCommitPending) (event.Subscription, error) {

	logs, sub, err := _BaseTenantSpace.contract.WatchLogs(opts, "CommitPending")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseTenantSpaceCommitPending)
				if err := _BaseTenantSpace.contract.UnpackLog(event, "CommitPending", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseCommitPending is a log parse operation binding the contract event 0xb3ac059d88af6016aca1aebb7b3e796f2e7420435c59c563687814e9b85daa75.
//
// Solidity: event CommitPending(address spaceAddress, address parentAddress, string objectHash)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) ParseCommitPending(log types.Log) (*BaseTenantSpaceCommitPending, error) {
	event := new(BaseTenantSpaceCommitPending)
	if err := _BaseTenantSpace.contract.UnpackLog(event, "CommitPending", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseTenantSpaceContentTypeAddedIterator is returned from FilterContentTypeAdded and is used to iterate over the raw logs and unpacked data for ContentTypeAdded events raised by the BaseTenantSpace contract.
type BaseTenantSpaceContentTypeAddedIterator struct {
	Event *BaseTenantSpaceContentTypeAdded // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseTenantSpaceContentTypeAddedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseTenantSpaceContentTypeAdded)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseTenantSpaceContentTypeAdded)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseTenantSpaceContentTypeAddedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseTenantSpaceContentTypeAddedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseTenantSpaceContentTypeAdded represents a ContentTypeAdded event raised by the BaseTenantSpace contract.
type BaseTenantSpaceContentTypeAdded struct {
	ContentType     common.Address
	ContentContract common.Address
	Raw             types.Log // Blockchain specific contextual infos
}

// FilterContentTypeAdded is a free log retrieval operation binding the contract event 0x280016f7418306a55542432120fd1a239ef9fcc1a92694d8d44ca76be0249ea7.
//
// Solidity: event ContentTypeAdded(address contentType, address contentContract)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) FilterContentTypeAdded(opts *bind.FilterOpts) (*BaseTenantSpaceContentTypeAddedIterator, error) {

	logs, sub, err := _BaseTenantSpace.contract.FilterLogs(opts, "ContentTypeAdded")
	if err != nil {
		return nil, err
	}
	return &BaseTenantSpaceContentTypeAddedIterator{contract: _BaseTenantSpace.contract, event: "ContentTypeAdded", logs: logs, sub: sub}, nil
}

// WatchContentTypeAdded is a free log subscription operation binding the contract event 0x280016f7418306a55542432120fd1a239ef9fcc1a92694d8d44ca76be0249ea7.
//
// Solidity: event ContentTypeAdded(address contentType, address contentContract)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) WatchContentTypeAdded(opts *bind.WatchOpts, sink chan<- *BaseTenantSpaceContentTypeAdded) (event.Subscription, error) {

	logs, sub, err := _BaseTenantSpace.contract.WatchLogs(opts, "ContentTypeAdded")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseTenantSpaceContentTypeAdded)
				if err := _BaseTenantSpace.contract.UnpackLog(event, "ContentTypeAdded", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseContentTypeAdded is a log parse operation binding the contract event 0x280016f7418306a55542432120fd1a239ef9fcc1a92694d8d44ca76be0249ea7.
//
// Solidity: event ContentTypeAdded(address contentType, address contentContract)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) ParseContentTypeAdded(log types.Log) (*BaseTenantSpaceContentTypeAdded, error) {
	event := new(BaseTenantSpaceContentTypeAdded)
	if err := _BaseTenantSpace.contract.UnpackLog(event, "ContentTypeAdded", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseTenantSpaceContentTypeRemovedIterator is returned from FilterContentTypeRemoved and is used to iterate over the raw logs and unpacked data for ContentTypeRemoved events raised by the BaseTenantSpace contract.
type BaseTenantSpaceContentTypeRemovedIterator struct {
	Event *BaseTenantSpaceContentTypeRemoved // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseTenantSpaceContentTypeRemovedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseTenantSpaceContentTypeRemoved)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseTenantSpaceContentTypeRemoved)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseTenantSpaceContentTypeRemovedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseTenantSpaceContentTypeRemovedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseTenantSpaceContentTypeRemoved represents a ContentTypeRemoved event raised by the BaseTenantSpace contract.
type BaseTenantSpaceContentTypeRemoved struct {
	ContentType common.Address
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterContentTypeRemoved is a free log retrieval operation binding the contract event 0xd41375b9d347dfe722f90a780731abd23b7855f9cf14ea7063c4cab5f9ae58e2.
//
// Solidity: event ContentTypeRemoved(address contentType)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) FilterContentTypeRemoved(opts *bind.FilterOpts) (*BaseTenantSpaceContentTypeRemovedIterator, error) {

	logs, sub, err := _BaseTenantSpace.contract.FilterLogs(opts, "ContentTypeRemoved")
	if err != nil {
		return nil, err
	}
	return &BaseTenantSpaceContentTypeRemovedIterator{contract: _BaseTenantSpace.contract, event: "ContentTypeRemoved", logs: logs, sub: sub}, nil
}

// WatchContentTypeRemoved is a free log subscription operation binding the contract event 0xd41375b9d347dfe722f90a780731abd23b7855f9cf14ea7063c4cab5f9ae58e2.
//
// Solidity: event ContentTypeRemoved(address contentType)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) WatchContentTypeRemoved(opts *bind.WatchOpts, sink chan<- *BaseTenantSpaceContentTypeRemoved) (event.Subscription, error) {

	logs, sub, err := _BaseTenantSpace.contract.WatchLogs(opts, "ContentTypeRemoved")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseTenantSpaceContentTypeRemoved)
				if err := _BaseTenantSpace.contract.UnpackLog(event, "ContentTypeRemoved", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseContentTypeRemoved is a log parse operation binding the contract event 0xd41375b9d347dfe722f90a780731abd23b7855f9cf14ea7063c4cab5f9ae58e2.
//
// Solidity: event ContentTypeRemoved(address contentType)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) ParseContentTypeRemoved(log types.Log) (*BaseTenantSpaceContentTypeRemoved, error) {
	event := new(BaseTenantSpaceContentTypeRemoved)
	if err := _BaseTenantSpace.contract.UnpackLog(event, "ContentTypeRemoved", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseTenantSpaceCounterIncrementedIterator is returned from FilterCounterIncremented and is used to iterate over the raw logs and unpacked data for CounterIncremented events raised by the BaseTenantSpace contract.
type BaseTenantSpaceCounterIncrementedIterator struct {
	Event *BaseTenantSpaceCounterIncremented // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseTenantSpaceCounterIncrementedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseTenantSpaceCounterIncremented)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseTenantSpaceCounterIncremented)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseTenantSpaceCounterIncrementedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseTenantSpaceCounterIncrementedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseTenantSpaceCounterIncremented represents a CounterIncremented event raised by the BaseTenantSpace contract.
type BaseTenantSpaceCounterIncremented struct {
	Ident [32]byte
	Slot  uint8
	Val   uint32
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterCounterIncremented is a free log retrieval operation binding the contract event 0x77a2025a71f0f345cfd7e8a699b42215025b6ab4706dcfaa29393790aa63383f.
//
// Solidity: event CounterIncremented(bytes32 ident, uint8 slot, uint32 val)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) FilterCounterIncremented(opts *bind.FilterOpts) (*BaseTenantSpaceCounterIncrementedIterator, error) {

	logs, sub, err := _BaseTenantSpace.contract.FilterLogs(opts, "CounterIncremented")
	if err != nil {
		return nil, err
	}
	return &BaseTenantSpaceCounterIncrementedIterator{contract: _BaseTenantSpace.contract, event: "CounterIncremented", logs: logs, sub: sub}, nil
}

// WatchCounterIncremented is a free log subscription operation binding the contract event 0x77a2025a71f0f345cfd7e8a699b42215025b6ab4706dcfaa29393790aa63383f.
//
// Solidity: event CounterIncremented(bytes32 ident, uint8 slot, uint32 val)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) WatchCounterIncremented(opts *bind.WatchOpts, sink chan<- *BaseTenantSpaceCounterIncremented) (event.Subscription, error) {

	logs, sub, err := _BaseTenantSpace.contract.WatchLogs(opts, "CounterIncremented")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseTenantSpaceCounterIncremented)
				if err := _BaseTenantSpace.contract.UnpackLog(event, "CounterIncremented", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseCounterIncremented is a log parse operation binding the contract event 0x77a2025a71f0f345cfd7e8a699b42215025b6ab4706dcfaa29393790aa63383f.
//
// Solidity: event CounterIncremented(bytes32 ident, uint8 slot, uint32 val)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) ParseCounterIncremented(log types.Log) (*BaseTenantSpaceCounterIncremented, error) {
	event := new(BaseTenantSpaceCounterIncremented)
	if err := _BaseTenantSpace.contract.UnpackLog(event, "CounterIncremented", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseTenantSpaceCreateTenantIterator is returned from FilterCreateTenant and is used to iterate over the raw logs and unpacked data for CreateTenant events raised by the BaseTenantSpace contract.
type BaseTenantSpaceCreateTenantIterator struct {
	Event *BaseTenantSpaceCreateTenant // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseTenantSpaceCreateTenantIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseTenantSpaceCreateTenant)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseTenantSpaceCreateTenant)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseTenantSpaceCreateTenantIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseTenantSpaceCreateTenantIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseTenantSpaceCreateTenant represents a CreateTenant event raised by the BaseTenantSpace contract.
type BaseTenantSpaceCreateTenant struct {
	Version [32]byte
	Owner   common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterCreateTenant is a free log retrieval operation binding the contract event 0xc2fe67ac699789805c53a93eea70eb0e316deaf8db4b810382d2412ba4fcb4c8.
//
// Solidity: event CreateTenant(bytes32 version, address owner)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) FilterCreateTenant(opts *bind.FilterOpts) (*BaseTenantSpaceCreateTenantIterator, error) {

	logs, sub, err := _BaseTenantSpace.contract.FilterLogs(opts, "CreateTenant")
	if err != nil {
		return nil, err
	}
	return &BaseTenantSpaceCreateTenantIterator{contract: _BaseTenantSpace.contract, event: "CreateTenant", logs: logs, sub: sub}, nil
}

// WatchCreateTenant is a free log subscription operation binding the contract event 0xc2fe67ac699789805c53a93eea70eb0e316deaf8db4b810382d2412ba4fcb4c8.
//
// Solidity: event CreateTenant(bytes32 version, address owner)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) WatchCreateTenant(opts *bind.WatchOpts, sink chan<- *BaseTenantSpaceCreateTenant) (event.Subscription, error) {

	logs, sub, err := _BaseTenantSpace.contract.WatchLogs(opts, "CreateTenant")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseTenantSpaceCreateTenant)
				if err := _BaseTenantSpace.contract.UnpackLog(event, "CreateTenant", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseCreateTenant is a log parse operation binding the contract event 0xc2fe67ac699789805c53a93eea70eb0e316deaf8db4b810382d2412ba4fcb4c8.
//
// Solidity: event CreateTenant(bytes32 version, address owner)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) ParseCreateTenant(log types.Log) (*BaseTenantSpaceCreateTenant, error) {
	event := new(BaseTenantSpaceCreateTenant)
	if err := _BaseTenantSpace.contract.UnpackLog(event, "CreateTenant", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseTenantSpaceFunctionsAddedIterator is returned from FilterFunctionsAdded and is used to iterate over the raw logs and unpacked data for FunctionsAdded events raised by the BaseTenantSpace contract.
type BaseTenantSpaceFunctionsAddedIterator struct {
	Event *BaseTenantSpaceFunctionsAdded // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseTenantSpaceFunctionsAddedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseTenantSpaceFunctionsAdded)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseTenantSpaceFunctionsAdded)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseTenantSpaceFunctionsAddedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseTenantSpaceFunctionsAddedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseTenantSpaceFunctionsAdded represents a FunctionsAdded event raised by the BaseTenantSpace contract.
type BaseTenantSpaceFunctionsAdded struct {
	Func4Bytes [][4]byte
	FuncAddr   common.Address
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterFunctionsAdded is a free log retrieval operation binding the contract event 0x2fd37118a7338c6d45366419ced87ba93589ba1cca2489e8fb42b55de8874266.
//
// Solidity: event FunctionsAdded(bytes4[] func4Bytes, address funcAddr)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) FilterFunctionsAdded(opts *bind.FilterOpts) (*BaseTenantSpaceFunctionsAddedIterator, error) {

	logs, sub, err := _BaseTenantSpace.contract.FilterLogs(opts, "FunctionsAdded")
	if err != nil {
		return nil, err
	}
	return &BaseTenantSpaceFunctionsAddedIterator{contract: _BaseTenantSpace.contract, event: "FunctionsAdded", logs: logs, sub: sub}, nil
}

// WatchFunctionsAdded is a free log subscription operation binding the contract event 0x2fd37118a7338c6d45366419ced87ba93589ba1cca2489e8fb42b55de8874266.
//
// Solidity: event FunctionsAdded(bytes4[] func4Bytes, address funcAddr)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) WatchFunctionsAdded(opts *bind.WatchOpts, sink chan<- *BaseTenantSpaceFunctionsAdded) (event.Subscription, error) {

	logs, sub, err := _BaseTenantSpace.contract.WatchLogs(opts, "FunctionsAdded")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseTenantSpaceFunctionsAdded)
				if err := _BaseTenantSpace.contract.UnpackLog(event, "FunctionsAdded", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseFunctionsAdded is a log parse operation binding the contract event 0x2fd37118a7338c6d45366419ced87ba93589ba1cca2489e8fb42b55de8874266.
//
// Solidity: event FunctionsAdded(bytes4[] func4Bytes, address funcAddr)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) ParseFunctionsAdded(log types.Log) (*BaseTenantSpaceFunctionsAdded, error) {
	event := new(BaseTenantSpaceFunctionsAdded)
	if err := _BaseTenantSpace.contract.UnpackLog(event, "FunctionsAdded", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseTenantSpaceGetAccessWalletIterator is returned from FilterGetAccessWallet and is used to iterate over the raw logs and unpacked data for GetAccessWallet events raised by the BaseTenantSpace contract.
type BaseTenantSpaceGetAccessWalletIterator struct {
	Event *BaseTenantSpaceGetAccessWallet // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseTenantSpaceGetAccessWalletIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseTenantSpaceGetAccessWallet)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseTenantSpaceGetAccessWallet)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseTenantSpaceGetAccessWalletIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseTenantSpaceGetAccessWalletIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseTenantSpaceGetAccessWallet represents a GetAccessWallet event raised by the BaseTenantSpace contract.
type BaseTenantSpaceGetAccessWallet struct {
	WalletAddress common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterGetAccessWallet is a free log retrieval operation binding the contract event 0x1c917c3c2698bd5b98acb9772728da62f2ce3670e4578910a6465b955f63e157.
//
// Solidity: event GetAccessWallet(address walletAddress)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) FilterGetAccessWallet(opts *bind.FilterOpts) (*BaseTenantSpaceGetAccessWalletIterator, error) {

	logs, sub, err := _BaseTenantSpace.contract.FilterLogs(opts, "GetAccessWallet")
	if err != nil {
		return nil, err
	}
	return &BaseTenantSpaceGetAccessWalletIterator{contract: _BaseTenantSpace.contract, event: "GetAccessWallet", logs: logs, sub: sub}, nil
}

// WatchGetAccessWallet is a free log subscription operation binding the contract event 0x1c917c3c2698bd5b98acb9772728da62f2ce3670e4578910a6465b955f63e157.
//
// Solidity: event GetAccessWallet(address walletAddress)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) WatchGetAccessWallet(opts *bind.WatchOpts, sink chan<- *BaseTenantSpaceGetAccessWallet) (event.Subscription, error) {

	logs, sub, err := _BaseTenantSpace.contract.WatchLogs(opts, "GetAccessWallet")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseTenantSpaceGetAccessWallet)
				if err := _BaseTenantSpace.contract.UnpackLog(event, "GetAccessWallet", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseGetAccessWallet is a log parse operation binding the contract event 0x1c917c3c2698bd5b98acb9772728da62f2ce3670e4578910a6465b955f63e157.
//
// Solidity: event GetAccessWallet(address walletAddress)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) ParseGetAccessWallet(log types.Log) (*BaseTenantSpaceGetAccessWallet, error) {
	event := new(BaseTenantSpaceGetAccessWallet)
	if err := _BaseTenantSpace.contract.UnpackLog(event, "GetAccessWallet", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseTenantSpaceObjectMetaChangedIterator is returned from FilterObjectMetaChanged and is used to iterate over the raw logs and unpacked data for ObjectMetaChanged events raised by the BaseTenantSpace contract.
type BaseTenantSpaceObjectMetaChangedIterator struct {
	Event *BaseTenantSpaceObjectMetaChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseTenantSpaceObjectMetaChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseTenantSpaceObjectMetaChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseTenantSpaceObjectMetaChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseTenantSpaceObjectMetaChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseTenantSpaceObjectMetaChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseTenantSpaceObjectMetaChanged represents a ObjectMetaChanged event raised by the BaseTenantSpace contract.
type BaseTenantSpaceObjectMetaChanged struct {
	Key []byte
	Raw types.Log // Blockchain specific contextual infos
}

// FilterObjectMetaChanged is a free log retrieval operation binding the contract event 0xe2b310ec9dabdc05229a748e07666c3bc9c46c6ef465cce30d0aa3aa64a0644c.
//
// Solidity: event ObjectMetaChanged(bytes key)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) FilterObjectMetaChanged(opts *bind.FilterOpts) (*BaseTenantSpaceObjectMetaChangedIterator, error) {

	logs, sub, err := _BaseTenantSpace.contract.FilterLogs(opts, "ObjectMetaChanged")
	if err != nil {
		return nil, err
	}
	return &BaseTenantSpaceObjectMetaChangedIterator{contract: _BaseTenantSpace.contract, event: "ObjectMetaChanged", logs: logs, sub: sub}, nil
}

// WatchObjectMetaChanged is a free log subscription operation binding the contract event 0xe2b310ec9dabdc05229a748e07666c3bc9c46c6ef465cce30d0aa3aa64a0644c.
//
// Solidity: event ObjectMetaChanged(bytes key)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) WatchObjectMetaChanged(opts *bind.WatchOpts, sink chan<- *BaseTenantSpaceObjectMetaChanged) (event.Subscription, error) {

	logs, sub, err := _BaseTenantSpace.contract.WatchLogs(opts, "ObjectMetaChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseTenantSpaceObjectMetaChanged)
				if err := _BaseTenantSpace.contract.UnpackLog(event, "ObjectMetaChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseObjectMetaChanged is a log parse operation binding the contract event 0xe2b310ec9dabdc05229a748e07666c3bc9c46c6ef465cce30d0aa3aa64a0644c.
//
// Solidity: event ObjectMetaChanged(bytes key)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) ParseObjectMetaChanged(log types.Log) (*BaseTenantSpaceObjectMetaChanged, error) {
	event := new(BaseTenantSpaceObjectMetaChanged)
	if err := _BaseTenantSpace.contract.UnpackLog(event, "ObjectMetaChanged", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseTenantSpaceRemoveTenantGroupIterator is returned from FilterRemoveTenantGroup and is used to iterate over the raw logs and unpacked data for RemoveTenantGroup events raised by the BaseTenantSpace contract.
type BaseTenantSpaceRemoveTenantGroupIterator struct {
	Event *BaseTenantSpaceRemoveTenantGroup // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseTenantSpaceRemoveTenantGroupIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseTenantSpaceRemoveTenantGroup)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseTenantSpaceRemoveTenantGroup)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseTenantSpaceRemoveTenantGroupIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseTenantSpaceRemoveTenantGroupIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseTenantSpaceRemoveTenantGroup represents a RemoveTenantGroup event raised by the BaseTenantSpace contract.
type BaseTenantSpaceRemoveTenantGroup struct {
	GroupId   [32]byte
	GroupAddr common.Address
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterRemoveTenantGroup is a free log retrieval operation binding the contract event 0xa4ba7d16ec48ae0b1af6cf3707ad062b11503d59527bca97e68886e7f6991456.
//
// Solidity: event RemoveTenantGroup(bytes32 groupId, address groupAddr)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) FilterRemoveTenantGroup(opts *bind.FilterOpts) (*BaseTenantSpaceRemoveTenantGroupIterator, error) {

	logs, sub, err := _BaseTenantSpace.contract.FilterLogs(opts, "RemoveTenantGroup")
	if err != nil {
		return nil, err
	}
	return &BaseTenantSpaceRemoveTenantGroupIterator{contract: _BaseTenantSpace.contract, event: "RemoveTenantGroup", logs: logs, sub: sub}, nil
}

// WatchRemoveTenantGroup is a free log subscription operation binding the contract event 0xa4ba7d16ec48ae0b1af6cf3707ad062b11503d59527bca97e68886e7f6991456.
//
// Solidity: event RemoveTenantGroup(bytes32 groupId, address groupAddr)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) WatchRemoveTenantGroup(opts *bind.WatchOpts, sink chan<- *BaseTenantSpaceRemoveTenantGroup) (event.Subscription, error) {

	logs, sub, err := _BaseTenantSpace.contract.WatchLogs(opts, "RemoveTenantGroup")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseTenantSpaceRemoveTenantGroup)
				if err := _BaseTenantSpace.contract.UnpackLog(event, "RemoveTenantGroup", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRemoveTenantGroup is a log parse operation binding the contract event 0xa4ba7d16ec48ae0b1af6cf3707ad062b11503d59527bca97e68886e7f6991456.
//
// Solidity: event RemoveTenantGroup(bytes32 groupId, address groupAddr)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) ParseRemoveTenantGroup(log types.Log) (*BaseTenantSpaceRemoveTenantGroup, error) {
	event := new(BaseTenantSpaceRemoveTenantGroup)
	if err := _BaseTenantSpace.contract.UnpackLog(event, "RemoveTenantGroup", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseTenantSpaceSetFactoryManagerIterator is returned from FilterSetFactoryManager and is used to iterate over the raw logs and unpacked data for SetFactoryManager events raised by the BaseTenantSpace contract.
type BaseTenantSpaceSetFactoryManagerIterator struct {
	Event *BaseTenantSpaceSetFactoryManager // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseTenantSpaceSetFactoryManagerIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseTenantSpaceSetFactoryManager)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseTenantSpaceSetFactoryManager)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseTenantSpaceSetFactoryManagerIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseTenantSpaceSetFactoryManagerIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseTenantSpaceSetFactoryManager represents a SetFactoryManager event raised by the BaseTenantSpace contract.
type BaseTenantSpaceSetFactoryManager struct {
	NewManager  common.Address
	PrevManager common.Address
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterSetFactoryManager is a free log retrieval operation binding the contract event 0xfa2af382c197e27affb4e04f89f42556c71015346416b56be15b3aee3c87f661.
//
// Solidity: event SetFactoryManager(address newManager, address prevManager)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) FilterSetFactoryManager(opts *bind.FilterOpts) (*BaseTenantSpaceSetFactoryManagerIterator, error) {

	logs, sub, err := _BaseTenantSpace.contract.FilterLogs(opts, "SetFactoryManager")
	if err != nil {
		return nil, err
	}
	return &BaseTenantSpaceSetFactoryManagerIterator{contract: _BaseTenantSpace.contract, event: "SetFactoryManager", logs: logs, sub: sub}, nil
}

// WatchSetFactoryManager is a free log subscription operation binding the contract event 0xfa2af382c197e27affb4e04f89f42556c71015346416b56be15b3aee3c87f661.
//
// Solidity: event SetFactoryManager(address newManager, address prevManager)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) WatchSetFactoryManager(opts *bind.WatchOpts, sink chan<- *BaseTenantSpaceSetFactoryManager) (event.Subscription, error) {

	logs, sub, err := _BaseTenantSpace.contract.WatchLogs(opts, "SetFactoryManager")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseTenantSpaceSetFactoryManager)
				if err := _BaseTenantSpace.contract.UnpackLog(event, "SetFactoryManager", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseSetFactoryManager is a log parse operation binding the contract event 0xfa2af382c197e27affb4e04f89f42556c71015346416b56be15b3aee3c87f661.
//
// Solidity: event SetFactoryManager(address newManager, address prevManager)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) ParseSetFactoryManager(log types.Log) (*BaseTenantSpaceSetFactoryManager, error) {
	event := new(BaseTenantSpaceSetFactoryManager)
	if err := _BaseTenantSpace.contract.UnpackLog(event, "SetFactoryManager", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseTenantSpaceSetKmsManagerIterator is returned from FilterSetKmsManager and is used to iterate over the raw logs and unpacked data for SetKmsManager events raised by the BaseTenantSpace contract.
type BaseTenantSpaceSetKmsManagerIterator struct {
	Event *BaseTenantSpaceSetKmsManager // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseTenantSpaceSetKmsManagerIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseTenantSpaceSetKmsManager)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseTenantSpaceSetKmsManager)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseTenantSpaceSetKmsManagerIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseTenantSpaceSetKmsManagerIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseTenantSpaceSetKmsManager represents a SetKmsManager event raised by the BaseTenantSpace contract.
type BaseTenantSpaceSetKmsManager struct {
	NewManager  common.Address
	PrevManager common.Address
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterSetKmsManager is a free log retrieval operation binding the contract event 0x78cf028637abb89c0df6a78afd3d4403d03e5eb532390543d498bb346ee96477.
//
// Solidity: event SetKmsManager(address newManager, address prevManager)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) FilterSetKmsManager(opts *bind.FilterOpts) (*BaseTenantSpaceSetKmsManagerIterator, error) {

	logs, sub, err := _BaseTenantSpace.contract.FilterLogs(opts, "SetKmsManager")
	if err != nil {
		return nil, err
	}
	return &BaseTenantSpaceSetKmsManagerIterator{contract: _BaseTenantSpace.contract, event: "SetKmsManager", logs: logs, sub: sub}, nil
}

// WatchSetKmsManager is a free log subscription operation binding the contract event 0x78cf028637abb89c0df6a78afd3d4403d03e5eb532390543d498bb346ee96477.
//
// Solidity: event SetKmsManager(address newManager, address prevManager)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) WatchSetKmsManager(opts *bind.WatchOpts, sink chan<- *BaseTenantSpaceSetKmsManager) (event.Subscription, error) {

	logs, sub, err := _BaseTenantSpace.contract.WatchLogs(opts, "SetKmsManager")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseTenantSpaceSetKmsManager)
				if err := _BaseTenantSpace.contract.UnpackLog(event, "SetKmsManager", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseSetKmsManager is a log parse operation binding the contract event 0x78cf028637abb89c0df6a78afd3d4403d03e5eb532390543d498bb346ee96477.
//
// Solidity: event SetKmsManager(address newManager, address prevManager)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) ParseSetKmsManager(log types.Log) (*BaseTenantSpaceSetKmsManager, error) {
	event := new(BaseTenantSpaceSetKmsManager)
	if err := _BaseTenantSpace.contract.UnpackLog(event, "SetKmsManager", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseTenantSpaceSetNodeManagerIterator is returned from FilterSetNodeManager and is used to iterate over the raw logs and unpacked data for SetNodeManager events raised by the BaseTenantSpace contract.
type BaseTenantSpaceSetNodeManagerIterator struct {
	Event *BaseTenantSpaceSetNodeManager // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseTenantSpaceSetNodeManagerIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseTenantSpaceSetNodeManager)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseTenantSpaceSetNodeManager)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseTenantSpaceSetNodeManagerIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseTenantSpaceSetNodeManagerIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseTenantSpaceSetNodeManager represents a SetNodeManager event raised by the BaseTenantSpace contract.
type BaseTenantSpaceSetNodeManager struct {
	NewManager  common.Address
	PrevManager common.Address
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterSetNodeManager is a free log retrieval operation binding the contract event 0x9b77357b839fea8829ce30918f67eb91de08caa0e5272af43a86af5334b56177.
//
// Solidity: event SetNodeManager(address newManager, address prevManager)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) FilterSetNodeManager(opts *bind.FilterOpts) (*BaseTenantSpaceSetNodeManagerIterator, error) {

	logs, sub, err := _BaseTenantSpace.contract.FilterLogs(opts, "SetNodeManager")
	if err != nil {
		return nil, err
	}
	return &BaseTenantSpaceSetNodeManagerIterator{contract: _BaseTenantSpace.contract, event: "SetNodeManager", logs: logs, sub: sub}, nil
}

// WatchSetNodeManager is a free log subscription operation binding the contract event 0x9b77357b839fea8829ce30918f67eb91de08caa0e5272af43a86af5334b56177.
//
// Solidity: event SetNodeManager(address newManager, address prevManager)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) WatchSetNodeManager(opts *bind.WatchOpts, sink chan<- *BaseTenantSpaceSetNodeManager) (event.Subscription, error) {

	logs, sub, err := _BaseTenantSpace.contract.WatchLogs(opts, "SetNodeManager")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseTenantSpaceSetNodeManager)
				if err := _BaseTenantSpace.contract.UnpackLog(event, "SetNodeManager", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseSetNodeManager is a log parse operation binding the contract event 0x9b77357b839fea8829ce30918f67eb91de08caa0e5272af43a86af5334b56177.
//
// Solidity: event SetNodeManager(address newManager, address prevManager)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) ParseSetNodeManager(log types.Log) (*BaseTenantSpaceSetNodeManager, error) {
	event := new(BaseTenantSpaceSetNodeManager)
	if err := _BaseTenantSpace.contract.UnpackLog(event, "SetNodeManager", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseTenantSpaceSetUserManagerIterator is returned from FilterSetUserManager and is used to iterate over the raw logs and unpacked data for SetUserManager events raised by the BaseTenantSpace contract.
type BaseTenantSpaceSetUserManagerIterator struct {
	Event *BaseTenantSpaceSetUserManager // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseTenantSpaceSetUserManagerIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseTenantSpaceSetUserManager)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseTenantSpaceSetUserManager)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseTenantSpaceSetUserManagerIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseTenantSpaceSetUserManagerIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseTenantSpaceSetUserManager represents a SetUserManager event raised by the BaseTenantSpace contract.
type BaseTenantSpaceSetUserManager struct {
	NewManager  common.Address
	PrevManager common.Address
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterSetUserManager is a free log retrieval operation binding the contract event 0xc104e41939e1b09c10a83f97ac30b2d1f48605f4630aa8c64633501740ce0299.
//
// Solidity: event SetUserManager(address newManager, address prevManager)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) FilterSetUserManager(opts *bind.FilterOpts) (*BaseTenantSpaceSetUserManagerIterator, error) {

	logs, sub, err := _BaseTenantSpace.contract.FilterLogs(opts, "SetUserManager")
	if err != nil {
		return nil, err
	}
	return &BaseTenantSpaceSetUserManagerIterator{contract: _BaseTenantSpace.contract, event: "SetUserManager", logs: logs, sub: sub}, nil
}

// WatchSetUserManager is a free log subscription operation binding the contract event 0xc104e41939e1b09c10a83f97ac30b2d1f48605f4630aa8c64633501740ce0299.
//
// Solidity: event SetUserManager(address newManager, address prevManager)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) WatchSetUserManager(opts *bind.WatchOpts, sink chan<- *BaseTenantSpaceSetUserManager) (event.Subscription, error) {

	logs, sub, err := _BaseTenantSpace.contract.WatchLogs(opts, "SetUserManager")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseTenantSpaceSetUserManager)
				if err := _BaseTenantSpace.contract.UnpackLog(event, "SetUserManager", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseSetUserManager is a log parse operation binding the contract event 0xc104e41939e1b09c10a83f97ac30b2d1f48605f4630aa8c64633501740ce0299.
//
// Solidity: event SetUserManager(address newManager, address prevManager)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) ParseSetUserManager(log types.Log) (*BaseTenantSpaceSetUserManager, error) {
	event := new(BaseTenantSpaceSetUserManager)
	if err := _BaseTenantSpace.contract.UnpackLog(event, "SetUserManager", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseTenantSpaceUpdateRequestIterator is returned from FilterUpdateRequest and is used to iterate over the raw logs and unpacked data for UpdateRequest events raised by the BaseTenantSpace contract.
type BaseTenantSpaceUpdateRequestIterator struct {
	Event *BaseTenantSpaceUpdateRequest // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseTenantSpaceUpdateRequestIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseTenantSpaceUpdateRequest)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseTenantSpaceUpdateRequest)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseTenantSpaceUpdateRequestIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseTenantSpaceUpdateRequestIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseTenantSpaceUpdateRequest represents a UpdateRequest event raised by the BaseTenantSpace contract.
type BaseTenantSpaceUpdateRequest struct {
	ObjectHash string
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterUpdateRequest is a free log retrieval operation binding the contract event 0x403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b65.
//
// Solidity: event UpdateRequest(string objectHash)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) FilterUpdateRequest(opts *bind.FilterOpts) (*BaseTenantSpaceUpdateRequestIterator, error) {

	logs, sub, err := _BaseTenantSpace.contract.FilterLogs(opts, "UpdateRequest")
	if err != nil {
		return nil, err
	}
	return &BaseTenantSpaceUpdateRequestIterator{contract: _BaseTenantSpace.contract, event: "UpdateRequest", logs: logs, sub: sub}, nil
}

// WatchUpdateRequest is a free log subscription operation binding the contract event 0x403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b65.
//
// Solidity: event UpdateRequest(string objectHash)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) WatchUpdateRequest(opts *bind.WatchOpts, sink chan<- *BaseTenantSpaceUpdateRequest) (event.Subscription, error) {

	logs, sub, err := _BaseTenantSpace.contract.WatchLogs(opts, "UpdateRequest")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseTenantSpaceUpdateRequest)
				if err := _BaseTenantSpace.contract.UnpackLog(event, "UpdateRequest", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseUpdateRequest is a log parse operation binding the contract event 0x403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b65.
//
// Solidity: event UpdateRequest(string objectHash)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) ParseUpdateRequest(log types.Log) (*BaseTenantSpaceUpdateRequest, error) {
	event := new(BaseTenantSpaceUpdateRequest)
	if err := _BaseTenantSpace.contract.UnpackLog(event, "UpdateRequest", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseTenantSpaceVersionConfirmIterator is returned from FilterVersionConfirm and is used to iterate over the raw logs and unpacked data for VersionConfirm events raised by the BaseTenantSpace contract.
type BaseTenantSpaceVersionConfirmIterator struct {
	Event *BaseTenantSpaceVersionConfirm // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseTenantSpaceVersionConfirmIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseTenantSpaceVersionConfirm)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseTenantSpaceVersionConfirm)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseTenantSpaceVersionConfirmIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseTenantSpaceVersionConfirmIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseTenantSpaceVersionConfirm represents a VersionConfirm event raised by the BaseTenantSpace contract.
type BaseTenantSpaceVersionConfirm struct {
	SpaceAddress  common.Address
	ParentAddress common.Address
	ObjectHash    string
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterVersionConfirm is a free log retrieval operation binding the contract event 0xbdaffceabaaa783aa187fea6c2e815541d29e2290bf3f7d3c4fc53672b68f7df.
//
// Solidity: event VersionConfirm(address spaceAddress, address parentAddress, string objectHash)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) FilterVersionConfirm(opts *bind.FilterOpts) (*BaseTenantSpaceVersionConfirmIterator, error) {

	logs, sub, err := _BaseTenantSpace.contract.FilterLogs(opts, "VersionConfirm")
	if err != nil {
		return nil, err
	}
	return &BaseTenantSpaceVersionConfirmIterator{contract: _BaseTenantSpace.contract, event: "VersionConfirm", logs: logs, sub: sub}, nil
}

// WatchVersionConfirm is a free log subscription operation binding the contract event 0xbdaffceabaaa783aa187fea6c2e815541d29e2290bf3f7d3c4fc53672b68f7df.
//
// Solidity: event VersionConfirm(address spaceAddress, address parentAddress, string objectHash)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) WatchVersionConfirm(opts *bind.WatchOpts, sink chan<- *BaseTenantSpaceVersionConfirm) (event.Subscription, error) {

	logs, sub, err := _BaseTenantSpace.contract.WatchLogs(opts, "VersionConfirm")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseTenantSpaceVersionConfirm)
				if err := _BaseTenantSpace.contract.UnpackLog(event, "VersionConfirm", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseVersionConfirm is a log parse operation binding the contract event 0xbdaffceabaaa783aa187fea6c2e815541d29e2290bf3f7d3c4fc53672b68f7df.
//
// Solidity: event VersionConfirm(address spaceAddress, address parentAddress, string objectHash)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) ParseVersionConfirm(log types.Log) (*BaseTenantSpaceVersionConfirm, error) {
	event := new(BaseTenantSpaceVersionConfirm)
	if err := _BaseTenantSpace.contract.UnpackLog(event, "VersionConfirm", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseTenantSpaceVersionDeleteIterator is returned from FilterVersionDelete and is used to iterate over the raw logs and unpacked data for VersionDelete events raised by the BaseTenantSpace contract.
type BaseTenantSpaceVersionDeleteIterator struct {
	Event *BaseTenantSpaceVersionDelete // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseTenantSpaceVersionDeleteIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseTenantSpaceVersionDelete)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseTenantSpaceVersionDelete)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseTenantSpaceVersionDeleteIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseTenantSpaceVersionDeleteIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseTenantSpaceVersionDelete represents a VersionDelete event raised by the BaseTenantSpace contract.
type BaseTenantSpaceVersionDelete struct {
	SpaceAddress common.Address
	VersionHash  string
	Index        *big.Int
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterVersionDelete is a free log retrieval operation binding the contract event 0x238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51.
//
// Solidity: event VersionDelete(address spaceAddress, string versionHash, int256 index)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) FilterVersionDelete(opts *bind.FilterOpts) (*BaseTenantSpaceVersionDeleteIterator, error) {

	logs, sub, err := _BaseTenantSpace.contract.FilterLogs(opts, "VersionDelete")
	if err != nil {
		return nil, err
	}
	return &BaseTenantSpaceVersionDeleteIterator{contract: _BaseTenantSpace.contract, event: "VersionDelete", logs: logs, sub: sub}, nil
}

// WatchVersionDelete is a free log subscription operation binding the contract event 0x238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51.
//
// Solidity: event VersionDelete(address spaceAddress, string versionHash, int256 index)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) WatchVersionDelete(opts *bind.WatchOpts, sink chan<- *BaseTenantSpaceVersionDelete) (event.Subscription, error) {

	logs, sub, err := _BaseTenantSpace.contract.WatchLogs(opts, "VersionDelete")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseTenantSpaceVersionDelete)
				if err := _BaseTenantSpace.contract.UnpackLog(event, "VersionDelete", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseVersionDelete is a log parse operation binding the contract event 0x238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51.
//
// Solidity: event VersionDelete(address spaceAddress, string versionHash, int256 index)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) ParseVersionDelete(log types.Log) (*BaseTenantSpaceVersionDelete, error) {
	event := new(BaseTenantSpaceVersionDelete)
	if err := _BaseTenantSpace.contract.UnpackLog(event, "VersionDelete", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseTenantSpaceVisibilityChangedIterator is returned from FilterVisibilityChanged and is used to iterate over the raw logs and unpacked data for VisibilityChanged events raised by the BaseTenantSpace contract.
type BaseTenantSpaceVisibilityChangedIterator struct {
	Event *BaseTenantSpaceVisibilityChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseTenantSpaceVisibilityChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseTenantSpaceVisibilityChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseTenantSpaceVisibilityChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseTenantSpaceVisibilityChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseTenantSpaceVisibilityChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseTenantSpaceVisibilityChanged represents a VisibilityChanged event raised by the BaseTenantSpace contract.
type BaseTenantSpaceVisibilityChanged struct {
	ContentSpace  common.Address
	ParentAddress common.Address
	Visibility    uint8
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterVisibilityChanged is a free log retrieval operation binding the contract event 0x369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500.
//
// Solidity: event VisibilityChanged(address contentSpace, address parentAddress, uint8 visibility)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) FilterVisibilityChanged(opts *bind.FilterOpts) (*BaseTenantSpaceVisibilityChangedIterator, error) {

	logs, sub, err := _BaseTenantSpace.contract.FilterLogs(opts, "VisibilityChanged")
	if err != nil {
		return nil, err
	}
	return &BaseTenantSpaceVisibilityChangedIterator{contract: _BaseTenantSpace.contract, event: "VisibilityChanged", logs: logs, sub: sub}, nil
}

// WatchVisibilityChanged is a free log subscription operation binding the contract event 0x369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500.
//
// Solidity: event VisibilityChanged(address contentSpace, address parentAddress, uint8 visibility)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) WatchVisibilityChanged(opts *bind.WatchOpts, sink chan<- *BaseTenantSpaceVisibilityChanged) (event.Subscription, error) {

	logs, sub, err := _BaseTenantSpace.contract.WatchLogs(opts, "VisibilityChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseTenantSpaceVisibilityChanged)
				if err := _BaseTenantSpace.contract.UnpackLog(event, "VisibilityChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseVisibilityChanged is a log parse operation binding the contract event 0x369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500.
//
// Solidity: event VisibilityChanged(address contentSpace, address parentAddress, uint8 visibility)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) ParseVisibilityChanged(log types.Log) (*BaseTenantSpaceVisibilityChanged, error) {
	event := new(BaseTenantSpaceVisibilityChanged)
	if err := _BaseTenantSpace.contract.UnpackLog(event, "VisibilityChanged", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseTenantSpaceWordGroupDeletedIterator is returned from FilterWordGroupDeleted and is used to iterate over the raw logs and unpacked data for WordGroupDeleted events raised by the BaseTenantSpace contract.
type BaseTenantSpaceWordGroupDeletedIterator struct {
	Event *BaseTenantSpaceWordGroupDeleted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *BaseTenantSpaceWordGroupDeletedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(BaseTenantSpaceWordGroupDeleted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(BaseTenantSpaceWordGroupDeleted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *BaseTenantSpaceWordGroupDeletedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *BaseTenantSpaceWordGroupDeletedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// BaseTenantSpaceWordGroupDeleted represents a WordGroupDeleted event raised by the BaseTenantSpace contract.
type BaseTenantSpaceWordGroupDeleted struct {
	Ident [32]byte
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterWordGroupDeleted is a free log retrieval operation binding the contract event 0x87d0c300430cf9ba25931ff8bf37f633abe097e533463927bbfdc1e9ae1d0e9f.
//
// Solidity: event WordGroupDeleted(bytes32 ident)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) FilterWordGroupDeleted(opts *bind.FilterOpts) (*BaseTenantSpaceWordGroupDeletedIterator, error) {

	logs, sub, err := _BaseTenantSpace.contract.FilterLogs(opts, "WordGroupDeleted")
	if err != nil {
		return nil, err
	}
	return &BaseTenantSpaceWordGroupDeletedIterator{contract: _BaseTenantSpace.contract, event: "WordGroupDeleted", logs: logs, sub: sub}, nil
}

// WatchWordGroupDeleted is a free log subscription operation binding the contract event 0x87d0c300430cf9ba25931ff8bf37f633abe097e533463927bbfdc1e9ae1d0e9f.
//
// Solidity: event WordGroupDeleted(bytes32 ident)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) WatchWordGroupDeleted(opts *bind.WatchOpts, sink chan<- *BaseTenantSpaceWordGroupDeleted) (event.Subscription, error) {

	logs, sub, err := _BaseTenantSpace.contract.WatchLogs(opts, "WordGroupDeleted")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(BaseTenantSpaceWordGroupDeleted)
				if err := _BaseTenantSpace.contract.UnpackLog(event, "WordGroupDeleted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseWordGroupDeleted is a log parse operation binding the contract event 0x87d0c300430cf9ba25931ff8bf37f633abe097e533463927bbfdc1e9ae1d0e9f.
//
// Solidity: event WordGroupDeleted(bytes32 ident)
func (_BaseTenantSpace *BaseTenantSpaceFilterer) ParseWordGroupDeleted(log types.Log) (*BaseTenantSpaceWordGroupDeleted, error) {
	event := new(BaseTenantSpaceWordGroupDeleted)
	if err := _BaseTenantSpace.contract.UnpackLog(event, "WordGroupDeleted", log); err != nil {
		return nil, err
	}
	return event, nil
}

// BaseTypeFactoryABI is the input ABI used to generate the binding from.
const BaseTypeFactoryABI = "[{\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"_spaceAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentSpace\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createContentType\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"createNode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newCreator\",\"type\":\"address\"}],\"name\":\"transferCreatorship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"versionAPI\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// BaseTypeFactoryFuncSigs maps the 4-byte function signature to its string representation.
var BaseTypeFactoryFuncSigs = map[string]string{
	"af570c04": "contentSpace()",
	"b8cfaf05": "createContentType()",
	"5c6dc219": "createNode(address)",
	"02d05d3f": "creator()",
	"41c0e1b5": "kill()",
	"8da5cb5b": "owner()",
	"6d2e4b1b": "transferCreatorship(address)",
	"f2fde38b": "transferOwnership(address)",
	"54fd4d50": "version()",
	"5f4fcae1": "versionAPI()",
}

// BaseTypeFactoryBin is the compiled bytecode used for deploying new contracts.
var BaseTypeFactoryBin = ""

// DeployBaseTypeFactory deploys a new Ethereum contract, binding an instance of BaseTypeFactory to it.
func DeployBaseTypeFactory(auth *bind.TransactOpts, backend bind.ContractBackend, _spaceAddr common.Address) (common.Address, *types.Transaction, *BaseTypeFactory, error) {
	parsed, err := abi.JSON(strings.NewReader(BaseTypeFactoryABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(BaseTypeFactoryBin), backend, _spaceAddr)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &BaseTypeFactory{BaseTypeFactoryCaller: BaseTypeFactoryCaller{contract: contract}, BaseTypeFactoryTransactor: BaseTypeFactoryTransactor{contract: contract}, BaseTypeFactoryFilterer: BaseTypeFactoryFilterer{contract: contract}}, nil
}

// BaseTypeFactory is an auto generated Go binding around an Ethereum contract.
type BaseTypeFactory struct {
	BaseTypeFactoryCaller     // Read-only binding to the contract
	BaseTypeFactoryTransactor // Write-only binding to the contract
	BaseTypeFactoryFilterer   // Log filterer for contract events
}

// BaseTypeFactoryCaller is an auto generated read-only Go binding around an Ethereum contract.
type BaseTypeFactoryCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseTypeFactoryTransactor is an auto generated write-only Go binding around an Ethereum contract.
type BaseTypeFactoryTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseTypeFactoryFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type BaseTypeFactoryFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// BaseTypeFactorySession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type BaseTypeFactorySession struct {
	Contract     *BaseTypeFactory  // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// BaseTypeFactoryCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type BaseTypeFactoryCallerSession struct {
	Contract *BaseTypeFactoryCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts          // Call options to use throughout this session
}

// BaseTypeFactoryTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type BaseTypeFactoryTransactorSession struct {
	Contract     *BaseTypeFactoryTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts          // Transaction auth options to use throughout this session
}

// BaseTypeFactoryRaw is an auto generated low-level Go binding around an Ethereum contract.
type BaseTypeFactoryRaw struct {
	Contract *BaseTypeFactory // Generic contract binding to access the raw methods on
}

// BaseTypeFactoryCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type BaseTypeFactoryCallerRaw struct {
	Contract *BaseTypeFactoryCaller // Generic read-only contract binding to access the raw methods on
}

// BaseTypeFactoryTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type BaseTypeFactoryTransactorRaw struct {
	Contract *BaseTypeFactoryTransactor // Generic write-only contract binding to access the raw methods on
}

// NewBaseTypeFactory creates a new instance of BaseTypeFactory, bound to a specific deployed contract.
func NewBaseTypeFactory(address common.Address, backend bind.ContractBackend) (*BaseTypeFactory, error) {
	contract, err := bindBaseTypeFactory(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &BaseTypeFactory{BaseTypeFactoryCaller: BaseTypeFactoryCaller{contract: contract}, BaseTypeFactoryTransactor: BaseTypeFactoryTransactor{contract: contract}, BaseTypeFactoryFilterer: BaseTypeFactoryFilterer{contract: contract}}, nil
}

// NewBaseTypeFactoryCaller creates a new read-only instance of BaseTypeFactory, bound to a specific deployed contract.
func NewBaseTypeFactoryCaller(address common.Address, caller bind.ContractCaller) (*BaseTypeFactoryCaller, error) {
	contract, err := bindBaseTypeFactory(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &BaseTypeFactoryCaller{contract: contract}, nil
}

// NewBaseTypeFactoryTransactor creates a new write-only instance of BaseTypeFactory, bound to a specific deployed contract.
func NewBaseTypeFactoryTransactor(address common.Address, transactor bind.ContractTransactor) (*BaseTypeFactoryTransactor, error) {
	contract, err := bindBaseTypeFactory(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &BaseTypeFactoryTransactor{contract: contract}, nil
}

// NewBaseTypeFactoryFilterer creates a new log filterer instance of BaseTypeFactory, bound to a specific deployed contract.
func NewBaseTypeFactoryFilterer(address common.Address, filterer bind.ContractFilterer) (*BaseTypeFactoryFilterer, error) {
	contract, err := bindBaseTypeFactory(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &BaseTypeFactoryFilterer{contract: contract}, nil
}

// bindBaseTypeFactory binds a generic wrapper to an already deployed contract.
func bindBaseTypeFactory(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(BaseTypeFactoryABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BaseTypeFactory *BaseTypeFactoryRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BaseTypeFactory.Contract.BaseTypeFactoryCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BaseTypeFactory *BaseTypeFactoryRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseTypeFactory.Contract.BaseTypeFactoryTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BaseTypeFactory *BaseTypeFactoryRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BaseTypeFactory.Contract.BaseTypeFactoryTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_BaseTypeFactory *BaseTypeFactoryCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _BaseTypeFactory.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_BaseTypeFactory *BaseTypeFactoryTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseTypeFactory.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_BaseTypeFactory *BaseTypeFactoryTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _BaseTypeFactory.Contract.contract.Transact(opts, method, params...)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseTypeFactory *BaseTypeFactoryCaller) ContentSpace(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseTypeFactory.contract.Call(opts, out, "contentSpace")
	return *ret0, err
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseTypeFactory *BaseTypeFactorySession) ContentSpace() (common.Address, error) {
	return _BaseTypeFactory.Contract.ContentSpace(&_BaseTypeFactory.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_BaseTypeFactory *BaseTypeFactoryCallerSession) ContentSpace() (common.Address, error) {
	return _BaseTypeFactory.Contract.ContentSpace(&_BaseTypeFactory.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseTypeFactory *BaseTypeFactoryCaller) Creator(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseTypeFactory.contract.Call(opts, out, "creator")
	return *ret0, err
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseTypeFactory *BaseTypeFactorySession) Creator() (common.Address, error) {
	return _BaseTypeFactory.Contract.Creator(&_BaseTypeFactory.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_BaseTypeFactory *BaseTypeFactoryCallerSession) Creator() (common.Address, error) {
	return _BaseTypeFactory.Contract.Creator(&_BaseTypeFactory.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseTypeFactory *BaseTypeFactoryCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _BaseTypeFactory.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseTypeFactory *BaseTypeFactorySession) Owner() (common.Address, error) {
	return _BaseTypeFactory.Contract.Owner(&_BaseTypeFactory.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_BaseTypeFactory *BaseTypeFactoryCallerSession) Owner() (common.Address, error) {
	return _BaseTypeFactory.Contract.Owner(&_BaseTypeFactory.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseTypeFactory *BaseTypeFactoryCaller) Version(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _BaseTypeFactory.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseTypeFactory *BaseTypeFactorySession) Version() ([32]byte, error) {
	return _BaseTypeFactory.Contract.Version(&_BaseTypeFactory.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_BaseTypeFactory *BaseTypeFactoryCallerSession) Version() ([32]byte, error) {
	return _BaseTypeFactory.Contract.Version(&_BaseTypeFactory.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseTypeFactory *BaseTypeFactoryCaller) VersionAPI(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _BaseTypeFactory.contract.Call(opts, out, "versionAPI")
	return *ret0, err
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseTypeFactory *BaseTypeFactorySession) VersionAPI() ([32]byte, error) {
	return _BaseTypeFactory.Contract.VersionAPI(&_BaseTypeFactory.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_BaseTypeFactory *BaseTypeFactoryCallerSession) VersionAPI() ([32]byte, error) {
	return _BaseTypeFactory.Contract.VersionAPI(&_BaseTypeFactory.CallOpts)
}

// CreateContentType is a paid mutator transaction binding the contract method 0xb8cfaf05.
//
// Solidity: function createContentType() returns(address)
func (_BaseTypeFactory *BaseTypeFactoryTransactor) CreateContentType(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseTypeFactory.contract.Transact(opts, "createContentType")
}

// CreateContentType is a paid mutator transaction binding the contract method 0xb8cfaf05.
//
// Solidity: function createContentType() returns(address)
func (_BaseTypeFactory *BaseTypeFactorySession) CreateContentType() (*types.Transaction, error) {
	return _BaseTypeFactory.Contract.CreateContentType(&_BaseTypeFactory.TransactOpts)
}

// CreateContentType is a paid mutator transaction binding the contract method 0xb8cfaf05.
//
// Solidity: function createContentType() returns(address)
func (_BaseTypeFactory *BaseTypeFactoryTransactorSession) CreateContentType() (*types.Transaction, error) {
	return _BaseTypeFactory.Contract.CreateContentType(&_BaseTypeFactory.TransactOpts)
}

// CreateNode is a paid mutator transaction binding the contract method 0x5c6dc219.
//
// Solidity: function createNode(address _owner) returns(address)
func (_BaseTypeFactory *BaseTypeFactoryTransactor) CreateNode(opts *bind.TransactOpts, _owner common.Address) (*types.Transaction, error) {
	return _BaseTypeFactory.contract.Transact(opts, "createNode", _owner)
}

// CreateNode is a paid mutator transaction binding the contract method 0x5c6dc219.
//
// Solidity: function createNode(address _owner) returns(address)
func (_BaseTypeFactory *BaseTypeFactorySession) CreateNode(_owner common.Address) (*types.Transaction, error) {
	return _BaseTypeFactory.Contract.CreateNode(&_BaseTypeFactory.TransactOpts, _owner)
}

// CreateNode is a paid mutator transaction binding the contract method 0x5c6dc219.
//
// Solidity: function createNode(address _owner) returns(address)
func (_BaseTypeFactory *BaseTypeFactoryTransactorSession) CreateNode(_owner common.Address) (*types.Transaction, error) {
	return _BaseTypeFactory.Contract.CreateNode(&_BaseTypeFactory.TransactOpts, _owner)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseTypeFactory *BaseTypeFactoryTransactor) Kill(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _BaseTypeFactory.contract.Transact(opts, "kill")
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseTypeFactory *BaseTypeFactorySession) Kill() (*types.Transaction, error) {
	return _BaseTypeFactory.Contract.Kill(&_BaseTypeFactory.TransactOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_BaseTypeFactory *BaseTypeFactoryTransactorSession) Kill() (*types.Transaction, error) {
	return _BaseTypeFactory.Contract.Kill(&_BaseTypeFactory.TransactOpts)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseTypeFactory *BaseTypeFactoryTransactor) TransferCreatorship(opts *bind.TransactOpts, newCreator common.Address) (*types.Transaction, error) {
	return _BaseTypeFactory.contract.Transact(opts, "transferCreatorship", newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseTypeFactory *BaseTypeFactorySession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _BaseTypeFactory.Contract.TransferCreatorship(&_BaseTypeFactory.TransactOpts, newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_BaseTypeFactory *BaseTypeFactoryTransactorSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _BaseTypeFactory.Contract.TransferCreatorship(&_BaseTypeFactory.TransactOpts, newCreator)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseTypeFactory *BaseTypeFactoryTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _BaseTypeFactory.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseTypeFactory *BaseTypeFactorySession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _BaseTypeFactory.Contract.TransferOwnership(&_BaseTypeFactory.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_BaseTypeFactory *BaseTypeFactoryTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _BaseTypeFactory.Contract.TransferOwnership(&_BaseTypeFactory.TransactOpts, newOwner)
}

// ContainerABI is the input ABI used to generate the binding from.
const ContainerABI = "[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"contextHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestTimestamp\",\"type\":\"uint256\"}],\"name\":\"AccessRequestV3\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spaceAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"objectHash\",\"type\":\"string\"}],\"name\":\"CommitPending\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contentType\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contentContract\",\"type\":\"address\"}],\"name\":\"ContentTypeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contentType\",\"type\":\"address\"}],\"name\":\"ContentTypeRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"objectHash\",\"type\":\"string\"}],\"name\":\"UpdateRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spaceAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"objectHash\",\"type\":\"string\"}],\"name\":\"VersionConfirm\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spaceAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"versionHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"index\",\"type\":\"int256\"}],\"name\":\"VersionDelete\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contentSpace\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"visibility\",\"type\":\"uint8\"}],\"name\":\"VisibilityChanged\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"CAN_ACCESS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CAN_EDIT\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CAN_SEE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"addresspayable[]\",\"name\":\"\",\"type\":\"address[]\"}],\"name\":\"accessRequestV3\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"content_type\",\"type\":\"address\"},{\"internalType\":\"addresspayable\",\"name\":\"content_contract\",\"type\":\"address\"}],\"name\":\"addContentType\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"addressKMS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canCommit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canConfirm\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"canContribute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canEdit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"canPublish\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"canReview\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"clearPending\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_objectHash\",\"type\":\"string\"}],\"name\":\"commit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"commitPending\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"confirmCommit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentSpace\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contentTypeContracts\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contentTypes\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentTypesLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"countVersionHashes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_versionHash\",\"type\":\"string\"}],\"name\":\"deleteVersion\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"typeHash\",\"type\":\"bytes32\"}],\"name\":\"findTypeByHash\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"hasAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"hasEditorRight\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"indexCategory\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"objectHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"objectTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"parentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"contentObj\",\"type\":\"address\"}],\"name\":\"publish\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"content_type\",\"type\":\"address\"}],\"name\":\"removeContentType\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"requiresReview\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"address_KMS\",\"type\":\"address\"}],\"name\":\"setAddressKMS\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"group\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setGroupRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"stakeholder\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_visibility_code\",\"type\":\"uint8\"}],\"name\":\"setVisibility\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newCreator\",\"type\":\"address\"}],\"name\":\"transferCreatorship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"updateRequest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"content_type\",\"type\":\"address\"}],\"name\":\"validType\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"versionAPI\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"versionHashes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"versionTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"visibility\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"content_type\",\"type\":\"address\"}],\"name\":\"whitelistedType\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// ContainerFuncSigs maps the 4-byte function signature to its string representation.
var ContainerFuncSigs = map[string]string{
	"97ac4fd2": "CAN_ACCESS()",
	"ef1d7dc2": "CAN_EDIT()",
	"100508a2": "CAN_SEE()",
	"1bf7a912": "accessRequestV3(bytes32[],address[])",
	"0f58a786": "addContentType(address,address)",
	"32eaf21b": "addressKMS()",
	"6e375427": "canCommit()",
	"14cfabb3": "canConfirm()",
	"0eaec2c5": "canContribute(address)",
	"81beeb64": "canEdit()",
	"9b55f901": "canPublish(address)",
	"29d00219": "canReview(address)",
	"5f6a1301": "clearPending()",
	"9867db74": "commit(string)",
	"375a6e7c": "commitPending()",
	"446e8826": "confirmCommit()",
	"af570c04": "contentSpace()",
	"1cdbee5a": "contentTypeContracts(address)",
	"991a3a7c": "contentTypes(uint256)",
	"c65bcbe2": "contentTypesLength()",
	"331b86c0": "countVersionHashes()",
	"02d05d3f": "creator()",
	"e1a70717": "deleteVersion(string)",
	"1f2caaec": "findTypeByHash(bytes32)",
	"95a078e8": "hasAccess(address)",
	"67e5c3bf": "hasEditorRight(address)",
	"6380501f": "indexCategory()",
	"41c0e1b5": "kill()",
	"e02dd9c2": "objectHash()",
	"40b87a26": "objectTimestamp()",
	"8da5cb5b": "owner()",
	"00821de3": "parentAddress()",
	"628449fd": "pendingHash()",
	"2cf99422": "publish(address)",
	"fd089196": "removeContentType(address)",
	"3dd71d99": "requiresReview()",
	"c9e8e72d": "setAddressKMS(address)",
	"22e564eb": "setGroupRights(address,uint8,uint8)",
	"0fe1b5a2": "setRights(address,uint8,uint8)",
	"aa024e8b": "setVisibility(uint8)",
	"6d2e4b1b": "transferCreatorship(address)",
	"f2fde38b": "transferOwnership(address)",
	"c287e0ed": "updateRequest()",
	"29dedde5": "validType(address)",
	"54fd4d50": "version()",
	"5f4fcae1": "versionAPI()",
	"7ca8f618": "versionHashes(uint256)",
	"7886f747": "versionTimestamp(uint256)",
	"29adec14": "visibility()",
	"9cb121ba": "whitelistedType(address)",
}

// ContainerBin is the compiled bytecode used for deploying new contracts.
var ContainerBin = ""

// DeployContainer deploys a new Ethereum contract, binding an instance of Container to it.
func DeployContainer(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Container, error) {
	parsed, err := abi.JSON(strings.NewReader(ContainerABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(ContainerBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Container{ContainerCaller: ContainerCaller{contract: contract}, ContainerTransactor: ContainerTransactor{contract: contract}, ContainerFilterer: ContainerFilterer{contract: contract}}, nil
}

// Container is an auto generated Go binding around an Ethereum contract.
type Container struct {
	ContainerCaller     // Read-only binding to the contract
	ContainerTransactor // Write-only binding to the contract
	ContainerFilterer   // Log filterer for contract events
}

// ContainerCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContainerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContainerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContainerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContainerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContainerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContainerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContainerSession struct {
	Contract     *Container        // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ContainerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContainerCallerSession struct {
	Contract *ContainerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts    // Call options to use throughout this session
}

// ContainerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContainerTransactorSession struct {
	Contract     *ContainerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts    // Transaction auth options to use throughout this session
}

// ContainerRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContainerRaw struct {
	Contract *Container // Generic contract binding to access the raw methods on
}

// ContainerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContainerCallerRaw struct {
	Contract *ContainerCaller // Generic read-only contract binding to access the raw methods on
}

// ContainerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContainerTransactorRaw struct {
	Contract *ContainerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContainer creates a new instance of Container, bound to a specific deployed contract.
func NewContainer(address common.Address, backend bind.ContractBackend) (*Container, error) {
	contract, err := bindContainer(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Container{ContainerCaller: ContainerCaller{contract: contract}, ContainerTransactor: ContainerTransactor{contract: contract}, ContainerFilterer: ContainerFilterer{contract: contract}}, nil
}

// NewContainerCaller creates a new read-only instance of Container, bound to a specific deployed contract.
func NewContainerCaller(address common.Address, caller bind.ContractCaller) (*ContainerCaller, error) {
	contract, err := bindContainer(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContainerCaller{contract: contract}, nil
}

// NewContainerTransactor creates a new write-only instance of Container, bound to a specific deployed contract.
func NewContainerTransactor(address common.Address, transactor bind.ContractTransactor) (*ContainerTransactor, error) {
	contract, err := bindContainer(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContainerTransactor{contract: contract}, nil
}

// NewContainerFilterer creates a new log filterer instance of Container, bound to a specific deployed contract.
func NewContainerFilterer(address common.Address, filterer bind.ContractFilterer) (*ContainerFilterer, error) {
	contract, err := bindContainer(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContainerFilterer{contract: contract}, nil
}

// bindContainer binds a generic wrapper to an already deployed contract.
func bindContainer(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ContainerABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Container *ContainerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Container.Contract.ContainerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Container *ContainerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Container.Contract.ContainerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Container *ContainerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Container.Contract.ContainerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Container *ContainerCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Container.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Container *ContainerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Container.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Container *ContainerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Container.Contract.contract.Transact(opts, method, params...)
}

// CANACCESS is a free data retrieval call binding the contract method 0x97ac4fd2.
//
// Solidity: function CAN_ACCESS() constant returns(uint8)
func (_Container *ContainerCaller) CANACCESS(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _Container.contract.Call(opts, out, "CAN_ACCESS")
	return *ret0, err
}

// CANACCESS is a free data retrieval call binding the contract method 0x97ac4fd2.
//
// Solidity: function CAN_ACCESS() constant returns(uint8)
func (_Container *ContainerSession) CANACCESS() (uint8, error) {
	return _Container.Contract.CANACCESS(&_Container.CallOpts)
}

// CANACCESS is a free data retrieval call binding the contract method 0x97ac4fd2.
//
// Solidity: function CAN_ACCESS() constant returns(uint8)
func (_Container *ContainerCallerSession) CANACCESS() (uint8, error) {
	return _Container.Contract.CANACCESS(&_Container.CallOpts)
}

// CANEDIT is a free data retrieval call binding the contract method 0xef1d7dc2.
//
// Solidity: function CAN_EDIT() constant returns(uint8)
func (_Container *ContainerCaller) CANEDIT(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _Container.contract.Call(opts, out, "CAN_EDIT")
	return *ret0, err
}

// CANEDIT is a free data retrieval call binding the contract method 0xef1d7dc2.
//
// Solidity: function CAN_EDIT() constant returns(uint8)
func (_Container *ContainerSession) CANEDIT() (uint8, error) {
	return _Container.Contract.CANEDIT(&_Container.CallOpts)
}

// CANEDIT is a free data retrieval call binding the contract method 0xef1d7dc2.
//
// Solidity: function CAN_EDIT() constant returns(uint8)
func (_Container *ContainerCallerSession) CANEDIT() (uint8, error) {
	return _Container.Contract.CANEDIT(&_Container.CallOpts)
}

// CANSEE is a free data retrieval call binding the contract method 0x100508a2.
//
// Solidity: function CAN_SEE() constant returns(uint8)
func (_Container *ContainerCaller) CANSEE(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _Container.contract.Call(opts, out, "CAN_SEE")
	return *ret0, err
}

// CANSEE is a free data retrieval call binding the contract method 0x100508a2.
//
// Solidity: function CAN_SEE() constant returns(uint8)
func (_Container *ContainerSession) CANSEE() (uint8, error) {
	return _Container.Contract.CANSEE(&_Container.CallOpts)
}

// CANSEE is a free data retrieval call binding the contract method 0x100508a2.
//
// Solidity: function CAN_SEE() constant returns(uint8)
func (_Container *ContainerCallerSession) CANSEE() (uint8, error) {
	return _Container.Contract.CANSEE(&_Container.CallOpts)
}

// AddressKMS is a free data retrieval call binding the contract method 0x32eaf21b.
//
// Solidity: function addressKMS() constant returns(address)
func (_Container *ContainerCaller) AddressKMS(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Container.contract.Call(opts, out, "addressKMS")
	return *ret0, err
}

// AddressKMS is a free data retrieval call binding the contract method 0x32eaf21b.
//
// Solidity: function addressKMS() constant returns(address)
func (_Container *ContainerSession) AddressKMS() (common.Address, error) {
	return _Container.Contract.AddressKMS(&_Container.CallOpts)
}

// AddressKMS is a free data retrieval call binding the contract method 0x32eaf21b.
//
// Solidity: function addressKMS() constant returns(address)
func (_Container *ContainerCallerSession) AddressKMS() (common.Address, error) {
	return _Container.Contract.AddressKMS(&_Container.CallOpts)
}

// CanCommit is a free data retrieval call binding the contract method 0x6e375427.
//
// Solidity: function canCommit() constant returns(bool)
func (_Container *ContainerCaller) CanCommit(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Container.contract.Call(opts, out, "canCommit")
	return *ret0, err
}

// CanCommit is a free data retrieval call binding the contract method 0x6e375427.
//
// Solidity: function canCommit() constant returns(bool)
func (_Container *ContainerSession) CanCommit() (bool, error) {
	return _Container.Contract.CanCommit(&_Container.CallOpts)
}

// CanCommit is a free data retrieval call binding the contract method 0x6e375427.
//
// Solidity: function canCommit() constant returns(bool)
func (_Container *ContainerCallerSession) CanCommit() (bool, error) {
	return _Container.Contract.CanCommit(&_Container.CallOpts)
}

// CanConfirm is a free data retrieval call binding the contract method 0x14cfabb3.
//
// Solidity: function canConfirm() constant returns(bool)
func (_Container *ContainerCaller) CanConfirm(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Container.contract.Call(opts, out, "canConfirm")
	return *ret0, err
}

// CanConfirm is a free data retrieval call binding the contract method 0x14cfabb3.
//
// Solidity: function canConfirm() constant returns(bool)
func (_Container *ContainerSession) CanConfirm() (bool, error) {
	return _Container.Contract.CanConfirm(&_Container.CallOpts)
}

// CanConfirm is a free data retrieval call binding the contract method 0x14cfabb3.
//
// Solidity: function canConfirm() constant returns(bool)
func (_Container *ContainerCallerSession) CanConfirm() (bool, error) {
	return _Container.Contract.CanConfirm(&_Container.CallOpts)
}

// CanContribute is a free data retrieval call binding the contract method 0x0eaec2c5.
//
// Solidity: function canContribute(address _candidate) constant returns(bool)
func (_Container *ContainerCaller) CanContribute(opts *bind.CallOpts, _candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Container.contract.Call(opts, out, "canContribute", _candidate)
	return *ret0, err
}

// CanContribute is a free data retrieval call binding the contract method 0x0eaec2c5.
//
// Solidity: function canContribute(address _candidate) constant returns(bool)
func (_Container *ContainerSession) CanContribute(_candidate common.Address) (bool, error) {
	return _Container.Contract.CanContribute(&_Container.CallOpts, _candidate)
}

// CanContribute is a free data retrieval call binding the contract method 0x0eaec2c5.
//
// Solidity: function canContribute(address _candidate) constant returns(bool)
func (_Container *ContainerCallerSession) CanContribute(_candidate common.Address) (bool, error) {
	return _Container.Contract.CanContribute(&_Container.CallOpts, _candidate)
}

// CanEdit is a free data retrieval call binding the contract method 0x81beeb64.
//
// Solidity: function canEdit() constant returns(bool)
func (_Container *ContainerCaller) CanEdit(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Container.contract.Call(opts, out, "canEdit")
	return *ret0, err
}

// CanEdit is a free data retrieval call binding the contract method 0x81beeb64.
//
// Solidity: function canEdit() constant returns(bool)
func (_Container *ContainerSession) CanEdit() (bool, error) {
	return _Container.Contract.CanEdit(&_Container.CallOpts)
}

// CanEdit is a free data retrieval call binding the contract method 0x81beeb64.
//
// Solidity: function canEdit() constant returns(bool)
func (_Container *ContainerCallerSession) CanEdit() (bool, error) {
	return _Container.Contract.CanEdit(&_Container.CallOpts)
}

// CanPublish is a free data retrieval call binding the contract method 0x9b55f901.
//
// Solidity: function canPublish(address _candidate) constant returns(bool)
func (_Container *ContainerCaller) CanPublish(opts *bind.CallOpts, _candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Container.contract.Call(opts, out, "canPublish", _candidate)
	return *ret0, err
}

// CanPublish is a free data retrieval call binding the contract method 0x9b55f901.
//
// Solidity: function canPublish(address _candidate) constant returns(bool)
func (_Container *ContainerSession) CanPublish(_candidate common.Address) (bool, error) {
	return _Container.Contract.CanPublish(&_Container.CallOpts, _candidate)
}

// CanPublish is a free data retrieval call binding the contract method 0x9b55f901.
//
// Solidity: function canPublish(address _candidate) constant returns(bool)
func (_Container *ContainerCallerSession) CanPublish(_candidate common.Address) (bool, error) {
	return _Container.Contract.CanPublish(&_Container.CallOpts, _candidate)
}

// CanReview is a free data retrieval call binding the contract method 0x29d00219.
//
// Solidity: function canReview(address ) constant returns(bool)
func (_Container *ContainerCaller) CanReview(opts *bind.CallOpts, arg0 common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Container.contract.Call(opts, out, "canReview", arg0)
	return *ret0, err
}

// CanReview is a free data retrieval call binding the contract method 0x29d00219.
//
// Solidity: function canReview(address ) constant returns(bool)
func (_Container *ContainerSession) CanReview(arg0 common.Address) (bool, error) {
	return _Container.Contract.CanReview(&_Container.CallOpts, arg0)
}

// CanReview is a free data retrieval call binding the contract method 0x29d00219.
//
// Solidity: function canReview(address ) constant returns(bool)
func (_Container *ContainerCallerSession) CanReview(arg0 common.Address) (bool, error) {
	return _Container.Contract.CanReview(&_Container.CallOpts, arg0)
}

// CommitPending is a free data retrieval call binding the contract method 0x375a6e7c.
//
// Solidity: function commitPending() constant returns(bool)
func (_Container *ContainerCaller) CommitPending(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Container.contract.Call(opts, out, "commitPending")
	return *ret0, err
}

// CommitPending is a free data retrieval call binding the contract method 0x375a6e7c.
//
// Solidity: function commitPending() constant returns(bool)
func (_Container *ContainerSession) CommitPending() (bool, error) {
	return _Container.Contract.CommitPending(&_Container.CallOpts)
}

// CommitPending is a free data retrieval call binding the contract method 0x375a6e7c.
//
// Solidity: function commitPending() constant returns(bool)
func (_Container *ContainerCallerSession) CommitPending() (bool, error) {
	return _Container.Contract.CommitPending(&_Container.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_Container *ContainerCaller) ContentSpace(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Container.contract.Call(opts, out, "contentSpace")
	return *ret0, err
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_Container *ContainerSession) ContentSpace() (common.Address, error) {
	return _Container.Contract.ContentSpace(&_Container.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_Container *ContainerCallerSession) ContentSpace() (common.Address, error) {
	return _Container.Contract.ContentSpace(&_Container.CallOpts)
}

// ContentTypeContracts is a free data retrieval call binding the contract method 0x1cdbee5a.
//
// Solidity: function contentTypeContracts(address ) constant returns(address)
func (_Container *ContainerCaller) ContentTypeContracts(opts *bind.CallOpts, arg0 common.Address) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Container.contract.Call(opts, out, "contentTypeContracts", arg0)
	return *ret0, err
}

// ContentTypeContracts is a free data retrieval call binding the contract method 0x1cdbee5a.
//
// Solidity: function contentTypeContracts(address ) constant returns(address)
func (_Container *ContainerSession) ContentTypeContracts(arg0 common.Address) (common.Address, error) {
	return _Container.Contract.ContentTypeContracts(&_Container.CallOpts, arg0)
}

// ContentTypeContracts is a free data retrieval call binding the contract method 0x1cdbee5a.
//
// Solidity: function contentTypeContracts(address ) constant returns(address)
func (_Container *ContainerCallerSession) ContentTypeContracts(arg0 common.Address) (common.Address, error) {
	return _Container.Contract.ContentTypeContracts(&_Container.CallOpts, arg0)
}

// ContentTypes is a free data retrieval call binding the contract method 0x991a3a7c.
//
// Solidity: function contentTypes(uint256 ) constant returns(address)
func (_Container *ContainerCaller) ContentTypes(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Container.contract.Call(opts, out, "contentTypes", arg0)
	return *ret0, err
}

// ContentTypes is a free data retrieval call binding the contract method 0x991a3a7c.
//
// Solidity: function contentTypes(uint256 ) constant returns(address)
func (_Container *ContainerSession) ContentTypes(arg0 *big.Int) (common.Address, error) {
	return _Container.Contract.ContentTypes(&_Container.CallOpts, arg0)
}

// ContentTypes is a free data retrieval call binding the contract method 0x991a3a7c.
//
// Solidity: function contentTypes(uint256 ) constant returns(address)
func (_Container *ContainerCallerSession) ContentTypes(arg0 *big.Int) (common.Address, error) {
	return _Container.Contract.ContentTypes(&_Container.CallOpts, arg0)
}

// ContentTypesLength is a free data retrieval call binding the contract method 0xc65bcbe2.
//
// Solidity: function contentTypesLength() constant returns(uint256)
func (_Container *ContainerCaller) ContentTypesLength(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Container.contract.Call(opts, out, "contentTypesLength")
	return *ret0, err
}

// ContentTypesLength is a free data retrieval call binding the contract method 0xc65bcbe2.
//
// Solidity: function contentTypesLength() constant returns(uint256)
func (_Container *ContainerSession) ContentTypesLength() (*big.Int, error) {
	return _Container.Contract.ContentTypesLength(&_Container.CallOpts)
}

// ContentTypesLength is a free data retrieval call binding the contract method 0xc65bcbe2.
//
// Solidity: function contentTypesLength() constant returns(uint256)
func (_Container *ContainerCallerSession) ContentTypesLength() (*big.Int, error) {
	return _Container.Contract.ContentTypesLength(&_Container.CallOpts)
}

// CountVersionHashes is a free data retrieval call binding the contract method 0x331b86c0.
//
// Solidity: function countVersionHashes() constant returns(uint256)
func (_Container *ContainerCaller) CountVersionHashes(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Container.contract.Call(opts, out, "countVersionHashes")
	return *ret0, err
}

// CountVersionHashes is a free data retrieval call binding the contract method 0x331b86c0.
//
// Solidity: function countVersionHashes() constant returns(uint256)
func (_Container *ContainerSession) CountVersionHashes() (*big.Int, error) {
	return _Container.Contract.CountVersionHashes(&_Container.CallOpts)
}

// CountVersionHashes is a free data retrieval call binding the contract method 0x331b86c0.
//
// Solidity: function countVersionHashes() constant returns(uint256)
func (_Container *ContainerCallerSession) CountVersionHashes() (*big.Int, error) {
	return _Container.Contract.CountVersionHashes(&_Container.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_Container *ContainerCaller) Creator(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Container.contract.Call(opts, out, "creator")
	return *ret0, err
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_Container *ContainerSession) Creator() (common.Address, error) {
	return _Container.Contract.Creator(&_Container.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_Container *ContainerCallerSession) Creator() (common.Address, error) {
	return _Container.Contract.Creator(&_Container.CallOpts)
}

// FindTypeByHash is a free data retrieval call binding the contract method 0x1f2caaec.
//
// Solidity: function findTypeByHash(bytes32 typeHash) constant returns(address)
func (_Container *ContainerCaller) FindTypeByHash(opts *bind.CallOpts, typeHash [32]byte) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Container.contract.Call(opts, out, "findTypeByHash", typeHash)
	return *ret0, err
}

// FindTypeByHash is a free data retrieval call binding the contract method 0x1f2caaec.
//
// Solidity: function findTypeByHash(bytes32 typeHash) constant returns(address)
func (_Container *ContainerSession) FindTypeByHash(typeHash [32]byte) (common.Address, error) {
	return _Container.Contract.FindTypeByHash(&_Container.CallOpts, typeHash)
}

// FindTypeByHash is a free data retrieval call binding the contract method 0x1f2caaec.
//
// Solidity: function findTypeByHash(bytes32 typeHash) constant returns(address)
func (_Container *ContainerCallerSession) FindTypeByHash(typeHash [32]byte) (common.Address, error) {
	return _Container.Contract.FindTypeByHash(&_Container.CallOpts, typeHash)
}

// HasAccess is a free data retrieval call binding the contract method 0x95a078e8.
//
// Solidity: function hasAccess(address candidate) constant returns(bool)
func (_Container *ContainerCaller) HasAccess(opts *bind.CallOpts, candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Container.contract.Call(opts, out, "hasAccess", candidate)
	return *ret0, err
}

// HasAccess is a free data retrieval call binding the contract method 0x95a078e8.
//
// Solidity: function hasAccess(address candidate) constant returns(bool)
func (_Container *ContainerSession) HasAccess(candidate common.Address) (bool, error) {
	return _Container.Contract.HasAccess(&_Container.CallOpts, candidate)
}

// HasAccess is a free data retrieval call binding the contract method 0x95a078e8.
//
// Solidity: function hasAccess(address candidate) constant returns(bool)
func (_Container *ContainerCallerSession) HasAccess(candidate common.Address) (bool, error) {
	return _Container.Contract.HasAccess(&_Container.CallOpts, candidate)
}

// HasEditorRight is a free data retrieval call binding the contract method 0x67e5c3bf.
//
// Solidity: function hasEditorRight(address candidate) constant returns(bool)
func (_Container *ContainerCaller) HasEditorRight(opts *bind.CallOpts, candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Container.contract.Call(opts, out, "hasEditorRight", candidate)
	return *ret0, err
}

// HasEditorRight is a free data retrieval call binding the contract method 0x67e5c3bf.
//
// Solidity: function hasEditorRight(address candidate) constant returns(bool)
func (_Container *ContainerSession) HasEditorRight(candidate common.Address) (bool, error) {
	return _Container.Contract.HasEditorRight(&_Container.CallOpts, candidate)
}

// HasEditorRight is a free data retrieval call binding the contract method 0x67e5c3bf.
//
// Solidity: function hasEditorRight(address candidate) constant returns(bool)
func (_Container *ContainerCallerSession) HasEditorRight(candidate common.Address) (bool, error) {
	return _Container.Contract.HasEditorRight(&_Container.CallOpts, candidate)
}

// IndexCategory is a free data retrieval call binding the contract method 0x6380501f.
//
// Solidity: function indexCategory() constant returns(uint8)
func (_Container *ContainerCaller) IndexCategory(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _Container.contract.Call(opts, out, "indexCategory")
	return *ret0, err
}

// IndexCategory is a free data retrieval call binding the contract method 0x6380501f.
//
// Solidity: function indexCategory() constant returns(uint8)
func (_Container *ContainerSession) IndexCategory() (uint8, error) {
	return _Container.Contract.IndexCategory(&_Container.CallOpts)
}

// IndexCategory is a free data retrieval call binding the contract method 0x6380501f.
//
// Solidity: function indexCategory() constant returns(uint8)
func (_Container *ContainerCallerSession) IndexCategory() (uint8, error) {
	return _Container.Contract.IndexCategory(&_Container.CallOpts)
}

// ObjectHash is a free data retrieval call binding the contract method 0xe02dd9c2.
//
// Solidity: function objectHash() constant returns(string)
func (_Container *ContainerCaller) ObjectHash(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _Container.contract.Call(opts, out, "objectHash")
	return *ret0, err
}

// ObjectHash is a free data retrieval call binding the contract method 0xe02dd9c2.
//
// Solidity: function objectHash() constant returns(string)
func (_Container *ContainerSession) ObjectHash() (string, error) {
	return _Container.Contract.ObjectHash(&_Container.CallOpts)
}

// ObjectHash is a free data retrieval call binding the contract method 0xe02dd9c2.
//
// Solidity: function objectHash() constant returns(string)
func (_Container *ContainerCallerSession) ObjectHash() (string, error) {
	return _Container.Contract.ObjectHash(&_Container.CallOpts)
}

// ObjectTimestamp is a free data retrieval call binding the contract method 0x40b87a26.
//
// Solidity: function objectTimestamp() constant returns(uint256)
func (_Container *ContainerCaller) ObjectTimestamp(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Container.contract.Call(opts, out, "objectTimestamp")
	return *ret0, err
}

// ObjectTimestamp is a free data retrieval call binding the contract method 0x40b87a26.
//
// Solidity: function objectTimestamp() constant returns(uint256)
func (_Container *ContainerSession) ObjectTimestamp() (*big.Int, error) {
	return _Container.Contract.ObjectTimestamp(&_Container.CallOpts)
}

// ObjectTimestamp is a free data retrieval call binding the contract method 0x40b87a26.
//
// Solidity: function objectTimestamp() constant returns(uint256)
func (_Container *ContainerCallerSession) ObjectTimestamp() (*big.Int, error) {
	return _Container.Contract.ObjectTimestamp(&_Container.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Container *ContainerCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Container.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Container *ContainerSession) Owner() (common.Address, error) {
	return _Container.Contract.Owner(&_Container.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Container *ContainerCallerSession) Owner() (common.Address, error) {
	return _Container.Contract.Owner(&_Container.CallOpts)
}

// ParentAddress is a free data retrieval call binding the contract method 0x00821de3.
//
// Solidity: function parentAddress() constant returns(address)
func (_Container *ContainerCaller) ParentAddress(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Container.contract.Call(opts, out, "parentAddress")
	return *ret0, err
}

// ParentAddress is a free data retrieval call binding the contract method 0x00821de3.
//
// Solidity: function parentAddress() constant returns(address)
func (_Container *ContainerSession) ParentAddress() (common.Address, error) {
	return _Container.Contract.ParentAddress(&_Container.CallOpts)
}

// ParentAddress is a free data retrieval call binding the contract method 0x00821de3.
//
// Solidity: function parentAddress() constant returns(address)
func (_Container *ContainerCallerSession) ParentAddress() (common.Address, error) {
	return _Container.Contract.ParentAddress(&_Container.CallOpts)
}

// PendingHash is a free data retrieval call binding the contract method 0x628449fd.
//
// Solidity: function pendingHash() constant returns(string)
func (_Container *ContainerCaller) PendingHash(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _Container.contract.Call(opts, out, "pendingHash")
	return *ret0, err
}

// PendingHash is a free data retrieval call binding the contract method 0x628449fd.
//
// Solidity: function pendingHash() constant returns(string)
func (_Container *ContainerSession) PendingHash() (string, error) {
	return _Container.Contract.PendingHash(&_Container.CallOpts)
}

// PendingHash is a free data retrieval call binding the contract method 0x628449fd.
//
// Solidity: function pendingHash() constant returns(string)
func (_Container *ContainerCallerSession) PendingHash() (string, error) {
	return _Container.Contract.PendingHash(&_Container.CallOpts)
}

// RequiresReview is a free data retrieval call binding the contract method 0x3dd71d99.
//
// Solidity: function requiresReview() constant returns(bool)
func (_Container *ContainerCaller) RequiresReview(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Container.contract.Call(opts, out, "requiresReview")
	return *ret0, err
}

// RequiresReview is a free data retrieval call binding the contract method 0x3dd71d99.
//
// Solidity: function requiresReview() constant returns(bool)
func (_Container *ContainerSession) RequiresReview() (bool, error) {
	return _Container.Contract.RequiresReview(&_Container.CallOpts)
}

// RequiresReview is a free data retrieval call binding the contract method 0x3dd71d99.
//
// Solidity: function requiresReview() constant returns(bool)
func (_Container *ContainerCallerSession) RequiresReview() (bool, error) {
	return _Container.Contract.RequiresReview(&_Container.CallOpts)
}

// ValidType is a free data retrieval call binding the contract method 0x29dedde5.
//
// Solidity: function validType(address content_type) constant returns(bool)
func (_Container *ContainerCaller) ValidType(opts *bind.CallOpts, content_type common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Container.contract.Call(opts, out, "validType", content_type)
	return *ret0, err
}

// ValidType is a free data retrieval call binding the contract method 0x29dedde5.
//
// Solidity: function validType(address content_type) constant returns(bool)
func (_Container *ContainerSession) ValidType(content_type common.Address) (bool, error) {
	return _Container.Contract.ValidType(&_Container.CallOpts, content_type)
}

// ValidType is a free data retrieval call binding the contract method 0x29dedde5.
//
// Solidity: function validType(address content_type) constant returns(bool)
func (_Container *ContainerCallerSession) ValidType(content_type common.Address) (bool, error) {
	return _Container.Contract.ValidType(&_Container.CallOpts, content_type)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_Container *ContainerCaller) Version(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _Container.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_Container *ContainerSession) Version() ([32]byte, error) {
	return _Container.Contract.Version(&_Container.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_Container *ContainerCallerSession) Version() ([32]byte, error) {
	return _Container.Contract.Version(&_Container.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_Container *ContainerCaller) VersionAPI(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _Container.contract.Call(opts, out, "versionAPI")
	return *ret0, err
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_Container *ContainerSession) VersionAPI() ([32]byte, error) {
	return _Container.Contract.VersionAPI(&_Container.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_Container *ContainerCallerSession) VersionAPI() ([32]byte, error) {
	return _Container.Contract.VersionAPI(&_Container.CallOpts)
}

// VersionHashes is a free data retrieval call binding the contract method 0x7ca8f618.
//
// Solidity: function versionHashes(uint256 ) constant returns(string)
func (_Container *ContainerCaller) VersionHashes(opts *bind.CallOpts, arg0 *big.Int) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _Container.contract.Call(opts, out, "versionHashes", arg0)
	return *ret0, err
}

// VersionHashes is a free data retrieval call binding the contract method 0x7ca8f618.
//
// Solidity: function versionHashes(uint256 ) constant returns(string)
func (_Container *ContainerSession) VersionHashes(arg0 *big.Int) (string, error) {
	return _Container.Contract.VersionHashes(&_Container.CallOpts, arg0)
}

// VersionHashes is a free data retrieval call binding the contract method 0x7ca8f618.
//
// Solidity: function versionHashes(uint256 ) constant returns(string)
func (_Container *ContainerCallerSession) VersionHashes(arg0 *big.Int) (string, error) {
	return _Container.Contract.VersionHashes(&_Container.CallOpts, arg0)
}

// VersionTimestamp is a free data retrieval call binding the contract method 0x7886f747.
//
// Solidity: function versionTimestamp(uint256 ) constant returns(uint256)
func (_Container *ContainerCaller) VersionTimestamp(opts *bind.CallOpts, arg0 *big.Int) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Container.contract.Call(opts, out, "versionTimestamp", arg0)
	return *ret0, err
}

// VersionTimestamp is a free data retrieval call binding the contract method 0x7886f747.
//
// Solidity: function versionTimestamp(uint256 ) constant returns(uint256)
func (_Container *ContainerSession) VersionTimestamp(arg0 *big.Int) (*big.Int, error) {
	return _Container.Contract.VersionTimestamp(&_Container.CallOpts, arg0)
}

// VersionTimestamp is a free data retrieval call binding the contract method 0x7886f747.
//
// Solidity: function versionTimestamp(uint256 ) constant returns(uint256)
func (_Container *ContainerCallerSession) VersionTimestamp(arg0 *big.Int) (*big.Int, error) {
	return _Container.Contract.VersionTimestamp(&_Container.CallOpts, arg0)
}

// Visibility is a free data retrieval call binding the contract method 0x29adec14.
//
// Solidity: function visibility() constant returns(uint8)
func (_Container *ContainerCaller) Visibility(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _Container.contract.Call(opts, out, "visibility")
	return *ret0, err
}

// Visibility is a free data retrieval call binding the contract method 0x29adec14.
//
// Solidity: function visibility() constant returns(uint8)
func (_Container *ContainerSession) Visibility() (uint8, error) {
	return _Container.Contract.Visibility(&_Container.CallOpts)
}

// Visibility is a free data retrieval call binding the contract method 0x29adec14.
//
// Solidity: function visibility() constant returns(uint8)
func (_Container *ContainerCallerSession) Visibility() (uint8, error) {
	return _Container.Contract.Visibility(&_Container.CallOpts)
}

// WhitelistedType is a free data retrieval call binding the contract method 0x9cb121ba.
//
// Solidity: function whitelistedType(address content_type) constant returns(bool)
func (_Container *ContainerCaller) WhitelistedType(opts *bind.CallOpts, content_type common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Container.contract.Call(opts, out, "whitelistedType", content_type)
	return *ret0, err
}

// WhitelistedType is a free data retrieval call binding the contract method 0x9cb121ba.
//
// Solidity: function whitelistedType(address content_type) constant returns(bool)
func (_Container *ContainerSession) WhitelistedType(content_type common.Address) (bool, error) {
	return _Container.Contract.WhitelistedType(&_Container.CallOpts, content_type)
}

// WhitelistedType is a free data retrieval call binding the contract method 0x9cb121ba.
//
// Solidity: function whitelistedType(address content_type) constant returns(bool)
func (_Container *ContainerCallerSession) WhitelistedType(content_type common.Address) (bool, error) {
	return _Container.Contract.WhitelistedType(&_Container.CallOpts, content_type)
}

// AccessRequestV3 is a paid mutator transaction binding the contract method 0x1bf7a912.
//
// Solidity: function accessRequestV3(bytes32[] , address[] ) returns(bool)
func (_Container *ContainerTransactor) AccessRequestV3(opts *bind.TransactOpts, arg0 [][32]byte, arg1 []common.Address) (*types.Transaction, error) {
	return _Container.contract.Transact(opts, "accessRequestV3", arg0, arg1)
}

// AccessRequestV3 is a paid mutator transaction binding the contract method 0x1bf7a912.
//
// Solidity: function accessRequestV3(bytes32[] , address[] ) returns(bool)
func (_Container *ContainerSession) AccessRequestV3(arg0 [][32]byte, arg1 []common.Address) (*types.Transaction, error) {
	return _Container.Contract.AccessRequestV3(&_Container.TransactOpts, arg0, arg1)
}

// AccessRequestV3 is a paid mutator transaction binding the contract method 0x1bf7a912.
//
// Solidity: function accessRequestV3(bytes32[] , address[] ) returns(bool)
func (_Container *ContainerTransactorSession) AccessRequestV3(arg0 [][32]byte, arg1 []common.Address) (*types.Transaction, error) {
	return _Container.Contract.AccessRequestV3(&_Container.TransactOpts, arg0, arg1)
}

// AddContentType is a paid mutator transaction binding the contract method 0x0f58a786.
//
// Solidity: function addContentType(address content_type, address content_contract) returns()
func (_Container *ContainerTransactor) AddContentType(opts *bind.TransactOpts, content_type common.Address, content_contract common.Address) (*types.Transaction, error) {
	return _Container.contract.Transact(opts, "addContentType", content_type, content_contract)
}

// AddContentType is a paid mutator transaction binding the contract method 0x0f58a786.
//
// Solidity: function addContentType(address content_type, address content_contract) returns()
func (_Container *ContainerSession) AddContentType(content_type common.Address, content_contract common.Address) (*types.Transaction, error) {
	return _Container.Contract.AddContentType(&_Container.TransactOpts, content_type, content_contract)
}

// AddContentType is a paid mutator transaction binding the contract method 0x0f58a786.
//
// Solidity: function addContentType(address content_type, address content_contract) returns()
func (_Container *ContainerTransactorSession) AddContentType(content_type common.Address, content_contract common.Address) (*types.Transaction, error) {
	return _Container.Contract.AddContentType(&_Container.TransactOpts, content_type, content_contract)
}

// ClearPending is a paid mutator transaction binding the contract method 0x5f6a1301.
//
// Solidity: function clearPending() returns()
func (_Container *ContainerTransactor) ClearPending(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Container.contract.Transact(opts, "clearPending")
}

// ClearPending is a paid mutator transaction binding the contract method 0x5f6a1301.
//
// Solidity: function clearPending() returns()
func (_Container *ContainerSession) ClearPending() (*types.Transaction, error) {
	return _Container.Contract.ClearPending(&_Container.TransactOpts)
}

// ClearPending is a paid mutator transaction binding the contract method 0x5f6a1301.
//
// Solidity: function clearPending() returns()
func (_Container *ContainerTransactorSession) ClearPending() (*types.Transaction, error) {
	return _Container.Contract.ClearPending(&_Container.TransactOpts)
}

// Commit is a paid mutator transaction binding the contract method 0x9867db74.
//
// Solidity: function commit(string _objectHash) returns()
func (_Container *ContainerTransactor) Commit(opts *bind.TransactOpts, _objectHash string) (*types.Transaction, error) {
	return _Container.contract.Transact(opts, "commit", _objectHash)
}

// Commit is a paid mutator transaction binding the contract method 0x9867db74.
//
// Solidity: function commit(string _objectHash) returns()
func (_Container *ContainerSession) Commit(_objectHash string) (*types.Transaction, error) {
	return _Container.Contract.Commit(&_Container.TransactOpts, _objectHash)
}

// Commit is a paid mutator transaction binding the contract method 0x9867db74.
//
// Solidity: function commit(string _objectHash) returns()
func (_Container *ContainerTransactorSession) Commit(_objectHash string) (*types.Transaction, error) {
	return _Container.Contract.Commit(&_Container.TransactOpts, _objectHash)
}

// ConfirmCommit is a paid mutator transaction binding the contract method 0x446e8826.
//
// Solidity: function confirmCommit() returns(bool)
func (_Container *ContainerTransactor) ConfirmCommit(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Container.contract.Transact(opts, "confirmCommit")
}

// ConfirmCommit is a paid mutator transaction binding the contract method 0x446e8826.
//
// Solidity: function confirmCommit() returns(bool)
func (_Container *ContainerSession) ConfirmCommit() (*types.Transaction, error) {
	return _Container.Contract.ConfirmCommit(&_Container.TransactOpts)
}

// ConfirmCommit is a paid mutator transaction binding the contract method 0x446e8826.
//
// Solidity: function confirmCommit() returns(bool)
func (_Container *ContainerTransactorSession) ConfirmCommit() (*types.Transaction, error) {
	return _Container.Contract.ConfirmCommit(&_Container.TransactOpts)
}

// DeleteVersion is a paid mutator transaction binding the contract method 0xe1a70717.
//
// Solidity: function deleteVersion(string _versionHash) returns(int256)
func (_Container *ContainerTransactor) DeleteVersion(opts *bind.TransactOpts, _versionHash string) (*types.Transaction, error) {
	return _Container.contract.Transact(opts, "deleteVersion", _versionHash)
}

// DeleteVersion is a paid mutator transaction binding the contract method 0xe1a70717.
//
// Solidity: function deleteVersion(string _versionHash) returns(int256)
func (_Container *ContainerSession) DeleteVersion(_versionHash string) (*types.Transaction, error) {
	return _Container.Contract.DeleteVersion(&_Container.TransactOpts, _versionHash)
}

// DeleteVersion is a paid mutator transaction binding the contract method 0xe1a70717.
//
// Solidity: function deleteVersion(string _versionHash) returns(int256)
func (_Container *ContainerTransactorSession) DeleteVersion(_versionHash string) (*types.Transaction, error) {
	return _Container.Contract.DeleteVersion(&_Container.TransactOpts, _versionHash)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_Container *ContainerTransactor) Kill(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Container.contract.Transact(opts, "kill")
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_Container *ContainerSession) Kill() (*types.Transaction, error) {
	return _Container.Contract.Kill(&_Container.TransactOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_Container *ContainerTransactorSession) Kill() (*types.Transaction, error) {
	return _Container.Contract.Kill(&_Container.TransactOpts)
}

// Publish is a paid mutator transaction binding the contract method 0x2cf99422.
//
// Solidity: function publish(address contentObj) returns(bool)
func (_Container *ContainerTransactor) Publish(opts *bind.TransactOpts, contentObj common.Address) (*types.Transaction, error) {
	return _Container.contract.Transact(opts, "publish", contentObj)
}

// Publish is a paid mutator transaction binding the contract method 0x2cf99422.
//
// Solidity: function publish(address contentObj) returns(bool)
func (_Container *ContainerSession) Publish(contentObj common.Address) (*types.Transaction, error) {
	return _Container.Contract.Publish(&_Container.TransactOpts, contentObj)
}

// Publish is a paid mutator transaction binding the contract method 0x2cf99422.
//
// Solidity: function publish(address contentObj) returns(bool)
func (_Container *ContainerTransactorSession) Publish(contentObj common.Address) (*types.Transaction, error) {
	return _Container.Contract.Publish(&_Container.TransactOpts, contentObj)
}

// RemoveContentType is a paid mutator transaction binding the contract method 0xfd089196.
//
// Solidity: function removeContentType(address content_type) returns(bool)
func (_Container *ContainerTransactor) RemoveContentType(opts *bind.TransactOpts, content_type common.Address) (*types.Transaction, error) {
	return _Container.contract.Transact(opts, "removeContentType", content_type)
}

// RemoveContentType is a paid mutator transaction binding the contract method 0xfd089196.
//
// Solidity: function removeContentType(address content_type) returns(bool)
func (_Container *ContainerSession) RemoveContentType(content_type common.Address) (*types.Transaction, error) {
	return _Container.Contract.RemoveContentType(&_Container.TransactOpts, content_type)
}

// RemoveContentType is a paid mutator transaction binding the contract method 0xfd089196.
//
// Solidity: function removeContentType(address content_type) returns(bool)
func (_Container *ContainerTransactorSession) RemoveContentType(content_type common.Address) (*types.Transaction, error) {
	return _Container.Contract.RemoveContentType(&_Container.TransactOpts, content_type)
}

// SetAddressKMS is a paid mutator transaction binding the contract method 0xc9e8e72d.
//
// Solidity: function setAddressKMS(address address_KMS) returns()
func (_Container *ContainerTransactor) SetAddressKMS(opts *bind.TransactOpts, address_KMS common.Address) (*types.Transaction, error) {
	return _Container.contract.Transact(opts, "setAddressKMS", address_KMS)
}

// SetAddressKMS is a paid mutator transaction binding the contract method 0xc9e8e72d.
//
// Solidity: function setAddressKMS(address address_KMS) returns()
func (_Container *ContainerSession) SetAddressKMS(address_KMS common.Address) (*types.Transaction, error) {
	return _Container.Contract.SetAddressKMS(&_Container.TransactOpts, address_KMS)
}

// SetAddressKMS is a paid mutator transaction binding the contract method 0xc9e8e72d.
//
// Solidity: function setAddressKMS(address address_KMS) returns()
func (_Container *ContainerTransactorSession) SetAddressKMS(address_KMS common.Address) (*types.Transaction, error) {
	return _Container.Contract.SetAddressKMS(&_Container.TransactOpts, address_KMS)
}

// SetGroupRights is a paid mutator transaction binding the contract method 0x22e564eb.
//
// Solidity: function setGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_Container *ContainerTransactor) SetGroupRights(opts *bind.TransactOpts, group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _Container.contract.Transact(opts, "setGroupRights", group, access_type, access)
}

// SetGroupRights is a paid mutator transaction binding the contract method 0x22e564eb.
//
// Solidity: function setGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_Container *ContainerSession) SetGroupRights(group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _Container.Contract.SetGroupRights(&_Container.TransactOpts, group, access_type, access)
}

// SetGroupRights is a paid mutator transaction binding the contract method 0x22e564eb.
//
// Solidity: function setGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_Container *ContainerTransactorSession) SetGroupRights(group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _Container.Contract.SetGroupRights(&_Container.TransactOpts, group, access_type, access)
}

// SetRights is a paid mutator transaction binding the contract method 0x0fe1b5a2.
//
// Solidity: function setRights(address stakeholder, uint8 access_type, uint8 access) returns()
func (_Container *ContainerTransactor) SetRights(opts *bind.TransactOpts, stakeholder common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _Container.contract.Transact(opts, "setRights", stakeholder, access_type, access)
}

// SetRights is a paid mutator transaction binding the contract method 0x0fe1b5a2.
//
// Solidity: function setRights(address stakeholder, uint8 access_type, uint8 access) returns()
func (_Container *ContainerSession) SetRights(stakeholder common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _Container.Contract.SetRights(&_Container.TransactOpts, stakeholder, access_type, access)
}

// SetRights is a paid mutator transaction binding the contract method 0x0fe1b5a2.
//
// Solidity: function setRights(address stakeholder, uint8 access_type, uint8 access) returns()
func (_Container *ContainerTransactorSession) SetRights(stakeholder common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _Container.Contract.SetRights(&_Container.TransactOpts, stakeholder, access_type, access)
}

// SetVisibility is a paid mutator transaction binding the contract method 0xaa024e8b.
//
// Solidity: function setVisibility(uint8 _visibility_code) returns()
func (_Container *ContainerTransactor) SetVisibility(opts *bind.TransactOpts, _visibility_code uint8) (*types.Transaction, error) {
	return _Container.contract.Transact(opts, "setVisibility", _visibility_code)
}

// SetVisibility is a paid mutator transaction binding the contract method 0xaa024e8b.
//
// Solidity: function setVisibility(uint8 _visibility_code) returns()
func (_Container *ContainerSession) SetVisibility(_visibility_code uint8) (*types.Transaction, error) {
	return _Container.Contract.SetVisibility(&_Container.TransactOpts, _visibility_code)
}

// SetVisibility is a paid mutator transaction binding the contract method 0xaa024e8b.
//
// Solidity: function setVisibility(uint8 _visibility_code) returns()
func (_Container *ContainerTransactorSession) SetVisibility(_visibility_code uint8) (*types.Transaction, error) {
	return _Container.Contract.SetVisibility(&_Container.TransactOpts, _visibility_code)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_Container *ContainerTransactor) TransferCreatorship(opts *bind.TransactOpts, newCreator common.Address) (*types.Transaction, error) {
	return _Container.contract.Transact(opts, "transferCreatorship", newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_Container *ContainerSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _Container.Contract.TransferCreatorship(&_Container.TransactOpts, newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_Container *ContainerTransactorSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _Container.Contract.TransferCreatorship(&_Container.TransactOpts, newCreator)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Container *ContainerTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _Container.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Container *ContainerSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _Container.Contract.TransferOwnership(&_Container.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Container *ContainerTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _Container.Contract.TransferOwnership(&_Container.TransactOpts, newOwner)
}

// UpdateRequest is a paid mutator transaction binding the contract method 0xc287e0ed.
//
// Solidity: function updateRequest() returns()
func (_Container *ContainerTransactor) UpdateRequest(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Container.contract.Transact(opts, "updateRequest")
}

// UpdateRequest is a paid mutator transaction binding the contract method 0xc287e0ed.
//
// Solidity: function updateRequest() returns()
func (_Container *ContainerSession) UpdateRequest() (*types.Transaction, error) {
	return _Container.Contract.UpdateRequest(&_Container.TransactOpts)
}

// UpdateRequest is a paid mutator transaction binding the contract method 0xc287e0ed.
//
// Solidity: function updateRequest() returns()
func (_Container *ContainerTransactorSession) UpdateRequest() (*types.Transaction, error) {
	return _Container.Contract.UpdateRequest(&_Container.TransactOpts)
}

// ContainerAccessRequestV3Iterator is returned from FilterAccessRequestV3 and is used to iterate over the raw logs and unpacked data for AccessRequestV3 events raised by the Container contract.
type ContainerAccessRequestV3Iterator struct {
	Event *ContainerAccessRequestV3 // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContainerAccessRequestV3Iterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContainerAccessRequestV3)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContainerAccessRequestV3)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContainerAccessRequestV3Iterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContainerAccessRequestV3Iterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContainerAccessRequestV3 represents a AccessRequestV3 event raised by the Container contract.
type ContainerAccessRequestV3 struct {
	RequestNonce     *big.Int
	ParentAddress    common.Address
	ContextHash      [32]byte
	Accessor         common.Address
	RequestTimestamp *big.Int
	Raw              types.Log // Blockchain specific contextual infos
}

// FilterAccessRequestV3 is a free log retrieval operation binding the contract event 0x545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c7.
//
// Solidity: event AccessRequestV3(uint256 requestNonce, address parentAddress, bytes32 contextHash, address accessor, uint256 requestTimestamp)
func (_Container *ContainerFilterer) FilterAccessRequestV3(opts *bind.FilterOpts) (*ContainerAccessRequestV3Iterator, error) {

	logs, sub, err := _Container.contract.FilterLogs(opts, "AccessRequestV3")
	if err != nil {
		return nil, err
	}
	return &ContainerAccessRequestV3Iterator{contract: _Container.contract, event: "AccessRequestV3", logs: logs, sub: sub}, nil
}

// WatchAccessRequestV3 is a free log subscription operation binding the contract event 0x545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c7.
//
// Solidity: event AccessRequestV3(uint256 requestNonce, address parentAddress, bytes32 contextHash, address accessor, uint256 requestTimestamp)
func (_Container *ContainerFilterer) WatchAccessRequestV3(opts *bind.WatchOpts, sink chan<- *ContainerAccessRequestV3) (event.Subscription, error) {

	logs, sub, err := _Container.contract.WatchLogs(opts, "AccessRequestV3")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContainerAccessRequestV3)
				if err := _Container.contract.UnpackLog(event, "AccessRequestV3", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAccessRequestV3 is a log parse operation binding the contract event 0x545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c7.
//
// Solidity: event AccessRequestV3(uint256 requestNonce, address parentAddress, bytes32 contextHash, address accessor, uint256 requestTimestamp)
func (_Container *ContainerFilterer) ParseAccessRequestV3(log types.Log) (*ContainerAccessRequestV3, error) {
	event := new(ContainerAccessRequestV3)
	if err := _Container.contract.UnpackLog(event, "AccessRequestV3", log); err != nil {
		return nil, err
	}
	return event, nil
}

// ContainerCommitPendingIterator is returned from FilterCommitPending and is used to iterate over the raw logs and unpacked data for CommitPending events raised by the Container contract.
type ContainerCommitPendingIterator struct {
	Event *ContainerCommitPending // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContainerCommitPendingIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContainerCommitPending)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContainerCommitPending)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContainerCommitPendingIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContainerCommitPendingIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContainerCommitPending represents a CommitPending event raised by the Container contract.
type ContainerCommitPending struct {
	SpaceAddress  common.Address
	ParentAddress common.Address
	ObjectHash    string
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterCommitPending is a free log retrieval operation binding the contract event 0xb3ac059d88af6016aca1aebb7b3e796f2e7420435c59c563687814e9b85daa75.
//
// Solidity: event CommitPending(address spaceAddress, address parentAddress, string objectHash)
func (_Container *ContainerFilterer) FilterCommitPending(opts *bind.FilterOpts) (*ContainerCommitPendingIterator, error) {

	logs, sub, err := _Container.contract.FilterLogs(opts, "CommitPending")
	if err != nil {
		return nil, err
	}
	return &ContainerCommitPendingIterator{contract: _Container.contract, event: "CommitPending", logs: logs, sub: sub}, nil
}

// WatchCommitPending is a free log subscription operation binding the contract event 0xb3ac059d88af6016aca1aebb7b3e796f2e7420435c59c563687814e9b85daa75.
//
// Solidity: event CommitPending(address spaceAddress, address parentAddress, string objectHash)
func (_Container *ContainerFilterer) WatchCommitPending(opts *bind.WatchOpts, sink chan<- *ContainerCommitPending) (event.Subscription, error) {

	logs, sub, err := _Container.contract.WatchLogs(opts, "CommitPending")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContainerCommitPending)
				if err := _Container.contract.UnpackLog(event, "CommitPending", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseCommitPending is a log parse operation binding the contract event 0xb3ac059d88af6016aca1aebb7b3e796f2e7420435c59c563687814e9b85daa75.
//
// Solidity: event CommitPending(address spaceAddress, address parentAddress, string objectHash)
func (_Container *ContainerFilterer) ParseCommitPending(log types.Log) (*ContainerCommitPending, error) {
	event := new(ContainerCommitPending)
	if err := _Container.contract.UnpackLog(event, "CommitPending", log); err != nil {
		return nil, err
	}
	return event, nil
}

// ContainerContentTypeAddedIterator is returned from FilterContentTypeAdded and is used to iterate over the raw logs and unpacked data for ContentTypeAdded events raised by the Container contract.
type ContainerContentTypeAddedIterator struct {
	Event *ContainerContentTypeAdded // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContainerContentTypeAddedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContainerContentTypeAdded)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContainerContentTypeAdded)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContainerContentTypeAddedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContainerContentTypeAddedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContainerContentTypeAdded represents a ContentTypeAdded event raised by the Container contract.
type ContainerContentTypeAdded struct {
	ContentType     common.Address
	ContentContract common.Address
	Raw             types.Log // Blockchain specific contextual infos
}

// FilterContentTypeAdded is a free log retrieval operation binding the contract event 0x280016f7418306a55542432120fd1a239ef9fcc1a92694d8d44ca76be0249ea7.
//
// Solidity: event ContentTypeAdded(address contentType, address contentContract)
func (_Container *ContainerFilterer) FilterContentTypeAdded(opts *bind.FilterOpts) (*ContainerContentTypeAddedIterator, error) {

	logs, sub, err := _Container.contract.FilterLogs(opts, "ContentTypeAdded")
	if err != nil {
		return nil, err
	}
	return &ContainerContentTypeAddedIterator{contract: _Container.contract, event: "ContentTypeAdded", logs: logs, sub: sub}, nil
}

// WatchContentTypeAdded is a free log subscription operation binding the contract event 0x280016f7418306a55542432120fd1a239ef9fcc1a92694d8d44ca76be0249ea7.
//
// Solidity: event ContentTypeAdded(address contentType, address contentContract)
func (_Container *ContainerFilterer) WatchContentTypeAdded(opts *bind.WatchOpts, sink chan<- *ContainerContentTypeAdded) (event.Subscription, error) {

	logs, sub, err := _Container.contract.WatchLogs(opts, "ContentTypeAdded")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContainerContentTypeAdded)
				if err := _Container.contract.UnpackLog(event, "ContentTypeAdded", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseContentTypeAdded is a log parse operation binding the contract event 0x280016f7418306a55542432120fd1a239ef9fcc1a92694d8d44ca76be0249ea7.
//
// Solidity: event ContentTypeAdded(address contentType, address contentContract)
func (_Container *ContainerFilterer) ParseContentTypeAdded(log types.Log) (*ContainerContentTypeAdded, error) {
	event := new(ContainerContentTypeAdded)
	if err := _Container.contract.UnpackLog(event, "ContentTypeAdded", log); err != nil {
		return nil, err
	}
	return event, nil
}

// ContainerContentTypeRemovedIterator is returned from FilterContentTypeRemoved and is used to iterate over the raw logs and unpacked data for ContentTypeRemoved events raised by the Container contract.
type ContainerContentTypeRemovedIterator struct {
	Event *ContainerContentTypeRemoved // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContainerContentTypeRemovedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContainerContentTypeRemoved)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContainerContentTypeRemoved)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContainerContentTypeRemovedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContainerContentTypeRemovedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContainerContentTypeRemoved represents a ContentTypeRemoved event raised by the Container contract.
type ContainerContentTypeRemoved struct {
	ContentType common.Address
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterContentTypeRemoved is a free log retrieval operation binding the contract event 0xd41375b9d347dfe722f90a780731abd23b7855f9cf14ea7063c4cab5f9ae58e2.
//
// Solidity: event ContentTypeRemoved(address contentType)
func (_Container *ContainerFilterer) FilterContentTypeRemoved(opts *bind.FilterOpts) (*ContainerContentTypeRemovedIterator, error) {

	logs, sub, err := _Container.contract.FilterLogs(opts, "ContentTypeRemoved")
	if err != nil {
		return nil, err
	}
	return &ContainerContentTypeRemovedIterator{contract: _Container.contract, event: "ContentTypeRemoved", logs: logs, sub: sub}, nil
}

// WatchContentTypeRemoved is a free log subscription operation binding the contract event 0xd41375b9d347dfe722f90a780731abd23b7855f9cf14ea7063c4cab5f9ae58e2.
//
// Solidity: event ContentTypeRemoved(address contentType)
func (_Container *ContainerFilterer) WatchContentTypeRemoved(opts *bind.WatchOpts, sink chan<- *ContainerContentTypeRemoved) (event.Subscription, error) {

	logs, sub, err := _Container.contract.WatchLogs(opts, "ContentTypeRemoved")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContainerContentTypeRemoved)
				if err := _Container.contract.UnpackLog(event, "ContentTypeRemoved", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseContentTypeRemoved is a log parse operation binding the contract event 0xd41375b9d347dfe722f90a780731abd23b7855f9cf14ea7063c4cab5f9ae58e2.
//
// Solidity: event ContentTypeRemoved(address contentType)
func (_Container *ContainerFilterer) ParseContentTypeRemoved(log types.Log) (*ContainerContentTypeRemoved, error) {
	event := new(ContainerContentTypeRemoved)
	if err := _Container.contract.UnpackLog(event, "ContentTypeRemoved", log); err != nil {
		return nil, err
	}
	return event, nil
}

// ContainerUpdateRequestIterator is returned from FilterUpdateRequest and is used to iterate over the raw logs and unpacked data for UpdateRequest events raised by the Container contract.
type ContainerUpdateRequestIterator struct {
	Event *ContainerUpdateRequest // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContainerUpdateRequestIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContainerUpdateRequest)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContainerUpdateRequest)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContainerUpdateRequestIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContainerUpdateRequestIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContainerUpdateRequest represents a UpdateRequest event raised by the Container contract.
type ContainerUpdateRequest struct {
	ObjectHash string
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterUpdateRequest is a free log retrieval operation binding the contract event 0x403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b65.
//
// Solidity: event UpdateRequest(string objectHash)
func (_Container *ContainerFilterer) FilterUpdateRequest(opts *bind.FilterOpts) (*ContainerUpdateRequestIterator, error) {

	logs, sub, err := _Container.contract.FilterLogs(opts, "UpdateRequest")
	if err != nil {
		return nil, err
	}
	return &ContainerUpdateRequestIterator{contract: _Container.contract, event: "UpdateRequest", logs: logs, sub: sub}, nil
}

// WatchUpdateRequest is a free log subscription operation binding the contract event 0x403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b65.
//
// Solidity: event UpdateRequest(string objectHash)
func (_Container *ContainerFilterer) WatchUpdateRequest(opts *bind.WatchOpts, sink chan<- *ContainerUpdateRequest) (event.Subscription, error) {

	logs, sub, err := _Container.contract.WatchLogs(opts, "UpdateRequest")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContainerUpdateRequest)
				if err := _Container.contract.UnpackLog(event, "UpdateRequest", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseUpdateRequest is a log parse operation binding the contract event 0x403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b65.
//
// Solidity: event UpdateRequest(string objectHash)
func (_Container *ContainerFilterer) ParseUpdateRequest(log types.Log) (*ContainerUpdateRequest, error) {
	event := new(ContainerUpdateRequest)
	if err := _Container.contract.UnpackLog(event, "UpdateRequest", log); err != nil {
		return nil, err
	}
	return event, nil
}

// ContainerVersionConfirmIterator is returned from FilterVersionConfirm and is used to iterate over the raw logs and unpacked data for VersionConfirm events raised by the Container contract.
type ContainerVersionConfirmIterator struct {
	Event *ContainerVersionConfirm // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContainerVersionConfirmIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContainerVersionConfirm)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContainerVersionConfirm)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContainerVersionConfirmIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContainerVersionConfirmIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContainerVersionConfirm represents a VersionConfirm event raised by the Container contract.
type ContainerVersionConfirm struct {
	SpaceAddress  common.Address
	ParentAddress common.Address
	ObjectHash    string
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterVersionConfirm is a free log retrieval operation binding the contract event 0xbdaffceabaaa783aa187fea6c2e815541d29e2290bf3f7d3c4fc53672b68f7df.
//
// Solidity: event VersionConfirm(address spaceAddress, address parentAddress, string objectHash)
func (_Container *ContainerFilterer) FilterVersionConfirm(opts *bind.FilterOpts) (*ContainerVersionConfirmIterator, error) {

	logs, sub, err := _Container.contract.FilterLogs(opts, "VersionConfirm")
	if err != nil {
		return nil, err
	}
	return &ContainerVersionConfirmIterator{contract: _Container.contract, event: "VersionConfirm", logs: logs, sub: sub}, nil
}

// WatchVersionConfirm is a free log subscription operation binding the contract event 0xbdaffceabaaa783aa187fea6c2e815541d29e2290bf3f7d3c4fc53672b68f7df.
//
// Solidity: event VersionConfirm(address spaceAddress, address parentAddress, string objectHash)
func (_Container *ContainerFilterer) WatchVersionConfirm(opts *bind.WatchOpts, sink chan<- *ContainerVersionConfirm) (event.Subscription, error) {

	logs, sub, err := _Container.contract.WatchLogs(opts, "VersionConfirm")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContainerVersionConfirm)
				if err := _Container.contract.UnpackLog(event, "VersionConfirm", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseVersionConfirm is a log parse operation binding the contract event 0xbdaffceabaaa783aa187fea6c2e815541d29e2290bf3f7d3c4fc53672b68f7df.
//
// Solidity: event VersionConfirm(address spaceAddress, address parentAddress, string objectHash)
func (_Container *ContainerFilterer) ParseVersionConfirm(log types.Log) (*ContainerVersionConfirm, error) {
	event := new(ContainerVersionConfirm)
	if err := _Container.contract.UnpackLog(event, "VersionConfirm", log); err != nil {
		return nil, err
	}
	return event, nil
}

// ContainerVersionDeleteIterator is returned from FilterVersionDelete and is used to iterate over the raw logs and unpacked data for VersionDelete events raised by the Container contract.
type ContainerVersionDeleteIterator struct {
	Event *ContainerVersionDelete // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContainerVersionDeleteIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContainerVersionDelete)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContainerVersionDelete)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContainerVersionDeleteIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContainerVersionDeleteIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContainerVersionDelete represents a VersionDelete event raised by the Container contract.
type ContainerVersionDelete struct {
	SpaceAddress common.Address
	VersionHash  string
	Index        *big.Int
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterVersionDelete is a free log retrieval operation binding the contract event 0x238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51.
//
// Solidity: event VersionDelete(address spaceAddress, string versionHash, int256 index)
func (_Container *ContainerFilterer) FilterVersionDelete(opts *bind.FilterOpts) (*ContainerVersionDeleteIterator, error) {

	logs, sub, err := _Container.contract.FilterLogs(opts, "VersionDelete")
	if err != nil {
		return nil, err
	}
	return &ContainerVersionDeleteIterator{contract: _Container.contract, event: "VersionDelete", logs: logs, sub: sub}, nil
}

// WatchVersionDelete is a free log subscription operation binding the contract event 0x238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51.
//
// Solidity: event VersionDelete(address spaceAddress, string versionHash, int256 index)
func (_Container *ContainerFilterer) WatchVersionDelete(opts *bind.WatchOpts, sink chan<- *ContainerVersionDelete) (event.Subscription, error) {

	logs, sub, err := _Container.contract.WatchLogs(opts, "VersionDelete")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContainerVersionDelete)
				if err := _Container.contract.UnpackLog(event, "VersionDelete", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseVersionDelete is a log parse operation binding the contract event 0x238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51.
//
// Solidity: event VersionDelete(address spaceAddress, string versionHash, int256 index)
func (_Container *ContainerFilterer) ParseVersionDelete(log types.Log) (*ContainerVersionDelete, error) {
	event := new(ContainerVersionDelete)
	if err := _Container.contract.UnpackLog(event, "VersionDelete", log); err != nil {
		return nil, err
	}
	return event, nil
}

// ContainerVisibilityChangedIterator is returned from FilterVisibilityChanged and is used to iterate over the raw logs and unpacked data for VisibilityChanged events raised by the Container contract.
type ContainerVisibilityChangedIterator struct {
	Event *ContainerVisibilityChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContainerVisibilityChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContainerVisibilityChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContainerVisibilityChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContainerVisibilityChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContainerVisibilityChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContainerVisibilityChanged represents a VisibilityChanged event raised by the Container contract.
type ContainerVisibilityChanged struct {
	ContentSpace  common.Address
	ParentAddress common.Address
	Visibility    uint8
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterVisibilityChanged is a free log retrieval operation binding the contract event 0x369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500.
//
// Solidity: event VisibilityChanged(address contentSpace, address parentAddress, uint8 visibility)
func (_Container *ContainerFilterer) FilterVisibilityChanged(opts *bind.FilterOpts) (*ContainerVisibilityChangedIterator, error) {

	logs, sub, err := _Container.contract.FilterLogs(opts, "VisibilityChanged")
	if err != nil {
		return nil, err
	}
	return &ContainerVisibilityChangedIterator{contract: _Container.contract, event: "VisibilityChanged", logs: logs, sub: sub}, nil
}

// WatchVisibilityChanged is a free log subscription operation binding the contract event 0x369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500.
//
// Solidity: event VisibilityChanged(address contentSpace, address parentAddress, uint8 visibility)
func (_Container *ContainerFilterer) WatchVisibilityChanged(opts *bind.WatchOpts, sink chan<- *ContainerVisibilityChanged) (event.Subscription, error) {

	logs, sub, err := _Container.contract.WatchLogs(opts, "VisibilityChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContainerVisibilityChanged)
				if err := _Container.contract.UnpackLog(event, "VisibilityChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseVisibilityChanged is a log parse operation binding the contract event 0x369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500.
//
// Solidity: event VisibilityChanged(address contentSpace, address parentAddress, uint8 visibility)
func (_Container *ContainerFilterer) ParseVisibilityChanged(log types.Log) (*ContainerVisibilityChanged, error) {
	event := new(ContainerVisibilityChanged)
	if err := _Container.contract.UnpackLog(event, "VisibilityChanged", log); err != nil {
		return nil, err
	}
	return event, nil
}

// ContentABI is the input ABI used to generate the binding from.
const ContentABI = "[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"LogAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"b\",\"type\":\"bool\"}],\"name\":\"LogBool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"b\",\"type\":\"bytes32\"}],\"name\":\"LogBytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"u\",\"type\":\"int256\"}],\"name\":\"LogInt256\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LogPayment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"u\",\"type\":\"uint256\"}],\"name\":\"LogUint256\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"name\":\"RunAccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"calculatedAccessCharge\",\"type\":\"int256\"}],\"name\":\"RunAccessCharge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"name\":\"RunCreate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"name\":\"RunFinalize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"name\":\"RunKill\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"proposedStatusCode\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"returnStatusCode\",\"type\":\"int256\"}],\"name\":\"RunStatusChange\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"DEFAULT_ACCESS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DEFAULT_CHARGE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DEFAULT_SEE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"commandKill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentSpace\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"addresspayable[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"runAccess\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"addresspayable[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"runAccessInfo\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"runCreate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"runDescribeStatus\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"runEdit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"runFinalize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"runKill\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"runKillExt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"int256\",\"name\":\"proposed_status_code\",\"type\":\"int256\"}],\"name\":\"runStatusChange\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newCreator\",\"type\":\"address\"}],\"name\":\"transferCreatorship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"versionAPI\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// ContentFuncSigs maps the 4-byte function signature to its string representation.
var ContentFuncSigs = map[string]string{
	"6af27417": "DEFAULT_ACCESS()",
	"f185db0c": "DEFAULT_CHARGE()",
	"b535b03e": "DEFAULT_SEE()",
	"2de3ecd1": "commandKill()",
	"af570c04": "contentSpace()",
	"02d05d3f": "creator()",
	"41c0e1b5": "kill()",
	"8da5cb5b": "owner()",
	"f9b4aa02": "runAccess(uint256,bytes32[],address[],address)",
	"74ba4609": "runAccessInfo(bytes32[],address[],address)",
	"7b1cdb3e": "runCreate()",
	"45080442": "runDescribeStatus(int256)",
	"c9f3d94c": "runEdit()",
	"1a485ccd": "runFinalize(uint256,bytes32[],address[],address)",
	"9e99bbea": "runKill()",
	"860b2492": "runKillExt()",
	"3513a805": "runStatusChange(int256)",
	"6d2e4b1b": "transferCreatorship(address)",
	"f2fde38b": "transferOwnership(address)",
	"54fd4d50": "version()",
	"5f4fcae1": "versionAPI()",
}

// ContentBin is the compiled bytecode used for deploying new contracts.
var ContentBin = "0x60806040527f4f776e61626c653230323030393238313130303030504f000000000000000000600055620332e360ec1b6001557f436f6e74656e7432303230303231303136343130304d4c000000000000000000600555600280546001600160a01b031990811632179091556003805490911633179055610806806100856000396000f3fe60806040526004361061012a5760003560e01c806374ba4609116100ab578063af570c041161006f578063af570c041461052c578063b535b03e14610541578063c9f3d94c14610556578063f185db0c1461056b578063f2fde38b14610580578063f9b4aa021461015d5761012a565b806374ba46091461039d5780637b1cdb3e14610507578063860b24921461050f5780638da5cb5b146105175780639e99bbea146105075761012a565b806345080442116100f257806345080442146102eb57806354fd4d50146103155780635f4fcae11461032a5780636af274171461033f5780636d2e4b1b1461036a5761012a565b806302d05d3f1461012c5780631a485ccd1461015d5780632de3ecd1146102a45780633513a805146102b957806341c0e1b5146102d6575b005b34801561013857600080fd5b506101416105b3565b604080516001600160a01b039092168252519081900360200190f35b6102926004803603608081101561017357600080fd5b81359190810190604081016020820135600160201b81111561019457600080fd5b8201836020820111156101a657600080fd5b803590602001918460208302840111600160201b831117156101c757600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561021657600080fd5b82018360208201111561022857600080fd5b803590602001918460208302840111600160201b8311171561024957600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550505090356001600160a01b031691506105c29050565b60408051918252519081900360200190f35b3480156102b057600080fd5b5061012a6105cc565b610292600480360360208110156102cf57600080fd5b5035610678565b3480156102e257600080fd5b5061012a61067b565b3480156102f757600080fd5b506102926004803603602081101561030e57600080fd5b5035610692565b34801561032157600080fd5b50610292610698565b34801561033657600080fd5b5061029261069e565b34801561034b57600080fd5b506103546106a4565b6040805160ff9092168252519081900360200190f35b34801561037657600080fd5b5061012a6004803603602081101561038d57600080fd5b50356001600160a01b03166106a9565b3480156103a957600080fd5b506104d8600480360360608110156103c057600080fd5b810190602081018135600160201b8111156103da57600080fd5b8201836020820111156103ec57600080fd5b803590602001918460208302840111600160201b8311171561040d57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561045c57600080fd5b82018360208201111561046e57600080fd5b803590602001918460208302840111600160201b8311171561048f57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550505090356001600160a01b031691506106f59050565b6040805160ff958616815293851660208501529190931682820152606082019290925290519081900360800190f35b610292610704565b610292610709565b34801561052357600080fd5b50610141610758565b34801561053857600080fd5b50610141610767565b34801561054d57600080fd5b50610354610776565b34801561056257600080fd5b5061029261077b565b34801561057757600080fd5b50610354610780565b34801561058c57600080fd5b5061012a600480360360208110156105a357600080fd5b50356001600160a01b0316610785565b6002546001600160a01b031681565b6000949350505050565b6006546001600160a01b031633146105e357600080fd5b6000339050306001600160a01b0316816001600160a01b0316632310167f6040518163ffffffff1660e01b815260040160206040518083038186803b15801561062b57600080fd5b505afa15801561063f573d6000803e3d6000fd5b505050506040513d602081101561065557600080fd5b50516001600160a01b03161461066a57600080fd5b6003546001600160a01b0316ff5b90565b6003546001600160a01b0316331461066a57600080fd5b50600090565b60055481565b60015481565b600281565b6002546001600160a01b031633146106c057600080fd5b6001600160a01b0381166106d357600080fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60076000808093509350935093565b600090565b600080610714610704565b9050806064148061072657508061044c145b1561074257600680546001600160a01b03191633179055610753565b600680546001600160a01b03191690555b905090565b6003546001600160a01b031681565b6004546001600160a01b031681565b600181565b606490565b600481565b6003546001600160a01b0316331461079c57600080fd5b6001600160a01b0381166107af57600080fd5b600380546001600160a01b0319166001600160a01b039290921691909117905556fea265627a7a72315820a8441e363451e9a647254481f51ca6340f6f11c5fc78ccab31c2437017e03db264736f6c63430005110032"

// DeployContent deploys a new Ethereum contract, binding an instance of Content to it.
func DeployContent(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Content, error) {
	parsed, err := abi.JSON(strings.NewReader(ContentABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(ContentBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Content{ContentCaller: ContentCaller{contract: contract}, ContentTransactor: ContentTransactor{contract: contract}, ContentFilterer: ContentFilterer{contract: contract}}, nil
}

// Content is an auto generated Go binding around an Ethereum contract.
type Content struct {
	ContentCaller     // Read-only binding to the contract
	ContentTransactor // Write-only binding to the contract
	ContentFilterer   // Log filterer for contract events
}

// ContentCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContentCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContentTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContentTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContentFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContentFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContentSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContentSession struct {
	Contract     *Content          // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ContentCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContentCallerSession struct {
	Contract *ContentCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts  // Call options to use throughout this session
}

// ContentTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContentTransactorSession struct {
	Contract     *ContentTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts  // Transaction auth options to use throughout this session
}

// ContentRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContentRaw struct {
	Contract *Content // Generic contract binding to access the raw methods on
}

// ContentCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContentCallerRaw struct {
	Contract *ContentCaller // Generic read-only contract binding to access the raw methods on
}

// ContentTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContentTransactorRaw struct {
	Contract *ContentTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContent creates a new instance of Content, bound to a specific deployed contract.
func NewContent(address common.Address, backend bind.ContractBackend) (*Content, error) {
	contract, err := bindContent(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Content{ContentCaller: ContentCaller{contract: contract}, ContentTransactor: ContentTransactor{contract: contract}, ContentFilterer: ContentFilterer{contract: contract}}, nil
}

// NewContentCaller creates a new read-only instance of Content, bound to a specific deployed contract.
func NewContentCaller(address common.Address, caller bind.ContractCaller) (*ContentCaller, error) {
	contract, err := bindContent(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContentCaller{contract: contract}, nil
}

// NewContentTransactor creates a new write-only instance of Content, bound to a specific deployed contract.
func NewContentTransactor(address common.Address, transactor bind.ContractTransactor) (*ContentTransactor, error) {
	contract, err := bindContent(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContentTransactor{contract: contract}, nil
}

// NewContentFilterer creates a new log filterer instance of Content, bound to a specific deployed contract.
func NewContentFilterer(address common.Address, filterer bind.ContractFilterer) (*ContentFilterer, error) {
	contract, err := bindContent(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContentFilterer{contract: contract}, nil
}

// bindContent binds a generic wrapper to an already deployed contract.
func bindContent(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ContentABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Content *ContentRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Content.Contract.ContentCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Content *ContentRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Content.Contract.ContentTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Content *ContentRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Content.Contract.ContentTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Content *ContentCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Content.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Content *ContentTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Content.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Content *ContentTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Content.Contract.contract.Transact(opts, method, params...)
}

// DEFAULTACCESS is a free data retrieval call binding the contract method 0x6af27417.
//
// Solidity: function DEFAULT_ACCESS() constant returns(uint8)
func (_Content *ContentCaller) DEFAULTACCESS(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _Content.contract.Call(opts, out, "DEFAULT_ACCESS")
	return *ret0, err
}

// DEFAULTACCESS is a free data retrieval call binding the contract method 0x6af27417.
//
// Solidity: function DEFAULT_ACCESS() constant returns(uint8)
func (_Content *ContentSession) DEFAULTACCESS() (uint8, error) {
	return _Content.Contract.DEFAULTACCESS(&_Content.CallOpts)
}

// DEFAULTACCESS is a free data retrieval call binding the contract method 0x6af27417.
//
// Solidity: function DEFAULT_ACCESS() constant returns(uint8)
func (_Content *ContentCallerSession) DEFAULTACCESS() (uint8, error) {
	return _Content.Contract.DEFAULTACCESS(&_Content.CallOpts)
}

// DEFAULTCHARGE is a free data retrieval call binding the contract method 0xf185db0c.
//
// Solidity: function DEFAULT_CHARGE() constant returns(uint8)
func (_Content *ContentCaller) DEFAULTCHARGE(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _Content.contract.Call(opts, out, "DEFAULT_CHARGE")
	return *ret0, err
}

// DEFAULTCHARGE is a free data retrieval call binding the contract method 0xf185db0c.
//
// Solidity: function DEFAULT_CHARGE() constant returns(uint8)
func (_Content *ContentSession) DEFAULTCHARGE() (uint8, error) {
	return _Content.Contract.DEFAULTCHARGE(&_Content.CallOpts)
}

// DEFAULTCHARGE is a free data retrieval call binding the contract method 0xf185db0c.
//
// Solidity: function DEFAULT_CHARGE() constant returns(uint8)
func (_Content *ContentCallerSession) DEFAULTCHARGE() (uint8, error) {
	return _Content.Contract.DEFAULTCHARGE(&_Content.CallOpts)
}

// DEFAULTSEE is a free data retrieval call binding the contract method 0xb535b03e.
//
// Solidity: function DEFAULT_SEE() constant returns(uint8)
func (_Content *ContentCaller) DEFAULTSEE(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _Content.contract.Call(opts, out, "DEFAULT_SEE")
	return *ret0, err
}

// DEFAULTSEE is a free data retrieval call binding the contract method 0xb535b03e.
//
// Solidity: function DEFAULT_SEE() constant returns(uint8)
func (_Content *ContentSession) DEFAULTSEE() (uint8, error) {
	return _Content.Contract.DEFAULTSEE(&_Content.CallOpts)
}

// DEFAULTSEE is a free data retrieval call binding the contract method 0xb535b03e.
//
// Solidity: function DEFAULT_SEE() constant returns(uint8)
func (_Content *ContentCallerSession) DEFAULTSEE() (uint8, error) {
	return _Content.Contract.DEFAULTSEE(&_Content.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_Content *ContentCaller) ContentSpace(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Content.contract.Call(opts, out, "contentSpace")
	return *ret0, err
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_Content *ContentSession) ContentSpace() (common.Address, error) {
	return _Content.Contract.ContentSpace(&_Content.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_Content *ContentCallerSession) ContentSpace() (common.Address, error) {
	return _Content.Contract.ContentSpace(&_Content.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_Content *ContentCaller) Creator(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Content.contract.Call(opts, out, "creator")
	return *ret0, err
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_Content *ContentSession) Creator() (common.Address, error) {
	return _Content.Contract.Creator(&_Content.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_Content *ContentCallerSession) Creator() (common.Address, error) {
	return _Content.Contract.Creator(&_Content.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Content *ContentCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Content.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Content *ContentSession) Owner() (common.Address, error) {
	return _Content.Contract.Owner(&_Content.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Content *ContentCallerSession) Owner() (common.Address, error) {
	return _Content.Contract.Owner(&_Content.CallOpts)
}

// RunAccessInfo is a free data retrieval call binding the contract method 0x74ba4609.
//
// Solidity: function runAccessInfo(bytes32[] , address[] , address ) constant returns(uint8, uint8, uint8, uint256)
func (_Content *ContentCaller) RunAccessInfo(opts *bind.CallOpts, arg0 [][32]byte, arg1 []common.Address, arg2 common.Address) (uint8, uint8, uint8, *big.Int, error) {
	var (
		ret0 = new(uint8)
		ret1 = new(uint8)
		ret2 = new(uint8)
		ret3 = new(*big.Int)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
		ret3,
	}
	err := _Content.contract.Call(opts, out, "runAccessInfo", arg0, arg1, arg2)
	return *ret0, *ret1, *ret2, *ret3, err
}

// RunAccessInfo is a free data retrieval call binding the contract method 0x74ba4609.
//
// Solidity: function runAccessInfo(bytes32[] , address[] , address ) constant returns(uint8, uint8, uint8, uint256)
func (_Content *ContentSession) RunAccessInfo(arg0 [][32]byte, arg1 []common.Address, arg2 common.Address) (uint8, uint8, uint8, *big.Int, error) {
	return _Content.Contract.RunAccessInfo(&_Content.CallOpts, arg0, arg1, arg2)
}

// RunAccessInfo is a free data retrieval call binding the contract method 0x74ba4609.
//
// Solidity: function runAccessInfo(bytes32[] , address[] , address ) constant returns(uint8, uint8, uint8, uint256)
func (_Content *ContentCallerSession) RunAccessInfo(arg0 [][32]byte, arg1 []common.Address, arg2 common.Address) (uint8, uint8, uint8, *big.Int, error) {
	return _Content.Contract.RunAccessInfo(&_Content.CallOpts, arg0, arg1, arg2)
}

// RunDescribeStatus is a free data retrieval call binding the contract method 0x45080442.
//
// Solidity: function runDescribeStatus(int256 ) constant returns(bytes32)
func (_Content *ContentCaller) RunDescribeStatus(opts *bind.CallOpts, arg0 *big.Int) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _Content.contract.Call(opts, out, "runDescribeStatus", arg0)
	return *ret0, err
}

// RunDescribeStatus is a free data retrieval call binding the contract method 0x45080442.
//
// Solidity: function runDescribeStatus(int256 ) constant returns(bytes32)
func (_Content *ContentSession) RunDescribeStatus(arg0 *big.Int) ([32]byte, error) {
	return _Content.Contract.RunDescribeStatus(&_Content.CallOpts, arg0)
}

// RunDescribeStatus is a free data retrieval call binding the contract method 0x45080442.
//
// Solidity: function runDescribeStatus(int256 ) constant returns(bytes32)
func (_Content *ContentCallerSession) RunDescribeStatus(arg0 *big.Int) ([32]byte, error) {
	return _Content.Contract.RunDescribeStatus(&_Content.CallOpts, arg0)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_Content *ContentCaller) Version(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _Content.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_Content *ContentSession) Version() ([32]byte, error) {
	return _Content.Contract.Version(&_Content.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_Content *ContentCallerSession) Version() ([32]byte, error) {
	return _Content.Contract.Version(&_Content.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_Content *ContentCaller) VersionAPI(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _Content.contract.Call(opts, out, "versionAPI")
	return *ret0, err
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_Content *ContentSession) VersionAPI() ([32]byte, error) {
	return _Content.Contract.VersionAPI(&_Content.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_Content *ContentCallerSession) VersionAPI() ([32]byte, error) {
	return _Content.Contract.VersionAPI(&_Content.CallOpts)
}

// CommandKill is a paid mutator transaction binding the contract method 0x2de3ecd1.
//
// Solidity: function commandKill() returns()
func (_Content *ContentTransactor) CommandKill(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Content.contract.Transact(opts, "commandKill")
}

// CommandKill is a paid mutator transaction binding the contract method 0x2de3ecd1.
//
// Solidity: function commandKill() returns()
func (_Content *ContentSession) CommandKill() (*types.Transaction, error) {
	return _Content.Contract.CommandKill(&_Content.TransactOpts)
}

// CommandKill is a paid mutator transaction binding the contract method 0x2de3ecd1.
//
// Solidity: function commandKill() returns()
func (_Content *ContentTransactorSession) CommandKill() (*types.Transaction, error) {
	return _Content.Contract.CommandKill(&_Content.TransactOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_Content *ContentTransactor) Kill(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Content.contract.Transact(opts, "kill")
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_Content *ContentSession) Kill() (*types.Transaction, error) {
	return _Content.Contract.Kill(&_Content.TransactOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_Content *ContentTransactorSession) Kill() (*types.Transaction, error) {
	return _Content.Contract.Kill(&_Content.TransactOpts)
}

// RunAccess is a paid mutator transaction binding the contract method 0xf9b4aa02.
//
// Solidity: function runAccess(uint256 , bytes32[] , address[] , address ) returns(uint256)
func (_Content *ContentTransactor) RunAccess(opts *bind.TransactOpts, arg0 *big.Int, arg1 [][32]byte, arg2 []common.Address, arg3 common.Address) (*types.Transaction, error) {
	return _Content.contract.Transact(opts, "runAccess", arg0, arg1, arg2, arg3)
}

// RunAccess is a paid mutator transaction binding the contract method 0xf9b4aa02.
//
// Solidity: function runAccess(uint256 , bytes32[] , address[] , address ) returns(uint256)
func (_Content *ContentSession) RunAccess(arg0 *big.Int, arg1 [][32]byte, arg2 []common.Address, arg3 common.Address) (*types.Transaction, error) {
	return _Content.Contract.RunAccess(&_Content.TransactOpts, arg0, arg1, arg2, arg3)
}

// RunAccess is a paid mutator transaction binding the contract method 0xf9b4aa02.
//
// Solidity: function runAccess(uint256 , bytes32[] , address[] , address ) returns(uint256)
func (_Content *ContentTransactorSession) RunAccess(arg0 *big.Int, arg1 [][32]byte, arg2 []common.Address, arg3 common.Address) (*types.Transaction, error) {
	return _Content.Contract.RunAccess(&_Content.TransactOpts, arg0, arg1, arg2, arg3)
}

// RunCreate is a paid mutator transaction binding the contract method 0x7b1cdb3e.
//
// Solidity: function runCreate() returns(uint256)
func (_Content *ContentTransactor) RunCreate(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Content.contract.Transact(opts, "runCreate")
}

// RunCreate is a paid mutator transaction binding the contract method 0x7b1cdb3e.
//
// Solidity: function runCreate() returns(uint256)
func (_Content *ContentSession) RunCreate() (*types.Transaction, error) {
	return _Content.Contract.RunCreate(&_Content.TransactOpts)
}

// RunCreate is a paid mutator transaction binding the contract method 0x7b1cdb3e.
//
// Solidity: function runCreate() returns(uint256)
func (_Content *ContentTransactorSession) RunCreate() (*types.Transaction, error) {
	return _Content.Contract.RunCreate(&_Content.TransactOpts)
}

// RunEdit is a paid mutator transaction binding the contract method 0xc9f3d94c.
//
// Solidity: function runEdit() returns(uint256)
func (_Content *ContentTransactor) RunEdit(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Content.contract.Transact(opts, "runEdit")
}

// RunEdit is a paid mutator transaction binding the contract method 0xc9f3d94c.
//
// Solidity: function runEdit() returns(uint256)
func (_Content *ContentSession) RunEdit() (*types.Transaction, error) {
	return _Content.Contract.RunEdit(&_Content.TransactOpts)
}

// RunEdit is a paid mutator transaction binding the contract method 0xc9f3d94c.
//
// Solidity: function runEdit() returns(uint256)
func (_Content *ContentTransactorSession) RunEdit() (*types.Transaction, error) {
	return _Content.Contract.RunEdit(&_Content.TransactOpts)
}

// RunFinalize is a paid mutator transaction binding the contract method 0x1a485ccd.
//
// Solidity: function runFinalize(uint256 , bytes32[] , address[] , address ) returns(uint256)
func (_Content *ContentTransactor) RunFinalize(opts *bind.TransactOpts, arg0 *big.Int, arg1 [][32]byte, arg2 []common.Address, arg3 common.Address) (*types.Transaction, error) {
	return _Content.contract.Transact(opts, "runFinalize", arg0, arg1, arg2, arg3)
}

// RunFinalize is a paid mutator transaction binding the contract method 0x1a485ccd.
//
// Solidity: function runFinalize(uint256 , bytes32[] , address[] , address ) returns(uint256)
func (_Content *ContentSession) RunFinalize(arg0 *big.Int, arg1 [][32]byte, arg2 []common.Address, arg3 common.Address) (*types.Transaction, error) {
	return _Content.Contract.RunFinalize(&_Content.TransactOpts, arg0, arg1, arg2, arg3)
}

// RunFinalize is a paid mutator transaction binding the contract method 0x1a485ccd.
//
// Solidity: function runFinalize(uint256 , bytes32[] , address[] , address ) returns(uint256)
func (_Content *ContentTransactorSession) RunFinalize(arg0 *big.Int, arg1 [][32]byte, arg2 []common.Address, arg3 common.Address) (*types.Transaction, error) {
	return _Content.Contract.RunFinalize(&_Content.TransactOpts, arg0, arg1, arg2, arg3)
}

// RunKill is a paid mutator transaction binding the contract method 0x9e99bbea.
//
// Solidity: function runKill() returns(uint256)
func (_Content *ContentTransactor) RunKill(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Content.contract.Transact(opts, "runKill")
}

// RunKill is a paid mutator transaction binding the contract method 0x9e99bbea.
//
// Solidity: function runKill() returns(uint256)
func (_Content *ContentSession) RunKill() (*types.Transaction, error) {
	return _Content.Contract.RunKill(&_Content.TransactOpts)
}

// RunKill is a paid mutator transaction binding the contract method 0x9e99bbea.
//
// Solidity: function runKill() returns(uint256)
func (_Content *ContentTransactorSession) RunKill() (*types.Transaction, error) {
	return _Content.Contract.RunKill(&_Content.TransactOpts)
}

// RunKillExt is a paid mutator transaction binding the contract method 0x860b2492.
//
// Solidity: function runKillExt() returns(uint256)
func (_Content *ContentTransactor) RunKillExt(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Content.contract.Transact(opts, "runKillExt")
}

// RunKillExt is a paid mutator transaction binding the contract method 0x860b2492.
//
// Solidity: function runKillExt() returns(uint256)
func (_Content *ContentSession) RunKillExt() (*types.Transaction, error) {
	return _Content.Contract.RunKillExt(&_Content.TransactOpts)
}

// RunKillExt is a paid mutator transaction binding the contract method 0x860b2492.
//
// Solidity: function runKillExt() returns(uint256)
func (_Content *ContentTransactorSession) RunKillExt() (*types.Transaction, error) {
	return _Content.Contract.RunKillExt(&_Content.TransactOpts)
}

// RunStatusChange is a paid mutator transaction binding the contract method 0x3513a805.
//
// Solidity: function runStatusChange(int256 proposed_status_code) returns(int256)
func (_Content *ContentTransactor) RunStatusChange(opts *bind.TransactOpts, proposed_status_code *big.Int) (*types.Transaction, error) {
	return _Content.contract.Transact(opts, "runStatusChange", proposed_status_code)
}

// RunStatusChange is a paid mutator transaction binding the contract method 0x3513a805.
//
// Solidity: function runStatusChange(int256 proposed_status_code) returns(int256)
func (_Content *ContentSession) RunStatusChange(proposed_status_code *big.Int) (*types.Transaction, error) {
	return _Content.Contract.RunStatusChange(&_Content.TransactOpts, proposed_status_code)
}

// RunStatusChange is a paid mutator transaction binding the contract method 0x3513a805.
//
// Solidity: function runStatusChange(int256 proposed_status_code) returns(int256)
func (_Content *ContentTransactorSession) RunStatusChange(proposed_status_code *big.Int) (*types.Transaction, error) {
	return _Content.Contract.RunStatusChange(&_Content.TransactOpts, proposed_status_code)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_Content *ContentTransactor) TransferCreatorship(opts *bind.TransactOpts, newCreator common.Address) (*types.Transaction, error) {
	return _Content.contract.Transact(opts, "transferCreatorship", newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_Content *ContentSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _Content.Contract.TransferCreatorship(&_Content.TransactOpts, newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_Content *ContentTransactorSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _Content.Contract.TransferCreatorship(&_Content.TransactOpts, newCreator)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Content *ContentTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _Content.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Content *ContentSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _Content.Contract.TransferOwnership(&_Content.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Content *ContentTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _Content.Contract.TransferOwnership(&_Content.TransactOpts, newOwner)
}

// ContentLogIterator is returned from FilterLog and is used to iterate over the raw logs and unpacked data for Log events raised by the Content contract.
type ContentLogIterator struct {
	Event *ContentLog // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContentLogIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContentLog)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContentLog)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContentLogIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContentLogIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContentLog represents a Log event raised by the Content contract.
type ContentLog struct {
	Label string
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterLog is a free log retrieval operation binding the contract event 0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab.
//
// Solidity: event Log(string label)
func (_Content *ContentFilterer) FilterLog(opts *bind.FilterOpts) (*ContentLogIterator, error) {

	logs, sub, err := _Content.contract.FilterLogs(opts, "Log")
	if err != nil {
		return nil, err
	}
	return &ContentLogIterator{contract: _Content.contract, event: "Log", logs: logs, sub: sub}, nil
}

// WatchLog is a free log subscription operation binding the contract event 0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab.
//
// Solidity: event Log(string label)
func (_Content *ContentFilterer) WatchLog(opts *bind.WatchOpts, sink chan<- *ContentLog) (event.Subscription, error) {

	logs, sub, err := _Content.contract.WatchLogs(opts, "Log")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContentLog)
				if err := _Content.contract.UnpackLog(event, "Log", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseLog is a log parse operation binding the contract event 0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab.
//
// Solidity: event Log(string label)
func (_Content *ContentFilterer) ParseLog(log types.Log) (*ContentLog, error) {
	event := new(ContentLog)
	if err := _Content.contract.UnpackLog(event, "Log", log); err != nil {
		return nil, err
	}
	return event, nil
}

// ContentLogAddressIterator is returned from FilterLogAddress and is used to iterate over the raw logs and unpacked data for LogAddress events raised by the Content contract.
type ContentLogAddressIterator struct {
	Event *ContentLogAddress // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContentLogAddressIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContentLogAddress)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContentLogAddress)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContentLogAddressIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContentLogAddressIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContentLogAddress represents a LogAddress event raised by the Content contract.
type ContentLogAddress struct {
	Label string
	A     common.Address
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterLogAddress is a free log retrieval operation binding the contract event 0x62ddffe5b5108385f7a590f100e1ee414ad9551a31f089e64e82998440785e1e.
//
// Solidity: event LogAddress(string label, address a)
func (_Content *ContentFilterer) FilterLogAddress(opts *bind.FilterOpts) (*ContentLogAddressIterator, error) {

	logs, sub, err := _Content.contract.FilterLogs(opts, "LogAddress")
	if err != nil {
		return nil, err
	}
	return &ContentLogAddressIterator{contract: _Content.contract, event: "LogAddress", logs: logs, sub: sub}, nil
}

// WatchLogAddress is a free log subscription operation binding the contract event 0x62ddffe5b5108385f7a590f100e1ee414ad9551a31f089e64e82998440785e1e.
//
// Solidity: event LogAddress(string label, address a)
func (_Content *ContentFilterer) WatchLogAddress(opts *bind.WatchOpts, sink chan<- *ContentLogAddress) (event.Subscription, error) {

	logs, sub, err := _Content.contract.WatchLogs(opts, "LogAddress")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContentLogAddress)
				if err := _Content.contract.UnpackLog(event, "LogAddress", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseLogAddress is a log parse operation binding the contract event 0x62ddffe5b5108385f7a590f100e1ee414ad9551a31f089e64e82998440785e1e.
//
// Solidity: event LogAddress(string label, address a)
func (_Content *ContentFilterer) ParseLogAddress(log types.Log) (*ContentLogAddress, error) {
	event := new(ContentLogAddress)
	if err := _Content.contract.UnpackLog(event, "LogAddress", log); err != nil {
		return nil, err
	}
	return event, nil
}

// ContentLogBoolIterator is returned from FilterLogBool and is used to iterate over the raw logs and unpacked data for LogBool events raised by the Content contract.
type ContentLogBoolIterator struct {
	Event *ContentLogBool // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContentLogBoolIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContentLogBool)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContentLogBool)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContentLogBoolIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContentLogBoolIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContentLogBool represents a LogBool event raised by the Content contract.
type ContentLogBool struct {
	Label string
	B     bool
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterLogBool is a free log retrieval operation binding the contract event 0x4c34c2f9a78632f29fa59aaed5514cb742fd9fbcfd7ccc2c03c85f2bbc621c47.
//
// Solidity: event LogBool(string label, bool b)
func (_Content *ContentFilterer) FilterLogBool(opts *bind.FilterOpts) (*ContentLogBoolIterator, error) {

	logs, sub, err := _Content.contract.FilterLogs(opts, "LogBool")
	if err != nil {
		return nil, err
	}
	return &ContentLogBoolIterator{contract: _Content.contract, event: "LogBool", logs: logs, sub: sub}, nil
}

// WatchLogBool is a free log subscription operation binding the contract event 0x4c34c2f9a78632f29fa59aaed5514cb742fd9fbcfd7ccc2c03c85f2bbc621c47.
//
// Solidity: event LogBool(string label, bool b)
func (_Content *ContentFilterer) WatchLogBool(opts *bind.WatchOpts, sink chan<- *ContentLogBool) (event.Subscription, error) {

	logs, sub, err := _Content.contract.WatchLogs(opts, "LogBool")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContentLogBool)
				if err := _Content.contract.UnpackLog(event, "LogBool", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseLogBool is a log parse operation binding the contract event 0x4c34c2f9a78632f29fa59aaed5514cb742fd9fbcfd7ccc2c03c85f2bbc621c47.
//
// Solidity: event LogBool(string label, bool b)
func (_Content *ContentFilterer) ParseLogBool(log types.Log) (*ContentLogBool, error) {
	event := new(ContentLogBool)
	if err := _Content.contract.UnpackLog(event, "LogBool", log); err != nil {
		return nil, err
	}
	return event, nil
}

// ContentLogBytes32Iterator is returned from FilterLogBytes32 and is used to iterate over the raw logs and unpacked data for LogBytes32 events raised by the Content contract.
type ContentLogBytes32Iterator struct {
	Event *ContentLogBytes32 // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContentLogBytes32Iterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContentLogBytes32)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContentLogBytes32)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContentLogBytes32Iterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContentLogBytes32Iterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContentLogBytes32 represents a LogBytes32 event raised by the Content contract.
type ContentLogBytes32 struct {
	Label string
	B     [32]byte
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterLogBytes32 is a free log retrieval operation binding the contract event 0x02d93529bba9d141e5e06733c52c7e6fbcb1149586adb5c24064b522ab26f1d7.
//
// Solidity: event LogBytes32(string label, bytes32 b)
func (_Content *ContentFilterer) FilterLogBytes32(opts *bind.FilterOpts) (*ContentLogBytes32Iterator, error) {

	logs, sub, err := _Content.contract.FilterLogs(opts, "LogBytes32")
	if err != nil {
		return nil, err
	}
	return &ContentLogBytes32Iterator{contract: _Content.contract, event: "LogBytes32", logs: logs, sub: sub}, nil
}

// WatchLogBytes32 is a free log subscription operation binding the contract event 0x02d93529bba9d141e5e06733c52c7e6fbcb1149586adb5c24064b522ab26f1d7.
//
// Solidity: event LogBytes32(string label, bytes32 b)
func (_Content *ContentFilterer) WatchLogBytes32(opts *bind.WatchOpts, sink chan<- *ContentLogBytes32) (event.Subscription, error) {

	logs, sub, err := _Content.contract.WatchLogs(opts, "LogBytes32")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContentLogBytes32)
				if err := _Content.contract.UnpackLog(event, "LogBytes32", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseLogBytes32 is a log parse operation binding the contract event 0x02d93529bba9d141e5e06733c52c7e6fbcb1149586adb5c24064b522ab26f1d7.
//
// Solidity: event LogBytes32(string label, bytes32 b)
func (_Content *ContentFilterer) ParseLogBytes32(log types.Log) (*ContentLogBytes32, error) {
	event := new(ContentLogBytes32)
	if err := _Content.contract.UnpackLog(event, "LogBytes32", log); err != nil {
		return nil, err
	}
	return event, nil
}

// ContentLogInt256Iterator is returned from FilterLogInt256 and is used to iterate over the raw logs and unpacked data for LogInt256 events raised by the Content contract.
type ContentLogInt256Iterator struct {
	Event *ContentLogInt256 // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContentLogInt256Iterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContentLogInt256)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContentLogInt256)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContentLogInt256Iterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContentLogInt256Iterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContentLogInt256 represents a LogInt256 event raised by the Content contract.
type ContentLogInt256 struct {
	Label string
	U     *big.Int
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterLogInt256 is a free log retrieval operation binding the contract event 0x3d9b341774178bb033613e3a7a1cadb2244b3bcbb1372905d2ba24dca38aeb22.
//
// Solidity: event LogInt256(string label, int256 u)
func (_Content *ContentFilterer) FilterLogInt256(opts *bind.FilterOpts) (*ContentLogInt256Iterator, error) {

	logs, sub, err := _Content.contract.FilterLogs(opts, "LogInt256")
	if err != nil {
		return nil, err
	}
	return &ContentLogInt256Iterator{contract: _Content.contract, event: "LogInt256", logs: logs, sub: sub}, nil
}

// WatchLogInt256 is a free log subscription operation binding the contract event 0x3d9b341774178bb033613e3a7a1cadb2244b3bcbb1372905d2ba24dca38aeb22.
//
// Solidity: event LogInt256(string label, int256 u)
func (_Content *ContentFilterer) WatchLogInt256(opts *bind.WatchOpts, sink chan<- *ContentLogInt256) (event.Subscription, error) {

	logs, sub, err := _Content.contract.WatchLogs(opts, "LogInt256")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContentLogInt256)
				if err := _Content.contract.UnpackLog(event, "LogInt256", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseLogInt256 is a log parse operation binding the contract event 0x3d9b341774178bb033613e3a7a1cadb2244b3bcbb1372905d2ba24dca38aeb22.
//
// Solidity: event LogInt256(string label, int256 u)
func (_Content *ContentFilterer) ParseLogInt256(log types.Log) (*ContentLogInt256, error) {
	event := new(ContentLogInt256)
	if err := _Content.contract.UnpackLog(event, "LogInt256", log); err != nil {
		return nil, err
	}
	return event, nil
}

// ContentLogPaymentIterator is returned from FilterLogPayment and is used to iterate over the raw logs and unpacked data for LogPayment events raised by the Content contract.
type ContentLogPaymentIterator struct {
	Event *ContentLogPayment // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContentLogPaymentIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContentLogPayment)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContentLogPayment)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContentLogPaymentIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContentLogPaymentIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContentLogPayment represents a LogPayment event raised by the Content contract.
type ContentLogPayment struct {
	Label  string
	Payee  common.Address
	Amount *big.Int
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterLogPayment is a free log retrieval operation binding the contract event 0x6a0f12fe24f7c34df8acc096f076bac6e3f1ff225f4fccc7b0f389657bde895a.
//
// Solidity: event LogPayment(string label, address payee, uint256 amount)
func (_Content *ContentFilterer) FilterLogPayment(opts *bind.FilterOpts) (*ContentLogPaymentIterator, error) {

	logs, sub, err := _Content.contract.FilterLogs(opts, "LogPayment")
	if err != nil {
		return nil, err
	}
	return &ContentLogPaymentIterator{contract: _Content.contract, event: "LogPayment", logs: logs, sub: sub}, nil
}

// WatchLogPayment is a free log subscription operation binding the contract event 0x6a0f12fe24f7c34df8acc096f076bac6e3f1ff225f4fccc7b0f389657bde895a.
//
// Solidity: event LogPayment(string label, address payee, uint256 amount)
func (_Content *ContentFilterer) WatchLogPayment(opts *bind.WatchOpts, sink chan<- *ContentLogPayment) (event.Subscription, error) {

	logs, sub, err := _Content.contract.WatchLogs(opts, "LogPayment")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContentLogPayment)
				if err := _Content.contract.UnpackLog(event, "LogPayment", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseLogPayment is a log parse operation binding the contract event 0x6a0f12fe24f7c34df8acc096f076bac6e3f1ff225f4fccc7b0f389657bde895a.
//
// Solidity: event LogPayment(string label, address payee, uint256 amount)
func (_Content *ContentFilterer) ParseLogPayment(log types.Log) (*ContentLogPayment, error) {
	event := new(ContentLogPayment)
	if err := _Content.contract.UnpackLog(event, "LogPayment", log); err != nil {
		return nil, err
	}
	return event, nil
}

// ContentLogUint256Iterator is returned from FilterLogUint256 and is used to iterate over the raw logs and unpacked data for LogUint256 events raised by the Content contract.
type ContentLogUint256Iterator struct {
	Event *ContentLogUint256 // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContentLogUint256Iterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContentLogUint256)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContentLogUint256)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContentLogUint256Iterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContentLogUint256Iterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContentLogUint256 represents a LogUint256 event raised by the Content contract.
type ContentLogUint256 struct {
	Label string
	U     *big.Int
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterLogUint256 is a free log retrieval operation binding the contract event 0x31c369d7029afba34b21369bcf9a6ac132fb2621c34558b914859b768d05232d.
//
// Solidity: event LogUint256(string label, uint256 u)
func (_Content *ContentFilterer) FilterLogUint256(opts *bind.FilterOpts) (*ContentLogUint256Iterator, error) {

	logs, sub, err := _Content.contract.FilterLogs(opts, "LogUint256")
	if err != nil {
		return nil, err
	}
	return &ContentLogUint256Iterator{contract: _Content.contract, event: "LogUint256", logs: logs, sub: sub}, nil
}

// WatchLogUint256 is a free log subscription operation binding the contract event 0x31c369d7029afba34b21369bcf9a6ac132fb2621c34558b914859b768d05232d.
//
// Solidity: event LogUint256(string label, uint256 u)
func (_Content *ContentFilterer) WatchLogUint256(opts *bind.WatchOpts, sink chan<- *ContentLogUint256) (event.Subscription, error) {

	logs, sub, err := _Content.contract.WatchLogs(opts, "LogUint256")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContentLogUint256)
				if err := _Content.contract.UnpackLog(event, "LogUint256", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseLogUint256 is a log parse operation binding the contract event 0x31c369d7029afba34b21369bcf9a6ac132fb2621c34558b914859b768d05232d.
//
// Solidity: event LogUint256(string label, uint256 u)
func (_Content *ContentFilterer) ParseLogUint256(log types.Log) (*ContentLogUint256, error) {
	event := new(ContentLogUint256)
	if err := _Content.contract.UnpackLog(event, "LogUint256", log); err != nil {
		return nil, err
	}
	return event, nil
}

// ContentRunAccessIterator is returned from FilterRunAccess and is used to iterate over the raw logs and unpacked data for RunAccess events raised by the Content contract.
type ContentRunAccessIterator struct {
	Event *ContentRunAccess // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContentRunAccessIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContentRunAccess)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContentRunAccess)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContentRunAccessIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContentRunAccessIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContentRunAccess represents a RunAccess event raised by the Content contract.
type ContentRunAccess struct {
	RequestNonce *big.Int
	Result       *big.Int
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterRunAccess is a free log retrieval operation binding the contract event 0x3e68dc35f88d76818f276322c37f5021ee00e232fe0d27a93c02801aec4d9c58.
//
// Solidity: event RunAccess(uint256 requestNonce, uint256 result)
func (_Content *ContentFilterer) FilterRunAccess(opts *bind.FilterOpts) (*ContentRunAccessIterator, error) {

	logs, sub, err := _Content.contract.FilterLogs(opts, "RunAccess")
	if err != nil {
		return nil, err
	}
	return &ContentRunAccessIterator{contract: _Content.contract, event: "RunAccess", logs: logs, sub: sub}, nil
}

// WatchRunAccess is a free log subscription operation binding the contract event 0x3e68dc35f88d76818f276322c37f5021ee00e232fe0d27a93c02801aec4d9c58.
//
// Solidity: event RunAccess(uint256 requestNonce, uint256 result)
func (_Content *ContentFilterer) WatchRunAccess(opts *bind.WatchOpts, sink chan<- *ContentRunAccess) (event.Subscription, error) {

	logs, sub, err := _Content.contract.WatchLogs(opts, "RunAccess")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContentRunAccess)
				if err := _Content.contract.UnpackLog(event, "RunAccess", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRunAccess is a log parse operation binding the contract event 0x3e68dc35f88d76818f276322c37f5021ee00e232fe0d27a93c02801aec4d9c58.
//
// Solidity: event RunAccess(uint256 requestNonce, uint256 result)
func (_Content *ContentFilterer) ParseRunAccess(log types.Log) (*ContentRunAccess, error) {
	event := new(ContentRunAccess)
	if err := _Content.contract.UnpackLog(event, "RunAccess", log); err != nil {
		return nil, err
	}
	return event, nil
}

// ContentRunAccessChargeIterator is returned from FilterRunAccessCharge and is used to iterate over the raw logs and unpacked data for RunAccessCharge events raised by the Content contract.
type ContentRunAccessChargeIterator struct {
	Event *ContentRunAccessCharge // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContentRunAccessChargeIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContentRunAccessCharge)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContentRunAccessCharge)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContentRunAccessChargeIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContentRunAccessChargeIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContentRunAccessCharge represents a RunAccessCharge event raised by the Content contract.
type ContentRunAccessCharge struct {
	CalculatedAccessCharge *big.Int
	Raw                    types.Log // Blockchain specific contextual infos
}

// FilterRunAccessCharge is a free log retrieval operation binding the contract event 0xe1f170f83120da6c17cd0ed37a683fc996637c63d2c94a60c806d4cb7466f47b.
//
// Solidity: event RunAccessCharge(int256 calculatedAccessCharge)
func (_Content *ContentFilterer) FilterRunAccessCharge(opts *bind.FilterOpts) (*ContentRunAccessChargeIterator, error) {

	logs, sub, err := _Content.contract.FilterLogs(opts, "RunAccessCharge")
	if err != nil {
		return nil, err
	}
	return &ContentRunAccessChargeIterator{contract: _Content.contract, event: "RunAccessCharge", logs: logs, sub: sub}, nil
}

// WatchRunAccessCharge is a free log subscription operation binding the contract event 0xe1f170f83120da6c17cd0ed37a683fc996637c63d2c94a60c806d4cb7466f47b.
//
// Solidity: event RunAccessCharge(int256 calculatedAccessCharge)
func (_Content *ContentFilterer) WatchRunAccessCharge(opts *bind.WatchOpts, sink chan<- *ContentRunAccessCharge) (event.Subscription, error) {

	logs, sub, err := _Content.contract.WatchLogs(opts, "RunAccessCharge")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContentRunAccessCharge)
				if err := _Content.contract.UnpackLog(event, "RunAccessCharge", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRunAccessCharge is a log parse operation binding the contract event 0xe1f170f83120da6c17cd0ed37a683fc996637c63d2c94a60c806d4cb7466f47b.
//
// Solidity: event RunAccessCharge(int256 calculatedAccessCharge)
func (_Content *ContentFilterer) ParseRunAccessCharge(log types.Log) (*ContentRunAccessCharge, error) {
	event := new(ContentRunAccessCharge)
	if err := _Content.contract.UnpackLog(event, "RunAccessCharge", log); err != nil {
		return nil, err
	}
	return event, nil
}

// ContentRunCreateIterator is returned from FilterRunCreate and is used to iterate over the raw logs and unpacked data for RunCreate events raised by the Content contract.
type ContentRunCreateIterator struct {
	Event *ContentRunCreate // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContentRunCreateIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContentRunCreate)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContentRunCreate)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContentRunCreateIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContentRunCreateIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContentRunCreate represents a RunCreate event raised by the Content contract.
type ContentRunCreate struct {
	Result *big.Int
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterRunCreate is a free log retrieval operation binding the contract event 0x9df71221e13c480b974b5d5bd7591b30b7ea3bfff8a56dfa7fde810a14c1c39b.
//
// Solidity: event RunCreate(uint256 result)
func (_Content *ContentFilterer) FilterRunCreate(opts *bind.FilterOpts) (*ContentRunCreateIterator, error) {

	logs, sub, err := _Content.contract.FilterLogs(opts, "RunCreate")
	if err != nil {
		return nil, err
	}
	return &ContentRunCreateIterator{contract: _Content.contract, event: "RunCreate", logs: logs, sub: sub}, nil
}

// WatchRunCreate is a free log subscription operation binding the contract event 0x9df71221e13c480b974b5d5bd7591b30b7ea3bfff8a56dfa7fde810a14c1c39b.
//
// Solidity: event RunCreate(uint256 result)
func (_Content *ContentFilterer) WatchRunCreate(opts *bind.WatchOpts, sink chan<- *ContentRunCreate) (event.Subscription, error) {

	logs, sub, err := _Content.contract.WatchLogs(opts, "RunCreate")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContentRunCreate)
				if err := _Content.contract.UnpackLog(event, "RunCreate", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRunCreate is a log parse operation binding the contract event 0x9df71221e13c480b974b5d5bd7591b30b7ea3bfff8a56dfa7fde810a14c1c39b.
//
// Solidity: event RunCreate(uint256 result)
func (_Content *ContentFilterer) ParseRunCreate(log types.Log) (*ContentRunCreate, error) {
	event := new(ContentRunCreate)
	if err := _Content.contract.UnpackLog(event, "RunCreate", log); err != nil {
		return nil, err
	}
	return event, nil
}

// ContentRunFinalizeIterator is returned from FilterRunFinalize and is used to iterate over the raw logs and unpacked data for RunFinalize events raised by the Content contract.
type ContentRunFinalizeIterator struct {
	Event *ContentRunFinalize // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContentRunFinalizeIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContentRunFinalize)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContentRunFinalize)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContentRunFinalizeIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContentRunFinalizeIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContentRunFinalize represents a RunFinalize event raised by the Content contract.
type ContentRunFinalize struct {
	RequestNonce *big.Int
	Result       *big.Int
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterRunFinalize is a free log retrieval operation binding the contract event 0xbf0f2215c45c5ee802d4c20bdfc915308c4459b0f6a78f23ad350e6408bf2891.
//
// Solidity: event RunFinalize(uint256 requestNonce, uint256 result)
func (_Content *ContentFilterer) FilterRunFinalize(opts *bind.FilterOpts) (*ContentRunFinalizeIterator, error) {

	logs, sub, err := _Content.contract.FilterLogs(opts, "RunFinalize")
	if err != nil {
		return nil, err
	}
	return &ContentRunFinalizeIterator{contract: _Content.contract, event: "RunFinalize", logs: logs, sub: sub}, nil
}

// WatchRunFinalize is a free log subscription operation binding the contract event 0xbf0f2215c45c5ee802d4c20bdfc915308c4459b0f6a78f23ad350e6408bf2891.
//
// Solidity: event RunFinalize(uint256 requestNonce, uint256 result)
func (_Content *ContentFilterer) WatchRunFinalize(opts *bind.WatchOpts, sink chan<- *ContentRunFinalize) (event.Subscription, error) {

	logs, sub, err := _Content.contract.WatchLogs(opts, "RunFinalize")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContentRunFinalize)
				if err := _Content.contract.UnpackLog(event, "RunFinalize", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRunFinalize is a log parse operation binding the contract event 0xbf0f2215c45c5ee802d4c20bdfc915308c4459b0f6a78f23ad350e6408bf2891.
//
// Solidity: event RunFinalize(uint256 requestNonce, uint256 result)
func (_Content *ContentFilterer) ParseRunFinalize(log types.Log) (*ContentRunFinalize, error) {
	event := new(ContentRunFinalize)
	if err := _Content.contract.UnpackLog(event, "RunFinalize", log); err != nil {
		return nil, err
	}
	return event, nil
}

// ContentRunKillIterator is returned from FilterRunKill and is used to iterate over the raw logs and unpacked data for RunKill events raised by the Content contract.
type ContentRunKillIterator struct {
	Event *ContentRunKill // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContentRunKillIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContentRunKill)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContentRunKill)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContentRunKillIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContentRunKillIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContentRunKill represents a RunKill event raised by the Content contract.
type ContentRunKill struct {
	Result *big.Int
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterRunKill is a free log retrieval operation binding the contract event 0x6d0dbfc3805aef247651b04b50fc717599f7e0b66c6b022ae1544406f7bf8f86.
//
// Solidity: event RunKill(uint256 result)
func (_Content *ContentFilterer) FilterRunKill(opts *bind.FilterOpts) (*ContentRunKillIterator, error) {

	logs, sub, err := _Content.contract.FilterLogs(opts, "RunKill")
	if err != nil {
		return nil, err
	}
	return &ContentRunKillIterator{contract: _Content.contract, event: "RunKill", logs: logs, sub: sub}, nil
}

// WatchRunKill is a free log subscription operation binding the contract event 0x6d0dbfc3805aef247651b04b50fc717599f7e0b66c6b022ae1544406f7bf8f86.
//
// Solidity: event RunKill(uint256 result)
func (_Content *ContentFilterer) WatchRunKill(opts *bind.WatchOpts, sink chan<- *ContentRunKill) (event.Subscription, error) {

	logs, sub, err := _Content.contract.WatchLogs(opts, "RunKill")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContentRunKill)
				if err := _Content.contract.UnpackLog(event, "RunKill", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRunKill is a log parse operation binding the contract event 0x6d0dbfc3805aef247651b04b50fc717599f7e0b66c6b022ae1544406f7bf8f86.
//
// Solidity: event RunKill(uint256 result)
func (_Content *ContentFilterer) ParseRunKill(log types.Log) (*ContentRunKill, error) {
	event := new(ContentRunKill)
	if err := _Content.contract.UnpackLog(event, "RunKill", log); err != nil {
		return nil, err
	}
	return event, nil
}

// ContentRunStatusChangeIterator is returned from FilterRunStatusChange and is used to iterate over the raw logs and unpacked data for RunStatusChange events raised by the Content contract.
type ContentRunStatusChangeIterator struct {
	Event *ContentRunStatusChange // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContentRunStatusChangeIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContentRunStatusChange)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContentRunStatusChange)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContentRunStatusChangeIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContentRunStatusChangeIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContentRunStatusChange represents a RunStatusChange event raised by the Content contract.
type ContentRunStatusChange struct {
	ProposedStatusCode *big.Int
	ReturnStatusCode   *big.Int
	Raw                types.Log // Blockchain specific contextual infos
}

// FilterRunStatusChange is a free log retrieval operation binding the contract event 0xb6c1c013bb5004fe8e943c6890e300ccedf9bd73dcd4eb291b31b9f96874feff.
//
// Solidity: event RunStatusChange(int256 proposedStatusCode, int256 returnStatusCode)
func (_Content *ContentFilterer) FilterRunStatusChange(opts *bind.FilterOpts) (*ContentRunStatusChangeIterator, error) {

	logs, sub, err := _Content.contract.FilterLogs(opts, "RunStatusChange")
	if err != nil {
		return nil, err
	}
	return &ContentRunStatusChangeIterator{contract: _Content.contract, event: "RunStatusChange", logs: logs, sub: sub}, nil
}

// WatchRunStatusChange is a free log subscription operation binding the contract event 0xb6c1c013bb5004fe8e943c6890e300ccedf9bd73dcd4eb291b31b9f96874feff.
//
// Solidity: event RunStatusChange(int256 proposedStatusCode, int256 returnStatusCode)
func (_Content *ContentFilterer) WatchRunStatusChange(opts *bind.WatchOpts, sink chan<- *ContentRunStatusChange) (event.Subscription, error) {

	logs, sub, err := _Content.contract.WatchLogs(opts, "RunStatusChange")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContentRunStatusChange)
				if err := _Content.contract.UnpackLog(event, "RunStatusChange", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRunStatusChange is a log parse operation binding the contract event 0xb6c1c013bb5004fe8e943c6890e300ccedf9bd73dcd4eb291b31b9f96874feff.
//
// Solidity: event RunStatusChange(int256 proposedStatusCode, int256 returnStatusCode)
func (_Content *ContentFilterer) ParseRunStatusChange(log types.Log) (*ContentRunStatusChange, error) {
	event := new(ContentRunStatusChange)
	if err := _Content.contract.UnpackLog(event, "RunStatusChange", log); err != nil {
		return nil, err
	}
	return event, nil
}

// CounterObjectABI is the input ABI used to generate the binding from.
const CounterObjectABI = "[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"ident\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"ord\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"prev\",\"type\":\"bool\"}],\"name\":\"BitSetAndGet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"ident\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"slot\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"val\",\"type\":\"uint32\"}],\"name\":\"CounterIncremented\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"ident\",\"type\":\"bytes32\"}],\"name\":\"WordGroupDeleted\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentSpace\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ident\",\"type\":\"bytes32\"}],\"name\":\"deleteGroup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ident\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"_ord\",\"type\":\"uint8\"}],\"name\":\"getBit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ident\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"_ord\",\"type\":\"uint8\"}],\"name\":\"getCounter\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ident\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"_ord\",\"type\":\"uint8\"}],\"name\":\"incrementCounter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ident\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"_ord\",\"type\":\"uint8\"}],\"name\":\"setAndGetBit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ident\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"_ord\",\"type\":\"uint8\"}],\"name\":\"setAndGetBitInternal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newCreator\",\"type\":\"address\"}],\"name\":\"transferCreatorship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"versionAPI\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// CounterObjectFuncSigs maps the 4-byte function signature to its string representation.
var CounterObjectFuncSigs = map[string]string{
	"af570c04": "contentSpace()",
	"02d05d3f": "creator()",
	"e57097c9": "deleteGroup(bytes32)",
	"30f846a2": "getBit(bytes32,uint8)",
	"e1954b61": "getCounter(bytes32,uint8)",
	"7558cbf0": "incrementCounter(bytes32,uint8)",
	"24d7806c": "isAdmin(address)",
	"41c0e1b5": "kill()",
	"8da5cb5b": "owner()",
	"24d7c18d": "setAndGetBit(bytes32,uint8)",
	"33f12cf4": "setAndGetBitInternal(bytes32,uint8)",
	"6d2e4b1b": "transferCreatorship(address)",
	"f2fde38b": "transferOwnership(address)",
	"54fd4d50": "version()",
	"5f4fcae1": "versionAPI()",
}

// CounterObjectBin is the compiled bytecode used for deploying new contracts.
var CounterObjectBin = "0x60806040527f4f776e61626c653230323030393238313130303030504f000000000000000000600055620332e360ec1b600155600280546001600160a01b031990811632179091556003805490911633179055610841806100616000396000f3fe6080604052600436106100e85760003560e01c80635f4fcae11161008a578063af570c0411610059578063af570c04146102c7578063e1954b61146102dc578063e57097c914610328578063f2fde38b14610352576100e8565b80635f4fcae1146102375780636d2e4b1b1461024c5780637558cbf01461027f5780638da5cb5b146102b2576100e8565b806330f846a2116100c657806330f846a21461019557806333f12cf4146101c857806341c0e1b5146101fb57806354fd4d5014610210576100e8565b806302d05d3f146100ea57806324d7806c1461011b57806324d7c18d14610162575b005b3480156100f657600080fd5b506100ff610385565b604080516001600160a01b039092168252519081900360200190f35b34801561012757600080fd5b5061014e6004803603602081101561013e57600080fd5b50356001600160a01b0316610394565b604080519115158252519081900360200190f35b34801561016e57600080fd5b5061014e6004803603604081101561018557600080fd5b508035906020013560ff166103be565b3480156101a157600080fd5b5061014e600480360360408110156101b857600080fd5b508035906020013560ff166103e3565b3480156101d457600080fd5b5061014e600480360360408110156101eb57600080fd5b508035906020013560ff16610450565b34801561020757600080fd5b506100e861056c565b34801561021c57600080fd5b50610225610591565b60408051918252519081900360200190f35b34801561024357600080fd5b50610225610597565b34801561025857600080fd5b506100e86004803603602081101561026f57600080fd5b50356001600160a01b031661059d565b34801561028b57600080fd5b506100e8600480360360408110156102a257600080fd5b508035906020013560ff166105e9565b3480156102be57600080fd5b506100ff6106e6565b3480156102d357600080fd5b506100ff6106f5565b3480156102e857600080fd5b5061030f600480360360408110156102ff57600080fd5b508035906020013560ff16610704565b6040805163ffffffff9092168252519081900360200190f35b34801561033457600080fd5b506100e86004803603602081101561034b57600080fd5b5035610756565b34801561035e57600080fd5b506100e86004803603602081101561037557600080fd5b50356001600160a01b03166107b9565b6002546001600160a01b031681565b6003546000906001600160a01b03838116911614156103b5575060016103b9565b5060005b919050565b60006103c933610394565b6103d257600080fd5b6103dc8383610450565b9392505050565b6000828152600560209081526040822060ff8481169290920490911690601f8416906001821b908190846008811061041757fe5b600881049091015460046007909216919091026101000a90041663ffffffff1615610443576001610446565b60005b9695505050505050565b600061045b33610394565b61046457600080fd5b6000838152600560209081526040822060ff8581169290920490911691601f8516916001831b91908290856008811061049957fe5b600881049091015460046007909216919091026101000a90041663ffffffff16156104c55760016104c8565b60005b90508061051f576000878152600560205260409020829085600881106104ea57fe5b60088104909101805463ffffffff60046007909416939093026101000a80820484169094178316840292909302199092161790555b6040805188815260ff881660208201528215158183015290517f4d04842102a74d85e502eec18f3048954c6d6e1d1c368c7bc49edcdcd45e9c3d9181900360600190a19695505050505050565b6003546001600160a01b0316331461058357600080fd5b6003546001600160a01b0316ff5b60005481565b60015481565b6002546001600160a01b031633146105b457600080fd5b6001600160a01b0381166105c757600080fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6105f233610394565b6105fb57600080fd5b60088160ff161061060b57600080fd5b600082815260056020526040812060ff83166008811061062757fe5b600891828204019190066004029054906101000a900463ffffffff169050600560008481526020019081526020016000206000018260ff166008811061066957fe5b600881049091018054600163ffffffff60046007909516949094026101000a80830485169190910184168102908402199091161790556040805185815260ff8516602082015291831682820152517f77a2025a71f0f345cfd7e8a699b42215025b6ab4706dcfaa29393790aa63383f9181900360600190a1505050565b6003546001600160a01b031681565b6004546001600160a01b031681565b600060088260ff161061071657600080fd5b600083815260056020526040902060ff83166008811061073257fe5b600891828204019190066004029054906101000a900463ffffffff16905092915050565b61075f33610394565b61076857600080fd5b6000818152600560205260408120906107818282610805565b50506040805182815290517f87d0c300430cf9ba25931ff8bf37f633abe097e533463927bbfdc1e9ae1d0e9f9181900360200190a150565b6003546001600160a01b031633146107d057600080fd5b6001600160a01b0381166107e357600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b506000905556fea265627a7a72315820530adbaa13b5c7c1c9b1aa44d13e933c6126647c6cc901a515e1c4aad2d3117a64736f6c63430005110032"

// DeployCounterObject deploys a new Ethereum contract, binding an instance of CounterObject to it.
func DeployCounterObject(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *CounterObject, error) {
	parsed, err := abi.JSON(strings.NewReader(CounterObjectABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(CounterObjectBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &CounterObject{CounterObjectCaller: CounterObjectCaller{contract: contract}, CounterObjectTransactor: CounterObjectTransactor{contract: contract}, CounterObjectFilterer: CounterObjectFilterer{contract: contract}}, nil
}

// CounterObject is an auto generated Go binding around an Ethereum contract.
type CounterObject struct {
	CounterObjectCaller     // Read-only binding to the contract
	CounterObjectTransactor // Write-only binding to the contract
	CounterObjectFilterer   // Log filterer for contract events
}

// CounterObjectCaller is an auto generated read-only Go binding around an Ethereum contract.
type CounterObjectCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// CounterObjectTransactor is an auto generated write-only Go binding around an Ethereum contract.
type CounterObjectTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// CounterObjectFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type CounterObjectFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// CounterObjectSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type CounterObjectSession struct {
	Contract     *CounterObject    // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// CounterObjectCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type CounterObjectCallerSession struct {
	Contract *CounterObjectCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts        // Call options to use throughout this session
}

// CounterObjectTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type CounterObjectTransactorSession struct {
	Contract     *CounterObjectTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts        // Transaction auth options to use throughout this session
}

// CounterObjectRaw is an auto generated low-level Go binding around an Ethereum contract.
type CounterObjectRaw struct {
	Contract *CounterObject // Generic contract binding to access the raw methods on
}

// CounterObjectCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type CounterObjectCallerRaw struct {
	Contract *CounterObjectCaller // Generic read-only contract binding to access the raw methods on
}

// CounterObjectTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type CounterObjectTransactorRaw struct {
	Contract *CounterObjectTransactor // Generic write-only contract binding to access the raw methods on
}

// NewCounterObject creates a new instance of CounterObject, bound to a specific deployed contract.
func NewCounterObject(address common.Address, backend bind.ContractBackend) (*CounterObject, error) {
	contract, err := bindCounterObject(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &CounterObject{CounterObjectCaller: CounterObjectCaller{contract: contract}, CounterObjectTransactor: CounterObjectTransactor{contract: contract}, CounterObjectFilterer: CounterObjectFilterer{contract: contract}}, nil
}

// NewCounterObjectCaller creates a new read-only instance of CounterObject, bound to a specific deployed contract.
func NewCounterObjectCaller(address common.Address, caller bind.ContractCaller) (*CounterObjectCaller, error) {
	contract, err := bindCounterObject(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &CounterObjectCaller{contract: contract}, nil
}

// NewCounterObjectTransactor creates a new write-only instance of CounterObject, bound to a specific deployed contract.
func NewCounterObjectTransactor(address common.Address, transactor bind.ContractTransactor) (*CounterObjectTransactor, error) {
	contract, err := bindCounterObject(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &CounterObjectTransactor{contract: contract}, nil
}

// NewCounterObjectFilterer creates a new log filterer instance of CounterObject, bound to a specific deployed contract.
func NewCounterObjectFilterer(address common.Address, filterer bind.ContractFilterer) (*CounterObjectFilterer, error) {
	contract, err := bindCounterObject(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &CounterObjectFilterer{contract: contract}, nil
}

// bindCounterObject binds a generic wrapper to an already deployed contract.
func bindCounterObject(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(CounterObjectABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_CounterObject *CounterObjectRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _CounterObject.Contract.CounterObjectCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_CounterObject *CounterObjectRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _CounterObject.Contract.CounterObjectTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_CounterObject *CounterObjectRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _CounterObject.Contract.CounterObjectTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_CounterObject *CounterObjectCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _CounterObject.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_CounterObject *CounterObjectTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _CounterObject.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_CounterObject *CounterObjectTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _CounterObject.Contract.contract.Transact(opts, method, params...)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_CounterObject *CounterObjectCaller) ContentSpace(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _CounterObject.contract.Call(opts, out, "contentSpace")
	return *ret0, err
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_CounterObject *CounterObjectSession) ContentSpace() (common.Address, error) {
	return _CounterObject.Contract.ContentSpace(&_CounterObject.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_CounterObject *CounterObjectCallerSession) ContentSpace() (common.Address, error) {
	return _CounterObject.Contract.ContentSpace(&_CounterObject.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_CounterObject *CounterObjectCaller) Creator(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _CounterObject.contract.Call(opts, out, "creator")
	return *ret0, err
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_CounterObject *CounterObjectSession) Creator() (common.Address, error) {
	return _CounterObject.Contract.Creator(&_CounterObject.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_CounterObject *CounterObjectCallerSession) Creator() (common.Address, error) {
	return _CounterObject.Contract.Creator(&_CounterObject.CallOpts)
}

// GetBit is a free data retrieval call binding the contract method 0x30f846a2.
//
// Solidity: function getBit(bytes32 _ident, uint8 _ord) constant returns(bool)
func (_CounterObject *CounterObjectCaller) GetBit(opts *bind.CallOpts, _ident [32]byte, _ord uint8) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _CounterObject.contract.Call(opts, out, "getBit", _ident, _ord)
	return *ret0, err
}

// GetBit is a free data retrieval call binding the contract method 0x30f846a2.
//
// Solidity: function getBit(bytes32 _ident, uint8 _ord) constant returns(bool)
func (_CounterObject *CounterObjectSession) GetBit(_ident [32]byte, _ord uint8) (bool, error) {
	return _CounterObject.Contract.GetBit(&_CounterObject.CallOpts, _ident, _ord)
}

// GetBit is a free data retrieval call binding the contract method 0x30f846a2.
//
// Solidity: function getBit(bytes32 _ident, uint8 _ord) constant returns(bool)
func (_CounterObject *CounterObjectCallerSession) GetBit(_ident [32]byte, _ord uint8) (bool, error) {
	return _CounterObject.Contract.GetBit(&_CounterObject.CallOpts, _ident, _ord)
}

// GetCounter is a free data retrieval call binding the contract method 0xe1954b61.
//
// Solidity: function getCounter(bytes32 _ident, uint8 _ord) constant returns(uint32)
func (_CounterObject *CounterObjectCaller) GetCounter(opts *bind.CallOpts, _ident [32]byte, _ord uint8) (uint32, error) {
	var (
		ret0 = new(uint32)
	)
	out := ret0
	err := _CounterObject.contract.Call(opts, out, "getCounter", _ident, _ord)
	return *ret0, err
}

// GetCounter is a free data retrieval call binding the contract method 0xe1954b61.
//
// Solidity: function getCounter(bytes32 _ident, uint8 _ord) constant returns(uint32)
func (_CounterObject *CounterObjectSession) GetCounter(_ident [32]byte, _ord uint8) (uint32, error) {
	return _CounterObject.Contract.GetCounter(&_CounterObject.CallOpts, _ident, _ord)
}

// GetCounter is a free data retrieval call binding the contract method 0xe1954b61.
//
// Solidity: function getCounter(bytes32 _ident, uint8 _ord) constant returns(uint32)
func (_CounterObject *CounterObjectCallerSession) GetCounter(_ident [32]byte, _ord uint8) (uint32, error) {
	return _CounterObject.Contract.GetCounter(&_CounterObject.CallOpts, _ident, _ord)
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(address _candidate) constant returns(bool)
func (_CounterObject *CounterObjectCaller) IsAdmin(opts *bind.CallOpts, _candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _CounterObject.contract.Call(opts, out, "isAdmin", _candidate)
	return *ret0, err
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(address _candidate) constant returns(bool)
func (_CounterObject *CounterObjectSession) IsAdmin(_candidate common.Address) (bool, error) {
	return _CounterObject.Contract.IsAdmin(&_CounterObject.CallOpts, _candidate)
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(address _candidate) constant returns(bool)
func (_CounterObject *CounterObjectCallerSession) IsAdmin(_candidate common.Address) (bool, error) {
	return _CounterObject.Contract.IsAdmin(&_CounterObject.CallOpts, _candidate)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_CounterObject *CounterObjectCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _CounterObject.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_CounterObject *CounterObjectSession) Owner() (common.Address, error) {
	return _CounterObject.Contract.Owner(&_CounterObject.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_CounterObject *CounterObjectCallerSession) Owner() (common.Address, error) {
	return _CounterObject.Contract.Owner(&_CounterObject.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_CounterObject *CounterObjectCaller) Version(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _CounterObject.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_CounterObject *CounterObjectSession) Version() ([32]byte, error) {
	return _CounterObject.Contract.Version(&_CounterObject.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_CounterObject *CounterObjectCallerSession) Version() ([32]byte, error) {
	return _CounterObject.Contract.Version(&_CounterObject.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_CounterObject *CounterObjectCaller) VersionAPI(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _CounterObject.contract.Call(opts, out, "versionAPI")
	return *ret0, err
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_CounterObject *CounterObjectSession) VersionAPI() ([32]byte, error) {
	return _CounterObject.Contract.VersionAPI(&_CounterObject.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_CounterObject *CounterObjectCallerSession) VersionAPI() ([32]byte, error) {
	return _CounterObject.Contract.VersionAPI(&_CounterObject.CallOpts)
}

// DeleteGroup is a paid mutator transaction binding the contract method 0xe57097c9.
//
// Solidity: function deleteGroup(bytes32 _ident) returns()
func (_CounterObject *CounterObjectTransactor) DeleteGroup(opts *bind.TransactOpts, _ident [32]byte) (*types.Transaction, error) {
	return _CounterObject.contract.Transact(opts, "deleteGroup", _ident)
}

// DeleteGroup is a paid mutator transaction binding the contract method 0xe57097c9.
//
// Solidity: function deleteGroup(bytes32 _ident) returns()
func (_CounterObject *CounterObjectSession) DeleteGroup(_ident [32]byte) (*types.Transaction, error) {
	return _CounterObject.Contract.DeleteGroup(&_CounterObject.TransactOpts, _ident)
}

// DeleteGroup is a paid mutator transaction binding the contract method 0xe57097c9.
//
// Solidity: function deleteGroup(bytes32 _ident) returns()
func (_CounterObject *CounterObjectTransactorSession) DeleteGroup(_ident [32]byte) (*types.Transaction, error) {
	return _CounterObject.Contract.DeleteGroup(&_CounterObject.TransactOpts, _ident)
}

// IncrementCounter is a paid mutator transaction binding the contract method 0x7558cbf0.
//
// Solidity: function incrementCounter(bytes32 _ident, uint8 _ord) returns()
func (_CounterObject *CounterObjectTransactor) IncrementCounter(opts *bind.TransactOpts, _ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _CounterObject.contract.Transact(opts, "incrementCounter", _ident, _ord)
}

// IncrementCounter is a paid mutator transaction binding the contract method 0x7558cbf0.
//
// Solidity: function incrementCounter(bytes32 _ident, uint8 _ord) returns()
func (_CounterObject *CounterObjectSession) IncrementCounter(_ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _CounterObject.Contract.IncrementCounter(&_CounterObject.TransactOpts, _ident, _ord)
}

// IncrementCounter is a paid mutator transaction binding the contract method 0x7558cbf0.
//
// Solidity: function incrementCounter(bytes32 _ident, uint8 _ord) returns()
func (_CounterObject *CounterObjectTransactorSession) IncrementCounter(_ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _CounterObject.Contract.IncrementCounter(&_CounterObject.TransactOpts, _ident, _ord)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_CounterObject *CounterObjectTransactor) Kill(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _CounterObject.contract.Transact(opts, "kill")
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_CounterObject *CounterObjectSession) Kill() (*types.Transaction, error) {
	return _CounterObject.Contract.Kill(&_CounterObject.TransactOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_CounterObject *CounterObjectTransactorSession) Kill() (*types.Transaction, error) {
	return _CounterObject.Contract.Kill(&_CounterObject.TransactOpts)
}

// SetAndGetBit is a paid mutator transaction binding the contract method 0x24d7c18d.
//
// Solidity: function setAndGetBit(bytes32 _ident, uint8 _ord) returns(bool)
func (_CounterObject *CounterObjectTransactor) SetAndGetBit(opts *bind.TransactOpts, _ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _CounterObject.contract.Transact(opts, "setAndGetBit", _ident, _ord)
}

// SetAndGetBit is a paid mutator transaction binding the contract method 0x24d7c18d.
//
// Solidity: function setAndGetBit(bytes32 _ident, uint8 _ord) returns(bool)
func (_CounterObject *CounterObjectSession) SetAndGetBit(_ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _CounterObject.Contract.SetAndGetBit(&_CounterObject.TransactOpts, _ident, _ord)
}

// SetAndGetBit is a paid mutator transaction binding the contract method 0x24d7c18d.
//
// Solidity: function setAndGetBit(bytes32 _ident, uint8 _ord) returns(bool)
func (_CounterObject *CounterObjectTransactorSession) SetAndGetBit(_ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _CounterObject.Contract.SetAndGetBit(&_CounterObject.TransactOpts, _ident, _ord)
}

// SetAndGetBitInternal is a paid mutator transaction binding the contract method 0x33f12cf4.
//
// Solidity: function setAndGetBitInternal(bytes32 _ident, uint8 _ord) returns(bool)
func (_CounterObject *CounterObjectTransactor) SetAndGetBitInternal(opts *bind.TransactOpts, _ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _CounterObject.contract.Transact(opts, "setAndGetBitInternal", _ident, _ord)
}

// SetAndGetBitInternal is a paid mutator transaction binding the contract method 0x33f12cf4.
//
// Solidity: function setAndGetBitInternal(bytes32 _ident, uint8 _ord) returns(bool)
func (_CounterObject *CounterObjectSession) SetAndGetBitInternal(_ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _CounterObject.Contract.SetAndGetBitInternal(&_CounterObject.TransactOpts, _ident, _ord)
}

// SetAndGetBitInternal is a paid mutator transaction binding the contract method 0x33f12cf4.
//
// Solidity: function setAndGetBitInternal(bytes32 _ident, uint8 _ord) returns(bool)
func (_CounterObject *CounterObjectTransactorSession) SetAndGetBitInternal(_ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _CounterObject.Contract.SetAndGetBitInternal(&_CounterObject.TransactOpts, _ident, _ord)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_CounterObject *CounterObjectTransactor) TransferCreatorship(opts *bind.TransactOpts, newCreator common.Address) (*types.Transaction, error) {
	return _CounterObject.contract.Transact(opts, "transferCreatorship", newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_CounterObject *CounterObjectSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _CounterObject.Contract.TransferCreatorship(&_CounterObject.TransactOpts, newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_CounterObject *CounterObjectTransactorSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _CounterObject.Contract.TransferCreatorship(&_CounterObject.TransactOpts, newCreator)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_CounterObject *CounterObjectTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _CounterObject.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_CounterObject *CounterObjectSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _CounterObject.Contract.TransferOwnership(&_CounterObject.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_CounterObject *CounterObjectTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _CounterObject.Contract.TransferOwnership(&_CounterObject.TransactOpts, newOwner)
}

// CounterObjectBitSetAndGetIterator is returned from FilterBitSetAndGet and is used to iterate over the raw logs and unpacked data for BitSetAndGet events raised by the CounterObject contract.
type CounterObjectBitSetAndGetIterator struct {
	Event *CounterObjectBitSetAndGet // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *CounterObjectBitSetAndGetIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(CounterObjectBitSetAndGet)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(CounterObjectBitSetAndGet)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *CounterObjectBitSetAndGetIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *CounterObjectBitSetAndGetIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// CounterObjectBitSetAndGet represents a BitSetAndGet event raised by the CounterObject contract.
type CounterObjectBitSetAndGet struct {
	Ident [32]byte
	Ord   uint8
	Prev  bool
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterBitSetAndGet is a free log retrieval operation binding the contract event 0x4d04842102a74d85e502eec18f3048954c6d6e1d1c368c7bc49edcdcd45e9c3d.
//
// Solidity: event BitSetAndGet(bytes32 ident, uint8 ord, bool prev)
func (_CounterObject *CounterObjectFilterer) FilterBitSetAndGet(opts *bind.FilterOpts) (*CounterObjectBitSetAndGetIterator, error) {

	logs, sub, err := _CounterObject.contract.FilterLogs(opts, "BitSetAndGet")
	if err != nil {
		return nil, err
	}
	return &CounterObjectBitSetAndGetIterator{contract: _CounterObject.contract, event: "BitSetAndGet", logs: logs, sub: sub}, nil
}

// WatchBitSetAndGet is a free log subscription operation binding the contract event 0x4d04842102a74d85e502eec18f3048954c6d6e1d1c368c7bc49edcdcd45e9c3d.
//
// Solidity: event BitSetAndGet(bytes32 ident, uint8 ord, bool prev)
func (_CounterObject *CounterObjectFilterer) WatchBitSetAndGet(opts *bind.WatchOpts, sink chan<- *CounterObjectBitSetAndGet) (event.Subscription, error) {

	logs, sub, err := _CounterObject.contract.WatchLogs(opts, "BitSetAndGet")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(CounterObjectBitSetAndGet)
				if err := _CounterObject.contract.UnpackLog(event, "BitSetAndGet", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseBitSetAndGet is a log parse operation binding the contract event 0x4d04842102a74d85e502eec18f3048954c6d6e1d1c368c7bc49edcdcd45e9c3d.
//
// Solidity: event BitSetAndGet(bytes32 ident, uint8 ord, bool prev)
func (_CounterObject *CounterObjectFilterer) ParseBitSetAndGet(log types.Log) (*CounterObjectBitSetAndGet, error) {
	event := new(CounterObjectBitSetAndGet)
	if err := _CounterObject.contract.UnpackLog(event, "BitSetAndGet", log); err != nil {
		return nil, err
	}
	return event, nil
}

// CounterObjectCounterIncrementedIterator is returned from FilterCounterIncremented and is used to iterate over the raw logs and unpacked data for CounterIncremented events raised by the CounterObject contract.
type CounterObjectCounterIncrementedIterator struct {
	Event *CounterObjectCounterIncremented // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *CounterObjectCounterIncrementedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(CounterObjectCounterIncremented)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(CounterObjectCounterIncremented)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *CounterObjectCounterIncrementedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *CounterObjectCounterIncrementedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// CounterObjectCounterIncremented represents a CounterIncremented event raised by the CounterObject contract.
type CounterObjectCounterIncremented struct {
	Ident [32]byte
	Slot  uint8
	Val   uint32
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterCounterIncremented is a free log retrieval operation binding the contract event 0x77a2025a71f0f345cfd7e8a699b42215025b6ab4706dcfaa29393790aa63383f.
//
// Solidity: event CounterIncremented(bytes32 ident, uint8 slot, uint32 val)
func (_CounterObject *CounterObjectFilterer) FilterCounterIncremented(opts *bind.FilterOpts) (*CounterObjectCounterIncrementedIterator, error) {

	logs, sub, err := _CounterObject.contract.FilterLogs(opts, "CounterIncremented")
	if err != nil {
		return nil, err
	}
	return &CounterObjectCounterIncrementedIterator{contract: _CounterObject.contract, event: "CounterIncremented", logs: logs, sub: sub}, nil
}

// WatchCounterIncremented is a free log subscription operation binding the contract event 0x77a2025a71f0f345cfd7e8a699b42215025b6ab4706dcfaa29393790aa63383f.
//
// Solidity: event CounterIncremented(bytes32 ident, uint8 slot, uint32 val)
func (_CounterObject *CounterObjectFilterer) WatchCounterIncremented(opts *bind.WatchOpts, sink chan<- *CounterObjectCounterIncremented) (event.Subscription, error) {

	logs, sub, err := _CounterObject.contract.WatchLogs(opts, "CounterIncremented")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(CounterObjectCounterIncremented)
				if err := _CounterObject.contract.UnpackLog(event, "CounterIncremented", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseCounterIncremented is a log parse operation binding the contract event 0x77a2025a71f0f345cfd7e8a699b42215025b6ab4706dcfaa29393790aa63383f.
//
// Solidity: event CounterIncremented(bytes32 ident, uint8 slot, uint32 val)
func (_CounterObject *CounterObjectFilterer) ParseCounterIncremented(log types.Log) (*CounterObjectCounterIncremented, error) {
	event := new(CounterObjectCounterIncremented)
	if err := _CounterObject.contract.UnpackLog(event, "CounterIncremented", log); err != nil {
		return nil, err
	}
	return event, nil
}

// CounterObjectWordGroupDeletedIterator is returned from FilterWordGroupDeleted and is used to iterate over the raw logs and unpacked data for WordGroupDeleted events raised by the CounterObject contract.
type CounterObjectWordGroupDeletedIterator struct {
	Event *CounterObjectWordGroupDeleted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *CounterObjectWordGroupDeletedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(CounterObjectWordGroupDeleted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(CounterObjectWordGroupDeleted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *CounterObjectWordGroupDeletedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *CounterObjectWordGroupDeletedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// CounterObjectWordGroupDeleted represents a WordGroupDeleted event raised by the CounterObject contract.
type CounterObjectWordGroupDeleted struct {
	Ident [32]byte
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterWordGroupDeleted is a free log retrieval operation binding the contract event 0x87d0c300430cf9ba25931ff8bf37f633abe097e533463927bbfdc1e9ae1d0e9f.
//
// Solidity: event WordGroupDeleted(bytes32 ident)
func (_CounterObject *CounterObjectFilterer) FilterWordGroupDeleted(opts *bind.FilterOpts) (*CounterObjectWordGroupDeletedIterator, error) {

	logs, sub, err := _CounterObject.contract.FilterLogs(opts, "WordGroupDeleted")
	if err != nil {
		return nil, err
	}
	return &CounterObjectWordGroupDeletedIterator{contract: _CounterObject.contract, event: "WordGroupDeleted", logs: logs, sub: sub}, nil
}

// WatchWordGroupDeleted is a free log subscription operation binding the contract event 0x87d0c300430cf9ba25931ff8bf37f633abe097e533463927bbfdc1e9ae1d0e9f.
//
// Solidity: event WordGroupDeleted(bytes32 ident)
func (_CounterObject *CounterObjectFilterer) WatchWordGroupDeleted(opts *bind.WatchOpts, sink chan<- *CounterObjectWordGroupDeleted) (event.Subscription, error) {

	logs, sub, err := _CounterObject.contract.WatchLogs(opts, "WordGroupDeleted")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(CounterObjectWordGroupDeleted)
				if err := _CounterObject.contract.UnpackLog(event, "WordGroupDeleted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseWordGroupDeleted is a log parse operation binding the contract event 0x87d0c300430cf9ba25931ff8bf37f633abe097e533463927bbfdc1e9ae1d0e9f.
//
// Solidity: event WordGroupDeleted(bytes32 ident)
func (_CounterObject *CounterObjectFilterer) ParseWordGroupDeleted(log types.Log) (*CounterObjectWordGroupDeleted, error) {
	event := new(CounterObjectWordGroupDeleted)
	if err := _CounterObject.contract.UnpackLog(event, "WordGroupDeleted", log); err != nil {
		return nil, err
	}
	return event, nil
}

// EditableABI is the input ABI used to generate the binding from.
const EditableABI = "[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"contextHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestTimestamp\",\"type\":\"uint256\"}],\"name\":\"AccessRequestV3\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spaceAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"objectHash\",\"type\":\"string\"}],\"name\":\"CommitPending\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"objectHash\",\"type\":\"string\"}],\"name\":\"UpdateRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spaceAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"objectHash\",\"type\":\"string\"}],\"name\":\"VersionConfirm\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spaceAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"versionHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"index\",\"type\":\"int256\"}],\"name\":\"VersionDelete\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contentSpace\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"parentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"visibility\",\"type\":\"uint8\"}],\"name\":\"VisibilityChanged\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"CAN_ACCESS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CAN_EDIT\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"CAN_SEE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"addresspayable[]\",\"name\":\"\",\"type\":\"address[]\"}],\"name\":\"accessRequestV3\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canCommit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canConfirm\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canEdit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"clearPending\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_objectHash\",\"type\":\"string\"}],\"name\":\"commit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"commitPending\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"confirmCommit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentSpace\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"countVersionHashes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_versionHash\",\"type\":\"string\"}],\"name\":\"deleteVersion\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"hasAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"hasEditorRight\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"indexCategory\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"objectHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"objectTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"parentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"group\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setGroupRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"stakeholder\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"access_type\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"access\",\"type\":\"uint8\"}],\"name\":\"setRights\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_visibility_code\",\"type\":\"uint8\"}],\"name\":\"setVisibility\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newCreator\",\"type\":\"address\"}],\"name\":\"transferCreatorship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"updateRequest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"versionAPI\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"versionHashes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"versionTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"visibility\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// EditableFuncSigs maps the 4-byte function signature to its string representation.
var EditableFuncSigs = map[string]string{
	"97ac4fd2": "CAN_ACCESS()",
	"ef1d7dc2": "CAN_EDIT()",
	"100508a2": "CAN_SEE()",
	"1bf7a912": "accessRequestV3(bytes32[],address[])",
	"6e375427": "canCommit()",
	"14cfabb3": "canConfirm()",
	"81beeb64": "canEdit()",
	"5f6a1301": "clearPending()",
	"9867db74": "commit(string)",
	"375a6e7c": "commitPending()",
	"446e8826": "confirmCommit()",
	"af570c04": "contentSpace()",
	"331b86c0": "countVersionHashes()",
	"02d05d3f": "creator()",
	"e1a70717": "deleteVersion(string)",
	"95a078e8": "hasAccess(address)",
	"67e5c3bf": "hasEditorRight(address)",
	"6380501f": "indexCategory()",
	"41c0e1b5": "kill()",
	"e02dd9c2": "objectHash()",
	"40b87a26": "objectTimestamp()",
	"8da5cb5b": "owner()",
	"00821de3": "parentAddress()",
	"628449fd": "pendingHash()",
	"22e564eb": "setGroupRights(address,uint8,uint8)",
	"0fe1b5a2": "setRights(address,uint8,uint8)",
	"aa024e8b": "setVisibility(uint8)",
	"6d2e4b1b": "transferCreatorship(address)",
	"f2fde38b": "transferOwnership(address)",
	"c287e0ed": "updateRequest()",
	"54fd4d50": "version()",
	"5f4fcae1": "versionAPI()",
	"7ca8f618": "versionHashes(uint256)",
	"7886f747": "versionTimestamp(uint256)",
	"29adec14": "visibility()",
}

// EditableBin is the compiled bytecode used for deploying new contracts.
var EditableBin = "0x60806040527f4f776e61626c653230323030393238313130303030504f000000000000000000600055620332e360ec1b60019081557f41636365737369626c653230323030363236313231363030504f0000000000006005556006805461ff001960ff199091169092179190911690557f4564697461626c653230323030393238313130303030504f0000000000000000600755600280546001600160a01b031990811632179091556003805490911633179055612000806100c26000396000f3fe6080604052600436106102035760003560e01c80636380501f1161011857806397ac4fd2116100a0578063c287e0ed1161006f578063c287e0ed146107df578063e02dd9c2146107f4578063e1a7071714610809578063ef1d7dc2146108ba578063f2fde38b146108cf57610203565b806397ac4fd2146106d75780639867db74146106ec578063aa024e8b1461079d578063af570c04146107ca57610203565b80637886f747116100e75780637886f747146106265780637ca8f6181461065057806381beeb641461067a5780638da5cb5b1461068f57806395a078e8146106a457610203565b80636380501f1461059657806367e5c3bf146105ab5780636d2e4b1b146105de5780636e3754271461061157610203565b8063331b86c01161019b578063446e88261161016a578063446e8826146104c557806354fd4d50146104cd5780635f4fcae1146104e25780635f6a1301146104f7578063628449fd1461050c57610203565b8063331b86c01461045f578063375a6e7c1461048657806340b87a261461049b57806341c0e1b5146104b057610203565b806314cfabb3116101d757806314cfabb3146102ba5780631bf7a912146102e357806322e564eb1461040657806329adec141461044a57610203565b8062821de31461020557806302d05d3f146102365780630fe1b5a21461024b578063100508a21461028f575b005b34801561021157600080fd5b5061021a610902565b604080516001600160a01b039092168252519081900360200190f35b34801561024257600080fd5b5061021a610912565b34801561025757600080fd5b506102036004803603606081101561026e57600080fd5b506001600160a01b038135169060ff60208201358116916040013516610921565b34801561029b57600080fd5b506102a46109e6565b6040805160ff9092168252519081900360200190f35b3480156102c657600080fd5b506102cf6109eb565b604080519115158252519081900360200190f35b6102cf600480360360408110156102f957600080fd5b810190602081018135600160201b81111561031357600080fd5b82018360208201111561032557600080fd5b803590602001918460208302840111600160201b8311171561034657600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561039557600080fd5b8201836020820111156103a757600080fd5b803590602001918460208302840111600160201b831117156103c857600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506109f0945050505050565b34801561041257600080fd5b506102036004803603606081101561042957600080fd5b506001600160a01b038135169060ff60208201358116916040013516610a8b565b34801561045657600080fd5b506102a4610ed1565b34801561046b57600080fd5b50610474610eda565b60408051918252519081900360200190f35b34801561049257600080fd5b506102cf610ee0565b3480156104a757600080fd5b50610474610ee9565b3480156104bc57600080fd5b50610203610eef565b6102cf610f14565b3480156104d957600080fd5b50610474611110565b3480156104ee57600080fd5b50610474611116565b34801561050357600080fd5b5061020361111c565b34801561051857600080fd5b50610521611158565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561055b578181015183820152602001610543565b50505050905090810190601f1680156105885780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156105a257600080fd5b506102a46111e6565b3480156105b757600080fd5b506102cf600480360360208110156105ce57600080fd5b50356001600160a01b03166111f4565b3480156105ea57600080fd5b506102036004803603602081101561060157600080fd5b50356001600160a01b0316611356565b34801561061d57600080fd5b506102cf6113a2565b34801561063257600080fd5b506104746004803603602081101561064957600080fd5b50356113b3565b34801561065c57600080fd5b506105216004803603602081101561067357600080fd5b50356113d1565b34801561068657600080fd5b506102cf611444565b34801561069b57600080fd5b5061021a611454565b3480156106b057600080fd5b506102cf600480360360208110156106c757600080fd5b50356001600160a01b0316611463565b3480156106e357600080fd5b506102a4611587565b3480156106f857600080fd5b506102036004803603602081101561070f57600080fd5b810190602081018135600160201b81111561072957600080fd5b82018360208201111561073b57600080fd5b803590602001918460018302840111600160201b8311171561075c57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061158c945050505050565b3480156107a957600080fd5b50610203600480360360208110156107c057600080fd5b503560ff166116b7565b3480156107d657600080fd5b5061021a61172f565b3480156107eb57600080fd5b5061020361173e565b34801561080057600080fd5b506105216117fe565b34801561081557600080fd5b506104746004803603602081101561082c57600080fd5b810190602081018135600160201b81111561084657600080fd5b82018360208201111561085857600080fd5b803590602001918460018302840111600160201b8311171561087957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611859945050505050565b3480156108c657600080fd5b506102a4611cbf565b3480156108db57600080fd5b50610203600480360360208110156108f257600080fd5b50356001600160a01b0316611cc4565b6004546001600160a01b03165b90565b6002546001600160a01b031681565b610929611444565b61093257600080fd5b60048054604080516363e6ffdd60e01b81526001600160a01b03878116948201949094529051929091169160009183916363e6ffdd91602480820192602092909190829003018186803b15801561098857600080fd5b505afa15801561099c573d6000803e3d6000fd5b505050506040513d60208110156109b257600080fd5b505190506001600160a01b0381166109d4576109cf858585610a8b565b6109df565b6109df818585610a8b565b5050505050565b600181565b600090565b60006109fb33611463565b610a0457600080fd5b604080513060601b60208083019190915242603480840182905284518085039091018152605484018086528151919093012090915260006074830181905260948301523360b48301526103e80260d482015290517f545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c79181900360f40190a150600192915050565b6000839050806001600160a01b031663091600e66040518163ffffffff1660e01b815260040160206040518083038186803b158015610ac957600080fd5b505afa158015610add573d6000803e3d6000fd5b505050506040513d6020811015610af357600080fd5b5051600654610100900460ff90811691161415610b7e576040805162f7bd4560e61b815230600482015260ff80861660248301528416604482015290516001600160a01b03831691633def514091606480830192600092919082900301818387803b158015610b6157600080fd5b505af1158015610b75573d6000803e3d6000fd5b50505050610ecb565b806001600160a01b03166312915a306040518163ffffffff1660e01b815260040160206040518083038186803b158015610bb757600080fd5b505afa158015610bcb573d6000803e3d6000fd5b505050506040513d6020811015610be157600080fd5b5051600654610100900460ff90811691161415610c50576040805163f17bda9160e01b815230600482015260ff80861660248301528416604482015290516001600160a01b0383169163f17bda9191606480830192600092919082900301818387803b158015610b6157600080fd5b806001600160a01b03166316aed2326040518163ffffffff1660e01b815260040160206040518083038186803b158015610c8957600080fd5b505afa158015610c9d573d6000803e3d6000fd5b505050506040513d6020811015610cb357600080fd5b5051600654610100900460ff90811691161415610d225760408051633e5dbdf960e11b815230600482015260ff80861660248301528416604482015290516001600160a01b03831691637cbb7bf291606480830192600092919082900301818387803b158015610b6157600080fd5b806001600160a01b03166368a0469a6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d5b57600080fd5b505afa158015610d6f573d6000803e3d6000fd5b505050506040513d6020811015610d8557600080fd5b5051600654610100900460ff90811691161415610df45760408051638635adb560e01b815230600482015260ff80861660248301528416604482015290516001600160a01b03831691638635adb591606480830192600092919082900301818387803b158015610b6157600080fd5b806001600160a01b0316636373a4116040518163ffffffff1660e01b815260040160206040518083038186803b158015610e2d57600080fd5b505afa158015610e41573d6000803e3d6000fd5b505050506040513d6020811015610e5757600080fd5b5051600654610100900460ff90811691161415610ec657604080516301126e5d60e51b815230600482015260ff80861660248301528416604482015290516001600160a01b0383169163224dcba091606480830192600092919082900301818387803b158015610b6157600080fd5b600080fd5b50505050565b60065460ff1681565b600a5490565b600d5460ff1681565b60095481565b6003546001600160a01b03163314610f0657600080fd5b6003546001600160a01b0316ff5b6000610f1e6109eb565b610f2757600080fd5b600d5460ff16610f3657600080fd5b6008546002600019610100600184161502019091160415610fe157600a8054600181810180845560009390935260088054610fa8937fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80192600261010091831615919091026000190190911604611e0e565b5050600954600b80546001810182556000919091527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db901555b600c80546110049160089160026000196101006001841615020190911604611e0e565b504260095560408051602081019182905260009081905261102791600c91611e93565b50600d805460ff191690556004547fbdaffceabaaa783aa187fea6c2e815541d29e2290bf3f7d3c4fc53672b68f7df906001600160a01b0316611068610902565b604080516001600160a01b0380851682528316602082015260609181018281526008805460026000196101006001841615020190911604938301849052926080830190849080156110fa5780601f106110cf576101008083540402835291602001916110fa565b820191906000526020600020905b8154815290600101906020018083116110dd57829003601f168201915b505094505050505060405180910390a150600190565b60075481565b60015481565b6111246113a2565b61112d57600080fd5b60408051602081019182905260009081905261114b91600c91611e93565b50600d805460ff19169055565b600c805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156111de5780601f106111b3576101008083540402835291602001916111de565b820191906000526020600020905b8154815290600101906020018083116111c157829003601f168201915b505050505081565b600654610100900460ff1681565b6003546000906001600160a01b038381169116148061121b5750600654606460ff90911610155b1561122857506001611351565b600654610100900460ff161561134d5760048054604080516363e6ffdd60e01b81526001600160a01b03868116948201949094529051600093909216916363e6ffdd91602480820192602092909190829003018186803b15801561128b57600080fd5b505afa15801561129f573d6000803e3d6000fd5b505050506040513d60208110156112b557600080fd5b505160065460408051633fda978d60e11b815261010090920460ff16600483015230602483015260026044830152519192506001600160a01b03831691637fb52f1a91606480820192602092909190829003018186803b15801561131857600080fd5b505afa15801561132c573d6000803e3d6000fd5b505050506040513d602081101561134257600080fd5b505191506113519050565b5060005b919050565b6002546001600160a01b0316331461136d57600080fd5b6001600160a01b03811661138057600080fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b0316331490565b600b81815481106113c057fe5b600091825260209091200154905081565b600a81815481106113de57fe5b600091825260209182902001805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152935090918301828280156111de5780601f106111b3576101008083540402835291602001916111de565b600061144f336111f4565b905090565b6003546001600160a01b031681565b6003546000906001600160a01b038381169116148061148a5750600654600a60ff90911610155b1561149757506001611351565b600654610100900460ff161561134d5760048054604080516363e6ffdd60e01b81526001600160a01b03868116948201949094529051600093909216916363e6ffdd91602480820192602092909190829003018186803b1580156114fa57600080fd5b505afa15801561150e573d6000803e3d6000fd5b505050506040513d602081101561152457600080fd5b505160065460408051633fda978d60e11b815261010090920460ff16600483015230602483015260016044830152519192506001600160a01b03831691637fb52f1a91606480820192602092909190829003018186803b15801561131857600080fd5b600a81565b6115946113a2565b61159d57600080fd5b600d5460ff16156115ad57600080fd5b60808151106115bb57600080fd5b80516115ce90600c906020840190611e93565b50600d805460ff191660011790556004547fb3ac059d88af6016aca1aebb7b3e796f2e7420435c59c563687814e9b85daa75906001600160a01b0316611612610902565b604080516001600160a01b038085168252831660208201526060918101828152600c805460026000196101006001841615020190911604938301849052926080830190849080156116a45780601f10611679576101008083540402835291602001916116a4565b820191906000526020600020905b81548152906001019060200180831161168757829003601f168201915b505094505050505060405180910390a150565b6116bf611444565b6116c857600080fd5b6006805460ff191660ff8381169190911791829055600454604080516001600160a01b039092168083526020830152929091168183015290517f369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500916060908290030190a150565b6004546001600160a01b031681565b611746611444565b61174f57600080fd5b60408051602080825260088054600260001961010060018416150201909116049183018290527f403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b65939092918291820190849080156117ee5780601f106117c3576101008083540402835291602001916117ee565b820191906000526020600020905b8154815290600101906020018083116117d157829003601f168201915b50509250505060405180910390a1565b6008805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156111de5780601f106111b3576101008083540402835291602001916111de565b60006118636113a2565b61186c57600080fd5b6000826040516020018082805190602001908083835b602083106118a15780518252601f199092019160209182019101611882565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012090506000600860405160200180828054600181600116156101000203166002900480156119405780601f1061191e576101008083540402835291820191611940565b820191906000526020600020905b81548152906001019060200180831161192c575b505091505060405160208183030381529060405280519060200120905080821415611b1057600a546119955760408051602081019182905260009081905261198a91600891611e93565b506000600955611a34565b600080805b600a548110156119e95781600b82815481106119b257fe5b906000526020600020015411156119e157809250600b81815481106119d357fe5b906000526020600020015491505b60010161199a565b50600a82815481106119f757fe5b9060005260206000200160089080546001816001161561010002031660029004611a22929190611e0e565b506009819055611a3182611d10565b50505b7f238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51600460009054906101000a90046001600160a01b031685600060405180846001600160a01b03166001600160a01b0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015611ac9578181015183820152602001611ab1565b50505050905090810190601f168015611af65780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1600092505050611351565b60001960005b600a54811015611bd7576000600a8281548110611b2f57fe5b906000526020600020016040516020018082805460018160011615610100020316600290048015611b975780601f10611b75576101008083540402835291820191611b97565b820191906000526020600020905b815481529060010190602001808311611b83575b505091505060405160208183030381529060405280519060200120905080851415611bce57611bc582611d10565b81925050611bd7565b50600101611b16565b50806000191415611be757600080fd5b7f238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51600460009054906101000a90046001600160a01b0316868360405180846001600160a01b03166001600160a01b0316815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015611c7b578181015183820152602001611c63565b50505050905090810190601f168015611ca85780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1949350505050565b606481565b6003546001600160a01b03163314611cdb57600080fd5b6001600160a01b038116611cee57600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600a8181548110611d1d57fe5b906000526020600020016000611d339190611f01565b600b8181548110611d4057fe5b6000918252602082200155600a54600019018114611de257600a80546000198101908110611d6a57fe5b90600052602060002001600a8281548110611d8157fe5b906000526020600020019080546001816001161561010002031660029004611daa929190611e0e565b50600b80546000198101908110611dbd57fe5b9060005260206000200154600b8281548110611dd557fe5b6000918252602090912001555b600a805490611df5906000198301611f45565b50600b805490611e09906000198301611f6e565b505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611e475780548555611e83565b82800160010185558215611e8357600052602060002091601f016020900482015b82811115611e83578254825591600101919060010190611e68565b50611e8f929150611f8e565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611ed457805160ff1916838001178555611e83565b82800160010185558215611e83579182015b82811115611e83578251825591602001919060010190611ee6565b50805460018160011615610100020316600290046000825580601f10611f275750611e0b565b601f016020900490600052602060002090810190611e0b9190611f8e565b815481835581811115611f6957600083815260209020611f69918101908301611fa8565b505050565b815481835581811115611f6957600083815260209020611f699181019083015b61090f91905b80821115611e8f5760008155600101611f94565b61090f91905b80821115611e8f576000611fc28282611f01565b50600101611fae56fea265627a7a72315820144fa45bf3d2a19b08f8ed922a1219d49eb4a65e53d2e2617a3e64999eed5b7e64736f6c63430005110032"

// DeployEditable deploys a new Ethereum contract, binding an instance of Editable to it.
func DeployEditable(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Editable, error) {
	parsed, err := abi.JSON(strings.NewReader(EditableABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(EditableBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Editable{EditableCaller: EditableCaller{contract: contract}, EditableTransactor: EditableTransactor{contract: contract}, EditableFilterer: EditableFilterer{contract: contract}}, nil
}

// Editable is an auto generated Go binding around an Ethereum contract.
type Editable struct {
	EditableCaller     // Read-only binding to the contract
	EditableTransactor // Write-only binding to the contract
	EditableFilterer   // Log filterer for contract events
}

// EditableCaller is an auto generated read-only Go binding around an Ethereum contract.
type EditableCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// EditableTransactor is an auto generated write-only Go binding around an Ethereum contract.
type EditableTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// EditableFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type EditableFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// EditableSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type EditableSession struct {
	Contract     *Editable         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// EditableCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type EditableCallerSession struct {
	Contract *EditableCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// EditableTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type EditableTransactorSession struct {
	Contract     *EditableTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// EditableRaw is an auto generated low-level Go binding around an Ethereum contract.
type EditableRaw struct {
	Contract *Editable // Generic contract binding to access the raw methods on
}

// EditableCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type EditableCallerRaw struct {
	Contract *EditableCaller // Generic read-only contract binding to access the raw methods on
}

// EditableTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type EditableTransactorRaw struct {
	Contract *EditableTransactor // Generic write-only contract binding to access the raw methods on
}

// NewEditable creates a new instance of Editable, bound to a specific deployed contract.
func NewEditable(address common.Address, backend bind.ContractBackend) (*Editable, error) {
	contract, err := bindEditable(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Editable{EditableCaller: EditableCaller{contract: contract}, EditableTransactor: EditableTransactor{contract: contract}, EditableFilterer: EditableFilterer{contract: contract}}, nil
}

// NewEditableCaller creates a new read-only instance of Editable, bound to a specific deployed contract.
func NewEditableCaller(address common.Address, caller bind.ContractCaller) (*EditableCaller, error) {
	contract, err := bindEditable(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &EditableCaller{contract: contract}, nil
}

// NewEditableTransactor creates a new write-only instance of Editable, bound to a specific deployed contract.
func NewEditableTransactor(address common.Address, transactor bind.ContractTransactor) (*EditableTransactor, error) {
	contract, err := bindEditable(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &EditableTransactor{contract: contract}, nil
}

// NewEditableFilterer creates a new log filterer instance of Editable, bound to a specific deployed contract.
func NewEditableFilterer(address common.Address, filterer bind.ContractFilterer) (*EditableFilterer, error) {
	contract, err := bindEditable(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &EditableFilterer{contract: contract}, nil
}

// bindEditable binds a generic wrapper to an already deployed contract.
func bindEditable(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(EditableABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Editable *EditableRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Editable.Contract.EditableCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Editable *EditableRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Editable.Contract.EditableTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Editable *EditableRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Editable.Contract.EditableTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Editable *EditableCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Editable.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Editable *EditableTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Editable.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Editable *EditableTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Editable.Contract.contract.Transact(opts, method, params...)
}

// CANACCESS is a free data retrieval call binding the contract method 0x97ac4fd2.
//
// Solidity: function CAN_ACCESS() constant returns(uint8)
func (_Editable *EditableCaller) CANACCESS(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _Editable.contract.Call(opts, out, "CAN_ACCESS")
	return *ret0, err
}

// CANACCESS is a free data retrieval call binding the contract method 0x97ac4fd2.
//
// Solidity: function CAN_ACCESS() constant returns(uint8)
func (_Editable *EditableSession) CANACCESS() (uint8, error) {
	return _Editable.Contract.CANACCESS(&_Editable.CallOpts)
}

// CANACCESS is a free data retrieval call binding the contract method 0x97ac4fd2.
//
// Solidity: function CAN_ACCESS() constant returns(uint8)
func (_Editable *EditableCallerSession) CANACCESS() (uint8, error) {
	return _Editable.Contract.CANACCESS(&_Editable.CallOpts)
}

// CANEDIT is a free data retrieval call binding the contract method 0xef1d7dc2.
//
// Solidity: function CAN_EDIT() constant returns(uint8)
func (_Editable *EditableCaller) CANEDIT(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _Editable.contract.Call(opts, out, "CAN_EDIT")
	return *ret0, err
}

// CANEDIT is a free data retrieval call binding the contract method 0xef1d7dc2.
//
// Solidity: function CAN_EDIT() constant returns(uint8)
func (_Editable *EditableSession) CANEDIT() (uint8, error) {
	return _Editable.Contract.CANEDIT(&_Editable.CallOpts)
}

// CANEDIT is a free data retrieval call binding the contract method 0xef1d7dc2.
//
// Solidity: function CAN_EDIT() constant returns(uint8)
func (_Editable *EditableCallerSession) CANEDIT() (uint8, error) {
	return _Editable.Contract.CANEDIT(&_Editable.CallOpts)
}

// CANSEE is a free data retrieval call binding the contract method 0x100508a2.
//
// Solidity: function CAN_SEE() constant returns(uint8)
func (_Editable *EditableCaller) CANSEE(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _Editable.contract.Call(opts, out, "CAN_SEE")
	return *ret0, err
}

// CANSEE is a free data retrieval call binding the contract method 0x100508a2.
//
// Solidity: function CAN_SEE() constant returns(uint8)
func (_Editable *EditableSession) CANSEE() (uint8, error) {
	return _Editable.Contract.CANSEE(&_Editable.CallOpts)
}

// CANSEE is a free data retrieval call binding the contract method 0x100508a2.
//
// Solidity: function CAN_SEE() constant returns(uint8)
func (_Editable *EditableCallerSession) CANSEE() (uint8, error) {
	return _Editable.Contract.CANSEE(&_Editable.CallOpts)
}

// CanCommit is a free data retrieval call binding the contract method 0x6e375427.
//
// Solidity: function canCommit() constant returns(bool)
func (_Editable *EditableCaller) CanCommit(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Editable.contract.Call(opts, out, "canCommit")
	return *ret0, err
}

// CanCommit is a free data retrieval call binding the contract method 0x6e375427.
//
// Solidity: function canCommit() constant returns(bool)
func (_Editable *EditableSession) CanCommit() (bool, error) {
	return _Editable.Contract.CanCommit(&_Editable.CallOpts)
}

// CanCommit is a free data retrieval call binding the contract method 0x6e375427.
//
// Solidity: function canCommit() constant returns(bool)
func (_Editable *EditableCallerSession) CanCommit() (bool, error) {
	return _Editable.Contract.CanCommit(&_Editable.CallOpts)
}

// CanConfirm is a free data retrieval call binding the contract method 0x14cfabb3.
//
// Solidity: function canConfirm() constant returns(bool)
func (_Editable *EditableCaller) CanConfirm(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Editable.contract.Call(opts, out, "canConfirm")
	return *ret0, err
}

// CanConfirm is a free data retrieval call binding the contract method 0x14cfabb3.
//
// Solidity: function canConfirm() constant returns(bool)
func (_Editable *EditableSession) CanConfirm() (bool, error) {
	return _Editable.Contract.CanConfirm(&_Editable.CallOpts)
}

// CanConfirm is a free data retrieval call binding the contract method 0x14cfabb3.
//
// Solidity: function canConfirm() constant returns(bool)
func (_Editable *EditableCallerSession) CanConfirm() (bool, error) {
	return _Editable.Contract.CanConfirm(&_Editable.CallOpts)
}

// CanEdit is a free data retrieval call binding the contract method 0x81beeb64.
//
// Solidity: function canEdit() constant returns(bool)
func (_Editable *EditableCaller) CanEdit(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Editable.contract.Call(opts, out, "canEdit")
	return *ret0, err
}

// CanEdit is a free data retrieval call binding the contract method 0x81beeb64.
//
// Solidity: function canEdit() constant returns(bool)
func (_Editable *EditableSession) CanEdit() (bool, error) {
	return _Editable.Contract.CanEdit(&_Editable.CallOpts)
}

// CanEdit is a free data retrieval call binding the contract method 0x81beeb64.
//
// Solidity: function canEdit() constant returns(bool)
func (_Editable *EditableCallerSession) CanEdit() (bool, error) {
	return _Editable.Contract.CanEdit(&_Editable.CallOpts)
}

// CommitPending is a free data retrieval call binding the contract method 0x375a6e7c.
//
// Solidity: function commitPending() constant returns(bool)
func (_Editable *EditableCaller) CommitPending(opts *bind.CallOpts) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Editable.contract.Call(opts, out, "commitPending")
	return *ret0, err
}

// CommitPending is a free data retrieval call binding the contract method 0x375a6e7c.
//
// Solidity: function commitPending() constant returns(bool)
func (_Editable *EditableSession) CommitPending() (bool, error) {
	return _Editable.Contract.CommitPending(&_Editable.CallOpts)
}

// CommitPending is a free data retrieval call binding the contract method 0x375a6e7c.
//
// Solidity: function commitPending() constant returns(bool)
func (_Editable *EditableCallerSession) CommitPending() (bool, error) {
	return _Editable.Contract.CommitPending(&_Editable.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_Editable *EditableCaller) ContentSpace(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Editable.contract.Call(opts, out, "contentSpace")
	return *ret0, err
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_Editable *EditableSession) ContentSpace() (common.Address, error) {
	return _Editable.Contract.ContentSpace(&_Editable.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_Editable *EditableCallerSession) ContentSpace() (common.Address, error) {
	return _Editable.Contract.ContentSpace(&_Editable.CallOpts)
}

// CountVersionHashes is a free data retrieval call binding the contract method 0x331b86c0.
//
// Solidity: function countVersionHashes() constant returns(uint256)
func (_Editable *EditableCaller) CountVersionHashes(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Editable.contract.Call(opts, out, "countVersionHashes")
	return *ret0, err
}

// CountVersionHashes is a free data retrieval call binding the contract method 0x331b86c0.
//
// Solidity: function countVersionHashes() constant returns(uint256)
func (_Editable *EditableSession) CountVersionHashes() (*big.Int, error) {
	return _Editable.Contract.CountVersionHashes(&_Editable.CallOpts)
}

// CountVersionHashes is a free data retrieval call binding the contract method 0x331b86c0.
//
// Solidity: function countVersionHashes() constant returns(uint256)
func (_Editable *EditableCallerSession) CountVersionHashes() (*big.Int, error) {
	return _Editable.Contract.CountVersionHashes(&_Editable.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_Editable *EditableCaller) Creator(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Editable.contract.Call(opts, out, "creator")
	return *ret0, err
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_Editable *EditableSession) Creator() (common.Address, error) {
	return _Editable.Contract.Creator(&_Editable.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_Editable *EditableCallerSession) Creator() (common.Address, error) {
	return _Editable.Contract.Creator(&_Editable.CallOpts)
}

// HasAccess is a free data retrieval call binding the contract method 0x95a078e8.
//
// Solidity: function hasAccess(address candidate) constant returns(bool)
func (_Editable *EditableCaller) HasAccess(opts *bind.CallOpts, candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Editable.contract.Call(opts, out, "hasAccess", candidate)
	return *ret0, err
}

// HasAccess is a free data retrieval call binding the contract method 0x95a078e8.
//
// Solidity: function hasAccess(address candidate) constant returns(bool)
func (_Editable *EditableSession) HasAccess(candidate common.Address) (bool, error) {
	return _Editable.Contract.HasAccess(&_Editable.CallOpts, candidate)
}

// HasAccess is a free data retrieval call binding the contract method 0x95a078e8.
//
// Solidity: function hasAccess(address candidate) constant returns(bool)
func (_Editable *EditableCallerSession) HasAccess(candidate common.Address) (bool, error) {
	return _Editable.Contract.HasAccess(&_Editable.CallOpts, candidate)
}

// HasEditorRight is a free data retrieval call binding the contract method 0x67e5c3bf.
//
// Solidity: function hasEditorRight(address candidate) constant returns(bool)
func (_Editable *EditableCaller) HasEditorRight(opts *bind.CallOpts, candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Editable.contract.Call(opts, out, "hasEditorRight", candidate)
	return *ret0, err
}

// HasEditorRight is a free data retrieval call binding the contract method 0x67e5c3bf.
//
// Solidity: function hasEditorRight(address candidate) constant returns(bool)
func (_Editable *EditableSession) HasEditorRight(candidate common.Address) (bool, error) {
	return _Editable.Contract.HasEditorRight(&_Editable.CallOpts, candidate)
}

// HasEditorRight is a free data retrieval call binding the contract method 0x67e5c3bf.
//
// Solidity: function hasEditorRight(address candidate) constant returns(bool)
func (_Editable *EditableCallerSession) HasEditorRight(candidate common.Address) (bool, error) {
	return _Editable.Contract.HasEditorRight(&_Editable.CallOpts, candidate)
}

// IndexCategory is a free data retrieval call binding the contract method 0x6380501f.
//
// Solidity: function indexCategory() constant returns(uint8)
func (_Editable *EditableCaller) IndexCategory(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _Editable.contract.Call(opts, out, "indexCategory")
	return *ret0, err
}

// IndexCategory is a free data retrieval call binding the contract method 0x6380501f.
//
// Solidity: function indexCategory() constant returns(uint8)
func (_Editable *EditableSession) IndexCategory() (uint8, error) {
	return _Editable.Contract.IndexCategory(&_Editable.CallOpts)
}

// IndexCategory is a free data retrieval call binding the contract method 0x6380501f.
//
// Solidity: function indexCategory() constant returns(uint8)
func (_Editable *EditableCallerSession) IndexCategory() (uint8, error) {
	return _Editable.Contract.IndexCategory(&_Editable.CallOpts)
}

// ObjectHash is a free data retrieval call binding the contract method 0xe02dd9c2.
//
// Solidity: function objectHash() constant returns(string)
func (_Editable *EditableCaller) ObjectHash(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _Editable.contract.Call(opts, out, "objectHash")
	return *ret0, err
}

// ObjectHash is a free data retrieval call binding the contract method 0xe02dd9c2.
//
// Solidity: function objectHash() constant returns(string)
func (_Editable *EditableSession) ObjectHash() (string, error) {
	return _Editable.Contract.ObjectHash(&_Editable.CallOpts)
}

// ObjectHash is a free data retrieval call binding the contract method 0xe02dd9c2.
//
// Solidity: function objectHash() constant returns(string)
func (_Editable *EditableCallerSession) ObjectHash() (string, error) {
	return _Editable.Contract.ObjectHash(&_Editable.CallOpts)
}

// ObjectTimestamp is a free data retrieval call binding the contract method 0x40b87a26.
//
// Solidity: function objectTimestamp() constant returns(uint256)
func (_Editable *EditableCaller) ObjectTimestamp(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Editable.contract.Call(opts, out, "objectTimestamp")
	return *ret0, err
}

// ObjectTimestamp is a free data retrieval call binding the contract method 0x40b87a26.
//
// Solidity: function objectTimestamp() constant returns(uint256)
func (_Editable *EditableSession) ObjectTimestamp() (*big.Int, error) {
	return _Editable.Contract.ObjectTimestamp(&_Editable.CallOpts)
}

// ObjectTimestamp is a free data retrieval call binding the contract method 0x40b87a26.
//
// Solidity: function objectTimestamp() constant returns(uint256)
func (_Editable *EditableCallerSession) ObjectTimestamp() (*big.Int, error) {
	return _Editable.Contract.ObjectTimestamp(&_Editable.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Editable *EditableCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Editable.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Editable *EditableSession) Owner() (common.Address, error) {
	return _Editable.Contract.Owner(&_Editable.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Editable *EditableCallerSession) Owner() (common.Address, error) {
	return _Editable.Contract.Owner(&_Editable.CallOpts)
}

// ParentAddress is a free data retrieval call binding the contract method 0x00821de3.
//
// Solidity: function parentAddress() constant returns(address)
func (_Editable *EditableCaller) ParentAddress(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Editable.contract.Call(opts, out, "parentAddress")
	return *ret0, err
}

// ParentAddress is a free data retrieval call binding the contract method 0x00821de3.
//
// Solidity: function parentAddress() constant returns(address)
func (_Editable *EditableSession) ParentAddress() (common.Address, error) {
	return _Editable.Contract.ParentAddress(&_Editable.CallOpts)
}

// ParentAddress is a free data retrieval call binding the contract method 0x00821de3.
//
// Solidity: function parentAddress() constant returns(address)
func (_Editable *EditableCallerSession) ParentAddress() (common.Address, error) {
	return _Editable.Contract.ParentAddress(&_Editable.CallOpts)
}

// PendingHash is a free data retrieval call binding the contract method 0x628449fd.
//
// Solidity: function pendingHash() constant returns(string)
func (_Editable *EditableCaller) PendingHash(opts *bind.CallOpts) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _Editable.contract.Call(opts, out, "pendingHash")
	return *ret0, err
}

// PendingHash is a free data retrieval call binding the contract method 0x628449fd.
//
// Solidity: function pendingHash() constant returns(string)
func (_Editable *EditableSession) PendingHash() (string, error) {
	return _Editable.Contract.PendingHash(&_Editable.CallOpts)
}

// PendingHash is a free data retrieval call binding the contract method 0x628449fd.
//
// Solidity: function pendingHash() constant returns(string)
func (_Editable *EditableCallerSession) PendingHash() (string, error) {
	return _Editable.Contract.PendingHash(&_Editable.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_Editable *EditableCaller) Version(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _Editable.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_Editable *EditableSession) Version() ([32]byte, error) {
	return _Editable.Contract.Version(&_Editable.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_Editable *EditableCallerSession) Version() ([32]byte, error) {
	return _Editable.Contract.Version(&_Editable.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_Editable *EditableCaller) VersionAPI(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _Editable.contract.Call(opts, out, "versionAPI")
	return *ret0, err
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_Editable *EditableSession) VersionAPI() ([32]byte, error) {
	return _Editable.Contract.VersionAPI(&_Editable.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_Editable *EditableCallerSession) VersionAPI() ([32]byte, error) {
	return _Editable.Contract.VersionAPI(&_Editable.CallOpts)
}

// VersionHashes is a free data retrieval call binding the contract method 0x7ca8f618.
//
// Solidity: function versionHashes(uint256 ) constant returns(string)
func (_Editable *EditableCaller) VersionHashes(opts *bind.CallOpts, arg0 *big.Int) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _Editable.contract.Call(opts, out, "versionHashes", arg0)
	return *ret0, err
}

// VersionHashes is a free data retrieval call binding the contract method 0x7ca8f618.
//
// Solidity: function versionHashes(uint256 ) constant returns(string)
func (_Editable *EditableSession) VersionHashes(arg0 *big.Int) (string, error) {
	return _Editable.Contract.VersionHashes(&_Editable.CallOpts, arg0)
}

// VersionHashes is a free data retrieval call binding the contract method 0x7ca8f618.
//
// Solidity: function versionHashes(uint256 ) constant returns(string)
func (_Editable *EditableCallerSession) VersionHashes(arg0 *big.Int) (string, error) {
	return _Editable.Contract.VersionHashes(&_Editable.CallOpts, arg0)
}

// VersionTimestamp is a free data retrieval call binding the contract method 0x7886f747.
//
// Solidity: function versionTimestamp(uint256 ) constant returns(uint256)
func (_Editable *EditableCaller) VersionTimestamp(opts *bind.CallOpts, arg0 *big.Int) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Editable.contract.Call(opts, out, "versionTimestamp", arg0)
	return *ret0, err
}

// VersionTimestamp is a free data retrieval call binding the contract method 0x7886f747.
//
// Solidity: function versionTimestamp(uint256 ) constant returns(uint256)
func (_Editable *EditableSession) VersionTimestamp(arg0 *big.Int) (*big.Int, error) {
	return _Editable.Contract.VersionTimestamp(&_Editable.CallOpts, arg0)
}

// VersionTimestamp is a free data retrieval call binding the contract method 0x7886f747.
//
// Solidity: function versionTimestamp(uint256 ) constant returns(uint256)
func (_Editable *EditableCallerSession) VersionTimestamp(arg0 *big.Int) (*big.Int, error) {
	return _Editable.Contract.VersionTimestamp(&_Editable.CallOpts, arg0)
}

// Visibility is a free data retrieval call binding the contract method 0x29adec14.
//
// Solidity: function visibility() constant returns(uint8)
func (_Editable *EditableCaller) Visibility(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _Editable.contract.Call(opts, out, "visibility")
	return *ret0, err
}

// Visibility is a free data retrieval call binding the contract method 0x29adec14.
//
// Solidity: function visibility() constant returns(uint8)
func (_Editable *EditableSession) Visibility() (uint8, error) {
	return _Editable.Contract.Visibility(&_Editable.CallOpts)
}

// Visibility is a free data retrieval call binding the contract method 0x29adec14.
//
// Solidity: function visibility() constant returns(uint8)
func (_Editable *EditableCallerSession) Visibility() (uint8, error) {
	return _Editable.Contract.Visibility(&_Editable.CallOpts)
}

// AccessRequestV3 is a paid mutator transaction binding the contract method 0x1bf7a912.
//
// Solidity: function accessRequestV3(bytes32[] , address[] ) returns(bool)
func (_Editable *EditableTransactor) AccessRequestV3(opts *bind.TransactOpts, arg0 [][32]byte, arg1 []common.Address) (*types.Transaction, error) {
	return _Editable.contract.Transact(opts, "accessRequestV3", arg0, arg1)
}

// AccessRequestV3 is a paid mutator transaction binding the contract method 0x1bf7a912.
//
// Solidity: function accessRequestV3(bytes32[] , address[] ) returns(bool)
func (_Editable *EditableSession) AccessRequestV3(arg0 [][32]byte, arg1 []common.Address) (*types.Transaction, error) {
	return _Editable.Contract.AccessRequestV3(&_Editable.TransactOpts, arg0, arg1)
}

// AccessRequestV3 is a paid mutator transaction binding the contract method 0x1bf7a912.
//
// Solidity: function accessRequestV3(bytes32[] , address[] ) returns(bool)
func (_Editable *EditableTransactorSession) AccessRequestV3(arg0 [][32]byte, arg1 []common.Address) (*types.Transaction, error) {
	return _Editable.Contract.AccessRequestV3(&_Editable.TransactOpts, arg0, arg1)
}

// ClearPending is a paid mutator transaction binding the contract method 0x5f6a1301.
//
// Solidity: function clearPending() returns()
func (_Editable *EditableTransactor) ClearPending(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Editable.contract.Transact(opts, "clearPending")
}

// ClearPending is a paid mutator transaction binding the contract method 0x5f6a1301.
//
// Solidity: function clearPending() returns()
func (_Editable *EditableSession) ClearPending() (*types.Transaction, error) {
	return _Editable.Contract.ClearPending(&_Editable.TransactOpts)
}

// ClearPending is a paid mutator transaction binding the contract method 0x5f6a1301.
//
// Solidity: function clearPending() returns()
func (_Editable *EditableTransactorSession) ClearPending() (*types.Transaction, error) {
	return _Editable.Contract.ClearPending(&_Editable.TransactOpts)
}

// Commit is a paid mutator transaction binding the contract method 0x9867db74.
//
// Solidity: function commit(string _objectHash) returns()
func (_Editable *EditableTransactor) Commit(opts *bind.TransactOpts, _objectHash string) (*types.Transaction, error) {
	return _Editable.contract.Transact(opts, "commit", _objectHash)
}

// Commit is a paid mutator transaction binding the contract method 0x9867db74.
//
// Solidity: function commit(string _objectHash) returns()
func (_Editable *EditableSession) Commit(_objectHash string) (*types.Transaction, error) {
	return _Editable.Contract.Commit(&_Editable.TransactOpts, _objectHash)
}

// Commit is a paid mutator transaction binding the contract method 0x9867db74.
//
// Solidity: function commit(string _objectHash) returns()
func (_Editable *EditableTransactorSession) Commit(_objectHash string) (*types.Transaction, error) {
	return _Editable.Contract.Commit(&_Editable.TransactOpts, _objectHash)
}

// ConfirmCommit is a paid mutator transaction binding the contract method 0x446e8826.
//
// Solidity: function confirmCommit() returns(bool)
func (_Editable *EditableTransactor) ConfirmCommit(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Editable.contract.Transact(opts, "confirmCommit")
}

// ConfirmCommit is a paid mutator transaction binding the contract method 0x446e8826.
//
// Solidity: function confirmCommit() returns(bool)
func (_Editable *EditableSession) ConfirmCommit() (*types.Transaction, error) {
	return _Editable.Contract.ConfirmCommit(&_Editable.TransactOpts)
}

// ConfirmCommit is a paid mutator transaction binding the contract method 0x446e8826.
//
// Solidity: function confirmCommit() returns(bool)
func (_Editable *EditableTransactorSession) ConfirmCommit() (*types.Transaction, error) {
	return _Editable.Contract.ConfirmCommit(&_Editable.TransactOpts)
}

// DeleteVersion is a paid mutator transaction binding the contract method 0xe1a70717.
//
// Solidity: function deleteVersion(string _versionHash) returns(int256)
func (_Editable *EditableTransactor) DeleteVersion(opts *bind.TransactOpts, _versionHash string) (*types.Transaction, error) {
	return _Editable.contract.Transact(opts, "deleteVersion", _versionHash)
}

// DeleteVersion is a paid mutator transaction binding the contract method 0xe1a70717.
//
// Solidity: function deleteVersion(string _versionHash) returns(int256)
func (_Editable *EditableSession) DeleteVersion(_versionHash string) (*types.Transaction, error) {
	return _Editable.Contract.DeleteVersion(&_Editable.TransactOpts, _versionHash)
}

// DeleteVersion is a paid mutator transaction binding the contract method 0xe1a70717.
//
// Solidity: function deleteVersion(string _versionHash) returns(int256)
func (_Editable *EditableTransactorSession) DeleteVersion(_versionHash string) (*types.Transaction, error) {
	return _Editable.Contract.DeleteVersion(&_Editable.TransactOpts, _versionHash)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_Editable *EditableTransactor) Kill(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Editable.contract.Transact(opts, "kill")
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_Editable *EditableSession) Kill() (*types.Transaction, error) {
	return _Editable.Contract.Kill(&_Editable.TransactOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_Editable *EditableTransactorSession) Kill() (*types.Transaction, error) {
	return _Editable.Contract.Kill(&_Editable.TransactOpts)
}

// SetGroupRights is a paid mutator transaction binding the contract method 0x22e564eb.
//
// Solidity: function setGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_Editable *EditableTransactor) SetGroupRights(opts *bind.TransactOpts, group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _Editable.contract.Transact(opts, "setGroupRights", group, access_type, access)
}

// SetGroupRights is a paid mutator transaction binding the contract method 0x22e564eb.
//
// Solidity: function setGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_Editable *EditableSession) SetGroupRights(group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _Editable.Contract.SetGroupRights(&_Editable.TransactOpts, group, access_type, access)
}

// SetGroupRights is a paid mutator transaction binding the contract method 0x22e564eb.
//
// Solidity: function setGroupRights(address group, uint8 access_type, uint8 access) returns()
func (_Editable *EditableTransactorSession) SetGroupRights(group common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _Editable.Contract.SetGroupRights(&_Editable.TransactOpts, group, access_type, access)
}

// SetRights is a paid mutator transaction binding the contract method 0x0fe1b5a2.
//
// Solidity: function setRights(address stakeholder, uint8 access_type, uint8 access) returns()
func (_Editable *EditableTransactor) SetRights(opts *bind.TransactOpts, stakeholder common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _Editable.contract.Transact(opts, "setRights", stakeholder, access_type, access)
}

// SetRights is a paid mutator transaction binding the contract method 0x0fe1b5a2.
//
// Solidity: function setRights(address stakeholder, uint8 access_type, uint8 access) returns()
func (_Editable *EditableSession) SetRights(stakeholder common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _Editable.Contract.SetRights(&_Editable.TransactOpts, stakeholder, access_type, access)
}

// SetRights is a paid mutator transaction binding the contract method 0x0fe1b5a2.
//
// Solidity: function setRights(address stakeholder, uint8 access_type, uint8 access) returns()
func (_Editable *EditableTransactorSession) SetRights(stakeholder common.Address, access_type uint8, access uint8) (*types.Transaction, error) {
	return _Editable.Contract.SetRights(&_Editable.TransactOpts, stakeholder, access_type, access)
}

// SetVisibility is a paid mutator transaction binding the contract method 0xaa024e8b.
//
// Solidity: function setVisibility(uint8 _visibility_code) returns()
func (_Editable *EditableTransactor) SetVisibility(opts *bind.TransactOpts, _visibility_code uint8) (*types.Transaction, error) {
	return _Editable.contract.Transact(opts, "setVisibility", _visibility_code)
}

// SetVisibility is a paid mutator transaction binding the contract method 0xaa024e8b.
//
// Solidity: function setVisibility(uint8 _visibility_code) returns()
func (_Editable *EditableSession) SetVisibility(_visibility_code uint8) (*types.Transaction, error) {
	return _Editable.Contract.SetVisibility(&_Editable.TransactOpts, _visibility_code)
}

// SetVisibility is a paid mutator transaction binding the contract method 0xaa024e8b.
//
// Solidity: function setVisibility(uint8 _visibility_code) returns()
func (_Editable *EditableTransactorSession) SetVisibility(_visibility_code uint8) (*types.Transaction, error) {
	return _Editable.Contract.SetVisibility(&_Editable.TransactOpts, _visibility_code)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_Editable *EditableTransactor) TransferCreatorship(opts *bind.TransactOpts, newCreator common.Address) (*types.Transaction, error) {
	return _Editable.contract.Transact(opts, "transferCreatorship", newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_Editable *EditableSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _Editable.Contract.TransferCreatorship(&_Editable.TransactOpts, newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_Editable *EditableTransactorSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _Editable.Contract.TransferCreatorship(&_Editable.TransactOpts, newCreator)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Editable *EditableTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _Editable.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Editable *EditableSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _Editable.Contract.TransferOwnership(&_Editable.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Editable *EditableTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _Editable.Contract.TransferOwnership(&_Editable.TransactOpts, newOwner)
}

// UpdateRequest is a paid mutator transaction binding the contract method 0xc287e0ed.
//
// Solidity: function updateRequest() returns()
func (_Editable *EditableTransactor) UpdateRequest(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Editable.contract.Transact(opts, "updateRequest")
}

// UpdateRequest is a paid mutator transaction binding the contract method 0xc287e0ed.
//
// Solidity: function updateRequest() returns()
func (_Editable *EditableSession) UpdateRequest() (*types.Transaction, error) {
	return _Editable.Contract.UpdateRequest(&_Editable.TransactOpts)
}

// UpdateRequest is a paid mutator transaction binding the contract method 0xc287e0ed.
//
// Solidity: function updateRequest() returns()
func (_Editable *EditableTransactorSession) UpdateRequest() (*types.Transaction, error) {
	return _Editable.Contract.UpdateRequest(&_Editable.TransactOpts)
}

// EditableAccessRequestV3Iterator is returned from FilterAccessRequestV3 and is used to iterate over the raw logs and unpacked data for AccessRequestV3 events raised by the Editable contract.
type EditableAccessRequestV3Iterator struct {
	Event *EditableAccessRequestV3 // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *EditableAccessRequestV3Iterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(EditableAccessRequestV3)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(EditableAccessRequestV3)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *EditableAccessRequestV3Iterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *EditableAccessRequestV3Iterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// EditableAccessRequestV3 represents a AccessRequestV3 event raised by the Editable contract.
type EditableAccessRequestV3 struct {
	RequestNonce     *big.Int
	ParentAddress    common.Address
	ContextHash      [32]byte
	Accessor         common.Address
	RequestTimestamp *big.Int
	Raw              types.Log // Blockchain specific contextual infos
}

// FilterAccessRequestV3 is a free log retrieval operation binding the contract event 0x545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c7.
//
// Solidity: event AccessRequestV3(uint256 requestNonce, address parentAddress, bytes32 contextHash, address accessor, uint256 requestTimestamp)
func (_Editable *EditableFilterer) FilterAccessRequestV3(opts *bind.FilterOpts) (*EditableAccessRequestV3Iterator, error) {

	logs, sub, err := _Editable.contract.FilterLogs(opts, "AccessRequestV3")
	if err != nil {
		return nil, err
	}
	return &EditableAccessRequestV3Iterator{contract: _Editable.contract, event: "AccessRequestV3", logs: logs, sub: sub}, nil
}

// WatchAccessRequestV3 is a free log subscription operation binding the contract event 0x545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c7.
//
// Solidity: event AccessRequestV3(uint256 requestNonce, address parentAddress, bytes32 contextHash, address accessor, uint256 requestTimestamp)
func (_Editable *EditableFilterer) WatchAccessRequestV3(opts *bind.WatchOpts, sink chan<- *EditableAccessRequestV3) (event.Subscription, error) {

	logs, sub, err := _Editable.contract.WatchLogs(opts, "AccessRequestV3")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(EditableAccessRequestV3)
				if err := _Editable.contract.UnpackLog(event, "AccessRequestV3", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAccessRequestV3 is a log parse operation binding the contract event 0x545ceffc5093a8300777a74bb094968fbd62d128313df01eb72fd5350ec659c7.
//
// Solidity: event AccessRequestV3(uint256 requestNonce, address parentAddress, bytes32 contextHash, address accessor, uint256 requestTimestamp)
func (_Editable *EditableFilterer) ParseAccessRequestV3(log types.Log) (*EditableAccessRequestV3, error) {
	event := new(EditableAccessRequestV3)
	if err := _Editable.contract.UnpackLog(event, "AccessRequestV3", log); err != nil {
		return nil, err
	}
	return event, nil
}

// EditableCommitPendingIterator is returned from FilterCommitPending and is used to iterate over the raw logs and unpacked data for CommitPending events raised by the Editable contract.
type EditableCommitPendingIterator struct {
	Event *EditableCommitPending // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *EditableCommitPendingIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(EditableCommitPending)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(EditableCommitPending)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *EditableCommitPendingIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *EditableCommitPendingIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// EditableCommitPending represents a CommitPending event raised by the Editable contract.
type EditableCommitPending struct {
	SpaceAddress  common.Address
	ParentAddress common.Address
	ObjectHash    string
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterCommitPending is a free log retrieval operation binding the contract event 0xb3ac059d88af6016aca1aebb7b3e796f2e7420435c59c563687814e9b85daa75.
//
// Solidity: event CommitPending(address spaceAddress, address parentAddress, string objectHash)
func (_Editable *EditableFilterer) FilterCommitPending(opts *bind.FilterOpts) (*EditableCommitPendingIterator, error) {

	logs, sub, err := _Editable.contract.FilterLogs(opts, "CommitPending")
	if err != nil {
		return nil, err
	}
	return &EditableCommitPendingIterator{contract: _Editable.contract, event: "CommitPending", logs: logs, sub: sub}, nil
}

// WatchCommitPending is a free log subscription operation binding the contract event 0xb3ac059d88af6016aca1aebb7b3e796f2e7420435c59c563687814e9b85daa75.
//
// Solidity: event CommitPending(address spaceAddress, address parentAddress, string objectHash)
func (_Editable *EditableFilterer) WatchCommitPending(opts *bind.WatchOpts, sink chan<- *EditableCommitPending) (event.Subscription, error) {

	logs, sub, err := _Editable.contract.WatchLogs(opts, "CommitPending")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(EditableCommitPending)
				if err := _Editable.contract.UnpackLog(event, "CommitPending", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseCommitPending is a log parse operation binding the contract event 0xb3ac059d88af6016aca1aebb7b3e796f2e7420435c59c563687814e9b85daa75.
//
// Solidity: event CommitPending(address spaceAddress, address parentAddress, string objectHash)
func (_Editable *EditableFilterer) ParseCommitPending(log types.Log) (*EditableCommitPending, error) {
	event := new(EditableCommitPending)
	if err := _Editable.contract.UnpackLog(event, "CommitPending", log); err != nil {
		return nil, err
	}
	return event, nil
}

// EditableUpdateRequestIterator is returned from FilterUpdateRequest and is used to iterate over the raw logs and unpacked data for UpdateRequest events raised by the Editable contract.
type EditableUpdateRequestIterator struct {
	Event *EditableUpdateRequest // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *EditableUpdateRequestIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(EditableUpdateRequest)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(EditableUpdateRequest)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *EditableUpdateRequestIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *EditableUpdateRequestIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// EditableUpdateRequest represents a UpdateRequest event raised by the Editable contract.
type EditableUpdateRequest struct {
	ObjectHash string
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterUpdateRequest is a free log retrieval operation binding the contract event 0x403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b65.
//
// Solidity: event UpdateRequest(string objectHash)
func (_Editable *EditableFilterer) FilterUpdateRequest(opts *bind.FilterOpts) (*EditableUpdateRequestIterator, error) {

	logs, sub, err := _Editable.contract.FilterLogs(opts, "UpdateRequest")
	if err != nil {
		return nil, err
	}
	return &EditableUpdateRequestIterator{contract: _Editable.contract, event: "UpdateRequest", logs: logs, sub: sub}, nil
}

// WatchUpdateRequest is a free log subscription operation binding the contract event 0x403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b65.
//
// Solidity: event UpdateRequest(string objectHash)
func (_Editable *EditableFilterer) WatchUpdateRequest(opts *bind.WatchOpts, sink chan<- *EditableUpdateRequest) (event.Subscription, error) {

	logs, sub, err := _Editable.contract.WatchLogs(opts, "UpdateRequest")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(EditableUpdateRequest)
				if err := _Editable.contract.UnpackLog(event, "UpdateRequest", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseUpdateRequest is a log parse operation binding the contract event 0x403f30aa5f4f2f89331a7b50054f64a00ce206f4d0a37f566ff344bbe46f8b65.
//
// Solidity: event UpdateRequest(string objectHash)
func (_Editable *EditableFilterer) ParseUpdateRequest(log types.Log) (*EditableUpdateRequest, error) {
	event := new(EditableUpdateRequest)
	if err := _Editable.contract.UnpackLog(event, "UpdateRequest", log); err != nil {
		return nil, err
	}
	return event, nil
}

// EditableVersionConfirmIterator is returned from FilterVersionConfirm and is used to iterate over the raw logs and unpacked data for VersionConfirm events raised by the Editable contract.
type EditableVersionConfirmIterator struct {
	Event *EditableVersionConfirm // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *EditableVersionConfirmIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(EditableVersionConfirm)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(EditableVersionConfirm)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *EditableVersionConfirmIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *EditableVersionConfirmIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// EditableVersionConfirm represents a VersionConfirm event raised by the Editable contract.
type EditableVersionConfirm struct {
	SpaceAddress  common.Address
	ParentAddress common.Address
	ObjectHash    string
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterVersionConfirm is a free log retrieval operation binding the contract event 0xbdaffceabaaa783aa187fea6c2e815541d29e2290bf3f7d3c4fc53672b68f7df.
//
// Solidity: event VersionConfirm(address spaceAddress, address parentAddress, string objectHash)
func (_Editable *EditableFilterer) FilterVersionConfirm(opts *bind.FilterOpts) (*EditableVersionConfirmIterator, error) {

	logs, sub, err := _Editable.contract.FilterLogs(opts, "VersionConfirm")
	if err != nil {
		return nil, err
	}
	return &EditableVersionConfirmIterator{contract: _Editable.contract, event: "VersionConfirm", logs: logs, sub: sub}, nil
}

// WatchVersionConfirm is a free log subscription operation binding the contract event 0xbdaffceabaaa783aa187fea6c2e815541d29e2290bf3f7d3c4fc53672b68f7df.
//
// Solidity: event VersionConfirm(address spaceAddress, address parentAddress, string objectHash)
func (_Editable *EditableFilterer) WatchVersionConfirm(opts *bind.WatchOpts, sink chan<- *EditableVersionConfirm) (event.Subscription, error) {

	logs, sub, err := _Editable.contract.WatchLogs(opts, "VersionConfirm")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(EditableVersionConfirm)
				if err := _Editable.contract.UnpackLog(event, "VersionConfirm", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseVersionConfirm is a log parse operation binding the contract event 0xbdaffceabaaa783aa187fea6c2e815541d29e2290bf3f7d3c4fc53672b68f7df.
//
// Solidity: event VersionConfirm(address spaceAddress, address parentAddress, string objectHash)
func (_Editable *EditableFilterer) ParseVersionConfirm(log types.Log) (*EditableVersionConfirm, error) {
	event := new(EditableVersionConfirm)
	if err := _Editable.contract.UnpackLog(event, "VersionConfirm", log); err != nil {
		return nil, err
	}
	return event, nil
}

// EditableVersionDeleteIterator is returned from FilterVersionDelete and is used to iterate over the raw logs and unpacked data for VersionDelete events raised by the Editable contract.
type EditableVersionDeleteIterator struct {
	Event *EditableVersionDelete // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *EditableVersionDeleteIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(EditableVersionDelete)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(EditableVersionDelete)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *EditableVersionDeleteIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *EditableVersionDeleteIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// EditableVersionDelete represents a VersionDelete event raised by the Editable contract.
type EditableVersionDelete struct {
	SpaceAddress common.Address
	VersionHash  string
	Index        *big.Int
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterVersionDelete is a free log retrieval operation binding the contract event 0x238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51.
//
// Solidity: event VersionDelete(address spaceAddress, string versionHash, int256 index)
func (_Editable *EditableFilterer) FilterVersionDelete(opts *bind.FilterOpts) (*EditableVersionDeleteIterator, error) {

	logs, sub, err := _Editable.contract.FilterLogs(opts, "VersionDelete")
	if err != nil {
		return nil, err
	}
	return &EditableVersionDeleteIterator{contract: _Editable.contract, event: "VersionDelete", logs: logs, sub: sub}, nil
}

// WatchVersionDelete is a free log subscription operation binding the contract event 0x238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51.
//
// Solidity: event VersionDelete(address spaceAddress, string versionHash, int256 index)
func (_Editable *EditableFilterer) WatchVersionDelete(opts *bind.WatchOpts, sink chan<- *EditableVersionDelete) (event.Subscription, error) {

	logs, sub, err := _Editable.contract.WatchLogs(opts, "VersionDelete")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(EditableVersionDelete)
				if err := _Editable.contract.UnpackLog(event, "VersionDelete", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseVersionDelete is a log parse operation binding the contract event 0x238d74c13cda9ba51e904772d41a616a1b9b30d09802484df6279fe1c3c07f51.
//
// Solidity: event VersionDelete(address spaceAddress, string versionHash, int256 index)
func (_Editable *EditableFilterer) ParseVersionDelete(log types.Log) (*EditableVersionDelete, error) {
	event := new(EditableVersionDelete)
	if err := _Editable.contract.UnpackLog(event, "VersionDelete", log); err != nil {
		return nil, err
	}
	return event, nil
}

// EditableVisibilityChangedIterator is returned from FilterVisibilityChanged and is used to iterate over the raw logs and unpacked data for VisibilityChanged events raised by the Editable contract.
type EditableVisibilityChangedIterator struct {
	Event *EditableVisibilityChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *EditableVisibilityChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(EditableVisibilityChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(EditableVisibilityChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *EditableVisibilityChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *EditableVisibilityChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// EditableVisibilityChanged represents a VisibilityChanged event raised by the Editable contract.
type EditableVisibilityChanged struct {
	ContentSpace  common.Address
	ParentAddress common.Address
	Visibility    uint8
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterVisibilityChanged is a free log retrieval operation binding the contract event 0x369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500.
//
// Solidity: event VisibilityChanged(address contentSpace, address parentAddress, uint8 visibility)
func (_Editable *EditableFilterer) FilterVisibilityChanged(opts *bind.FilterOpts) (*EditableVisibilityChangedIterator, error) {

	logs, sub, err := _Editable.contract.FilterLogs(opts, "VisibilityChanged")
	if err != nil {
		return nil, err
	}
	return &EditableVisibilityChangedIterator{contract: _Editable.contract, event: "VisibilityChanged", logs: logs, sub: sub}, nil
}

// WatchVisibilityChanged is a free log subscription operation binding the contract event 0x369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500.
//
// Solidity: event VisibilityChanged(address contentSpace, address parentAddress, uint8 visibility)
func (_Editable *EditableFilterer) WatchVisibilityChanged(opts *bind.WatchOpts, sink chan<- *EditableVisibilityChanged) (event.Subscription, error) {

	logs, sub, err := _Editable.contract.WatchLogs(opts, "VisibilityChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(EditableVisibilityChanged)
				if err := _Editable.contract.UnpackLog(event, "VisibilityChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseVisibilityChanged is a log parse operation binding the contract event 0x369a336baa7895746725663e717b3523139ebabfff8c32bc4b13e8f88e502500.
//
// Solidity: event VisibilityChanged(address contentSpace, address parentAddress, uint8 visibility)
func (_Editable *EditableFilterer) ParseVisibilityChanged(log types.Log) (*EditableVisibilityChanged, error) {
	event := new(EditableVisibilityChanged)
	if err := _Editable.contract.UnpackLog(event, "VisibilityChanged", log); err != nil {
		return nil, err
	}
	return event, nil
}

// EncTokenABI is the input ABI used to generate the binding from.
const EncTokenABI = "[]"

// EncTokenBin is the compiled bytecode used for deploying new contracts.
var EncTokenBin = "0x60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820fd08802743c5b95c8b1ae50c82d7e83a62bce0f03eab3f19a9eb7f7a782625d564736f6c63430005110032"

// DeployEncToken deploys a new Ethereum contract, binding an instance of EncToken to it.
func DeployEncToken(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *EncToken, error) {
	parsed, err := abi.JSON(strings.NewReader(EncTokenABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(EncTokenBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &EncToken{EncTokenCaller: EncTokenCaller{contract: contract}, EncTokenTransactor: EncTokenTransactor{contract: contract}, EncTokenFilterer: EncTokenFilterer{contract: contract}}, nil
}

// EncToken is an auto generated Go binding around an Ethereum contract.
type EncToken struct {
	EncTokenCaller     // Read-only binding to the contract
	EncTokenTransactor // Write-only binding to the contract
	EncTokenFilterer   // Log filterer for contract events
}

// EncTokenCaller is an auto generated read-only Go binding around an Ethereum contract.
type EncTokenCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// EncTokenTransactor is an auto generated write-only Go binding around an Ethereum contract.
type EncTokenTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// EncTokenFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type EncTokenFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// EncTokenSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type EncTokenSession struct {
	Contract     *EncToken         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// EncTokenCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type EncTokenCallerSession struct {
	Contract *EncTokenCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// EncTokenTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type EncTokenTransactorSession struct {
	Contract     *EncTokenTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// EncTokenRaw is an auto generated low-level Go binding around an Ethereum contract.
type EncTokenRaw struct {
	Contract *EncToken // Generic contract binding to access the raw methods on
}

// EncTokenCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type EncTokenCallerRaw struct {
	Contract *EncTokenCaller // Generic read-only contract binding to access the raw methods on
}

// EncTokenTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type EncTokenTransactorRaw struct {
	Contract *EncTokenTransactor // Generic write-only contract binding to access the raw methods on
}

// NewEncToken creates a new instance of EncToken, bound to a specific deployed contract.
func NewEncToken(address common.Address, backend bind.ContractBackend) (*EncToken, error) {
	contract, err := bindEncToken(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &EncToken{EncTokenCaller: EncTokenCaller{contract: contract}, EncTokenTransactor: EncTokenTransactor{contract: contract}, EncTokenFilterer: EncTokenFilterer{contract: contract}}, nil
}

// NewEncTokenCaller creates a new read-only instance of EncToken, bound to a specific deployed contract.
func NewEncTokenCaller(address common.Address, caller bind.ContractCaller) (*EncTokenCaller, error) {
	contract, err := bindEncToken(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &EncTokenCaller{contract: contract}, nil
}

// NewEncTokenTransactor creates a new write-only instance of EncToken, bound to a specific deployed contract.
func NewEncTokenTransactor(address common.Address, transactor bind.ContractTransactor) (*EncTokenTransactor, error) {
	contract, err := bindEncToken(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &EncTokenTransactor{contract: contract}, nil
}

// NewEncTokenFilterer creates a new log filterer instance of EncToken, bound to a specific deployed contract.
func NewEncTokenFilterer(address common.Address, filterer bind.ContractFilterer) (*EncTokenFilterer, error) {
	contract, err := bindEncToken(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &EncTokenFilterer{contract: contract}, nil
}

// bindEncToken binds a generic wrapper to an already deployed contract.
func bindEncToken(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(EncTokenABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_EncToken *EncTokenRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _EncToken.Contract.EncTokenCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_EncToken *EncTokenRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _EncToken.Contract.EncTokenTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_EncToken *EncTokenRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _EncToken.Contract.EncTokenTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_EncToken *EncTokenCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _EncToken.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_EncToken *EncTokenTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _EncToken.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_EncToken *EncTokenTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _EncToken.Contract.contract.Transact(opts, method, params...)
}

// IAdminABI is the input ABI used to generate the binding from.
const IAdminABI = "[{\"constant\":true,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"_adminAddr\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// IAdminFuncSigs maps the 4-byte function signature to its string representation.
var IAdminFuncSigs = map[string]string{
	"24d7806c": "isAdmin(address)",
}

// IAdmin is an auto generated Go binding around an Ethereum contract.
type IAdmin struct {
	IAdminCaller     // Read-only binding to the contract
	IAdminTransactor // Write-only binding to the contract
	IAdminFilterer   // Log filterer for contract events
}

// IAdminCaller is an auto generated read-only Go binding around an Ethereum contract.
type IAdminCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IAdminTransactor is an auto generated write-only Go binding around an Ethereum contract.
type IAdminTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IAdminFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type IAdminFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IAdminSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type IAdminSession struct {
	Contract     *IAdmin           // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// IAdminCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type IAdminCallerSession struct {
	Contract *IAdminCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// IAdminTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type IAdminTransactorSession struct {
	Contract     *IAdminTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// IAdminRaw is an auto generated low-level Go binding around an Ethereum contract.
type IAdminRaw struct {
	Contract *IAdmin // Generic contract binding to access the raw methods on
}

// IAdminCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type IAdminCallerRaw struct {
	Contract *IAdminCaller // Generic read-only contract binding to access the raw methods on
}

// IAdminTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type IAdminTransactorRaw struct {
	Contract *IAdminTransactor // Generic write-only contract binding to access the raw methods on
}

// NewIAdmin creates a new instance of IAdmin, bound to a specific deployed contract.
func NewIAdmin(address common.Address, backend bind.ContractBackend) (*IAdmin, error) {
	contract, err := bindIAdmin(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &IAdmin{IAdminCaller: IAdminCaller{contract: contract}, IAdminTransactor: IAdminTransactor{contract: contract}, IAdminFilterer: IAdminFilterer{contract: contract}}, nil
}

// NewIAdminCaller creates a new read-only instance of IAdmin, bound to a specific deployed contract.
func NewIAdminCaller(address common.Address, caller bind.ContractCaller) (*IAdminCaller, error) {
	contract, err := bindIAdmin(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &IAdminCaller{contract: contract}, nil
}

// NewIAdminTransactor creates a new write-only instance of IAdmin, bound to a specific deployed contract.
func NewIAdminTransactor(address common.Address, transactor bind.ContractTransactor) (*IAdminTransactor, error) {
	contract, err := bindIAdmin(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &IAdminTransactor{contract: contract}, nil
}

// NewIAdminFilterer creates a new log filterer instance of IAdmin, bound to a specific deployed contract.
func NewIAdminFilterer(address common.Address, filterer bind.ContractFilterer) (*IAdminFilterer, error) {
	contract, err := bindIAdmin(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &IAdminFilterer{contract: contract}, nil
}

// bindIAdmin binds a generic wrapper to an already deployed contract.
func bindIAdmin(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(IAdminABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IAdmin *IAdminRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _IAdmin.Contract.IAdminCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IAdmin *IAdminRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IAdmin.Contract.IAdminTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IAdmin *IAdminRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IAdmin.Contract.IAdminTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IAdmin *IAdminCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _IAdmin.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IAdmin *IAdminTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IAdmin.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IAdmin *IAdminTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IAdmin.Contract.contract.Transact(opts, method, params...)
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(address _adminAddr) constant returns(bool)
func (_IAdmin *IAdminCaller) IsAdmin(opts *bind.CallOpts, _adminAddr common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _IAdmin.contract.Call(opts, out, "isAdmin", _adminAddr)
	return *ret0, err
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(address _adminAddr) constant returns(bool)
func (_IAdmin *IAdminSession) IsAdmin(_adminAddr common.Address) (bool, error) {
	return _IAdmin.Contract.IsAdmin(&_IAdmin.CallOpts, _adminAddr)
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(address _adminAddr) constant returns(bool)
func (_IAdmin *IAdminCallerSession) IsAdmin(_adminAddr common.Address) (bool, error) {
	return _IAdmin.Contract.IsAdmin(&_IAdmin.CallOpts, _adminAddr)
}

// IFactorySpaceABI is the input ABI used to generate the binding from.
const IFactorySpaceABI = "[{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"lib\",\"type\":\"address\"},{\"internalType\":\"addresspayable\",\"name\":\"content_type\",\"type\":\"address\"}],\"name\":\"createContent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createContentType\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createGroup\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"address_KMS\",\"type\":\"address\"}],\"name\":\"createLibrary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"

// IFactorySpaceFuncSigs maps the 4-byte function signature to its string representation.
var IFactorySpaceFuncSigs = map[string]string{
	"bf4e088f": "createContent(address,address)",
	"b8cfaf05": "createContentType()",
	"575185ed": "createGroup()",
	"40b89f06": "createLibrary(address)",
}

// IFactorySpace is an auto generated Go binding around an Ethereum contract.
type IFactorySpace struct {
	IFactorySpaceCaller     // Read-only binding to the contract
	IFactorySpaceTransactor // Write-only binding to the contract
	IFactorySpaceFilterer   // Log filterer for contract events
}

// IFactorySpaceCaller is an auto generated read-only Go binding around an Ethereum contract.
type IFactorySpaceCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IFactorySpaceTransactor is an auto generated write-only Go binding around an Ethereum contract.
type IFactorySpaceTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IFactorySpaceFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type IFactorySpaceFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IFactorySpaceSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type IFactorySpaceSession struct {
	Contract     *IFactorySpace    // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// IFactorySpaceCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type IFactorySpaceCallerSession struct {
	Contract *IFactorySpaceCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts        // Call options to use throughout this session
}

// IFactorySpaceTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type IFactorySpaceTransactorSession struct {
	Contract     *IFactorySpaceTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts        // Transaction auth options to use throughout this session
}

// IFactorySpaceRaw is an auto generated low-level Go binding around an Ethereum contract.
type IFactorySpaceRaw struct {
	Contract *IFactorySpace // Generic contract binding to access the raw methods on
}

// IFactorySpaceCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type IFactorySpaceCallerRaw struct {
	Contract *IFactorySpaceCaller // Generic read-only contract binding to access the raw methods on
}

// IFactorySpaceTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type IFactorySpaceTransactorRaw struct {
	Contract *IFactorySpaceTransactor // Generic write-only contract binding to access the raw methods on
}

// NewIFactorySpace creates a new instance of IFactorySpace, bound to a specific deployed contract.
func NewIFactorySpace(address common.Address, backend bind.ContractBackend) (*IFactorySpace, error) {
	contract, err := bindIFactorySpace(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &IFactorySpace{IFactorySpaceCaller: IFactorySpaceCaller{contract: contract}, IFactorySpaceTransactor: IFactorySpaceTransactor{contract: contract}, IFactorySpaceFilterer: IFactorySpaceFilterer{contract: contract}}, nil
}

// NewIFactorySpaceCaller creates a new read-only instance of IFactorySpace, bound to a specific deployed contract.
func NewIFactorySpaceCaller(address common.Address, caller bind.ContractCaller) (*IFactorySpaceCaller, error) {
	contract, err := bindIFactorySpace(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &IFactorySpaceCaller{contract: contract}, nil
}

// NewIFactorySpaceTransactor creates a new write-only instance of IFactorySpace, bound to a specific deployed contract.
func NewIFactorySpaceTransactor(address common.Address, transactor bind.ContractTransactor) (*IFactorySpaceTransactor, error) {
	contract, err := bindIFactorySpace(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &IFactorySpaceTransactor{contract: contract}, nil
}

// NewIFactorySpaceFilterer creates a new log filterer instance of IFactorySpace, bound to a specific deployed contract.
func NewIFactorySpaceFilterer(address common.Address, filterer bind.ContractFilterer) (*IFactorySpaceFilterer, error) {
	contract, err := bindIFactorySpace(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &IFactorySpaceFilterer{contract: contract}, nil
}

// bindIFactorySpace binds a generic wrapper to an already deployed contract.
func bindIFactorySpace(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(IFactorySpaceABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IFactorySpace *IFactorySpaceRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _IFactorySpace.Contract.IFactorySpaceCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IFactorySpace *IFactorySpaceRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IFactorySpace.Contract.IFactorySpaceTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IFactorySpace *IFactorySpaceRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IFactorySpace.Contract.IFactorySpaceTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IFactorySpace *IFactorySpaceCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _IFactorySpace.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IFactorySpace *IFactorySpaceTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IFactorySpace.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IFactorySpace *IFactorySpaceTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IFactorySpace.Contract.contract.Transact(opts, method, params...)
}

// CreateContent is a paid mutator transaction binding the contract method 0xbf4e088f.
//
// Solidity: function createContent(address lib, address content_type) returns(address)
func (_IFactorySpace *IFactorySpaceTransactor) CreateContent(opts *bind.TransactOpts, lib common.Address, content_type common.Address) (*types.Transaction, error) {
	return _IFactorySpace.contract.Transact(opts, "createContent", lib, content_type)
}

// CreateContent is a paid mutator transaction binding the contract method 0xbf4e088f.
//
// Solidity: function createContent(address lib, address content_type) returns(address)
func (_IFactorySpace *IFactorySpaceSession) CreateContent(lib common.Address, content_type common.Address) (*types.Transaction, error) {
	return _IFactorySpace.Contract.CreateContent(&_IFactorySpace.TransactOpts, lib, content_type)
}

// CreateContent is a paid mutator transaction binding the contract method 0xbf4e088f.
//
// Solidity: function createContent(address lib, address content_type) returns(address)
func (_IFactorySpace *IFactorySpaceTransactorSession) CreateContent(lib common.Address, content_type common.Address) (*types.Transaction, error) {
	return _IFactorySpace.Contract.CreateContent(&_IFactorySpace.TransactOpts, lib, content_type)
}

// CreateContentType is a paid mutator transaction binding the contract method 0xb8cfaf05.
//
// Solidity: function createContentType() returns(address)
func (_IFactorySpace *IFactorySpaceTransactor) CreateContentType(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IFactorySpace.contract.Transact(opts, "createContentType")
}

// CreateContentType is a paid mutator transaction binding the contract method 0xb8cfaf05.
//
// Solidity: function createContentType() returns(address)
func (_IFactorySpace *IFactorySpaceSession) CreateContentType() (*types.Transaction, error) {
	return _IFactorySpace.Contract.CreateContentType(&_IFactorySpace.TransactOpts)
}

// CreateContentType is a paid mutator transaction binding the contract method 0xb8cfaf05.
//
// Solidity: function createContentType() returns(address)
func (_IFactorySpace *IFactorySpaceTransactorSession) CreateContentType() (*types.Transaction, error) {
	return _IFactorySpace.Contract.CreateContentType(&_IFactorySpace.TransactOpts)
}

// CreateGroup is a paid mutator transaction binding the contract method 0x575185ed.
//
// Solidity: function createGroup() returns(address)
func (_IFactorySpace *IFactorySpaceTransactor) CreateGroup(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IFactorySpace.contract.Transact(opts, "createGroup")
}

// CreateGroup is a paid mutator transaction binding the contract method 0x575185ed.
//
// Solidity: function createGroup() returns(address)
func (_IFactorySpace *IFactorySpaceSession) CreateGroup() (*types.Transaction, error) {
	return _IFactorySpace.Contract.CreateGroup(&_IFactorySpace.TransactOpts)
}

// CreateGroup is a paid mutator transaction binding the contract method 0x575185ed.
//
// Solidity: function createGroup() returns(address)
func (_IFactorySpace *IFactorySpaceTransactorSession) CreateGroup() (*types.Transaction, error) {
	return _IFactorySpace.Contract.CreateGroup(&_IFactorySpace.TransactOpts)
}

// CreateLibrary is a paid mutator transaction binding the contract method 0x40b89f06.
//
// Solidity: function createLibrary(address address_KMS) returns(address)
func (_IFactorySpace *IFactorySpaceTransactor) CreateLibrary(opts *bind.TransactOpts, address_KMS common.Address) (*types.Transaction, error) {
	return _IFactorySpace.contract.Transact(opts, "createLibrary", address_KMS)
}

// CreateLibrary is a paid mutator transaction binding the contract method 0x40b89f06.
//
// Solidity: function createLibrary(address address_KMS) returns(address)
func (_IFactorySpace *IFactorySpaceSession) CreateLibrary(address_KMS common.Address) (*types.Transaction, error) {
	return _IFactorySpace.Contract.CreateLibrary(&_IFactorySpace.TransactOpts, address_KMS)
}

// CreateLibrary is a paid mutator transaction binding the contract method 0x40b89f06.
//
// Solidity: function createLibrary(address address_KMS) returns(address)
func (_IFactorySpace *IFactorySpaceTransactorSession) CreateLibrary(address_KMS common.Address) (*types.Transaction, error) {
	return _IFactorySpace.Contract.CreateLibrary(&_IFactorySpace.TransactOpts, address_KMS)
}

// IKmsSpaceABI is the input ABI used to generate the binding from.
const IKmsSpaceABI = "[{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_kmsAddr\",\"type\":\"address\"}],\"name\":\"checkKMSAddr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_kmsAddr\",\"type\":\"address\"}],\"name\":\"getKMSID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_kmsID\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"prefix\",\"type\":\"bytes\"}],\"name\":\"getKMSInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// IKmsSpaceFuncSigs maps the 4-byte function signature to its string representation.
var IKmsSpaceFuncSigs = map[string]string{
	"d6be0f49": "checkKMSAddr(address)",
	"589aafc1": "getKMSID(address)",
	"268bfac4": "getKMSInfo(string,bytes)",
}

// IKmsSpace is an auto generated Go binding around an Ethereum contract.
type IKmsSpace struct {
	IKmsSpaceCaller     // Read-only binding to the contract
	IKmsSpaceTransactor // Write-only binding to the contract
	IKmsSpaceFilterer   // Log filterer for contract events
}

// IKmsSpaceCaller is an auto generated read-only Go binding around an Ethereum contract.
type IKmsSpaceCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IKmsSpaceTransactor is an auto generated write-only Go binding around an Ethereum contract.
type IKmsSpaceTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IKmsSpaceFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type IKmsSpaceFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IKmsSpaceSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type IKmsSpaceSession struct {
	Contract     *IKmsSpace        // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// IKmsSpaceCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type IKmsSpaceCallerSession struct {
	Contract *IKmsSpaceCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts    // Call options to use throughout this session
}

// IKmsSpaceTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type IKmsSpaceTransactorSession struct {
	Contract     *IKmsSpaceTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts    // Transaction auth options to use throughout this session
}

// IKmsSpaceRaw is an auto generated low-level Go binding around an Ethereum contract.
type IKmsSpaceRaw struct {
	Contract *IKmsSpace // Generic contract binding to access the raw methods on
}

// IKmsSpaceCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type IKmsSpaceCallerRaw struct {
	Contract *IKmsSpaceCaller // Generic read-only contract binding to access the raw methods on
}

// IKmsSpaceTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type IKmsSpaceTransactorRaw struct {
	Contract *IKmsSpaceTransactor // Generic write-only contract binding to access the raw methods on
}

// NewIKmsSpace creates a new instance of IKmsSpace, bound to a specific deployed contract.
func NewIKmsSpace(address common.Address, backend bind.ContractBackend) (*IKmsSpace, error) {
	contract, err := bindIKmsSpace(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &IKmsSpace{IKmsSpaceCaller: IKmsSpaceCaller{contract: contract}, IKmsSpaceTransactor: IKmsSpaceTransactor{contract: contract}, IKmsSpaceFilterer: IKmsSpaceFilterer{contract: contract}}, nil
}

// NewIKmsSpaceCaller creates a new read-only instance of IKmsSpace, bound to a specific deployed contract.
func NewIKmsSpaceCaller(address common.Address, caller bind.ContractCaller) (*IKmsSpaceCaller, error) {
	contract, err := bindIKmsSpace(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &IKmsSpaceCaller{contract: contract}, nil
}

// NewIKmsSpaceTransactor creates a new write-only instance of IKmsSpace, bound to a specific deployed contract.
func NewIKmsSpaceTransactor(address common.Address, transactor bind.ContractTransactor) (*IKmsSpaceTransactor, error) {
	contract, err := bindIKmsSpace(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &IKmsSpaceTransactor{contract: contract}, nil
}

// NewIKmsSpaceFilterer creates a new log filterer instance of IKmsSpace, bound to a specific deployed contract.
func NewIKmsSpaceFilterer(address common.Address, filterer bind.ContractFilterer) (*IKmsSpaceFilterer, error) {
	contract, err := bindIKmsSpace(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &IKmsSpaceFilterer{contract: contract}, nil
}

// bindIKmsSpace binds a generic wrapper to an already deployed contract.
func bindIKmsSpace(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(IKmsSpaceABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IKmsSpace *IKmsSpaceRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _IKmsSpace.Contract.IKmsSpaceCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IKmsSpace *IKmsSpaceRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IKmsSpace.Contract.IKmsSpaceTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IKmsSpace *IKmsSpaceRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IKmsSpace.Contract.IKmsSpaceTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IKmsSpace *IKmsSpaceCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _IKmsSpace.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IKmsSpace *IKmsSpaceTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IKmsSpace.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IKmsSpace *IKmsSpaceTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IKmsSpace.Contract.contract.Transact(opts, method, params...)
}

// CheckKMSAddr is a free data retrieval call binding the contract method 0xd6be0f49.
//
// Solidity: function checkKMSAddr(address _kmsAddr) constant returns(uint256)
func (_IKmsSpace *IKmsSpaceCaller) CheckKMSAddr(opts *bind.CallOpts, _kmsAddr common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _IKmsSpace.contract.Call(opts, out, "checkKMSAddr", _kmsAddr)
	return *ret0, err
}

// CheckKMSAddr is a free data retrieval call binding the contract method 0xd6be0f49.
//
// Solidity: function checkKMSAddr(address _kmsAddr) constant returns(uint256)
func (_IKmsSpace *IKmsSpaceSession) CheckKMSAddr(_kmsAddr common.Address) (*big.Int, error) {
	return _IKmsSpace.Contract.CheckKMSAddr(&_IKmsSpace.CallOpts, _kmsAddr)
}

// CheckKMSAddr is a free data retrieval call binding the contract method 0xd6be0f49.
//
// Solidity: function checkKMSAddr(address _kmsAddr) constant returns(uint256)
func (_IKmsSpace *IKmsSpaceCallerSession) CheckKMSAddr(_kmsAddr common.Address) (*big.Int, error) {
	return _IKmsSpace.Contract.CheckKMSAddr(&_IKmsSpace.CallOpts, _kmsAddr)
}

// GetKMSID is a free data retrieval call binding the contract method 0x589aafc1.
//
// Solidity: function getKMSID(address _kmsAddr) constant returns(string)
func (_IKmsSpace *IKmsSpaceCaller) GetKMSID(opts *bind.CallOpts, _kmsAddr common.Address) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _IKmsSpace.contract.Call(opts, out, "getKMSID", _kmsAddr)
	return *ret0, err
}

// GetKMSID is a free data retrieval call binding the contract method 0x589aafc1.
//
// Solidity: function getKMSID(address _kmsAddr) constant returns(string)
func (_IKmsSpace *IKmsSpaceSession) GetKMSID(_kmsAddr common.Address) (string, error) {
	return _IKmsSpace.Contract.GetKMSID(&_IKmsSpace.CallOpts, _kmsAddr)
}

// GetKMSID is a free data retrieval call binding the contract method 0x589aafc1.
//
// Solidity: function getKMSID(address _kmsAddr) constant returns(string)
func (_IKmsSpace *IKmsSpaceCallerSession) GetKMSID(_kmsAddr common.Address) (string, error) {
	return _IKmsSpace.Contract.GetKMSID(&_IKmsSpace.CallOpts, _kmsAddr)
}

// GetKMSInfo is a free data retrieval call binding the contract method 0x268bfac4.
//
// Solidity: function getKMSInfo(string _kmsID, bytes prefix) constant returns(string, string)
func (_IKmsSpace *IKmsSpaceCaller) GetKMSInfo(opts *bind.CallOpts, _kmsID string, prefix []byte) (string, string, error) {
	var (
		ret0 = new(string)
		ret1 = new(string)
	)
	out := &[]interface{}{
		ret0,
		ret1,
	}
	err := _IKmsSpace.contract.Call(opts, out, "getKMSInfo", _kmsID, prefix)
	return *ret0, *ret1, err
}

// GetKMSInfo is a free data retrieval call binding the contract method 0x268bfac4.
//
// Solidity: function getKMSInfo(string _kmsID, bytes prefix) constant returns(string, string)
func (_IKmsSpace *IKmsSpaceSession) GetKMSInfo(_kmsID string, prefix []byte) (string, string, error) {
	return _IKmsSpace.Contract.GetKMSInfo(&_IKmsSpace.CallOpts, _kmsID, prefix)
}

// GetKMSInfo is a free data retrieval call binding the contract method 0x268bfac4.
//
// Solidity: function getKMSInfo(string _kmsID, bytes prefix) constant returns(string, string)
func (_IKmsSpace *IKmsSpaceCallerSession) GetKMSInfo(_kmsID string, prefix []byte) (string, string, error) {
	return _IKmsSpace.Contract.GetKMSInfo(&_IKmsSpace.CallOpts, _kmsID, prefix)
}

// INodeSpaceABI is the input ABI used to generate the binding from.
const INodeSpaceABI = "[{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"canNodePublish\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// INodeSpaceFuncSigs maps the 4-byte function signature to its string representation.
var INodeSpaceFuncSigs = map[string]string{
	"26683e14": "canNodePublish(address)",
}

// INodeSpace is an auto generated Go binding around an Ethereum contract.
type INodeSpace struct {
	INodeSpaceCaller     // Read-only binding to the contract
	INodeSpaceTransactor // Write-only binding to the contract
	INodeSpaceFilterer   // Log filterer for contract events
}

// INodeSpaceCaller is an auto generated read-only Go binding around an Ethereum contract.
type INodeSpaceCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// INodeSpaceTransactor is an auto generated write-only Go binding around an Ethereum contract.
type INodeSpaceTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// INodeSpaceFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type INodeSpaceFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// INodeSpaceSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type INodeSpaceSession struct {
	Contract     *INodeSpace       // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// INodeSpaceCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type INodeSpaceCallerSession struct {
	Contract *INodeSpaceCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts     // Call options to use throughout this session
}

// INodeSpaceTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type INodeSpaceTransactorSession struct {
	Contract     *INodeSpaceTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts     // Transaction auth options to use throughout this session
}

// INodeSpaceRaw is an auto generated low-level Go binding around an Ethereum contract.
type INodeSpaceRaw struct {
	Contract *INodeSpace // Generic contract binding to access the raw methods on
}

// INodeSpaceCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type INodeSpaceCallerRaw struct {
	Contract *INodeSpaceCaller // Generic read-only contract binding to access the raw methods on
}

// INodeSpaceTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type INodeSpaceTransactorRaw struct {
	Contract *INodeSpaceTransactor // Generic write-only contract binding to access the raw methods on
}

// NewINodeSpace creates a new instance of INodeSpace, bound to a specific deployed contract.
func NewINodeSpace(address common.Address, backend bind.ContractBackend) (*INodeSpace, error) {
	contract, err := bindINodeSpace(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &INodeSpace{INodeSpaceCaller: INodeSpaceCaller{contract: contract}, INodeSpaceTransactor: INodeSpaceTransactor{contract: contract}, INodeSpaceFilterer: INodeSpaceFilterer{contract: contract}}, nil
}

// NewINodeSpaceCaller creates a new read-only instance of INodeSpace, bound to a specific deployed contract.
func NewINodeSpaceCaller(address common.Address, caller bind.ContractCaller) (*INodeSpaceCaller, error) {
	contract, err := bindINodeSpace(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &INodeSpaceCaller{contract: contract}, nil
}

// NewINodeSpaceTransactor creates a new write-only instance of INodeSpace, bound to a specific deployed contract.
func NewINodeSpaceTransactor(address common.Address, transactor bind.ContractTransactor) (*INodeSpaceTransactor, error) {
	contract, err := bindINodeSpace(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &INodeSpaceTransactor{contract: contract}, nil
}

// NewINodeSpaceFilterer creates a new log filterer instance of INodeSpace, bound to a specific deployed contract.
func NewINodeSpaceFilterer(address common.Address, filterer bind.ContractFilterer) (*INodeSpaceFilterer, error) {
	contract, err := bindINodeSpace(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &INodeSpaceFilterer{contract: contract}, nil
}

// bindINodeSpace binds a generic wrapper to an already deployed contract.
func bindINodeSpace(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(INodeSpaceABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_INodeSpace *INodeSpaceRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _INodeSpace.Contract.INodeSpaceCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_INodeSpace *INodeSpaceRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _INodeSpace.Contract.INodeSpaceTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_INodeSpace *INodeSpaceRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _INodeSpace.Contract.INodeSpaceTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_INodeSpace *INodeSpaceCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _INodeSpace.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_INodeSpace *INodeSpaceTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _INodeSpace.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_INodeSpace *INodeSpaceTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _INodeSpace.Contract.contract.Transact(opts, method, params...)
}

// CanNodePublish is a free data retrieval call binding the contract method 0x26683e14.
//
// Solidity: function canNodePublish(address candidate) constant returns(bool)
func (_INodeSpace *INodeSpaceCaller) CanNodePublish(opts *bind.CallOpts, candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _INodeSpace.contract.Call(opts, out, "canNodePublish", candidate)
	return *ret0, err
}

// CanNodePublish is a free data retrieval call binding the contract method 0x26683e14.
//
// Solidity: function canNodePublish(address candidate) constant returns(bool)
func (_INodeSpace *INodeSpaceSession) CanNodePublish(candidate common.Address) (bool, error) {
	return _INodeSpace.Contract.CanNodePublish(&_INodeSpace.CallOpts, candidate)
}

// CanNodePublish is a free data retrieval call binding the contract method 0x26683e14.
//
// Solidity: function canNodePublish(address candidate) constant returns(bool)
func (_INodeSpace *INodeSpaceCallerSession) CanNodePublish(candidate common.Address) (bool, error) {
	return _INodeSpace.Contract.CanNodePublish(&_INodeSpace.CallOpts, candidate)
}

// IUserSpaceABI is the input ABI used to generate the binding from.
const IUserSpaceABI = "[{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"createUserWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddr\",\"type\":\"address\"}],\"name\":\"userWallets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// IUserSpaceFuncSigs maps the 4-byte function signature to its string representation.
var IUserSpaceFuncSigs = map[string]string{
	"e7cf0c66": "createUserWallet(address)",
	"63e6ffdd": "userWallets(address)",
}

// IUserSpace is an auto generated Go binding around an Ethereum contract.
type IUserSpace struct {
	IUserSpaceCaller     // Read-only binding to the contract
	IUserSpaceTransactor // Write-only binding to the contract
	IUserSpaceFilterer   // Log filterer for contract events
}

// IUserSpaceCaller is an auto generated read-only Go binding around an Ethereum contract.
type IUserSpaceCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IUserSpaceTransactor is an auto generated write-only Go binding around an Ethereum contract.
type IUserSpaceTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IUserSpaceFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type IUserSpaceFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// IUserSpaceSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type IUserSpaceSession struct {
	Contract     *IUserSpace       // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// IUserSpaceCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type IUserSpaceCallerSession struct {
	Contract *IUserSpaceCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts     // Call options to use throughout this session
}

// IUserSpaceTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type IUserSpaceTransactorSession struct {
	Contract     *IUserSpaceTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts     // Transaction auth options to use throughout this session
}

// IUserSpaceRaw is an auto generated low-level Go binding around an Ethereum contract.
type IUserSpaceRaw struct {
	Contract *IUserSpace // Generic contract binding to access the raw methods on
}

// IUserSpaceCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type IUserSpaceCallerRaw struct {
	Contract *IUserSpaceCaller // Generic read-only contract binding to access the raw methods on
}

// IUserSpaceTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type IUserSpaceTransactorRaw struct {
	Contract *IUserSpaceTransactor // Generic write-only contract binding to access the raw methods on
}

// NewIUserSpace creates a new instance of IUserSpace, bound to a specific deployed contract.
func NewIUserSpace(address common.Address, backend bind.ContractBackend) (*IUserSpace, error) {
	contract, err := bindIUserSpace(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &IUserSpace{IUserSpaceCaller: IUserSpaceCaller{contract: contract}, IUserSpaceTransactor: IUserSpaceTransactor{contract: contract}, IUserSpaceFilterer: IUserSpaceFilterer{contract: contract}}, nil
}

// NewIUserSpaceCaller creates a new read-only instance of IUserSpace, bound to a specific deployed contract.
func NewIUserSpaceCaller(address common.Address, caller bind.ContractCaller) (*IUserSpaceCaller, error) {
	contract, err := bindIUserSpace(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &IUserSpaceCaller{contract: contract}, nil
}

// NewIUserSpaceTransactor creates a new write-only instance of IUserSpace, bound to a specific deployed contract.
func NewIUserSpaceTransactor(address common.Address, transactor bind.ContractTransactor) (*IUserSpaceTransactor, error) {
	contract, err := bindIUserSpace(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &IUserSpaceTransactor{contract: contract}, nil
}

// NewIUserSpaceFilterer creates a new log filterer instance of IUserSpace, bound to a specific deployed contract.
func NewIUserSpaceFilterer(address common.Address, filterer bind.ContractFilterer) (*IUserSpaceFilterer, error) {
	contract, err := bindIUserSpace(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &IUserSpaceFilterer{contract: contract}, nil
}

// bindIUserSpace binds a generic wrapper to an already deployed contract.
func bindIUserSpace(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(IUserSpaceABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IUserSpace *IUserSpaceRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _IUserSpace.Contract.IUserSpaceCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IUserSpace *IUserSpaceRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IUserSpace.Contract.IUserSpaceTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IUserSpace *IUserSpaceRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IUserSpace.Contract.IUserSpaceTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_IUserSpace *IUserSpaceCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _IUserSpace.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_IUserSpace *IUserSpaceTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _IUserSpace.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_IUserSpace *IUserSpaceTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _IUserSpace.Contract.contract.Transact(opts, method, params...)
}

// UserWallets is a free data retrieval call binding the contract method 0x63e6ffdd.
//
// Solidity: function userWallets(address _userAddr) constant returns(address)
func (_IUserSpace *IUserSpaceCaller) UserWallets(opts *bind.CallOpts, _userAddr common.Address) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _IUserSpace.contract.Call(opts, out, "userWallets", _userAddr)
	return *ret0, err
}

// UserWallets is a free data retrieval call binding the contract method 0x63e6ffdd.
//
// Solidity: function userWallets(address _userAddr) constant returns(address)
func (_IUserSpace *IUserSpaceSession) UserWallets(_userAddr common.Address) (common.Address, error) {
	return _IUserSpace.Contract.UserWallets(&_IUserSpace.CallOpts, _userAddr)
}

// UserWallets is a free data retrieval call binding the contract method 0x63e6ffdd.
//
// Solidity: function userWallets(address _userAddr) constant returns(address)
func (_IUserSpace *IUserSpaceCallerSession) UserWallets(_userAddr common.Address) (common.Address, error) {
	return _IUserSpace.Contract.UserWallets(&_IUserSpace.CallOpts, _userAddr)
}

// CreateUserWallet is a paid mutator transaction binding the contract method 0xe7cf0c66.
//
// Solidity: function createUserWallet(address _user) returns(address)
func (_IUserSpace *IUserSpaceTransactor) CreateUserWallet(opts *bind.TransactOpts, _user common.Address) (*types.Transaction, error) {
	return _IUserSpace.contract.Transact(opts, "createUserWallet", _user)
}

// CreateUserWallet is a paid mutator transaction binding the contract method 0xe7cf0c66.
//
// Solidity: function createUserWallet(address _user) returns(address)
func (_IUserSpace *IUserSpaceSession) CreateUserWallet(_user common.Address) (*types.Transaction, error) {
	return _IUserSpace.Contract.CreateUserWallet(&_IUserSpace.TransactOpts, _user)
}

// CreateUserWallet is a paid mutator transaction binding the contract method 0xe7cf0c66.
//
// Solidity: function createUserWallet(address _user) returns(address)
func (_IUserSpace *IUserSpaceTransactorSession) CreateUserWallet(_user common.Address) (*types.Transaction, error) {
	return _IUserSpace.Contract.CreateUserWallet(&_IUserSpace.TransactOpts, _user)
}

// MetaObjectABI is the input ABI used to generate the binding from.
const MetaObjectABI = "[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"ObjectMetaChanged\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentSpace\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"getMeta\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"putMeta\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newCreator\",\"type\":\"address\"}],\"name\":\"transferCreatorship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"versionAPI\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// MetaObjectFuncSigs maps the 4-byte function signature to its string representation.
var MetaObjectFuncSigs = map[string]string{
	"af570c04": "contentSpace()",
	"02d05d3f": "creator()",
	"ac55c906": "getMeta(bytes)",
	"24d7806c": "isAdmin(address)",
	"41c0e1b5": "kill()",
	"8da5cb5b": "owner()",
	"e542b7cb": "putMeta(bytes,bytes)",
	"6d2e4b1b": "transferCreatorship(address)",
	"f2fde38b": "transferOwnership(address)",
	"54fd4d50": "version()",
	"5f4fcae1": "versionAPI()",
}

// MetaObjectBin is the compiled bytecode used for deploying new contracts.
var MetaObjectBin = "0x60806040527f4f776e61626c653230323030393238313130303030504f000000000000000000600055620332e360ec1b600155600280546001600160a01b031990811632179091556003805490911633179055610a26806100616000396000f3fe60806040526004361061009c5760003560e01c80636d2e4b1b116100645780636d2e4b1b146101675780638da5cb5b1461019a578063ac55c906146101af578063af570c04146102d7578063e542b7cb146102ec578063f2fde38b146104265761009c565b806302d05d3f1461009e57806324d7806c146100cf57806341c0e1b51461011657806354fd4d501461012b5780635f4fcae114610152575b005b3480156100aa57600080fd5b506100b3610459565b604080516001600160a01b039092168252519081900360200190f35b3480156100db57600080fd5b50610102600480360360208110156100f257600080fd5b50356001600160a01b0316610468565b604080519115158252519081900360200190f35b34801561012257600080fd5b5061009c610492565b34801561013757600080fd5b506101406104b7565b60408051918252519081900360200190f35b34801561015e57600080fd5b506101406104bd565b34801561017357600080fd5b5061009c6004803603602081101561018a57600080fd5b50356001600160a01b03166104c3565b3480156101a657600080fd5b506100b361050f565b3480156101bb57600080fd5b50610262600480360360208110156101d257600080fd5b8101906020810181356401000000008111156101ed57600080fd5b8201836020820111156101ff57600080fd5b8035906020019184600183028401116401000000008311171561022157600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061051e945050505050565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561029c578181015183820152602001610284565b50505050905090810190601f1680156102c95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102e357600080fd5b506100b36106c5565b3480156102f857600080fd5b5061009c6004803603604081101561030f57600080fd5b81019060208101813564010000000081111561032a57600080fd5b82018360208201111561033c57600080fd5b8035906020019184600183028401116401000000008311171561035e57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156103b157600080fd5b8201836020820111156103c357600080fd5b803590602001918460018302840111640100000000831117156103e557600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506106d4945050505050565b34801561043257600080fd5b5061009c6004803603602081101561044957600080fd5b50356001600160a01b03166108c3565b6002546001600160a01b031681565b6003546000906001600160a01b03838116911614156104895750600161048d565b5060005b919050565b6003546001600160a01b031633146104a957600080fd5b6003546001600160a01b0316ff5b60005481565b60015481565b6002546001600160a01b031633146104da57600080fd5b6001600160a01b0381166104ed57600080fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031681565b606060208251116105d35781518083015160008181526005602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845293949390918301828280156105c55780601f1061059a576101008083540402835291602001916105c5565b820191906000526020600020905b8154815290600101906020018083116105a857829003601f168201915b50505050509250505061048d565b6006826040518082805190602001908083835b602083106106055780518252601f1990920191602091820191016105e6565b518151600019602094850361010090810a820192831692199390931691909117909252949092019687526040805197889003820188208054601f60026001831615909802909501169590950492830182900482028801820190528187529294509250508301828280156106b95780601f1061068e576101008083540402835291602001916106b9565b820191906000526020600020905b81548152906001019060200180831161069c57829003601f168201915b50505050509050919050565b6004546001600160a01b031681565b6106dd33610468565b6106e657600080fd5b602082511161073e57815180830151600081815260056020526040812091929161070f9161090f565b825115610737576000828152600560209081526040909120845161073592860190610956565b505b5050610826565b6006826040518082805190602001908083835b602083106107705780518252601f199092019160209182019101610751565b51815160209384036101000a600019018019909216911617905292019485525060405193849003019092206107a992509050600061090f565b80511561082657806006836040518082805190602001908083835b602083106107e35780518252601f1990920191602091820191016107c4565b51815160209384036101000a600019018019909216911617905292019485525060405193849003810190932084516108249591949190910192509050610956565b505b7fe2b310ec9dabdc05229a748e07666c3bc9c46c6ef465cce30d0aa3aa64a0644c826040518080602001828103825283818151815260200191508051906020019080838360005b8381101561088557818101518382015260200161086d565b50505050905090810190601f1680156108b25780820380516001836020036101000a031916815260200191505b509250505060405180910390a15050565b6003546001600160a01b031633146108da57600080fd5b6001600160a01b0381166108ed57600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b50805460018160011615610100020316600290046000825580601f106109355750610953565b601f01602090049060005260206000209081019061095391906109d4565b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061099757805160ff19168380011785556109c4565b828001600101855582156109c4579182015b828111156109c45782518255916020019190600101906109a9565b506109d09291506109d4565b5090565b6109ee91905b808211156109d057600081556001016109da565b9056fea265627a7a72315820586f41f4a584cf318f003e1b4cdd66436f08b8d5ca68aad39ce326311a42b11664736f6c63430005110032"

// DeployMetaObject deploys a new Ethereum contract, binding an instance of MetaObject to it.
func DeployMetaObject(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *MetaObject, error) {
	parsed, err := abi.JSON(strings.NewReader(MetaObjectABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(MetaObjectBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &MetaObject{MetaObjectCaller: MetaObjectCaller{contract: contract}, MetaObjectTransactor: MetaObjectTransactor{contract: contract}, MetaObjectFilterer: MetaObjectFilterer{contract: contract}}, nil
}

// MetaObject is an auto generated Go binding around an Ethereum contract.
type MetaObject struct {
	MetaObjectCaller     // Read-only binding to the contract
	MetaObjectTransactor // Write-only binding to the contract
	MetaObjectFilterer   // Log filterer for contract events
}

// MetaObjectCaller is an auto generated read-only Go binding around an Ethereum contract.
type MetaObjectCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// MetaObjectTransactor is an auto generated write-only Go binding around an Ethereum contract.
type MetaObjectTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// MetaObjectFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type MetaObjectFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// MetaObjectSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type MetaObjectSession struct {
	Contract     *MetaObject       // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// MetaObjectCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type MetaObjectCallerSession struct {
	Contract *MetaObjectCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts     // Call options to use throughout this session
}

// MetaObjectTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type MetaObjectTransactorSession struct {
	Contract     *MetaObjectTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts     // Transaction auth options to use throughout this session
}

// MetaObjectRaw is an auto generated low-level Go binding around an Ethereum contract.
type MetaObjectRaw struct {
	Contract *MetaObject // Generic contract binding to access the raw methods on
}

// MetaObjectCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type MetaObjectCallerRaw struct {
	Contract *MetaObjectCaller // Generic read-only contract binding to access the raw methods on
}

// MetaObjectTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type MetaObjectTransactorRaw struct {
	Contract *MetaObjectTransactor // Generic write-only contract binding to access the raw methods on
}

// NewMetaObject creates a new instance of MetaObject, bound to a specific deployed contract.
func NewMetaObject(address common.Address, backend bind.ContractBackend) (*MetaObject, error) {
	contract, err := bindMetaObject(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &MetaObject{MetaObjectCaller: MetaObjectCaller{contract: contract}, MetaObjectTransactor: MetaObjectTransactor{contract: contract}, MetaObjectFilterer: MetaObjectFilterer{contract: contract}}, nil
}

// NewMetaObjectCaller creates a new read-only instance of MetaObject, bound to a specific deployed contract.
func NewMetaObjectCaller(address common.Address, caller bind.ContractCaller) (*MetaObjectCaller, error) {
	contract, err := bindMetaObject(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &MetaObjectCaller{contract: contract}, nil
}

// NewMetaObjectTransactor creates a new write-only instance of MetaObject, bound to a specific deployed contract.
func NewMetaObjectTransactor(address common.Address, transactor bind.ContractTransactor) (*MetaObjectTransactor, error) {
	contract, err := bindMetaObject(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &MetaObjectTransactor{contract: contract}, nil
}

// NewMetaObjectFilterer creates a new log filterer instance of MetaObject, bound to a specific deployed contract.
func NewMetaObjectFilterer(address common.Address, filterer bind.ContractFilterer) (*MetaObjectFilterer, error) {
	contract, err := bindMetaObject(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &MetaObjectFilterer{contract: contract}, nil
}

// bindMetaObject binds a generic wrapper to an already deployed contract.
func bindMetaObject(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(MetaObjectABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_MetaObject *MetaObjectRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _MetaObject.Contract.MetaObjectCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_MetaObject *MetaObjectRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _MetaObject.Contract.MetaObjectTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_MetaObject *MetaObjectRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _MetaObject.Contract.MetaObjectTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_MetaObject *MetaObjectCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _MetaObject.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_MetaObject *MetaObjectTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _MetaObject.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_MetaObject *MetaObjectTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _MetaObject.Contract.contract.Transact(opts, method, params...)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_MetaObject *MetaObjectCaller) ContentSpace(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _MetaObject.contract.Call(opts, out, "contentSpace")
	return *ret0, err
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_MetaObject *MetaObjectSession) ContentSpace() (common.Address, error) {
	return _MetaObject.Contract.ContentSpace(&_MetaObject.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_MetaObject *MetaObjectCallerSession) ContentSpace() (common.Address, error) {
	return _MetaObject.Contract.ContentSpace(&_MetaObject.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_MetaObject *MetaObjectCaller) Creator(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _MetaObject.contract.Call(opts, out, "creator")
	return *ret0, err
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_MetaObject *MetaObjectSession) Creator() (common.Address, error) {
	return _MetaObject.Contract.Creator(&_MetaObject.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_MetaObject *MetaObjectCallerSession) Creator() (common.Address, error) {
	return _MetaObject.Contract.Creator(&_MetaObject.CallOpts)
}

// GetMeta is a free data retrieval call binding the contract method 0xac55c906.
//
// Solidity: function getMeta(bytes key) constant returns(bytes)
func (_MetaObject *MetaObjectCaller) GetMeta(opts *bind.CallOpts, key []byte) ([]byte, error) {
	var (
		ret0 = new([]byte)
	)
	out := ret0
	err := _MetaObject.contract.Call(opts, out, "getMeta", key)
	return *ret0, err
}

// GetMeta is a free data retrieval call binding the contract method 0xac55c906.
//
// Solidity: function getMeta(bytes key) constant returns(bytes)
func (_MetaObject *MetaObjectSession) GetMeta(key []byte) ([]byte, error) {
	return _MetaObject.Contract.GetMeta(&_MetaObject.CallOpts, key)
}

// GetMeta is a free data retrieval call binding the contract method 0xac55c906.
//
// Solidity: function getMeta(bytes key) constant returns(bytes)
func (_MetaObject *MetaObjectCallerSession) GetMeta(key []byte) ([]byte, error) {
	return _MetaObject.Contract.GetMeta(&_MetaObject.CallOpts, key)
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(address _candidate) constant returns(bool)
func (_MetaObject *MetaObjectCaller) IsAdmin(opts *bind.CallOpts, _candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _MetaObject.contract.Call(opts, out, "isAdmin", _candidate)
	return *ret0, err
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(address _candidate) constant returns(bool)
func (_MetaObject *MetaObjectSession) IsAdmin(_candidate common.Address) (bool, error) {
	return _MetaObject.Contract.IsAdmin(&_MetaObject.CallOpts, _candidate)
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(address _candidate) constant returns(bool)
func (_MetaObject *MetaObjectCallerSession) IsAdmin(_candidate common.Address) (bool, error) {
	return _MetaObject.Contract.IsAdmin(&_MetaObject.CallOpts, _candidate)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_MetaObject *MetaObjectCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _MetaObject.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_MetaObject *MetaObjectSession) Owner() (common.Address, error) {
	return _MetaObject.Contract.Owner(&_MetaObject.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_MetaObject *MetaObjectCallerSession) Owner() (common.Address, error) {
	return _MetaObject.Contract.Owner(&_MetaObject.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_MetaObject *MetaObjectCaller) Version(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _MetaObject.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_MetaObject *MetaObjectSession) Version() ([32]byte, error) {
	return _MetaObject.Contract.Version(&_MetaObject.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_MetaObject *MetaObjectCallerSession) Version() ([32]byte, error) {
	return _MetaObject.Contract.Version(&_MetaObject.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_MetaObject *MetaObjectCaller) VersionAPI(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _MetaObject.contract.Call(opts, out, "versionAPI")
	return *ret0, err
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_MetaObject *MetaObjectSession) VersionAPI() ([32]byte, error) {
	return _MetaObject.Contract.VersionAPI(&_MetaObject.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_MetaObject *MetaObjectCallerSession) VersionAPI() ([32]byte, error) {
	return _MetaObject.Contract.VersionAPI(&_MetaObject.CallOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_MetaObject *MetaObjectTransactor) Kill(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _MetaObject.contract.Transact(opts, "kill")
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_MetaObject *MetaObjectSession) Kill() (*types.Transaction, error) {
	return _MetaObject.Contract.Kill(&_MetaObject.TransactOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_MetaObject *MetaObjectTransactorSession) Kill() (*types.Transaction, error) {
	return _MetaObject.Contract.Kill(&_MetaObject.TransactOpts)
}

// PutMeta is a paid mutator transaction binding the contract method 0xe542b7cb.
//
// Solidity: function putMeta(bytes key, bytes value) returns()
func (_MetaObject *MetaObjectTransactor) PutMeta(opts *bind.TransactOpts, key []byte, value []byte) (*types.Transaction, error) {
	return _MetaObject.contract.Transact(opts, "putMeta", key, value)
}

// PutMeta is a paid mutator transaction binding the contract method 0xe542b7cb.
//
// Solidity: function putMeta(bytes key, bytes value) returns()
func (_MetaObject *MetaObjectSession) PutMeta(key []byte, value []byte) (*types.Transaction, error) {
	return _MetaObject.Contract.PutMeta(&_MetaObject.TransactOpts, key, value)
}

// PutMeta is a paid mutator transaction binding the contract method 0xe542b7cb.
//
// Solidity: function putMeta(bytes key, bytes value) returns()
func (_MetaObject *MetaObjectTransactorSession) PutMeta(key []byte, value []byte) (*types.Transaction, error) {
	return _MetaObject.Contract.PutMeta(&_MetaObject.TransactOpts, key, value)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_MetaObject *MetaObjectTransactor) TransferCreatorship(opts *bind.TransactOpts, newCreator common.Address) (*types.Transaction, error) {
	return _MetaObject.contract.Transact(opts, "transferCreatorship", newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_MetaObject *MetaObjectSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _MetaObject.Contract.TransferCreatorship(&_MetaObject.TransactOpts, newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_MetaObject *MetaObjectTransactorSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _MetaObject.Contract.TransferCreatorship(&_MetaObject.TransactOpts, newCreator)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_MetaObject *MetaObjectTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _MetaObject.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_MetaObject *MetaObjectSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _MetaObject.Contract.TransferOwnership(&_MetaObject.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_MetaObject *MetaObjectTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _MetaObject.Contract.TransferOwnership(&_MetaObject.TransactOpts, newOwner)
}

// MetaObjectObjectMetaChangedIterator is returned from FilterObjectMetaChanged and is used to iterate over the raw logs and unpacked data for ObjectMetaChanged events raised by the MetaObject contract.
type MetaObjectObjectMetaChangedIterator struct {
	Event *MetaObjectObjectMetaChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *MetaObjectObjectMetaChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(MetaObjectObjectMetaChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(MetaObjectObjectMetaChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *MetaObjectObjectMetaChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *MetaObjectObjectMetaChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// MetaObjectObjectMetaChanged represents a ObjectMetaChanged event raised by the MetaObject contract.
type MetaObjectObjectMetaChanged struct {
	Key []byte
	Raw types.Log // Blockchain specific contextual infos
}

// FilterObjectMetaChanged is a free log retrieval operation binding the contract event 0xe2b310ec9dabdc05229a748e07666c3bc9c46c6ef465cce30d0aa3aa64a0644c.
//
// Solidity: event ObjectMetaChanged(bytes key)
func (_MetaObject *MetaObjectFilterer) FilterObjectMetaChanged(opts *bind.FilterOpts) (*MetaObjectObjectMetaChangedIterator, error) {

	logs, sub, err := _MetaObject.contract.FilterLogs(opts, "ObjectMetaChanged")
	if err != nil {
		return nil, err
	}
	return &MetaObjectObjectMetaChangedIterator{contract: _MetaObject.contract, event: "ObjectMetaChanged", logs: logs, sub: sub}, nil
}

// WatchObjectMetaChanged is a free log subscription operation binding the contract event 0xe2b310ec9dabdc05229a748e07666c3bc9c46c6ef465cce30d0aa3aa64a0644c.
//
// Solidity: event ObjectMetaChanged(bytes key)
func (_MetaObject *MetaObjectFilterer) WatchObjectMetaChanged(opts *bind.WatchOpts, sink chan<- *MetaObjectObjectMetaChanged) (event.Subscription, error) {

	logs, sub, err := _MetaObject.contract.WatchLogs(opts, "ObjectMetaChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(MetaObjectObjectMetaChanged)
				if err := _MetaObject.contract.UnpackLog(event, "ObjectMetaChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseObjectMetaChanged is a log parse operation binding the contract event 0xe2b310ec9dabdc05229a748e07666c3bc9c46c6ef465cce30d0aa3aa64a0644c.
//
// Solidity: event ObjectMetaChanged(bytes key)
func (_MetaObject *MetaObjectFilterer) ParseObjectMetaChanged(log types.Log) (*MetaObjectObjectMetaChanged, error) {
	event := new(MetaObjectObjectMetaChanged)
	if err := _MetaObject.contract.UnpackLog(event, "ObjectMetaChanged", log); err != nil {
		return nil, err
	}
	return event, nil
}

// NodeABI is the input ABI used to generate the binding from.
const NodeABI = "[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"}],\"name\":\"LogAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"b\",\"type\":\"bool\"}],\"name\":\"LogBool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"b\",\"type\":\"bytes32\"}],\"name\":\"LogBytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"u\",\"type\":\"int256\"}],\"name\":\"LogInt256\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"u\",\"type\":\"uint256\"}],\"name\":\"LogUint256\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentSpace\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"name\":\"log\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newCreator\",\"type\":\"address\"}],\"name\":\"transferCreatorship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"versionAPI\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// NodeFuncSigs maps the 4-byte function signature to its string representation.
var NodeFuncSigs = map[string]string{
	"af570c04": "contentSpace()",
	"02d05d3f": "creator()",
	"41c0e1b5": "kill()",
	"41304fac": "log(string)",
	"8da5cb5b": "owner()",
	"6d2e4b1b": "transferCreatorship(address)",
	"f2fde38b": "transferOwnership(address)",
	"54fd4d50": "version()",
	"5f4fcae1": "versionAPI()",
}

// NodeBin is the compiled bytecode used for deploying new contracts.
var NodeBin = "0x60806040527f4f776e61626c653230323030393238313130303030504f000000000000000000600055620332e360ec1b6001557f4e6f646532303139303331353130353130304d4c000000000000000000000000600555600280546001600160a01b03199081163217909155600380549091163317905561042b806100856000396000f3fe6080604052600436106100865760003560e01c80635f4fcae1116100595780635f4fcae1146101a85780636d2e4b1b146101bd5780638da5cb5b146101f0578063af570c0414610205578063f2fde38b1461021a57610086565b806302d05d3f1461008857806341304fac146100b957806341c0e1b51461016c57806354fd4d5014610181575b005b34801561009457600080fd5b5061009d61024d565b604080516001600160a01b039092168252519081900360200190f35b3480156100c557600080fd5b50610086600480360360208110156100dc57600080fd5b8101906020810181356401000000008111156100f757600080fd5b82018360208201111561010957600080fd5b8035906020019184600183028401116401000000008311171561012b57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061025c945050505050565b34801561017857600080fd5b5061008661030f565b34801561018d57600080fd5b50610196610334565b60408051918252519081900360200190f35b3480156101b457600080fd5b5061019661033a565b3480156101c957600080fd5b50610086600480360360208110156101e057600080fd5b50356001600160a01b0316610340565b3480156101fc57600080fd5b5061009d61038c565b34801561021157600080fd5b5061009d61039b565b34801561022657600080fd5b506100866004803603602081101561023d57600080fd5b50356001600160a01b03166103aa565b6002546001600160a01b031681565b6003546001600160a01b0316331461027357600080fd5b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab816040518080602001828103825283818151815260200191508051906020019080838360005b838110156102d25781810151838201526020016102ba565b50505050905090810190601f1680156102ff5780820380516001836020036101000a031916815260200191505b509250505060405180910390a150565b6003546001600160a01b0316331461032657600080fd5b6003546001600160a01b0316ff5b60055481565b60015481565b6002546001600160a01b0316331461035757600080fd5b6001600160a01b03811661036a57600080fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031681565b6004546001600160a01b031681565b6003546001600160a01b031633146103c157600080fd5b6001600160a01b0381166103d457600080fd5b600380546001600160a01b0319166001600160a01b039290921691909117905556fea265627a7a7231582008295c1d62b3d258e2c4c617dfdd5a680ac83047500b517b4e2ad8b5d049daa264736f6c63430005110032"

// DeployNode deploys a new Ethereum contract, binding an instance of Node to it.
func DeployNode(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Node, error) {
	parsed, err := abi.JSON(strings.NewReader(NodeABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(NodeBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Node{NodeCaller: NodeCaller{contract: contract}, NodeTransactor: NodeTransactor{contract: contract}, NodeFilterer: NodeFilterer{contract: contract}}, nil
}

// Node is an auto generated Go binding around an Ethereum contract.
type Node struct {
	NodeCaller     // Read-only binding to the contract
	NodeTransactor // Write-only binding to the contract
	NodeFilterer   // Log filterer for contract events
}

// NodeCaller is an auto generated read-only Go binding around an Ethereum contract.
type NodeCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// NodeTransactor is an auto generated write-only Go binding around an Ethereum contract.
type NodeTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// NodeFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type NodeFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// NodeSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type NodeSession struct {
	Contract     *Node             // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// NodeCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type NodeCallerSession struct {
	Contract *NodeCaller   // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// NodeTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type NodeTransactorSession struct {
	Contract     *NodeTransactor   // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// NodeRaw is an auto generated low-level Go binding around an Ethereum contract.
type NodeRaw struct {
	Contract *Node // Generic contract binding to access the raw methods on
}

// NodeCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type NodeCallerRaw struct {
	Contract *NodeCaller // Generic read-only contract binding to access the raw methods on
}

// NodeTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type NodeTransactorRaw struct {
	Contract *NodeTransactor // Generic write-only contract binding to access the raw methods on
}

// NewNode creates a new instance of Node, bound to a specific deployed contract.
func NewNode(address common.Address, backend bind.ContractBackend) (*Node, error) {
	contract, err := bindNode(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Node{NodeCaller: NodeCaller{contract: contract}, NodeTransactor: NodeTransactor{contract: contract}, NodeFilterer: NodeFilterer{contract: contract}}, nil
}

// NewNodeCaller creates a new read-only instance of Node, bound to a specific deployed contract.
func NewNodeCaller(address common.Address, caller bind.ContractCaller) (*NodeCaller, error) {
	contract, err := bindNode(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &NodeCaller{contract: contract}, nil
}

// NewNodeTransactor creates a new write-only instance of Node, bound to a specific deployed contract.
func NewNodeTransactor(address common.Address, transactor bind.ContractTransactor) (*NodeTransactor, error) {
	contract, err := bindNode(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &NodeTransactor{contract: contract}, nil
}

// NewNodeFilterer creates a new log filterer instance of Node, bound to a specific deployed contract.
func NewNodeFilterer(address common.Address, filterer bind.ContractFilterer) (*NodeFilterer, error) {
	contract, err := bindNode(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &NodeFilterer{contract: contract}, nil
}

// bindNode binds a generic wrapper to an already deployed contract.
func bindNode(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(NodeABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Node *NodeRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Node.Contract.NodeCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Node *NodeRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Node.Contract.NodeTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Node *NodeRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Node.Contract.NodeTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Node *NodeCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Node.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Node *NodeTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Node.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Node *NodeTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Node.Contract.contract.Transact(opts, method, params...)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_Node *NodeCaller) ContentSpace(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Node.contract.Call(opts, out, "contentSpace")
	return *ret0, err
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_Node *NodeSession) ContentSpace() (common.Address, error) {
	return _Node.Contract.ContentSpace(&_Node.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_Node *NodeCallerSession) ContentSpace() (common.Address, error) {
	return _Node.Contract.ContentSpace(&_Node.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_Node *NodeCaller) Creator(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Node.contract.Call(opts, out, "creator")
	return *ret0, err
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_Node *NodeSession) Creator() (common.Address, error) {
	return _Node.Contract.Creator(&_Node.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_Node *NodeCallerSession) Creator() (common.Address, error) {
	return _Node.Contract.Creator(&_Node.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Node *NodeCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Node.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Node *NodeSession) Owner() (common.Address, error) {
	return _Node.Contract.Owner(&_Node.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Node *NodeCallerSession) Owner() (common.Address, error) {
	return _Node.Contract.Owner(&_Node.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_Node *NodeCaller) Version(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _Node.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_Node *NodeSession) Version() ([32]byte, error) {
	return _Node.Contract.Version(&_Node.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_Node *NodeCallerSession) Version() ([32]byte, error) {
	return _Node.Contract.Version(&_Node.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_Node *NodeCaller) VersionAPI(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _Node.contract.Call(opts, out, "versionAPI")
	return *ret0, err
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_Node *NodeSession) VersionAPI() ([32]byte, error) {
	return _Node.Contract.VersionAPI(&_Node.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_Node *NodeCallerSession) VersionAPI() ([32]byte, error) {
	return _Node.Contract.VersionAPI(&_Node.CallOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_Node *NodeTransactor) Kill(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Node.contract.Transact(opts, "kill")
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_Node *NodeSession) Kill() (*types.Transaction, error) {
	return _Node.Contract.Kill(&_Node.TransactOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_Node *NodeTransactorSession) Kill() (*types.Transaction, error) {
	return _Node.Contract.Kill(&_Node.TransactOpts)
}

// Log is a paid mutator transaction binding the contract method 0x41304fac.
//
// Solidity: function log(string label) returns()
func (_Node *NodeTransactor) Log(opts *bind.TransactOpts, label string) (*types.Transaction, error) {
	return _Node.contract.Transact(opts, "log", label)
}

// Log is a paid mutator transaction binding the contract method 0x41304fac.
//
// Solidity: function log(string label) returns()
func (_Node *NodeSession) Log(label string) (*types.Transaction, error) {
	return _Node.Contract.Log(&_Node.TransactOpts, label)
}

// Log is a paid mutator transaction binding the contract method 0x41304fac.
//
// Solidity: function log(string label) returns()
func (_Node *NodeTransactorSession) Log(label string) (*types.Transaction, error) {
	return _Node.Contract.Log(&_Node.TransactOpts, label)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_Node *NodeTransactor) TransferCreatorship(opts *bind.TransactOpts, newCreator common.Address) (*types.Transaction, error) {
	return _Node.contract.Transact(opts, "transferCreatorship", newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_Node *NodeSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _Node.Contract.TransferCreatorship(&_Node.TransactOpts, newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_Node *NodeTransactorSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _Node.Contract.TransferCreatorship(&_Node.TransactOpts, newCreator)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Node *NodeTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _Node.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Node *NodeSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _Node.Contract.TransferOwnership(&_Node.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Node *NodeTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _Node.Contract.TransferOwnership(&_Node.TransactOpts, newOwner)
}

// NodeLogIterator is returned from FilterLog and is used to iterate over the raw logs and unpacked data for Log events raised by the Node contract.
type NodeLogIterator struct {
	Event *NodeLog // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *NodeLogIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(NodeLog)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(NodeLog)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *NodeLogIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *NodeLogIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// NodeLog represents a Log event raised by the Node contract.
type NodeLog struct {
	Label string
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterLog is a free log retrieval operation binding the contract event 0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab.
//
// Solidity: event Log(string label)
func (_Node *NodeFilterer) FilterLog(opts *bind.FilterOpts) (*NodeLogIterator, error) {

	logs, sub, err := _Node.contract.FilterLogs(opts, "Log")
	if err != nil {
		return nil, err
	}
	return &NodeLogIterator{contract: _Node.contract, event: "Log", logs: logs, sub: sub}, nil
}

// WatchLog is a free log subscription operation binding the contract event 0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab.
//
// Solidity: event Log(string label)
func (_Node *NodeFilterer) WatchLog(opts *bind.WatchOpts, sink chan<- *NodeLog) (event.Subscription, error) {

	logs, sub, err := _Node.contract.WatchLogs(opts, "Log")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(NodeLog)
				if err := _Node.contract.UnpackLog(event, "Log", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseLog is a log parse operation binding the contract event 0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab.
//
// Solidity: event Log(string label)
func (_Node *NodeFilterer) ParseLog(log types.Log) (*NodeLog, error) {
	event := new(NodeLog)
	if err := _Node.contract.UnpackLog(event, "Log", log); err != nil {
		return nil, err
	}
	return event, nil
}

// NodeLogAddressIterator is returned from FilterLogAddress and is used to iterate over the raw logs and unpacked data for LogAddress events raised by the Node contract.
type NodeLogAddressIterator struct {
	Event *NodeLogAddress // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *NodeLogAddressIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(NodeLogAddress)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(NodeLogAddress)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *NodeLogAddressIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *NodeLogAddressIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// NodeLogAddress represents a LogAddress event raised by the Node contract.
type NodeLogAddress struct {
	Label string
	A     common.Address
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterLogAddress is a free log retrieval operation binding the contract event 0x62ddffe5b5108385f7a590f100e1ee414ad9551a31f089e64e82998440785e1e.
//
// Solidity: event LogAddress(string label, address a)
func (_Node *NodeFilterer) FilterLogAddress(opts *bind.FilterOpts) (*NodeLogAddressIterator, error) {

	logs, sub, err := _Node.contract.FilterLogs(opts, "LogAddress")
	if err != nil {
		return nil, err
	}
	return &NodeLogAddressIterator{contract: _Node.contract, event: "LogAddress", logs: logs, sub: sub}, nil
}

// WatchLogAddress is a free log subscription operation binding the contract event 0x62ddffe5b5108385f7a590f100e1ee414ad9551a31f089e64e82998440785e1e.
//
// Solidity: event LogAddress(string label, address a)
func (_Node *NodeFilterer) WatchLogAddress(opts *bind.WatchOpts, sink chan<- *NodeLogAddress) (event.Subscription, error) {

	logs, sub, err := _Node.contract.WatchLogs(opts, "LogAddress")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(NodeLogAddress)
				if err := _Node.contract.UnpackLog(event, "LogAddress", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseLogAddress is a log parse operation binding the contract event 0x62ddffe5b5108385f7a590f100e1ee414ad9551a31f089e64e82998440785e1e.
//
// Solidity: event LogAddress(string label, address a)
func (_Node *NodeFilterer) ParseLogAddress(log types.Log) (*NodeLogAddress, error) {
	event := new(NodeLogAddress)
	if err := _Node.contract.UnpackLog(event, "LogAddress", log); err != nil {
		return nil, err
	}
	return event, nil
}

// NodeLogBoolIterator is returned from FilterLogBool and is used to iterate over the raw logs and unpacked data for LogBool events raised by the Node contract.
type NodeLogBoolIterator struct {
	Event *NodeLogBool // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *NodeLogBoolIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(NodeLogBool)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(NodeLogBool)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *NodeLogBoolIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *NodeLogBoolIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// NodeLogBool represents a LogBool event raised by the Node contract.
type NodeLogBool struct {
	Label string
	B     bool
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterLogBool is a free log retrieval operation binding the contract event 0x4c34c2f9a78632f29fa59aaed5514cb742fd9fbcfd7ccc2c03c85f2bbc621c47.
//
// Solidity: event LogBool(string label, bool b)
func (_Node *NodeFilterer) FilterLogBool(opts *bind.FilterOpts) (*NodeLogBoolIterator, error) {

	logs, sub, err := _Node.contract.FilterLogs(opts, "LogBool")
	if err != nil {
		return nil, err
	}
	return &NodeLogBoolIterator{contract: _Node.contract, event: "LogBool", logs: logs, sub: sub}, nil
}

// WatchLogBool is a free log subscription operation binding the contract event 0x4c34c2f9a78632f29fa59aaed5514cb742fd9fbcfd7ccc2c03c85f2bbc621c47.
//
// Solidity: event LogBool(string label, bool b)
func (_Node *NodeFilterer) WatchLogBool(opts *bind.WatchOpts, sink chan<- *NodeLogBool) (event.Subscription, error) {

	logs, sub, err := _Node.contract.WatchLogs(opts, "LogBool")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(NodeLogBool)
				if err := _Node.contract.UnpackLog(event, "LogBool", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseLogBool is a log parse operation binding the contract event 0x4c34c2f9a78632f29fa59aaed5514cb742fd9fbcfd7ccc2c03c85f2bbc621c47.
//
// Solidity: event LogBool(string label, bool b)
func (_Node *NodeFilterer) ParseLogBool(log types.Log) (*NodeLogBool, error) {
	event := new(NodeLogBool)
	if err := _Node.contract.UnpackLog(event, "LogBool", log); err != nil {
		return nil, err
	}
	return event, nil
}

// NodeLogBytes32Iterator is returned from FilterLogBytes32 and is used to iterate over the raw logs and unpacked data for LogBytes32 events raised by the Node contract.
type NodeLogBytes32Iterator struct {
	Event *NodeLogBytes32 // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *NodeLogBytes32Iterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(NodeLogBytes32)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(NodeLogBytes32)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *NodeLogBytes32Iterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *NodeLogBytes32Iterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// NodeLogBytes32 represents a LogBytes32 event raised by the Node contract.
type NodeLogBytes32 struct {
	Label string
	B     [32]byte
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterLogBytes32 is a free log retrieval operation binding the contract event 0x02d93529bba9d141e5e06733c52c7e6fbcb1149586adb5c24064b522ab26f1d7.
//
// Solidity: event LogBytes32(string label, bytes32 b)
func (_Node *NodeFilterer) FilterLogBytes32(opts *bind.FilterOpts) (*NodeLogBytes32Iterator, error) {

	logs, sub, err := _Node.contract.FilterLogs(opts, "LogBytes32")
	if err != nil {
		return nil, err
	}
	return &NodeLogBytes32Iterator{contract: _Node.contract, event: "LogBytes32", logs: logs, sub: sub}, nil
}

// WatchLogBytes32 is a free log subscription operation binding the contract event 0x02d93529bba9d141e5e06733c52c7e6fbcb1149586adb5c24064b522ab26f1d7.
//
// Solidity: event LogBytes32(string label, bytes32 b)
func (_Node *NodeFilterer) WatchLogBytes32(opts *bind.WatchOpts, sink chan<- *NodeLogBytes32) (event.Subscription, error) {

	logs, sub, err := _Node.contract.WatchLogs(opts, "LogBytes32")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(NodeLogBytes32)
				if err := _Node.contract.UnpackLog(event, "LogBytes32", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseLogBytes32 is a log parse operation binding the contract event 0x02d93529bba9d141e5e06733c52c7e6fbcb1149586adb5c24064b522ab26f1d7.
//
// Solidity: event LogBytes32(string label, bytes32 b)
func (_Node *NodeFilterer) ParseLogBytes32(log types.Log) (*NodeLogBytes32, error) {
	event := new(NodeLogBytes32)
	if err := _Node.contract.UnpackLog(event, "LogBytes32", log); err != nil {
		return nil, err
	}
	return event, nil
}

// NodeLogInt256Iterator is returned from FilterLogInt256 and is used to iterate over the raw logs and unpacked data for LogInt256 events raised by the Node contract.
type NodeLogInt256Iterator struct {
	Event *NodeLogInt256 // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *NodeLogInt256Iterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(NodeLogInt256)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(NodeLogInt256)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *NodeLogInt256Iterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *NodeLogInt256Iterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// NodeLogInt256 represents a LogInt256 event raised by the Node contract.
type NodeLogInt256 struct {
	Label string
	U     *big.Int
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterLogInt256 is a free log retrieval operation binding the contract event 0x3d9b341774178bb033613e3a7a1cadb2244b3bcbb1372905d2ba24dca38aeb22.
//
// Solidity: event LogInt256(string label, int256 u)
func (_Node *NodeFilterer) FilterLogInt256(opts *bind.FilterOpts) (*NodeLogInt256Iterator, error) {

	logs, sub, err := _Node.contract.FilterLogs(opts, "LogInt256")
	if err != nil {
		return nil, err
	}
	return &NodeLogInt256Iterator{contract: _Node.contract, event: "LogInt256", logs: logs, sub: sub}, nil
}

// WatchLogInt256 is a free log subscription operation binding the contract event 0x3d9b341774178bb033613e3a7a1cadb2244b3bcbb1372905d2ba24dca38aeb22.
//
// Solidity: event LogInt256(string label, int256 u)
func (_Node *NodeFilterer) WatchLogInt256(opts *bind.WatchOpts, sink chan<- *NodeLogInt256) (event.Subscription, error) {

	logs, sub, err := _Node.contract.WatchLogs(opts, "LogInt256")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(NodeLogInt256)
				if err := _Node.contract.UnpackLog(event, "LogInt256", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseLogInt256 is a log parse operation binding the contract event 0x3d9b341774178bb033613e3a7a1cadb2244b3bcbb1372905d2ba24dca38aeb22.
//
// Solidity: event LogInt256(string label, int256 u)
func (_Node *NodeFilterer) ParseLogInt256(log types.Log) (*NodeLogInt256, error) {
	event := new(NodeLogInt256)
	if err := _Node.contract.UnpackLog(event, "LogInt256", log); err != nil {
		return nil, err
	}
	return event, nil
}

// NodeLogUint256Iterator is returned from FilterLogUint256 and is used to iterate over the raw logs and unpacked data for LogUint256 events raised by the Node contract.
type NodeLogUint256Iterator struct {
	Event *NodeLogUint256 // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *NodeLogUint256Iterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(NodeLogUint256)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(NodeLogUint256)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *NodeLogUint256Iterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *NodeLogUint256Iterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// NodeLogUint256 represents a LogUint256 event raised by the Node contract.
type NodeLogUint256 struct {
	Label string
	U     *big.Int
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterLogUint256 is a free log retrieval operation binding the contract event 0x31c369d7029afba34b21369bcf9a6ac132fb2621c34558b914859b768d05232d.
//
// Solidity: event LogUint256(string label, uint256 u)
func (_Node *NodeFilterer) FilterLogUint256(opts *bind.FilterOpts) (*NodeLogUint256Iterator, error) {

	logs, sub, err := _Node.contract.FilterLogs(opts, "LogUint256")
	if err != nil {
		return nil, err
	}
	return &NodeLogUint256Iterator{contract: _Node.contract, event: "LogUint256", logs: logs, sub: sub}, nil
}

// WatchLogUint256 is a free log subscription operation binding the contract event 0x31c369d7029afba34b21369bcf9a6ac132fb2621c34558b914859b768d05232d.
//
// Solidity: event LogUint256(string label, uint256 u)
func (_Node *NodeFilterer) WatchLogUint256(opts *bind.WatchOpts, sink chan<- *NodeLogUint256) (event.Subscription, error) {

	logs, sub, err := _Node.contract.WatchLogs(opts, "LogUint256")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(NodeLogUint256)
				if err := _Node.contract.UnpackLog(event, "LogUint256", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseLogUint256 is a log parse operation binding the contract event 0x31c369d7029afba34b21369bcf9a6ac132fb2621c34558b914859b768d05232d.
//
// Solidity: event LogUint256(string label, uint256 u)
func (_Node *NodeFilterer) ParseLogUint256(log types.Log) (*NodeLogUint256, error) {
	event := new(NodeLogUint256)
	if err := _Node.contract.UnpackLog(event, "LogUint256", log); err != nil {
		return nil, err
	}
	return event, nil
}

// NodeSpaceABI is the input ABI used to generate the binding from.
const NodeSpaceABI = "[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ownerAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nodeAddr\",\"type\":\"address\"}],\"name\":\"AddNode\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"locator\",\"type\":\"bytes\"}],\"name\":\"NodeApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"locator\",\"type\":\"bytes\"}],\"name\":\"NodeSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ownerAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nodeAddr\",\"type\":\"address\"}],\"name\":\"RemoveNode\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeNodeAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeNodeLocators\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nodeAddr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_locator\",\"type\":\"bytes\"}],\"name\":\"addNode\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nodeAddr\",\"type\":\"address\"}],\"name\":\"approveNode\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"candidate\",\"type\":\"address\"}],\"name\":\"canNodePublish\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentSpace\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numActiveNodes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numPendingNodes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pendingNodeAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pendingNodeLocators\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nodeAddr\",\"type\":\"address\"}],\"name\":\"removeNode\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_locator\",\"type\":\"bytes\"}],\"name\":\"submitNode\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newCreator\",\"type\":\"address\"}],\"name\":\"transferCreatorship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"versionAPI\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// NodeSpaceFuncSigs maps the 4-byte function signature to its string representation.
var NodeSpaceFuncSigs = map[string]string{
	"52f82dd8": "activeNodeAddresses(uint256)",
	"5272ae17": "activeNodeLocators(uint256)",
	"64f0f050": "addNode(address,bytes)",
	"dd4c97a0": "approveNode(address)",
	"26683e14": "canNodePublish(address)",
	"af570c04": "contentSpace()",
	"02d05d3f": "creator()",
	"41c0e1b5": "kill()",
	"43f59ec7": "numActiveNodes()",
	"f41a1587": "numPendingNodes()",
	"8da5cb5b": "owner()",
	"6be9514c": "pendingNodeAddresses(uint256)",
	"69e30ff8": "pendingNodeLocators(uint256)",
	"b2b99ec9": "removeNode(address)",
	"160eee74": "submitNode(bytes)",
	"6d2e4b1b": "transferCreatorship(address)",
	"f2fde38b": "transferOwnership(address)",
	"54fd4d50": "version()",
	"5f4fcae1": "versionAPI()",
}

// NodeSpaceBin is the compiled bytecode used for deploying new contracts.
var NodeSpaceBin = ""

// DeployNodeSpace deploys a new Ethereum contract, binding an instance of NodeSpace to it.
func DeployNodeSpace(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *NodeSpace, error) {
	parsed, err := abi.JSON(strings.NewReader(NodeSpaceABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(NodeSpaceBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &NodeSpace{NodeSpaceCaller: NodeSpaceCaller{contract: contract}, NodeSpaceTransactor: NodeSpaceTransactor{contract: contract}, NodeSpaceFilterer: NodeSpaceFilterer{contract: contract}}, nil
}

// NodeSpace is an auto generated Go binding around an Ethereum contract.
type NodeSpace struct {
	NodeSpaceCaller     // Read-only binding to the contract
	NodeSpaceTransactor // Write-only binding to the contract
	NodeSpaceFilterer   // Log filterer for contract events
}

// NodeSpaceCaller is an auto generated read-only Go binding around an Ethereum contract.
type NodeSpaceCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// NodeSpaceTransactor is an auto generated write-only Go binding around an Ethereum contract.
type NodeSpaceTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// NodeSpaceFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type NodeSpaceFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// NodeSpaceSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type NodeSpaceSession struct {
	Contract     *NodeSpace        // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// NodeSpaceCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type NodeSpaceCallerSession struct {
	Contract *NodeSpaceCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts    // Call options to use throughout this session
}

// NodeSpaceTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type NodeSpaceTransactorSession struct {
	Contract     *NodeSpaceTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts    // Transaction auth options to use throughout this session
}

// NodeSpaceRaw is an auto generated low-level Go binding around an Ethereum contract.
type NodeSpaceRaw struct {
	Contract *NodeSpace // Generic contract binding to access the raw methods on
}

// NodeSpaceCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type NodeSpaceCallerRaw struct {
	Contract *NodeSpaceCaller // Generic read-only contract binding to access the raw methods on
}

// NodeSpaceTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type NodeSpaceTransactorRaw struct {
	Contract *NodeSpaceTransactor // Generic write-only contract binding to access the raw methods on
}

// NewNodeSpace creates a new instance of NodeSpace, bound to a specific deployed contract.
func NewNodeSpace(address common.Address, backend bind.ContractBackend) (*NodeSpace, error) {
	contract, err := bindNodeSpace(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &NodeSpace{NodeSpaceCaller: NodeSpaceCaller{contract: contract}, NodeSpaceTransactor: NodeSpaceTransactor{contract: contract}, NodeSpaceFilterer: NodeSpaceFilterer{contract: contract}}, nil
}

// NewNodeSpaceCaller creates a new read-only instance of NodeSpace, bound to a specific deployed contract.
func NewNodeSpaceCaller(address common.Address, caller bind.ContractCaller) (*NodeSpaceCaller, error) {
	contract, err := bindNodeSpace(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &NodeSpaceCaller{contract: contract}, nil
}

// NewNodeSpaceTransactor creates a new write-only instance of NodeSpace, bound to a specific deployed contract.
func NewNodeSpaceTransactor(address common.Address, transactor bind.ContractTransactor) (*NodeSpaceTransactor, error) {
	contract, err := bindNodeSpace(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &NodeSpaceTransactor{contract: contract}, nil
}

// NewNodeSpaceFilterer creates a new log filterer instance of NodeSpace, bound to a specific deployed contract.
func NewNodeSpaceFilterer(address common.Address, filterer bind.ContractFilterer) (*NodeSpaceFilterer, error) {
	contract, err := bindNodeSpace(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &NodeSpaceFilterer{contract: contract}, nil
}

// bindNodeSpace binds a generic wrapper to an already deployed contract.
func bindNodeSpace(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(NodeSpaceABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_NodeSpace *NodeSpaceRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _NodeSpace.Contract.NodeSpaceCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_NodeSpace *NodeSpaceRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _NodeSpace.Contract.NodeSpaceTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_NodeSpace *NodeSpaceRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _NodeSpace.Contract.NodeSpaceTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_NodeSpace *NodeSpaceCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _NodeSpace.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_NodeSpace *NodeSpaceTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _NodeSpace.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_NodeSpace *NodeSpaceTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _NodeSpace.Contract.contract.Transact(opts, method, params...)
}

// ActiveNodeAddresses is a free data retrieval call binding the contract method 0x52f82dd8.
//
// Solidity: function activeNodeAddresses(uint256 ) constant returns(address)
func (_NodeSpace *NodeSpaceCaller) ActiveNodeAddresses(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _NodeSpace.contract.Call(opts, out, "activeNodeAddresses", arg0)
	return *ret0, err
}

// ActiveNodeAddresses is a free data retrieval call binding the contract method 0x52f82dd8.
//
// Solidity: function activeNodeAddresses(uint256 ) constant returns(address)
func (_NodeSpace *NodeSpaceSession) ActiveNodeAddresses(arg0 *big.Int) (common.Address, error) {
	return _NodeSpace.Contract.ActiveNodeAddresses(&_NodeSpace.CallOpts, arg0)
}

// ActiveNodeAddresses is a free data retrieval call binding the contract method 0x52f82dd8.
//
// Solidity: function activeNodeAddresses(uint256 ) constant returns(address)
func (_NodeSpace *NodeSpaceCallerSession) ActiveNodeAddresses(arg0 *big.Int) (common.Address, error) {
	return _NodeSpace.Contract.ActiveNodeAddresses(&_NodeSpace.CallOpts, arg0)
}

// ActiveNodeLocators is a free data retrieval call binding the contract method 0x5272ae17.
//
// Solidity: function activeNodeLocators(uint256 ) constant returns(bytes)
func (_NodeSpace *NodeSpaceCaller) ActiveNodeLocators(opts *bind.CallOpts, arg0 *big.Int) ([]byte, error) {
	var (
		ret0 = new([]byte)
	)
	out := ret0
	err := _NodeSpace.contract.Call(opts, out, "activeNodeLocators", arg0)
	return *ret0, err
}

// ActiveNodeLocators is a free data retrieval call binding the contract method 0x5272ae17.
//
// Solidity: function activeNodeLocators(uint256 ) constant returns(bytes)
func (_NodeSpace *NodeSpaceSession) ActiveNodeLocators(arg0 *big.Int) ([]byte, error) {
	return _NodeSpace.Contract.ActiveNodeLocators(&_NodeSpace.CallOpts, arg0)
}

// ActiveNodeLocators is a free data retrieval call binding the contract method 0x5272ae17.
//
// Solidity: function activeNodeLocators(uint256 ) constant returns(bytes)
func (_NodeSpace *NodeSpaceCallerSession) ActiveNodeLocators(arg0 *big.Int) ([]byte, error) {
	return _NodeSpace.Contract.ActiveNodeLocators(&_NodeSpace.CallOpts, arg0)
}

// CanNodePublish is a free data retrieval call binding the contract method 0x26683e14.
//
// Solidity: function canNodePublish(address candidate) constant returns(bool)
func (_NodeSpace *NodeSpaceCaller) CanNodePublish(opts *bind.CallOpts, candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _NodeSpace.contract.Call(opts, out, "canNodePublish", candidate)
	return *ret0, err
}

// CanNodePublish is a free data retrieval call binding the contract method 0x26683e14.
//
// Solidity: function canNodePublish(address candidate) constant returns(bool)
func (_NodeSpace *NodeSpaceSession) CanNodePublish(candidate common.Address) (bool, error) {
	return _NodeSpace.Contract.CanNodePublish(&_NodeSpace.CallOpts, candidate)
}

// CanNodePublish is a free data retrieval call binding the contract method 0x26683e14.
//
// Solidity: function canNodePublish(address candidate) constant returns(bool)
func (_NodeSpace *NodeSpaceCallerSession) CanNodePublish(candidate common.Address) (bool, error) {
	return _NodeSpace.Contract.CanNodePublish(&_NodeSpace.CallOpts, candidate)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_NodeSpace *NodeSpaceCaller) ContentSpace(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _NodeSpace.contract.Call(opts, out, "contentSpace")
	return *ret0, err
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_NodeSpace *NodeSpaceSession) ContentSpace() (common.Address, error) {
	return _NodeSpace.Contract.ContentSpace(&_NodeSpace.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_NodeSpace *NodeSpaceCallerSession) ContentSpace() (common.Address, error) {
	return _NodeSpace.Contract.ContentSpace(&_NodeSpace.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_NodeSpace *NodeSpaceCaller) Creator(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _NodeSpace.contract.Call(opts, out, "creator")
	return *ret0, err
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_NodeSpace *NodeSpaceSession) Creator() (common.Address, error) {
	return _NodeSpace.Contract.Creator(&_NodeSpace.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_NodeSpace *NodeSpaceCallerSession) Creator() (common.Address, error) {
	return _NodeSpace.Contract.Creator(&_NodeSpace.CallOpts)
}

// NumActiveNodes is a free data retrieval call binding the contract method 0x43f59ec7.
//
// Solidity: function numActiveNodes() constant returns(uint256)
func (_NodeSpace *NodeSpaceCaller) NumActiveNodes(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _NodeSpace.contract.Call(opts, out, "numActiveNodes")
	return *ret0, err
}

// NumActiveNodes is a free data retrieval call binding the contract method 0x43f59ec7.
//
// Solidity: function numActiveNodes() constant returns(uint256)
func (_NodeSpace *NodeSpaceSession) NumActiveNodes() (*big.Int, error) {
	return _NodeSpace.Contract.NumActiveNodes(&_NodeSpace.CallOpts)
}

// NumActiveNodes is a free data retrieval call binding the contract method 0x43f59ec7.
//
// Solidity: function numActiveNodes() constant returns(uint256)
func (_NodeSpace *NodeSpaceCallerSession) NumActiveNodes() (*big.Int, error) {
	return _NodeSpace.Contract.NumActiveNodes(&_NodeSpace.CallOpts)
}

// NumPendingNodes is a free data retrieval call binding the contract method 0xf41a1587.
//
// Solidity: function numPendingNodes() constant returns(uint256)
func (_NodeSpace *NodeSpaceCaller) NumPendingNodes(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _NodeSpace.contract.Call(opts, out, "numPendingNodes")
	return *ret0, err
}

// NumPendingNodes is a free data retrieval call binding the contract method 0xf41a1587.
//
// Solidity: function numPendingNodes() constant returns(uint256)
func (_NodeSpace *NodeSpaceSession) NumPendingNodes() (*big.Int, error) {
	return _NodeSpace.Contract.NumPendingNodes(&_NodeSpace.CallOpts)
}

// NumPendingNodes is a free data retrieval call binding the contract method 0xf41a1587.
//
// Solidity: function numPendingNodes() constant returns(uint256)
func (_NodeSpace *NodeSpaceCallerSession) NumPendingNodes() (*big.Int, error) {
	return _NodeSpace.Contract.NumPendingNodes(&_NodeSpace.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_NodeSpace *NodeSpaceCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _NodeSpace.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_NodeSpace *NodeSpaceSession) Owner() (common.Address, error) {
	return _NodeSpace.Contract.Owner(&_NodeSpace.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_NodeSpace *NodeSpaceCallerSession) Owner() (common.Address, error) {
	return _NodeSpace.Contract.Owner(&_NodeSpace.CallOpts)
}

// PendingNodeAddresses is a free data retrieval call binding the contract method 0x6be9514c.
//
// Solidity: function pendingNodeAddresses(uint256 ) constant returns(address)
func (_NodeSpace *NodeSpaceCaller) PendingNodeAddresses(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _NodeSpace.contract.Call(opts, out, "pendingNodeAddresses", arg0)
	return *ret0, err
}

// PendingNodeAddresses is a free data retrieval call binding the contract method 0x6be9514c.
//
// Solidity: function pendingNodeAddresses(uint256 ) constant returns(address)
func (_NodeSpace *NodeSpaceSession) PendingNodeAddresses(arg0 *big.Int) (common.Address, error) {
	return _NodeSpace.Contract.PendingNodeAddresses(&_NodeSpace.CallOpts, arg0)
}

// PendingNodeAddresses is a free data retrieval call binding the contract method 0x6be9514c.
//
// Solidity: function pendingNodeAddresses(uint256 ) constant returns(address)
func (_NodeSpace *NodeSpaceCallerSession) PendingNodeAddresses(arg0 *big.Int) (common.Address, error) {
	return _NodeSpace.Contract.PendingNodeAddresses(&_NodeSpace.CallOpts, arg0)
}

// PendingNodeLocators is a free data retrieval call binding the contract method 0x69e30ff8.
//
// Solidity: function pendingNodeLocators(uint256 ) constant returns(bytes)
func (_NodeSpace *NodeSpaceCaller) PendingNodeLocators(opts *bind.CallOpts, arg0 *big.Int) ([]byte, error) {
	var (
		ret0 = new([]byte)
	)
	out := ret0
	err := _NodeSpace.contract.Call(opts, out, "pendingNodeLocators", arg0)
	return *ret0, err
}

// PendingNodeLocators is a free data retrieval call binding the contract method 0x69e30ff8.
//
// Solidity: function pendingNodeLocators(uint256 ) constant returns(bytes)
func (_NodeSpace *NodeSpaceSession) PendingNodeLocators(arg0 *big.Int) ([]byte, error) {
	return _NodeSpace.Contract.PendingNodeLocators(&_NodeSpace.CallOpts, arg0)
}

// PendingNodeLocators is a free data retrieval call binding the contract method 0x69e30ff8.
//
// Solidity: function pendingNodeLocators(uint256 ) constant returns(bytes)
func (_NodeSpace *NodeSpaceCallerSession) PendingNodeLocators(arg0 *big.Int) ([]byte, error) {
	return _NodeSpace.Contract.PendingNodeLocators(&_NodeSpace.CallOpts, arg0)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_NodeSpace *NodeSpaceCaller) Version(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _NodeSpace.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_NodeSpace *NodeSpaceSession) Version() ([32]byte, error) {
	return _NodeSpace.Contract.Version(&_NodeSpace.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_NodeSpace *NodeSpaceCallerSession) Version() ([32]byte, error) {
	return _NodeSpace.Contract.Version(&_NodeSpace.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_NodeSpace *NodeSpaceCaller) VersionAPI(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _NodeSpace.contract.Call(opts, out, "versionAPI")
	return *ret0, err
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_NodeSpace *NodeSpaceSession) VersionAPI() ([32]byte, error) {
	return _NodeSpace.Contract.VersionAPI(&_NodeSpace.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_NodeSpace *NodeSpaceCallerSession) VersionAPI() ([32]byte, error) {
	return _NodeSpace.Contract.VersionAPI(&_NodeSpace.CallOpts)
}

// AddNode is a paid mutator transaction binding the contract method 0x64f0f050.
//
// Solidity: function addNode(address _nodeAddr, bytes _locator) returns()
func (_NodeSpace *NodeSpaceTransactor) AddNode(opts *bind.TransactOpts, _nodeAddr common.Address, _locator []byte) (*types.Transaction, error) {
	return _NodeSpace.contract.Transact(opts, "addNode", _nodeAddr, _locator)
}

// AddNode is a paid mutator transaction binding the contract method 0x64f0f050.
//
// Solidity: function addNode(address _nodeAddr, bytes _locator) returns()
func (_NodeSpace *NodeSpaceSession) AddNode(_nodeAddr common.Address, _locator []byte) (*types.Transaction, error) {
	return _NodeSpace.Contract.AddNode(&_NodeSpace.TransactOpts, _nodeAddr, _locator)
}

// AddNode is a paid mutator transaction binding the contract method 0x64f0f050.
//
// Solidity: function addNode(address _nodeAddr, bytes _locator) returns()
func (_NodeSpace *NodeSpaceTransactorSession) AddNode(_nodeAddr common.Address, _locator []byte) (*types.Transaction, error) {
	return _NodeSpace.Contract.AddNode(&_NodeSpace.TransactOpts, _nodeAddr, _locator)
}

// ApproveNode is a paid mutator transaction binding the contract method 0xdd4c97a0.
//
// Solidity: function approveNode(address _nodeAddr) returns()
func (_NodeSpace *NodeSpaceTransactor) ApproveNode(opts *bind.TransactOpts, _nodeAddr common.Address) (*types.Transaction, error) {
	return _NodeSpace.contract.Transact(opts, "approveNode", _nodeAddr)
}

// ApproveNode is a paid mutator transaction binding the contract method 0xdd4c97a0.
//
// Solidity: function approveNode(address _nodeAddr) returns()
func (_NodeSpace *NodeSpaceSession) ApproveNode(_nodeAddr common.Address) (*types.Transaction, error) {
	return _NodeSpace.Contract.ApproveNode(&_NodeSpace.TransactOpts, _nodeAddr)
}

// ApproveNode is a paid mutator transaction binding the contract method 0xdd4c97a0.
//
// Solidity: function approveNode(address _nodeAddr) returns()
func (_NodeSpace *NodeSpaceTransactorSession) ApproveNode(_nodeAddr common.Address) (*types.Transaction, error) {
	return _NodeSpace.Contract.ApproveNode(&_NodeSpace.TransactOpts, _nodeAddr)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_NodeSpace *NodeSpaceTransactor) Kill(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _NodeSpace.contract.Transact(opts, "kill")
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_NodeSpace *NodeSpaceSession) Kill() (*types.Transaction, error) {
	return _NodeSpace.Contract.Kill(&_NodeSpace.TransactOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_NodeSpace *NodeSpaceTransactorSession) Kill() (*types.Transaction, error) {
	return _NodeSpace.Contract.Kill(&_NodeSpace.TransactOpts)
}

// RemoveNode is a paid mutator transaction binding the contract method 0xb2b99ec9.
//
// Solidity: function removeNode(address _nodeAddr) returns()
func (_NodeSpace *NodeSpaceTransactor) RemoveNode(opts *bind.TransactOpts, _nodeAddr common.Address) (*types.Transaction, error) {
	return _NodeSpace.contract.Transact(opts, "removeNode", _nodeAddr)
}

// RemoveNode is a paid mutator transaction binding the contract method 0xb2b99ec9.
//
// Solidity: function removeNode(address _nodeAddr) returns()
func (_NodeSpace *NodeSpaceSession) RemoveNode(_nodeAddr common.Address) (*types.Transaction, error) {
	return _NodeSpace.Contract.RemoveNode(&_NodeSpace.TransactOpts, _nodeAddr)
}

// RemoveNode is a paid mutator transaction binding the contract method 0xb2b99ec9.
//
// Solidity: function removeNode(address _nodeAddr) returns()
func (_NodeSpace *NodeSpaceTransactorSession) RemoveNode(_nodeAddr common.Address) (*types.Transaction, error) {
	return _NodeSpace.Contract.RemoveNode(&_NodeSpace.TransactOpts, _nodeAddr)
}

// SubmitNode is a paid mutator transaction binding the contract method 0x160eee74.
//
// Solidity: function submitNode(bytes _locator) returns()
func (_NodeSpace *NodeSpaceTransactor) SubmitNode(opts *bind.TransactOpts, _locator []byte) (*types.Transaction, error) {
	return _NodeSpace.contract.Transact(opts, "submitNode", _locator)
}

// SubmitNode is a paid mutator transaction binding the contract method 0x160eee74.
//
// Solidity: function submitNode(bytes _locator) returns()
func (_NodeSpace *NodeSpaceSession) SubmitNode(_locator []byte) (*types.Transaction, error) {
	return _NodeSpace.Contract.SubmitNode(&_NodeSpace.TransactOpts, _locator)
}

// SubmitNode is a paid mutator transaction binding the contract method 0x160eee74.
//
// Solidity: function submitNode(bytes _locator) returns()
func (_NodeSpace *NodeSpaceTransactorSession) SubmitNode(_locator []byte) (*types.Transaction, error) {
	return _NodeSpace.Contract.SubmitNode(&_NodeSpace.TransactOpts, _locator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_NodeSpace *NodeSpaceTransactor) TransferCreatorship(opts *bind.TransactOpts, newCreator common.Address) (*types.Transaction, error) {
	return _NodeSpace.contract.Transact(opts, "transferCreatorship", newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_NodeSpace *NodeSpaceSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _NodeSpace.Contract.TransferCreatorship(&_NodeSpace.TransactOpts, newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_NodeSpace *NodeSpaceTransactorSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _NodeSpace.Contract.TransferCreatorship(&_NodeSpace.TransactOpts, newCreator)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_NodeSpace *NodeSpaceTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _NodeSpace.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_NodeSpace *NodeSpaceSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _NodeSpace.Contract.TransferOwnership(&_NodeSpace.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_NodeSpace *NodeSpaceTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _NodeSpace.Contract.TransferOwnership(&_NodeSpace.TransactOpts, newOwner)
}

// NodeSpaceAddNodeIterator is returned from FilterAddNode and is used to iterate over the raw logs and unpacked data for AddNode events raised by the NodeSpace contract.
type NodeSpaceAddNodeIterator struct {
	Event *NodeSpaceAddNode // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *NodeSpaceAddNodeIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(NodeSpaceAddNode)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(NodeSpaceAddNode)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *NodeSpaceAddNodeIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *NodeSpaceAddNodeIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// NodeSpaceAddNode represents a AddNode event raised by the NodeSpace contract.
type NodeSpaceAddNode struct {
	OwnerAddr common.Address
	NodeAddr  common.Address
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterAddNode is a free log retrieval operation binding the contract event 0x2bb0f9ba138ffddb5a8f974e9885b65a7814d3002654f1cf3f2d3f619a4006c4.
//
// Solidity: event AddNode(address ownerAddr, address nodeAddr)
func (_NodeSpace *NodeSpaceFilterer) FilterAddNode(opts *bind.FilterOpts) (*NodeSpaceAddNodeIterator, error) {

	logs, sub, err := _NodeSpace.contract.FilterLogs(opts, "AddNode")
	if err != nil {
		return nil, err
	}
	return &NodeSpaceAddNodeIterator{contract: _NodeSpace.contract, event: "AddNode", logs: logs, sub: sub}, nil
}

// WatchAddNode is a free log subscription operation binding the contract event 0x2bb0f9ba138ffddb5a8f974e9885b65a7814d3002654f1cf3f2d3f619a4006c4.
//
// Solidity: event AddNode(address ownerAddr, address nodeAddr)
func (_NodeSpace *NodeSpaceFilterer) WatchAddNode(opts *bind.WatchOpts, sink chan<- *NodeSpaceAddNode) (event.Subscription, error) {

	logs, sub, err := _NodeSpace.contract.WatchLogs(opts, "AddNode")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(NodeSpaceAddNode)
				if err := _NodeSpace.contract.UnpackLog(event, "AddNode", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAddNode is a log parse operation binding the contract event 0x2bb0f9ba138ffddb5a8f974e9885b65a7814d3002654f1cf3f2d3f619a4006c4.
//
// Solidity: event AddNode(address ownerAddr, address nodeAddr)
func (_NodeSpace *NodeSpaceFilterer) ParseAddNode(log types.Log) (*NodeSpaceAddNode, error) {
	event := new(NodeSpaceAddNode)
	if err := _NodeSpace.contract.UnpackLog(event, "AddNode", log); err != nil {
		return nil, err
	}
	return event, nil
}

// NodeSpaceNodeApprovedIterator is returned from FilterNodeApproved and is used to iterate over the raw logs and unpacked data for NodeApproved events raised by the NodeSpace contract.
type NodeSpaceNodeApprovedIterator struct {
	Event *NodeSpaceNodeApproved // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *NodeSpaceNodeApprovedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(NodeSpaceNodeApproved)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(NodeSpaceNodeApproved)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *NodeSpaceNodeApprovedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *NodeSpaceNodeApprovedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// NodeSpaceNodeApproved represents a NodeApproved event raised by the NodeSpace contract.
type NodeSpaceNodeApproved struct {
	Addr    common.Address
	Locator []byte
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterNodeApproved is a free log retrieval operation binding the contract event 0xd644c8164f225d3b7fdbcc404f279bb1e823ef0d93f88dd4b24e85d0e7bc6a54.
//
// Solidity: event NodeApproved(address addr, bytes locator)
func (_NodeSpace *NodeSpaceFilterer) FilterNodeApproved(opts *bind.FilterOpts) (*NodeSpaceNodeApprovedIterator, error) {

	logs, sub, err := _NodeSpace.contract.FilterLogs(opts, "NodeApproved")
	if err != nil {
		return nil, err
	}
	return &NodeSpaceNodeApprovedIterator{contract: _NodeSpace.contract, event: "NodeApproved", logs: logs, sub: sub}, nil
}

// WatchNodeApproved is a free log subscription operation binding the contract event 0xd644c8164f225d3b7fdbcc404f279bb1e823ef0d93f88dd4b24e85d0e7bc6a54.
//
// Solidity: event NodeApproved(address addr, bytes locator)
func (_NodeSpace *NodeSpaceFilterer) WatchNodeApproved(opts *bind.WatchOpts, sink chan<- *NodeSpaceNodeApproved) (event.Subscription, error) {

	logs, sub, err := _NodeSpace.contract.WatchLogs(opts, "NodeApproved")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(NodeSpaceNodeApproved)
				if err := _NodeSpace.contract.UnpackLog(event, "NodeApproved", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseNodeApproved is a log parse operation binding the contract event 0xd644c8164f225d3b7fdbcc404f279bb1e823ef0d93f88dd4b24e85d0e7bc6a54.
//
// Solidity: event NodeApproved(address addr, bytes locator)
func (_NodeSpace *NodeSpaceFilterer) ParseNodeApproved(log types.Log) (*NodeSpaceNodeApproved, error) {
	event := new(NodeSpaceNodeApproved)
	if err := _NodeSpace.contract.UnpackLog(event, "NodeApproved", log); err != nil {
		return nil, err
	}
	return event, nil
}

// NodeSpaceNodeSubmittedIterator is returned from FilterNodeSubmitted and is used to iterate over the raw logs and unpacked data for NodeSubmitted events raised by the NodeSpace contract.
type NodeSpaceNodeSubmittedIterator struct {
	Event *NodeSpaceNodeSubmitted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *NodeSpaceNodeSubmittedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(NodeSpaceNodeSubmitted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(NodeSpaceNodeSubmitted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *NodeSpaceNodeSubmittedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *NodeSpaceNodeSubmittedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// NodeSpaceNodeSubmitted represents a NodeSubmitted event raised by the NodeSpace contract.
type NodeSpaceNodeSubmitted struct {
	Addr    common.Address
	Locator []byte
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterNodeSubmitted is a free log retrieval operation binding the contract event 0xae5645569f32b946f7a747113c64094a29a6b84c5ddf55816ef4381ce8a3a46d.
//
// Solidity: event NodeSubmitted(address addr, bytes locator)
func (_NodeSpace *NodeSpaceFilterer) FilterNodeSubmitted(opts *bind.FilterOpts) (*NodeSpaceNodeSubmittedIterator, error) {

	logs, sub, err := _NodeSpace.contract.FilterLogs(opts, "NodeSubmitted")
	if err != nil {
		return nil, err
	}
	return &NodeSpaceNodeSubmittedIterator{contract: _NodeSpace.contract, event: "NodeSubmitted", logs: logs, sub: sub}, nil
}

// WatchNodeSubmitted is a free log subscription operation binding the contract event 0xae5645569f32b946f7a747113c64094a29a6b84c5ddf55816ef4381ce8a3a46d.
//
// Solidity: event NodeSubmitted(address addr, bytes locator)
func (_NodeSpace *NodeSpaceFilterer) WatchNodeSubmitted(opts *bind.WatchOpts, sink chan<- *NodeSpaceNodeSubmitted) (event.Subscription, error) {

	logs, sub, err := _NodeSpace.contract.WatchLogs(opts, "NodeSubmitted")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(NodeSpaceNodeSubmitted)
				if err := _NodeSpace.contract.UnpackLog(event, "NodeSubmitted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseNodeSubmitted is a log parse operation binding the contract event 0xae5645569f32b946f7a747113c64094a29a6b84c5ddf55816ef4381ce8a3a46d.
//
// Solidity: event NodeSubmitted(address addr, bytes locator)
func (_NodeSpace *NodeSpaceFilterer) ParseNodeSubmitted(log types.Log) (*NodeSpaceNodeSubmitted, error) {
	event := new(NodeSpaceNodeSubmitted)
	if err := _NodeSpace.contract.UnpackLog(event, "NodeSubmitted", log); err != nil {
		return nil, err
	}
	return event, nil
}

// NodeSpaceRemoveNodeIterator is returned from FilterRemoveNode and is used to iterate over the raw logs and unpacked data for RemoveNode events raised by the NodeSpace contract.
type NodeSpaceRemoveNodeIterator struct {
	Event *NodeSpaceRemoveNode // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *NodeSpaceRemoveNodeIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(NodeSpaceRemoveNode)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(NodeSpaceRemoveNode)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *NodeSpaceRemoveNodeIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *NodeSpaceRemoveNodeIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// NodeSpaceRemoveNode represents a RemoveNode event raised by the NodeSpace contract.
type NodeSpaceRemoveNode struct {
	OwnerAddr common.Address
	NodeAddr  common.Address
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterRemoveNode is a free log retrieval operation binding the contract event 0x41ec5b9efdbf61871df6a18b687e04bea93d5793af5f8c8b4626e155b23dc19d.
//
// Solidity: event RemoveNode(address ownerAddr, address nodeAddr)
func (_NodeSpace *NodeSpaceFilterer) FilterRemoveNode(opts *bind.FilterOpts) (*NodeSpaceRemoveNodeIterator, error) {

	logs, sub, err := _NodeSpace.contract.FilterLogs(opts, "RemoveNode")
	if err != nil {
		return nil, err
	}
	return &NodeSpaceRemoveNodeIterator{contract: _NodeSpace.contract, event: "RemoveNode", logs: logs, sub: sub}, nil
}

// WatchRemoveNode is a free log subscription operation binding the contract event 0x41ec5b9efdbf61871df6a18b687e04bea93d5793af5f8c8b4626e155b23dc19d.
//
// Solidity: event RemoveNode(address ownerAddr, address nodeAddr)
func (_NodeSpace *NodeSpaceFilterer) WatchRemoveNode(opts *bind.WatchOpts, sink chan<- *NodeSpaceRemoveNode) (event.Subscription, error) {

	logs, sub, err := _NodeSpace.contract.WatchLogs(opts, "RemoveNode")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(NodeSpaceRemoveNode)
				if err := _NodeSpace.contract.UnpackLog(event, "RemoveNode", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRemoveNode is a log parse operation binding the contract event 0x41ec5b9efdbf61871df6a18b687e04bea93d5793af5f8c8b4626e155b23dc19d.
//
// Solidity: event RemoveNode(address ownerAddr, address nodeAddr)
func (_NodeSpace *NodeSpaceFilterer) ParseRemoveNode(log types.Log) (*NodeSpaceRemoveNode, error) {
	event := new(NodeSpaceRemoveNode)
	if err := _NodeSpace.contract.UnpackLog(event, "RemoveNode", log); err != nil {
		return nil, err
	}
	return event, nil
}

// OwnableABI is the input ABI used to generate the binding from.
const OwnableABI = "[{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentSpace\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newCreator\",\"type\":\"address\"}],\"name\":\"transferCreatorship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"versionAPI\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// OwnableFuncSigs maps the 4-byte function signature to its string representation.
var OwnableFuncSigs = map[string]string{
	"af570c04": "contentSpace()",
	"02d05d3f": "creator()",
	"41c0e1b5": "kill()",
	"8da5cb5b": "owner()",
	"6d2e4b1b": "transferCreatorship(address)",
	"f2fde38b": "transferOwnership(address)",
	"54fd4d50": "version()",
	"5f4fcae1": "versionAPI()",
}

// OwnableBin is the compiled bytecode used for deploying new contracts.
var OwnableBin = "0x60806040527f4f776e61626c653230323030393238313130303030504f000000000000000000600055620332e360ec1b600155600280546001600160a01b0319908116321790915560038054909116331790556102ba806100616000396000f3fe60806040526004361061007b5760003560e01c80636d2e4b1b1161004e5780636d2e4b1b146100ff5780638da5cb5b14610132578063af570c0414610147578063f2fde38b1461015c5761007b565b806302d05d3f1461007d57806341c0e1b5146100ae57806354fd4d50146100c35780635f4fcae1146100ea575b005b34801561008957600080fd5b5061009261018f565b604080516001600160a01b039092168252519081900360200190f35b3480156100ba57600080fd5b5061007b61019e565b3480156100cf57600080fd5b506100d86101c3565b60408051918252519081900360200190f35b3480156100f657600080fd5b506100d86101c9565b34801561010b57600080fd5b5061007b6004803603602081101561012257600080fd5b50356001600160a01b03166101cf565b34801561013e57600080fd5b5061009261021b565b34801561015357600080fd5b5061009261022a565b34801561016857600080fd5b5061007b6004803603602081101561017f57600080fd5b50356001600160a01b0316610239565b6002546001600160a01b031681565b6003546001600160a01b031633146101b557600080fd5b6003546001600160a01b0316ff5b60005481565b60015481565b6002546001600160a01b031633146101e657600080fd5b6001600160a01b0381166101f957600080fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031681565b6004546001600160a01b031681565b6003546001600160a01b0316331461025057600080fd5b6001600160a01b03811661026357600080fd5b600380546001600160a01b0319166001600160a01b039290921691909117905556fea265627a7a72315820b4cc757c224744a49cf3d38065dc4777869d480c122046a653766190256e6d9864736f6c63430005110032"

// DeployOwnable deploys a new Ethereum contract, binding an instance of Ownable to it.
func DeployOwnable(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Ownable, error) {
	parsed, err := abi.JSON(strings.NewReader(OwnableABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(OwnableBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Ownable{OwnableCaller: OwnableCaller{contract: contract}, OwnableTransactor: OwnableTransactor{contract: contract}, OwnableFilterer: OwnableFilterer{contract: contract}}, nil
}

// Ownable is an auto generated Go binding around an Ethereum contract.
type Ownable struct {
	OwnableCaller     // Read-only binding to the contract
	OwnableTransactor // Write-only binding to the contract
	OwnableFilterer   // Log filterer for contract events
}

// OwnableCaller is an auto generated read-only Go binding around an Ethereum contract.
type OwnableCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OwnableTransactor is an auto generated write-only Go binding around an Ethereum contract.
type OwnableTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OwnableFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type OwnableFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OwnableSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type OwnableSession struct {
	Contract     *Ownable          // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// OwnableCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type OwnableCallerSession struct {
	Contract *OwnableCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts  // Call options to use throughout this session
}

// OwnableTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type OwnableTransactorSession struct {
	Contract     *OwnableTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts  // Transaction auth options to use throughout this session
}

// OwnableRaw is an auto generated low-level Go binding around an Ethereum contract.
type OwnableRaw struct {
	Contract *Ownable // Generic contract binding to access the raw methods on
}

// OwnableCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type OwnableCallerRaw struct {
	Contract *OwnableCaller // Generic read-only contract binding to access the raw methods on
}

// OwnableTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type OwnableTransactorRaw struct {
	Contract *OwnableTransactor // Generic write-only contract binding to access the raw methods on
}

// NewOwnable creates a new instance of Ownable, bound to a specific deployed contract.
func NewOwnable(address common.Address, backend bind.ContractBackend) (*Ownable, error) {
	contract, err := bindOwnable(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Ownable{OwnableCaller: OwnableCaller{contract: contract}, OwnableTransactor: OwnableTransactor{contract: contract}, OwnableFilterer: OwnableFilterer{contract: contract}}, nil
}

// NewOwnableCaller creates a new read-only instance of Ownable, bound to a specific deployed contract.
func NewOwnableCaller(address common.Address, caller bind.ContractCaller) (*OwnableCaller, error) {
	contract, err := bindOwnable(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &OwnableCaller{contract: contract}, nil
}

// NewOwnableTransactor creates a new write-only instance of Ownable, bound to a specific deployed contract.
func NewOwnableTransactor(address common.Address, transactor bind.ContractTransactor) (*OwnableTransactor, error) {
	contract, err := bindOwnable(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &OwnableTransactor{contract: contract}, nil
}

// NewOwnableFilterer creates a new log filterer instance of Ownable, bound to a specific deployed contract.
func NewOwnableFilterer(address common.Address, filterer bind.ContractFilterer) (*OwnableFilterer, error) {
	contract, err := bindOwnable(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &OwnableFilterer{contract: contract}, nil
}

// bindOwnable binds a generic wrapper to an already deployed contract.
func bindOwnable(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(OwnableABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Ownable *OwnableRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Ownable.Contract.OwnableCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Ownable *OwnableRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Ownable.Contract.OwnableTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Ownable *OwnableRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Ownable.Contract.OwnableTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Ownable *OwnableCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Ownable.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Ownable *OwnableTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Ownable.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Ownable *OwnableTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Ownable.Contract.contract.Transact(opts, method, params...)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_Ownable *OwnableCaller) ContentSpace(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Ownable.contract.Call(opts, out, "contentSpace")
	return *ret0, err
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_Ownable *OwnableSession) ContentSpace() (common.Address, error) {
	return _Ownable.Contract.ContentSpace(&_Ownable.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_Ownable *OwnableCallerSession) ContentSpace() (common.Address, error) {
	return _Ownable.Contract.ContentSpace(&_Ownable.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_Ownable *OwnableCaller) Creator(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Ownable.contract.Call(opts, out, "creator")
	return *ret0, err
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_Ownable *OwnableSession) Creator() (common.Address, error) {
	return _Ownable.Contract.Creator(&_Ownable.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_Ownable *OwnableCallerSession) Creator() (common.Address, error) {
	return _Ownable.Contract.Creator(&_Ownable.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Ownable *OwnableCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Ownable.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Ownable *OwnableSession) Owner() (common.Address, error) {
	return _Ownable.Contract.Owner(&_Ownable.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_Ownable *OwnableCallerSession) Owner() (common.Address, error) {
	return _Ownable.Contract.Owner(&_Ownable.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_Ownable *OwnableCaller) Version(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _Ownable.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_Ownable *OwnableSession) Version() ([32]byte, error) {
	return _Ownable.Contract.Version(&_Ownable.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_Ownable *OwnableCallerSession) Version() ([32]byte, error) {
	return _Ownable.Contract.Version(&_Ownable.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_Ownable *OwnableCaller) VersionAPI(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _Ownable.contract.Call(opts, out, "versionAPI")
	return *ret0, err
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_Ownable *OwnableSession) VersionAPI() ([32]byte, error) {
	return _Ownable.Contract.VersionAPI(&_Ownable.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_Ownable *OwnableCallerSession) VersionAPI() ([32]byte, error) {
	return _Ownable.Contract.VersionAPI(&_Ownable.CallOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_Ownable *OwnableTransactor) Kill(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Ownable.contract.Transact(opts, "kill")
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_Ownable *OwnableSession) Kill() (*types.Transaction, error) {
	return _Ownable.Contract.Kill(&_Ownable.TransactOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_Ownable *OwnableTransactorSession) Kill() (*types.Transaction, error) {
	return _Ownable.Contract.Kill(&_Ownable.TransactOpts)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_Ownable *OwnableTransactor) TransferCreatorship(opts *bind.TransactOpts, newCreator common.Address) (*types.Transaction, error) {
	return _Ownable.contract.Transact(opts, "transferCreatorship", newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_Ownable *OwnableSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _Ownable.Contract.TransferCreatorship(&_Ownable.TransactOpts, newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_Ownable *OwnableTransactorSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _Ownable.Contract.TransferCreatorship(&_Ownable.TransactOpts, newCreator)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Ownable *OwnableTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _Ownable.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Ownable *OwnableSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _Ownable.Contract.TransferOwnership(&_Ownable.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Ownable *OwnableTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _Ownable.Contract.TransferOwnership(&_Ownable.TransactOpts, newOwner)
}

// PrecompileABI is the input ABI used to generate the binding from.
const PrecompileABI = "[{\"constant\":true,\"inputs\":[],\"name\":\"KMS\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"TEN\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// PrecompileFuncSigs maps the 4-byte function signature to its string representation.
var PrecompileFuncSigs = map[string]string{
	"a6ca541e": "KMS()",
	"ee2f3a05": "TEN()",
}

// PrecompileBin is the compiled bytecode used for deploying new contracts.
var PrecompileBin = "0x609f610024600b82828239805160001a607314601757fe5b30600052607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610603d5760003560e01c8063a6ca541e146042578063ee2f3a0514605a575b600080fd5b60486060565b60408051918252519081900360200190f35b60486065565b600b81565b600e8156fea265627a7a72315820797f0c02bdb6b0e7ed5772d4e3d3e8c9d5f87865dcd6b0f763c3ee0fcaed4a1064736f6c63430005110032"

// DeployPrecompile deploys a new Ethereum contract, binding an instance of Precompile to it.
func DeployPrecompile(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Precompile, error) {
	parsed, err := abi.JSON(strings.NewReader(PrecompileABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(PrecompileBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Precompile{PrecompileCaller: PrecompileCaller{contract: contract}, PrecompileTransactor: PrecompileTransactor{contract: contract}, PrecompileFilterer: PrecompileFilterer{contract: contract}}, nil
}

// Precompile is an auto generated Go binding around an Ethereum contract.
type Precompile struct {
	PrecompileCaller     // Read-only binding to the contract
	PrecompileTransactor // Write-only binding to the contract
	PrecompileFilterer   // Log filterer for contract events
}

// PrecompileCaller is an auto generated read-only Go binding around an Ethereum contract.
type PrecompileCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// PrecompileTransactor is an auto generated write-only Go binding around an Ethereum contract.
type PrecompileTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// PrecompileFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type PrecompileFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// PrecompileSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type PrecompileSession struct {
	Contract     *Precompile       // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// PrecompileCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type PrecompileCallerSession struct {
	Contract *PrecompileCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts     // Call options to use throughout this session
}

// PrecompileTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type PrecompileTransactorSession struct {
	Contract     *PrecompileTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts     // Transaction auth options to use throughout this session
}

// PrecompileRaw is an auto generated low-level Go binding around an Ethereum contract.
type PrecompileRaw struct {
	Contract *Precompile // Generic contract binding to access the raw methods on
}

// PrecompileCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type PrecompileCallerRaw struct {
	Contract *PrecompileCaller // Generic read-only contract binding to access the raw methods on
}

// PrecompileTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type PrecompileTransactorRaw struct {
	Contract *PrecompileTransactor // Generic write-only contract binding to access the raw methods on
}

// NewPrecompile creates a new instance of Precompile, bound to a specific deployed contract.
func NewPrecompile(address common.Address, backend bind.ContractBackend) (*Precompile, error) {
	contract, err := bindPrecompile(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Precompile{PrecompileCaller: PrecompileCaller{contract: contract}, PrecompileTransactor: PrecompileTransactor{contract: contract}, PrecompileFilterer: PrecompileFilterer{contract: contract}}, nil
}

// NewPrecompileCaller creates a new read-only instance of Precompile, bound to a specific deployed contract.
func NewPrecompileCaller(address common.Address, caller bind.ContractCaller) (*PrecompileCaller, error) {
	contract, err := bindPrecompile(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &PrecompileCaller{contract: contract}, nil
}

// NewPrecompileTransactor creates a new write-only instance of Precompile, bound to a specific deployed contract.
func NewPrecompileTransactor(address common.Address, transactor bind.ContractTransactor) (*PrecompileTransactor, error) {
	contract, err := bindPrecompile(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &PrecompileTransactor{contract: contract}, nil
}

// NewPrecompileFilterer creates a new log filterer instance of Precompile, bound to a specific deployed contract.
func NewPrecompileFilterer(address common.Address, filterer bind.ContractFilterer) (*PrecompileFilterer, error) {
	contract, err := bindPrecompile(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &PrecompileFilterer{contract: contract}, nil
}

// bindPrecompile binds a generic wrapper to an already deployed contract.
func bindPrecompile(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(PrecompileABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Precompile *PrecompileRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Precompile.Contract.PrecompileCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Precompile *PrecompileRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Precompile.Contract.PrecompileTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Precompile *PrecompileRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Precompile.Contract.PrecompileTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Precompile *PrecompileCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Precompile.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Precompile *PrecompileTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Precompile.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Precompile *PrecompileTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Precompile.Contract.contract.Transact(opts, method, params...)
}

// KMS is a free data retrieval call binding the contract method 0xa6ca541e.
//
// Solidity: function KMS() constant returns(int256)
func (_Precompile *PrecompileCaller) KMS(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Precompile.contract.Call(opts, out, "KMS")
	return *ret0, err
}

// KMS is a free data retrieval call binding the contract method 0xa6ca541e.
//
// Solidity: function KMS() constant returns(int256)
func (_Precompile *PrecompileSession) KMS() (*big.Int, error) {
	return _Precompile.Contract.KMS(&_Precompile.CallOpts)
}

// KMS is a free data retrieval call binding the contract method 0xa6ca541e.
//
// Solidity: function KMS() constant returns(int256)
func (_Precompile *PrecompileCallerSession) KMS() (*big.Int, error) {
	return _Precompile.Contract.KMS(&_Precompile.CallOpts)
}

// TEN is a free data retrieval call binding the contract method 0xee2f3a05.
//
// Solidity: function TEN() constant returns(int256)
func (_Precompile *PrecompileCaller) TEN(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Precompile.contract.Call(opts, out, "TEN")
	return *ret0, err
}

// TEN is a free data retrieval call binding the contract method 0xee2f3a05.
//
// Solidity: function TEN() constant returns(int256)
func (_Precompile *PrecompileSession) TEN() (*big.Int, error) {
	return _Precompile.Contract.TEN(&_Precompile.CallOpts)
}

// TEN is a free data retrieval call binding the contract method 0xee2f3a05.
//
// Solidity: function TEN() constant returns(int256)
func (_Precompile *PrecompileCallerSession) TEN() (*big.Int, error) {
	return _Precompile.Contract.TEN(&_Precompile.CallOpts)
}

// TenantFuncsBaseABI is the input ABI used to generate the binding from.
const TenantFuncsBaseABI = "[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"numGroups\",\"type\":\"uint256\"}],\"name\":\"ApplyGroups\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"ident\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"ord\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"prev\",\"type\":\"bool\"}],\"name\":\"BitSetAndGet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"ident\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"slot\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"val\",\"type\":\"uint32\"}],\"name\":\"CounterIncremented\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"ObjectMetaChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TenantTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"ident\",\"type\":\"bytes32\"}],\"name\":\"WordGroupDeleted\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_encToken\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"addresspayable\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"applyGroups\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contentSpace\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ident\",\"type\":\"bytes32\"}],\"name\":\"deleteGroup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ident\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"_ord\",\"type\":\"uint8\"}],\"name\":\"getBit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ident\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"_ord\",\"type\":\"uint8\"}],\"name\":\"getCounter\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"}],\"name\":\"getMeta\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ident\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"_ord\",\"type\":\"uint8\"}],\"name\":\"incrementCounter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"putMeta\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ident\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"_ord\",\"type\":\"uint8\"}],\"name\":\"setAndGetBit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ident\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"_ord\",\"type\":\"uint8\"}],\"name\":\"setAndGetBitInternal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newCreator\",\"type\":\"address\"}],\"name\":\"transferCreatorship\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_encAuthToken\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"addresspayable\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"versionAPI\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// TenantFuncsBaseFuncSigs maps the 4-byte function signature to its string representation.
var TenantFuncsBaseFuncSigs = map[string]string{
	"d2771dee": "applyGroups(bytes,uint256,address)",
	"af570c04": "contentSpace()",
	"02d05d3f": "creator()",
	"e57097c9": "deleteGroup(bytes32)",
	"30f846a2": "getBit(bytes32,uint8)",
	"e1954b61": "getCounter(bytes32,uint8)",
	"ac55c906": "getMeta(bytes)",
	"7558cbf0": "incrementCounter(bytes32,uint8)",
	"24d7806c": "isAdmin(address)",
	"41c0e1b5": "kill()",
	"8da5cb5b": "owner()",
	"e542b7cb": "putMeta(bytes,bytes)",
	"24d7c18d": "setAndGetBit(bytes32,uint8)",
	"33f12cf4": "setAndGetBitInternal(bytes32,uint8)",
	"6d2e4b1b": "transferCreatorship(address)",
	"f2fde38b": "transferOwnership(address)",
	"c2153d2c": "transferToken(bytes,uint256,address)",
	"54fd4d50": "version()",
	"5f4fcae1": "versionAPI()",
}

// TenantFuncsBaseBin is the compiled bytecode used for deploying new contracts.
var TenantFuncsBaseBin = "0x60806040527f4f776e61626c653230323030393238313130303030504f000000000000000000600055620332e360ec1b600155600280546001600160a01b031990811632179091556003805490911633179055611598806100616000396000f3fe6080604052600436106101145760003560e01c80637558cbf0116100a0578063d2771dee11610064578063d2771dee146104ed578063e1954b61146105ac578063e542b7cb146105f8578063e57097c91461072e578063f2fde38b1461075857610114565b80637558cbf0146102ab5780638da5cb5b146102de578063ac55c906146102f3578063af570c0414610419578063c2153d2c1461042e57610114565b806333f12cf4116100e757806333f12cf4146101f457806341c0e1b51461022757806354fd4d501461023c5780635f4fcae1146102635780636d2e4b1b1461027857610114565b806302d05d3f1461011657806324d7806c1461014757806324d7c18d1461018e57806330f846a2146101c1575b005b34801561012257600080fd5b5061012b61078b565b604080516001600160a01b039092168252519081900360200190f35b34801561015357600080fd5b5061017a6004803603602081101561016a57600080fd5b50356001600160a01b031661079a565b604080519115158252519081900360200190f35b34801561019a57600080fd5b5061017a600480360360408110156101b157600080fd5b508035906020013560ff166107c4565b3480156101cd57600080fd5b5061017a600480360360408110156101e457600080fd5b508035906020013560ff166107e9565b34801561020057600080fd5b5061017a6004803603604081101561021757600080fd5b508035906020013560ff16610856565b34801561023357600080fd5b50610114610972565b34801561024857600080fd5b50610251610997565b60408051918252519081900360200190f35b34801561026f57600080fd5b5061025161099d565b34801561028457600080fd5b506101146004803603602081101561029b57600080fd5b50356001600160a01b03166109a3565b3480156102b757600080fd5b50610114600480360360408110156102ce57600080fd5b508035906020013560ff166109ef565b3480156102ea57600080fd5b5061012b610aec565b3480156102ff57600080fd5b506103a46004803603602081101561031657600080fd5b810190602081018135600160201b81111561033057600080fd5b82018360208201111561034257600080fd5b803590602001918460018302840111600160201b8311171561036357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610afb945050505050565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103de5781810151838201526020016103c6565b50505050905090810190601f16801561040b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561042557600080fd5b5061012b610ca2565b34801561043a57600080fd5b506101146004803603606081101561045157600080fd5b810190602081018135600160201b81111561046b57600080fd5b82018360208201111561047d57600080fd5b803590602001918460018302840111600160201b8311171561049e57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050823593505050602001356001600160a01b0316610cb1565b3480156104f957600080fd5b506101146004803603606081101561051057600080fd5b810190602081018135600160201b81111561052a57600080fd5b82018360208201111561053c57600080fd5b803590602001918460018302840111600160201b8311171561055d57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050823593505050602001356001600160a01b0316610d71565b3480156105b857600080fd5b506105df600480360360408110156105cf57600080fd5b508035906020013560ff16610fdf565b6040805163ffffffff9092168252519081900360200190f35b34801561060457600080fd5b506101146004803603604081101561061b57600080fd5b810190602081018135600160201b81111561063557600080fd5b82018360208201111561064757600080fd5b803590602001918460018302840111600160201b8311171561066857600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156106ba57600080fd5b8201836020820111156106cc57600080fd5b803590602001918460018302840111600160201b831117156106ed57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611031945050505050565b34801561073a57600080fd5b506101146004803603602081101561075157600080fd5b5035611220565b34801561076457600080fd5b506101146004803603602081101561077b57600080fd5b50356001600160a01b0316611283565b6002546001600160a01b031681565b6003546000906001600160a01b03838116911614156107bb575060016107bf565b5060005b919050565b60006107cf3361079a565b6107d857600080fd5b6107e28383610856565b9392505050565b6000828152600760209081526040822060ff8481169290920490911690601f8416906001821b908190846008811061081d57fe5b600881049091015460046007909216919091026101000a90041663ffffffff161561084957600161084c565b60005b9695505050505050565b60006108613361079a565b61086a57600080fd5b6000838152600760209081526040822060ff8581169290920490911691601f8516916001831b91908290856008811061089f57fe5b600881049091015460046007909216919091026101000a90041663ffffffff16156108cb5760016108ce565b60005b905080610925576000878152600760205260409020829085600881106108f057fe5b60088104909101805463ffffffff60046007909416939093026101000a80820484169094178316840292909302199092161790555b6040805188815260ff881660208201528215158183015290517f4d04842102a74d85e502eec18f3048954c6d6e1d1c368c7bc49edcdcd45e9c3d9181900360600190a19695505050505050565b6003546001600160a01b0316331461098957600080fd5b6003546001600160a01b0316ff5b60005481565b60015481565b6002546001600160a01b031633146109ba57600080fd5b6001600160a01b0381166109cd57600080fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6109f83361079a565b610a0157600080fd5b60088160ff1610610a1157600080fd5b600082815260076020526040812060ff831660088110610a2d57fe5b600891828204019190066004029054906101000a900463ffffffff169050600760008481526020019081526020016000206000018260ff1660088110610a6f57fe5b600881049091018054600163ffffffff60046007909516949094026101000a80830485169190910184168102908402199091161790556040805185815260ff8516602082015291831682820152517f77a2025a71f0f345cfd7e8a699b42215025b6ab4706dcfaa29393790aa63383f9181900360600190a1505050565b6003546001600160a01b031681565b60606020825111610bb05781518083015160008181526005602090815260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084529394939091830182828015610ba25780601f10610b7757610100808354040283529160200191610ba2565b820191906000526020600020905b815481529060010190602001808311610b8557829003601f168201915b5050505050925050506107bf565b6006826040518082805190602001908083835b60208310610be25780518252601f199092019160209182019101610bc3565b518151600019602094850361010090810a820192831692199390931691909117909252949092019687526040805197889003820188208054601f6002600183161590980290950116959095049283018290048202880182019052818752929450925050830182828015610c965780601f10610c6b57610100808354040283529160200191610c96565b820191906000526020600020905b815481529060010190602001808311610c7957829003601f168201915b50505050509050919050565b6004546001600160a01b031681565b610cba836112cf565b6000610ce1604051806040016040528060038152602001620dac2f60eb1b81525085611352565b905080831115610cf057600080fd5b6040516001600160a01b0383169084156108fc029085906000818181858888f19350505050158015610d26573d6000803e3d6000fd5b50604080516001600160a01b03841681526020810185905281517f59d13df91c02dfa098820027bd861986b2712e8fa2e7e431fea189243656aebd929181900390910190a150505050565b610d79611452565b506040805161018081018252600561014082018181526406772703a360dc1b610160840152825282518084018452818152646772703a3160d81b60208281019190915280840191909152835180850185528281526433b9381d1960d91b818301528385015283518085018552828152646772703a3360d81b818301526060840152835180850185528281526419dc9c0e8d60da1b81830152608084015283518085018552828152646772703a3560d81b8183015260a0840152835180850185528281526433b9381d1b60d91b8183015260c084015283518085018552828152646772703a3760d81b8183015260e084015283518085018552828152640cee4e074760db1b818301526101008401528351808501909452908352646772703a3960d81b90830152610120810191909152610eb1846112cf565b6000610edd604051806040016040528060088152602001676c656e286772702960c01b81525086611352565b9050600a811115610eed57600080fd5b60005b81811015610f93576000610f148483600a8110610f0957fe5b6020020151886113e5565b9050806001600160a01b0316630ae5e739866040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b03168152602001915050600060405180830381600087803b158015610f6e57600080fd5b505af1158015610f82573d6000803e3d6000fd5b505060019093019250610ef0915050565b50604080516001600160a01b03851681526020810183905281517faf51ac2c635b218e7e5205267ea152c8c9f51fc74f818c332dcf630e82a3dc3f929181900390910190a15050505050565b600060088260ff1610610ff157600080fd5b600083815260076020526040902060ff83166008811061100d57fe5b600891828204019190066004029054906101000a900463ffffffff16905092915050565b61103a3361079a565b61104357600080fd5b602082511161109b57815180830151600081815260056020526040812091929161106c9161147a565b8251156110945760008281526005602090815260409091208451611092928601906114c1565b505b5050611183565b6006826040518082805190602001908083835b602083106110cd5780518252601f1990920191602091820191016110ae565b51815160209384036101000a6000190180199092169116179052920194855250604051938490030190922061110692509050600061147a565b80511561118357806006836040518082805190602001908083835b602083106111405780518252601f199092019160209182019101611121565b51815160209384036101000a6000190180199092169116179052920194855250604051938490038101909320845161118195919491909101925090506114c1565b505b7fe2b310ec9dabdc05229a748e07666c3bc9c46c6ef465cce30d0aa3aa64a0644c826040518080602001828103825283818151815260200191508051906020019080838360005b838110156111e25781810151838201526020016111ca565b50505050905090810190601f16801561120f5780820380516001836020036101000a031916815260200191505b509250505060405180910390a15050565b6112293361079a565b61123257600080fd5b60008181526007602052604081209061124b828261153f565b50506040805182815290517f87d0c300430cf9ba25931ff8bf37f633abe097e533463927bbfdc1e9ae1d0e9f9181900360200190a150565b6003546001600160a01b0316331461129a57600080fd5b6001600160a01b0381166112ad57600080fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b60006112f6604051806040016040528060038152602001621bdc9960ea1b81525083611352565b9050600061132c6040518060400160405280601081526020016f7365676964656e742869642c6f72642960801b81525084611352565b905060ff8216600061133e8383610856565b9050801561134b57600080fd5b5050505050565b604080517467657455696e7428737472696e672c62797465732960581b81529051908190036015018120825181835260208501516004840181905260009360fe92906024820190865b838110156113b8576020818a01810151602484840101520161139b565b506020818383886000fa8080156113d257825198506113d7565b600080fd5b505050505050505092915050565b604080517f6765744164647265737328737472696e672c627974657329000000000000000081529051908190036018018120825181835260208501516004840181905260009360fe9290602482019086838110156113b8576020818a01810151602484840101520161139b565b604051806101400160405280600a905b60608152602001906001900390816114625790505090565b50805460018160011615610100020316600290046000825580601f106114a057506114be565b601f0160209004906000526020600020908101906114be9190611546565b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061150257805160ff191683800117855561152f565b8280016001018555821561152f579182015b8281111561152f578251825591602001919060010190611514565b5061153b929150611546565b5090565b5060009055565b61156091905b8082111561153b576000815560010161154c565b9056fea265627a7a723158205911c89c915ec806bbc6223ca934572554fe830d80fc00e92f44c50d24bdd5ca64736f6c63430005110032"

// DeployTenantFuncsBase deploys a new Ethereum contract, binding an instance of TenantFuncsBase to it.
func DeployTenantFuncsBase(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *TenantFuncsBase, error) {
	parsed, err := abi.JSON(strings.NewReader(TenantFuncsBaseABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(TenantFuncsBaseBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &TenantFuncsBase{TenantFuncsBaseCaller: TenantFuncsBaseCaller{contract: contract}, TenantFuncsBaseTransactor: TenantFuncsBaseTransactor{contract: contract}, TenantFuncsBaseFilterer: TenantFuncsBaseFilterer{contract: contract}}, nil
}

// TenantFuncsBase is an auto generated Go binding around an Ethereum contract.
type TenantFuncsBase struct {
	TenantFuncsBaseCaller     // Read-only binding to the contract
	TenantFuncsBaseTransactor // Write-only binding to the contract
	TenantFuncsBaseFilterer   // Log filterer for contract events
}

// TenantFuncsBaseCaller is an auto generated read-only Go binding around an Ethereum contract.
type TenantFuncsBaseCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TenantFuncsBaseTransactor is an auto generated write-only Go binding around an Ethereum contract.
type TenantFuncsBaseTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TenantFuncsBaseFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type TenantFuncsBaseFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TenantFuncsBaseSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type TenantFuncsBaseSession struct {
	Contract     *TenantFuncsBase  // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// TenantFuncsBaseCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type TenantFuncsBaseCallerSession struct {
	Contract *TenantFuncsBaseCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts          // Call options to use throughout this session
}

// TenantFuncsBaseTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type TenantFuncsBaseTransactorSession struct {
	Contract     *TenantFuncsBaseTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts          // Transaction auth options to use throughout this session
}

// TenantFuncsBaseRaw is an auto generated low-level Go binding around an Ethereum contract.
type TenantFuncsBaseRaw struct {
	Contract *TenantFuncsBase // Generic contract binding to access the raw methods on
}

// TenantFuncsBaseCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type TenantFuncsBaseCallerRaw struct {
	Contract *TenantFuncsBaseCaller // Generic read-only contract binding to access the raw methods on
}

// TenantFuncsBaseTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type TenantFuncsBaseTransactorRaw struct {
	Contract *TenantFuncsBaseTransactor // Generic write-only contract binding to access the raw methods on
}

// NewTenantFuncsBase creates a new instance of TenantFuncsBase, bound to a specific deployed contract.
func NewTenantFuncsBase(address common.Address, backend bind.ContractBackend) (*TenantFuncsBase, error) {
	contract, err := bindTenantFuncsBase(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &TenantFuncsBase{TenantFuncsBaseCaller: TenantFuncsBaseCaller{contract: contract}, TenantFuncsBaseTransactor: TenantFuncsBaseTransactor{contract: contract}, TenantFuncsBaseFilterer: TenantFuncsBaseFilterer{contract: contract}}, nil
}

// NewTenantFuncsBaseCaller creates a new read-only instance of TenantFuncsBase, bound to a specific deployed contract.
func NewTenantFuncsBaseCaller(address common.Address, caller bind.ContractCaller) (*TenantFuncsBaseCaller, error) {
	contract, err := bindTenantFuncsBase(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &TenantFuncsBaseCaller{contract: contract}, nil
}

// NewTenantFuncsBaseTransactor creates a new write-only instance of TenantFuncsBase, bound to a specific deployed contract.
func NewTenantFuncsBaseTransactor(address common.Address, transactor bind.ContractTransactor) (*TenantFuncsBaseTransactor, error) {
	contract, err := bindTenantFuncsBase(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &TenantFuncsBaseTransactor{contract: contract}, nil
}

// NewTenantFuncsBaseFilterer creates a new log filterer instance of TenantFuncsBase, bound to a specific deployed contract.
func NewTenantFuncsBaseFilterer(address common.Address, filterer bind.ContractFilterer) (*TenantFuncsBaseFilterer, error) {
	contract, err := bindTenantFuncsBase(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &TenantFuncsBaseFilterer{contract: contract}, nil
}

// bindTenantFuncsBase binds a generic wrapper to an already deployed contract.
func bindTenantFuncsBase(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(TenantFuncsBaseABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_TenantFuncsBase *TenantFuncsBaseRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _TenantFuncsBase.Contract.TenantFuncsBaseCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_TenantFuncsBase *TenantFuncsBaseRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TenantFuncsBase.Contract.TenantFuncsBaseTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_TenantFuncsBase *TenantFuncsBaseRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _TenantFuncsBase.Contract.TenantFuncsBaseTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_TenantFuncsBase *TenantFuncsBaseCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _TenantFuncsBase.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_TenantFuncsBase *TenantFuncsBaseTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TenantFuncsBase.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_TenantFuncsBase *TenantFuncsBaseTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _TenantFuncsBase.Contract.contract.Transact(opts, method, params...)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_TenantFuncsBase *TenantFuncsBaseCaller) ContentSpace(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _TenantFuncsBase.contract.Call(opts, out, "contentSpace")
	return *ret0, err
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_TenantFuncsBase *TenantFuncsBaseSession) ContentSpace() (common.Address, error) {
	return _TenantFuncsBase.Contract.ContentSpace(&_TenantFuncsBase.CallOpts)
}

// ContentSpace is a free data retrieval call binding the contract method 0xaf570c04.
//
// Solidity: function contentSpace() constant returns(address)
func (_TenantFuncsBase *TenantFuncsBaseCallerSession) ContentSpace() (common.Address, error) {
	return _TenantFuncsBase.Contract.ContentSpace(&_TenantFuncsBase.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_TenantFuncsBase *TenantFuncsBaseCaller) Creator(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _TenantFuncsBase.contract.Call(opts, out, "creator")
	return *ret0, err
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_TenantFuncsBase *TenantFuncsBaseSession) Creator() (common.Address, error) {
	return _TenantFuncsBase.Contract.Creator(&_TenantFuncsBase.CallOpts)
}

// Creator is a free data retrieval call binding the contract method 0x02d05d3f.
//
// Solidity: function creator() constant returns(address)
func (_TenantFuncsBase *TenantFuncsBaseCallerSession) Creator() (common.Address, error) {
	return _TenantFuncsBase.Contract.Creator(&_TenantFuncsBase.CallOpts)
}

// GetBit is a free data retrieval call binding the contract method 0x30f846a2.
//
// Solidity: function getBit(bytes32 _ident, uint8 _ord) constant returns(bool)
func (_TenantFuncsBase *TenantFuncsBaseCaller) GetBit(opts *bind.CallOpts, _ident [32]byte, _ord uint8) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _TenantFuncsBase.contract.Call(opts, out, "getBit", _ident, _ord)
	return *ret0, err
}

// GetBit is a free data retrieval call binding the contract method 0x30f846a2.
//
// Solidity: function getBit(bytes32 _ident, uint8 _ord) constant returns(bool)
func (_TenantFuncsBase *TenantFuncsBaseSession) GetBit(_ident [32]byte, _ord uint8) (bool, error) {
	return _TenantFuncsBase.Contract.GetBit(&_TenantFuncsBase.CallOpts, _ident, _ord)
}

// GetBit is a free data retrieval call binding the contract method 0x30f846a2.
//
// Solidity: function getBit(bytes32 _ident, uint8 _ord) constant returns(bool)
func (_TenantFuncsBase *TenantFuncsBaseCallerSession) GetBit(_ident [32]byte, _ord uint8) (bool, error) {
	return _TenantFuncsBase.Contract.GetBit(&_TenantFuncsBase.CallOpts, _ident, _ord)
}

// GetCounter is a free data retrieval call binding the contract method 0xe1954b61.
//
// Solidity: function getCounter(bytes32 _ident, uint8 _ord) constant returns(uint32)
func (_TenantFuncsBase *TenantFuncsBaseCaller) GetCounter(opts *bind.CallOpts, _ident [32]byte, _ord uint8) (uint32, error) {
	var (
		ret0 = new(uint32)
	)
	out := ret0
	err := _TenantFuncsBase.contract.Call(opts, out, "getCounter", _ident, _ord)
	return *ret0, err
}

// GetCounter is a free data retrieval call binding the contract method 0xe1954b61.
//
// Solidity: function getCounter(bytes32 _ident, uint8 _ord) constant returns(uint32)
func (_TenantFuncsBase *TenantFuncsBaseSession) GetCounter(_ident [32]byte, _ord uint8) (uint32, error) {
	return _TenantFuncsBase.Contract.GetCounter(&_TenantFuncsBase.CallOpts, _ident, _ord)
}

// GetCounter is a free data retrieval call binding the contract method 0xe1954b61.
//
// Solidity: function getCounter(bytes32 _ident, uint8 _ord) constant returns(uint32)
func (_TenantFuncsBase *TenantFuncsBaseCallerSession) GetCounter(_ident [32]byte, _ord uint8) (uint32, error) {
	return _TenantFuncsBase.Contract.GetCounter(&_TenantFuncsBase.CallOpts, _ident, _ord)
}

// GetMeta is a free data retrieval call binding the contract method 0xac55c906.
//
// Solidity: function getMeta(bytes key) constant returns(bytes)
func (_TenantFuncsBase *TenantFuncsBaseCaller) GetMeta(opts *bind.CallOpts, key []byte) ([]byte, error) {
	var (
		ret0 = new([]byte)
	)
	out := ret0
	err := _TenantFuncsBase.contract.Call(opts, out, "getMeta", key)
	return *ret0, err
}

// GetMeta is a free data retrieval call binding the contract method 0xac55c906.
//
// Solidity: function getMeta(bytes key) constant returns(bytes)
func (_TenantFuncsBase *TenantFuncsBaseSession) GetMeta(key []byte) ([]byte, error) {
	return _TenantFuncsBase.Contract.GetMeta(&_TenantFuncsBase.CallOpts, key)
}

// GetMeta is a free data retrieval call binding the contract method 0xac55c906.
//
// Solidity: function getMeta(bytes key) constant returns(bytes)
func (_TenantFuncsBase *TenantFuncsBaseCallerSession) GetMeta(key []byte) ([]byte, error) {
	return _TenantFuncsBase.Contract.GetMeta(&_TenantFuncsBase.CallOpts, key)
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(address _candidate) constant returns(bool)
func (_TenantFuncsBase *TenantFuncsBaseCaller) IsAdmin(opts *bind.CallOpts, _candidate common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _TenantFuncsBase.contract.Call(opts, out, "isAdmin", _candidate)
	return *ret0, err
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(address _candidate) constant returns(bool)
func (_TenantFuncsBase *TenantFuncsBaseSession) IsAdmin(_candidate common.Address) (bool, error) {
	return _TenantFuncsBase.Contract.IsAdmin(&_TenantFuncsBase.CallOpts, _candidate)
}

// IsAdmin is a free data retrieval call binding the contract method 0x24d7806c.
//
// Solidity: function isAdmin(address _candidate) constant returns(bool)
func (_TenantFuncsBase *TenantFuncsBaseCallerSession) IsAdmin(_candidate common.Address) (bool, error) {
	return _TenantFuncsBase.Contract.IsAdmin(&_TenantFuncsBase.CallOpts, _candidate)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_TenantFuncsBase *TenantFuncsBaseCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _TenantFuncsBase.contract.Call(opts, out, "owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_TenantFuncsBase *TenantFuncsBaseSession) Owner() (common.Address, error) {
	return _TenantFuncsBase.Contract.Owner(&_TenantFuncsBase.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() constant returns(address)
func (_TenantFuncsBase *TenantFuncsBaseCallerSession) Owner() (common.Address, error) {
	return _TenantFuncsBase.Contract.Owner(&_TenantFuncsBase.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_TenantFuncsBase *TenantFuncsBaseCaller) Version(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _TenantFuncsBase.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_TenantFuncsBase *TenantFuncsBaseSession) Version() ([32]byte, error) {
	return _TenantFuncsBase.Contract.Version(&_TenantFuncsBase.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_TenantFuncsBase *TenantFuncsBaseCallerSession) Version() ([32]byte, error) {
	return _TenantFuncsBase.Contract.Version(&_TenantFuncsBase.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_TenantFuncsBase *TenantFuncsBaseCaller) VersionAPI(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _TenantFuncsBase.contract.Call(opts, out, "versionAPI")
	return *ret0, err
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_TenantFuncsBase *TenantFuncsBaseSession) VersionAPI() ([32]byte, error) {
	return _TenantFuncsBase.Contract.VersionAPI(&_TenantFuncsBase.CallOpts)
}

// VersionAPI is a free data retrieval call binding the contract method 0x5f4fcae1.
//
// Solidity: function versionAPI() constant returns(bytes32)
func (_TenantFuncsBase *TenantFuncsBaseCallerSession) VersionAPI() ([32]byte, error) {
	return _TenantFuncsBase.Contract.VersionAPI(&_TenantFuncsBase.CallOpts)
}

// ApplyGroups is a paid mutator transaction binding the contract method 0xd2771dee.
//
// Solidity: function applyGroups(bytes _encToken, uint256 , address _to) returns()
func (_TenantFuncsBase *TenantFuncsBaseTransactor) ApplyGroups(opts *bind.TransactOpts, _encToken []byte, arg1 *big.Int, _to common.Address) (*types.Transaction, error) {
	return _TenantFuncsBase.contract.Transact(opts, "applyGroups", _encToken, arg1, _to)
}

// ApplyGroups is a paid mutator transaction binding the contract method 0xd2771dee.
//
// Solidity: function applyGroups(bytes _encToken, uint256 , address _to) returns()
func (_TenantFuncsBase *TenantFuncsBaseSession) ApplyGroups(_encToken []byte, arg1 *big.Int, _to common.Address) (*types.Transaction, error) {
	return _TenantFuncsBase.Contract.ApplyGroups(&_TenantFuncsBase.TransactOpts, _encToken, arg1, _to)
}

// ApplyGroups is a paid mutator transaction binding the contract method 0xd2771dee.
//
// Solidity: function applyGroups(bytes _encToken, uint256 , address _to) returns()
func (_TenantFuncsBase *TenantFuncsBaseTransactorSession) ApplyGroups(_encToken []byte, arg1 *big.Int, _to common.Address) (*types.Transaction, error) {
	return _TenantFuncsBase.Contract.ApplyGroups(&_TenantFuncsBase.TransactOpts, _encToken, arg1, _to)
}

// DeleteGroup is a paid mutator transaction binding the contract method 0xe57097c9.
//
// Solidity: function deleteGroup(bytes32 _ident) returns()
func (_TenantFuncsBase *TenantFuncsBaseTransactor) DeleteGroup(opts *bind.TransactOpts, _ident [32]byte) (*types.Transaction, error) {
	return _TenantFuncsBase.contract.Transact(opts, "deleteGroup", _ident)
}

// DeleteGroup is a paid mutator transaction binding the contract method 0xe57097c9.
//
// Solidity: function deleteGroup(bytes32 _ident) returns()
func (_TenantFuncsBase *TenantFuncsBaseSession) DeleteGroup(_ident [32]byte) (*types.Transaction, error) {
	return _TenantFuncsBase.Contract.DeleteGroup(&_TenantFuncsBase.TransactOpts, _ident)
}

// DeleteGroup is a paid mutator transaction binding the contract method 0xe57097c9.
//
// Solidity: function deleteGroup(bytes32 _ident) returns()
func (_TenantFuncsBase *TenantFuncsBaseTransactorSession) DeleteGroup(_ident [32]byte) (*types.Transaction, error) {
	return _TenantFuncsBase.Contract.DeleteGroup(&_TenantFuncsBase.TransactOpts, _ident)
}

// IncrementCounter is a paid mutator transaction binding the contract method 0x7558cbf0.
//
// Solidity: function incrementCounter(bytes32 _ident, uint8 _ord) returns()
func (_TenantFuncsBase *TenantFuncsBaseTransactor) IncrementCounter(opts *bind.TransactOpts, _ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _TenantFuncsBase.contract.Transact(opts, "incrementCounter", _ident, _ord)
}

// IncrementCounter is a paid mutator transaction binding the contract method 0x7558cbf0.
//
// Solidity: function incrementCounter(bytes32 _ident, uint8 _ord) returns()
func (_TenantFuncsBase *TenantFuncsBaseSession) IncrementCounter(_ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _TenantFuncsBase.Contract.IncrementCounter(&_TenantFuncsBase.TransactOpts, _ident, _ord)
}

// IncrementCounter is a paid mutator transaction binding the contract method 0x7558cbf0.
//
// Solidity: function incrementCounter(bytes32 _ident, uint8 _ord) returns()
func (_TenantFuncsBase *TenantFuncsBaseTransactorSession) IncrementCounter(_ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _TenantFuncsBase.Contract.IncrementCounter(&_TenantFuncsBase.TransactOpts, _ident, _ord)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_TenantFuncsBase *TenantFuncsBaseTransactor) Kill(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TenantFuncsBase.contract.Transact(opts, "kill")
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_TenantFuncsBase *TenantFuncsBaseSession) Kill() (*types.Transaction, error) {
	return _TenantFuncsBase.Contract.Kill(&_TenantFuncsBase.TransactOpts)
}

// Kill is a paid mutator transaction binding the contract method 0x41c0e1b5.
//
// Solidity: function kill() returns()
func (_TenantFuncsBase *TenantFuncsBaseTransactorSession) Kill() (*types.Transaction, error) {
	return _TenantFuncsBase.Contract.Kill(&_TenantFuncsBase.TransactOpts)
}

// PutMeta is a paid mutator transaction binding the contract method 0xe542b7cb.
//
// Solidity: function putMeta(bytes key, bytes value) returns()
func (_TenantFuncsBase *TenantFuncsBaseTransactor) PutMeta(opts *bind.TransactOpts, key []byte, value []byte) (*types.Transaction, error) {
	return _TenantFuncsBase.contract.Transact(opts, "putMeta", key, value)
}

// PutMeta is a paid mutator transaction binding the contract method 0xe542b7cb.
//
// Solidity: function putMeta(bytes key, bytes value) returns()
func (_TenantFuncsBase *TenantFuncsBaseSession) PutMeta(key []byte, value []byte) (*types.Transaction, error) {
	return _TenantFuncsBase.Contract.PutMeta(&_TenantFuncsBase.TransactOpts, key, value)
}

// PutMeta is a paid mutator transaction binding the contract method 0xe542b7cb.
//
// Solidity: function putMeta(bytes key, bytes value) returns()
func (_TenantFuncsBase *TenantFuncsBaseTransactorSession) PutMeta(key []byte, value []byte) (*types.Transaction, error) {
	return _TenantFuncsBase.Contract.PutMeta(&_TenantFuncsBase.TransactOpts, key, value)
}

// SetAndGetBit is a paid mutator transaction binding the contract method 0x24d7c18d.
//
// Solidity: function setAndGetBit(bytes32 _ident, uint8 _ord) returns(bool)
func (_TenantFuncsBase *TenantFuncsBaseTransactor) SetAndGetBit(opts *bind.TransactOpts, _ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _TenantFuncsBase.contract.Transact(opts, "setAndGetBit", _ident, _ord)
}

// SetAndGetBit is a paid mutator transaction binding the contract method 0x24d7c18d.
//
// Solidity: function setAndGetBit(bytes32 _ident, uint8 _ord) returns(bool)
func (_TenantFuncsBase *TenantFuncsBaseSession) SetAndGetBit(_ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _TenantFuncsBase.Contract.SetAndGetBit(&_TenantFuncsBase.TransactOpts, _ident, _ord)
}

// SetAndGetBit is a paid mutator transaction binding the contract method 0x24d7c18d.
//
// Solidity: function setAndGetBit(bytes32 _ident, uint8 _ord) returns(bool)
func (_TenantFuncsBase *TenantFuncsBaseTransactorSession) SetAndGetBit(_ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _TenantFuncsBase.Contract.SetAndGetBit(&_TenantFuncsBase.TransactOpts, _ident, _ord)
}

// SetAndGetBitInternal is a paid mutator transaction binding the contract method 0x33f12cf4.
//
// Solidity: function setAndGetBitInternal(bytes32 _ident, uint8 _ord) returns(bool)
func (_TenantFuncsBase *TenantFuncsBaseTransactor) SetAndGetBitInternal(opts *bind.TransactOpts, _ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _TenantFuncsBase.contract.Transact(opts, "setAndGetBitInternal", _ident, _ord)
}

// SetAndGetBitInternal is a paid mutator transaction binding the contract method 0x33f12cf4.
//
// Solidity: function setAndGetBitInternal(bytes32 _ident, uint8 _ord) returns(bool)
func (_TenantFuncsBase *TenantFuncsBaseSession) SetAndGetBitInternal(_ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _TenantFuncsBase.Contract.SetAndGetBitInternal(&_TenantFuncsBase.TransactOpts, _ident, _ord)
}

// SetAndGetBitInternal is a paid mutator transaction binding the contract method 0x33f12cf4.
//
// Solidity: function setAndGetBitInternal(bytes32 _ident, uint8 _ord) returns(bool)
func (_TenantFuncsBase *TenantFuncsBaseTransactorSession) SetAndGetBitInternal(_ident [32]byte, _ord uint8) (*types.Transaction, error) {
	return _TenantFuncsBase.Contract.SetAndGetBitInternal(&_TenantFuncsBase.TransactOpts, _ident, _ord)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_TenantFuncsBase *TenantFuncsBaseTransactor) TransferCreatorship(opts *bind.TransactOpts, newCreator common.Address) (*types.Transaction, error) {
	return _TenantFuncsBase.contract.Transact(opts, "transferCreatorship", newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_TenantFuncsBase *TenantFuncsBaseSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _TenantFuncsBase.Contract.TransferCreatorship(&_TenantFuncsBase.TransactOpts, newCreator)
}

// TransferCreatorship is a paid mutator transaction binding the contract method 0x6d2e4b1b.
//
// Solidity: function transferCreatorship(address newCreator) returns()
func (_TenantFuncsBase *TenantFuncsBaseTransactorSession) TransferCreatorship(newCreator common.Address) (*types.Transaction, error) {
	return _TenantFuncsBase.Contract.TransferCreatorship(&_TenantFuncsBase.TransactOpts, newCreator)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_TenantFuncsBase *TenantFuncsBaseTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _TenantFuncsBase.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_TenantFuncsBase *TenantFuncsBaseSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _TenantFuncsBase.Contract.TransferOwnership(&_TenantFuncsBase.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_TenantFuncsBase *TenantFuncsBaseTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _TenantFuncsBase.Contract.TransferOwnership(&_TenantFuncsBase.TransactOpts, newOwner)
}

// TransferToken is a paid mutator transaction binding the contract method 0xc2153d2c.
//
// Solidity: function transferToken(bytes _encAuthToken, uint256 _amount, address _to) returns()
func (_TenantFuncsBase *TenantFuncsBaseTransactor) TransferToken(opts *bind.TransactOpts, _encAuthToken []byte, _amount *big.Int, _to common.Address) (*types.Transaction, error) {
	return _TenantFuncsBase.contract.Transact(opts, "transferToken", _encAuthToken, _amount, _to)
}

// TransferToken is a paid mutator transaction binding the contract method 0xc2153d2c.
//
// Solidity: function transferToken(bytes _encAuthToken, uint256 _amount, address _to) returns()
func (_TenantFuncsBase *TenantFuncsBaseSession) TransferToken(_encAuthToken []byte, _amount *big.Int, _to common.Address) (*types.Transaction, error) {
	return _TenantFuncsBase.Contract.TransferToken(&_TenantFuncsBase.TransactOpts, _encAuthToken, _amount, _to)
}

// TransferToken is a paid mutator transaction binding the contract method 0xc2153d2c.
//
// Solidity: function transferToken(bytes _encAuthToken, uint256 _amount, address _to) returns()
func (_TenantFuncsBase *TenantFuncsBaseTransactorSession) TransferToken(_encAuthToken []byte, _amount *big.Int, _to common.Address) (*types.Transaction, error) {
	return _TenantFuncsBase.Contract.TransferToken(&_TenantFuncsBase.TransactOpts, _encAuthToken, _amount, _to)
}

// TenantFuncsBaseApplyGroupsIterator is returned from FilterApplyGroups and is used to iterate over the raw logs and unpacked data for ApplyGroups events raised by the TenantFuncsBase contract.
type TenantFuncsBaseApplyGroupsIterator struct {
	Event *TenantFuncsBaseApplyGroups // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TenantFuncsBaseApplyGroupsIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TenantFuncsBaseApplyGroups)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TenantFuncsBaseApplyGroups)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TenantFuncsBaseApplyGroupsIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TenantFuncsBaseApplyGroupsIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TenantFuncsBaseApplyGroups represents a ApplyGroups event raised by the TenantFuncsBase contract.
type TenantFuncsBaseApplyGroups struct {
	To        common.Address
	NumGroups *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterApplyGroups is a free log retrieval operation binding the contract event 0xaf51ac2c635b218e7e5205267ea152c8c9f51fc74f818c332dcf630e82a3dc3f.
//
// Solidity: event ApplyGroups(address to, uint256 numGroups)
func (_TenantFuncsBase *TenantFuncsBaseFilterer) FilterApplyGroups(opts *bind.FilterOpts) (*TenantFuncsBaseApplyGroupsIterator, error) {

	logs, sub, err := _TenantFuncsBase.contract.FilterLogs(opts, "ApplyGroups")
	if err != nil {
		return nil, err
	}
	return &TenantFuncsBaseApplyGroupsIterator{contract: _TenantFuncsBase.contract, event: "ApplyGroups", logs: logs, sub: sub}, nil
}

// WatchApplyGroups is a free log subscription operation binding the contract event 0xaf51ac2c635b218e7e5205267ea152c8c9f51fc74f818c332dcf630e82a3dc3f.
//
// Solidity: event ApplyGroups(address to, uint256 numGroups)
func (_TenantFuncsBase *TenantFuncsBaseFilterer) WatchApplyGroups(opts *bind.WatchOpts, sink chan<- *TenantFuncsBaseApplyGroups) (event.Subscription, error) {

	logs, sub, err := _TenantFuncsBase.contract.WatchLogs(opts, "ApplyGroups")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TenantFuncsBaseApplyGroups)
				if err := _TenantFuncsBase.contract.UnpackLog(event, "ApplyGroups", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseApplyGroups is a log parse operation binding the contract event 0xaf51ac2c635b218e7e5205267ea152c8c9f51fc74f818c332dcf630e82a3dc3f.
//
// Solidity: event ApplyGroups(address to, uint256 numGroups)
func (_TenantFuncsBase *TenantFuncsBaseFilterer) ParseApplyGroups(log types.Log) (*TenantFuncsBaseApplyGroups, error) {
	event := new(TenantFuncsBaseApplyGroups)
	if err := _TenantFuncsBase.contract.UnpackLog(event, "ApplyGroups", log); err != nil {
		return nil, err
	}
	return event, nil
}

// TenantFuncsBaseBitSetAndGetIterator is returned from FilterBitSetAndGet and is used to iterate over the raw logs and unpacked data for BitSetAndGet events raised by the TenantFuncsBase contract.
type TenantFuncsBaseBitSetAndGetIterator struct {
	Event *TenantFuncsBaseBitSetAndGet // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TenantFuncsBaseBitSetAndGetIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TenantFuncsBaseBitSetAndGet)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TenantFuncsBaseBitSetAndGet)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TenantFuncsBaseBitSetAndGetIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TenantFuncsBaseBitSetAndGetIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TenantFuncsBaseBitSetAndGet represents a BitSetAndGet event raised by the TenantFuncsBase contract.
type TenantFuncsBaseBitSetAndGet struct {
	Ident [32]byte
	Ord   uint8
	Prev  bool
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterBitSetAndGet is a free log retrieval operation binding the contract event 0x4d04842102a74d85e502eec18f3048954c6d6e1d1c368c7bc49edcdcd45e9c3d.
//
// Solidity: event BitSetAndGet(bytes32 ident, uint8 ord, bool prev)
func (_TenantFuncsBase *TenantFuncsBaseFilterer) FilterBitSetAndGet(opts *bind.FilterOpts) (*TenantFuncsBaseBitSetAndGetIterator, error) {

	logs, sub, err := _TenantFuncsBase.contract.FilterLogs(opts, "BitSetAndGet")
	if err != nil {
		return nil, err
	}
	return &TenantFuncsBaseBitSetAndGetIterator{contract: _TenantFuncsBase.contract, event: "BitSetAndGet", logs: logs, sub: sub}, nil
}

// WatchBitSetAndGet is a free log subscription operation binding the contract event 0x4d04842102a74d85e502eec18f3048954c6d6e1d1c368c7bc49edcdcd45e9c3d.
//
// Solidity: event BitSetAndGet(bytes32 ident, uint8 ord, bool prev)
func (_TenantFuncsBase *TenantFuncsBaseFilterer) WatchBitSetAndGet(opts *bind.WatchOpts, sink chan<- *TenantFuncsBaseBitSetAndGet) (event.Subscription, error) {

	logs, sub, err := _TenantFuncsBase.contract.WatchLogs(opts, "BitSetAndGet")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TenantFuncsBaseBitSetAndGet)
				if err := _TenantFuncsBase.contract.UnpackLog(event, "BitSetAndGet", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseBitSetAndGet is a log parse operation binding the contract event 0x4d04842102a74d85e502eec18f3048954c6d6e1d1c368c7bc49edcdcd45e9c3d.
//
// Solidity: event BitSetAndGet(bytes32 ident, uint8 ord, bool prev)
func (_TenantFuncsBase *TenantFuncsBaseFilterer) ParseBitSetAndGet(log types.Log) (*TenantFuncsBaseBitSetAndGet, error) {
	event := new(TenantFuncsBaseBitSetAndGet)
	if err := _TenantFuncsBase.contract.UnpackLog(event, "BitSetAndGet", log); err != nil {
		return nil, err
	}
	return event, nil
}

// TenantFuncsBaseCounterIncrementedIterator is returned from FilterCounterIncremented and is used to iterate over the raw logs and unpacked data for CounterIncremented events raised by the TenantFuncsBase contract.
type TenantFuncsBaseCounterIncrementedIterator struct {
	Event *TenantFuncsBaseCounterIncremented // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TenantFuncsBaseCounterIncrementedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TenantFuncsBaseCounterIncremented)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TenantFuncsBaseCounterIncremented)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TenantFuncsBaseCounterIncrementedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TenantFuncsBaseCounterIncrementedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TenantFuncsBaseCounterIncremented represents a CounterIncremented event raised by the TenantFuncsBase contract.
type TenantFuncsBaseCounterIncremented struct {
	Ident [32]byte
	Slot  uint8
	Val   uint32
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterCounterIncremented is a free log retrieval operation binding the contract event 0x77a2025a71f0f345cfd7e8a699b42215025b6ab4706dcfaa29393790aa63383f.
//
// Solidity: event CounterIncremented(bytes32 ident, uint8 slot, uint32 val)
func (_TenantFuncsBase *TenantFuncsBaseFilterer) FilterCounterIncremented(opts *bind.FilterOpts) (*TenantFuncsBaseCounterIncrementedIterator, error) {

	logs, sub, err := _TenantFuncsBase.contract.FilterLogs(opts, "CounterIncremented")
	if err != nil {
		return nil, err
	}
	return &TenantFuncsBaseCounterIncrementedIterator{contract: _TenantFuncsBase.contract, event: "CounterIncremented", logs: logs, sub: sub}, nil
}

// WatchCounterIncremented is a free log subscription operation binding the contract event 0x77a2025a71f0f345cfd7e8a699b42215025b6ab4706dcfaa29393790aa63383f.
//
// Solidity: event CounterIncremented(bytes32 ident, uint8 slot, uint32 val)
func (_TenantFuncsBase *TenantFuncsBaseFilterer) WatchCounterIncremented(opts *bind.WatchOpts, sink chan<- *TenantFuncsBaseCounterIncremented) (event.Subscription, error) {

	logs, sub, err := _TenantFuncsBase.contract.WatchLogs(opts, "CounterIncremented")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TenantFuncsBaseCounterIncremented)
				if err := _TenantFuncsBase.contract.UnpackLog(event, "CounterIncremented", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseCounterIncremented is a log parse operation binding the contract event 0x77a2025a71f0f345cfd7e8a699b42215025b6ab4706dcfaa29393790aa63383f.
//
// Solidity: event CounterIncremented(bytes32 ident, uint8 slot, uint32 val)
func (_TenantFuncsBase *TenantFuncsBaseFilterer) ParseCounterIncremented(log types.Log) (*TenantFuncsBaseCounterIncremented, error) {
	event := new(TenantFuncsBaseCounterIncremented)
	if err := _TenantFuncsBase.contract.UnpackLog(event, "CounterIncremented", log); err != nil {
		return nil, err
	}
	return event, nil
}

// TenantFuncsBaseObjectMetaChangedIterator is returned from FilterObjectMetaChanged and is used to iterate over the raw logs and unpacked data for ObjectMetaChanged events raised by the TenantFuncsBase contract.
type TenantFuncsBaseObjectMetaChangedIterator struct {
	Event *TenantFuncsBaseObjectMetaChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TenantFuncsBaseObjectMetaChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TenantFuncsBaseObjectMetaChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TenantFuncsBaseObjectMetaChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TenantFuncsBaseObjectMetaChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TenantFuncsBaseObjectMetaChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TenantFuncsBaseObjectMetaChanged represents a ObjectMetaChanged event raised by the TenantFuncsBase contract.
type TenantFuncsBaseObjectMetaChanged struct {
	Key []byte
	Raw types.Log // Blockchain specific contextual infos
}

// FilterObjectMetaChanged is a free log retrieval operation binding the contract event 0xe2b310ec9dabdc05229a748e07666c3bc9c46c6ef465cce30d0aa3aa64a0644c.
//
// Solidity: event ObjectMetaChanged(bytes key)
func (_TenantFuncsBase *TenantFuncsBaseFilterer) FilterObjectMetaChanged(opts *bind.FilterOpts) (*TenantFuncsBaseObjectMetaChangedIterator, error) {

	logs, sub, err := _TenantFuncsBase.contract.FilterLogs(opts, "ObjectMetaChanged")
	if err != nil {
		return nil, err
	}
	return &TenantFuncsBaseObjectMetaChangedIterator{contract: _TenantFuncsBase.contract, event: "ObjectMetaChanged", logs: logs, sub: sub}, nil
}

// WatchObjectMetaChanged is a free log subscription operation binding the contract event 0xe2b310ec9dabdc05229a748e07666c3bc9c46c6ef465cce30d0aa3aa64a0644c.
//
// Solidity: event ObjectMetaChanged(bytes key)
func (_TenantFuncsBase *TenantFuncsBaseFilterer) WatchObjectMetaChanged(opts *bind.WatchOpts, sink chan<- *TenantFuncsBaseObjectMetaChanged) (event.Subscription, error) {

	logs, sub, err := _TenantFuncsBase.contract.WatchLogs(opts, "ObjectMetaChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TenantFuncsBaseObjectMetaChanged)
				if err := _TenantFuncsBase.contract.UnpackLog(event, "ObjectMetaChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseObjectMetaChanged is a log parse operation binding the contract event 0xe2b310ec9dabdc05229a748e07666c3bc9c46c6ef465cce30d0aa3aa64a0644c.
//
// Solidity: event ObjectMetaChanged(bytes key)
func (_TenantFuncsBase *TenantFuncsBaseFilterer) ParseObjectMetaChanged(log types.Log) (*TenantFuncsBaseObjectMetaChanged, error) {
	event := new(TenantFuncsBaseObjectMetaChanged)
	if err := _TenantFuncsBase.contract.UnpackLog(event, "ObjectMetaChanged", log); err != nil {
		return nil, err
	}
	return event, nil
}

// TenantFuncsBaseTenantTransferIterator is returned from FilterTenantTransfer and is used to iterate over the raw logs and unpacked data for TenantTransfer events raised by the TenantFuncsBase contract.
type TenantFuncsBaseTenantTransferIterator struct {
	Event *TenantFuncsBaseTenantTransfer // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TenantFuncsBaseTenantTransferIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TenantFuncsBaseTenantTransfer)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TenantFuncsBaseTenantTransfer)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TenantFuncsBaseTenantTransferIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TenantFuncsBaseTenantTransferIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TenantFuncsBaseTenantTransfer represents a TenantTransfer event raised by the TenantFuncsBase contract.
type TenantFuncsBaseTenantTransfer struct {
	To     common.Address
	Amount *big.Int
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterTenantTransfer is a free log retrieval operation binding the contract event 0x59d13df91c02dfa098820027bd861986b2712e8fa2e7e431fea189243656aebd.
//
// Solidity: event TenantTransfer(address to, uint256 amount)
func (_TenantFuncsBase *TenantFuncsBaseFilterer) FilterTenantTransfer(opts *bind.FilterOpts) (*TenantFuncsBaseTenantTransferIterator, error) {

	logs, sub, err := _TenantFuncsBase.contract.FilterLogs(opts, "TenantTransfer")
	if err != nil {
		return nil, err
	}
	return &TenantFuncsBaseTenantTransferIterator{contract: _TenantFuncsBase.contract, event: "TenantTransfer", logs: logs, sub: sub}, nil
}

// WatchTenantTransfer is a free log subscription operation binding the contract event 0x59d13df91c02dfa098820027bd861986b2712e8fa2e7e431fea189243656aebd.
//
// Solidity: event TenantTransfer(address to, uint256 amount)
func (_TenantFuncsBase *TenantFuncsBaseFilterer) WatchTenantTransfer(opts *bind.WatchOpts, sink chan<- *TenantFuncsBaseTenantTransfer) (event.Subscription, error) {

	logs, sub, err := _TenantFuncsBase.contract.WatchLogs(opts, "TenantTransfer")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TenantFuncsBaseTenantTransfer)
				if err := _TenantFuncsBase.contract.UnpackLog(event, "TenantTransfer", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTenantTransfer is a log parse operation binding the contract event 0x59d13df91c02dfa098820027bd861986b2712e8fa2e7e431fea189243656aebd.
//
// Solidity: event TenantTransfer(address to, uint256 amount)
func (_TenantFuncsBase *TenantFuncsBaseFilterer) ParseTenantTransfer(log types.Log) (*TenantFuncsBaseTenantTransfer, error) {
	event := new(TenantFuncsBaseTenantTransfer)
	if err := _TenantFuncsBase.contract.UnpackLog(event, "TenantTransfer", log); err != nil {
		return nil, err
	}
	return event, nil
}

// TenantFuncsBaseWordGroupDeletedIterator is returned from FilterWordGroupDeleted and is used to iterate over the raw logs and unpacked data for WordGroupDeleted events raised by the TenantFuncsBase contract.
type TenantFuncsBaseWordGroupDeletedIterator struct {
	Event *TenantFuncsBaseWordGroupDeleted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TenantFuncsBaseWordGroupDeletedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TenantFuncsBaseWordGroupDeleted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TenantFuncsBaseWordGroupDeleted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TenantFuncsBaseWordGroupDeletedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TenantFuncsBaseWordGroupDeletedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TenantFuncsBaseWordGroupDeleted represents a WordGroupDeleted event raised by the TenantFuncsBase contract.
type TenantFuncsBaseWordGroupDeleted struct {
	Ident [32]byte
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterWordGroupDeleted is a free log retrieval operation binding the contract event 0x87d0c300430cf9ba25931ff8bf37f633abe097e533463927bbfdc1e9ae1d0e9f.
//
// Solidity: event WordGroupDeleted(bytes32 ident)
func (_TenantFuncsBase *TenantFuncsBaseFilterer) FilterWordGroupDeleted(opts *bind.FilterOpts) (*TenantFuncsBaseWordGroupDeletedIterator, error) {

	logs, sub, err := _TenantFuncsBase.contract.FilterLogs(opts, "WordGroupDeleted")
	if err != nil {
		return nil, err
	}
	return &TenantFuncsBaseWordGroupDeletedIterator{contract: _TenantFuncsBase.contract, event: "WordGroupDeleted", logs: logs, sub: sub}, nil
}

// WatchWordGroupDeleted is a free log subscription operation binding the contract event 0x87d0c300430cf9ba25931ff8bf37f633abe097e533463927bbfdc1e9ae1d0e9f.
//
// Solidity: event WordGroupDeleted(bytes32 ident)
func (_TenantFuncsBase *TenantFuncsBaseFilterer) WatchWordGroupDeleted(opts *bind.WatchOpts, sink chan<- *TenantFuncsBaseWordGroupDeleted) (event.Subscription, error) {

	logs, sub, err := _TenantFuncsBase.contract.WatchLogs(opts, "WordGroupDeleted")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TenantFuncsBaseWordGroupDeleted)
				if err := _TenantFuncsBase.contract.UnpackLog(event, "WordGroupDeleted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseWordGroupDeleted is a log parse operation binding the contract event 0x87d0c300430cf9ba25931ff8bf37f633abe097e533463927bbfdc1e9ae1d0e9f.
//
// Solidity: event WordGroupDeleted(bytes32 ident)
func (_TenantFuncsBase *TenantFuncsBaseFilterer) ParseWordGroupDeleted(log types.Log) (*TenantFuncsBaseWordGroupDeleted, error) {
	event := new(TenantFuncsBaseWordGroupDeleted)
	if err := _TenantFuncsBase.contract.UnpackLog(event, "WordGroupDeleted", log); err != nil {
		return nil, err
	}
	return event, nil
}

// TransactableABI is the input ABI used to generate the binding from.
const TransactableABI = "[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_guarantor\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"},{\"internalType\":\"addresspayable\",\"name\":\"_dest\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ts\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ts\",\"type\":\"uint256\"}],\"name\":\"validateTimestamp\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_dest\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ts\",\"type\":\"uint256\"}],\"name\":\"validateTransaction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// TransactableFuncSigs maps the 4-byte function signature to its string representation.
var TransactableFuncSigs = map[string]string{
	"508ad278": "execute(address,uint8,bytes32,bytes32,address,uint256,uint256)",
	"f50b2efe": "validateTimestamp(uint256)",
	"763d5ee6": "validateTransaction(uint8,bytes32,bytes32,address,uint256,uint256)",
}

// Transactable is an auto generated Go binding around an Ethereum contract.
type Transactable struct {
	TransactableCaller     // Read-only binding to the contract
	TransactableTransactor // Write-only binding to the contract
	TransactableFilterer   // Log filterer for contract events
}

// TransactableCaller is an auto generated read-only Go binding around an Ethereum contract.
type TransactableCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TransactableTransactor is an auto generated write-only Go binding around an Ethereum contract.
type TransactableTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TransactableFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type TransactableFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TransactableSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type TransactableSession struct {
	Contract     *Transactable     // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// TransactableCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type TransactableCallerSession struct {
	Contract *TransactableCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts       // Call options to use throughout this session
}

// TransactableTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type TransactableTransactorSession struct {
	Contract     *TransactableTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts       // Transaction auth options to use throughout this session
}

// TransactableRaw is an auto generated low-level Go binding around an Ethereum contract.
type TransactableRaw struct {
	Contract *Transactable // Generic contract binding to access the raw methods on
}

// TransactableCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type TransactableCallerRaw struct {
	Contract *TransactableCaller // Generic read-only contract binding to access the raw methods on
}

// TransactableTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type TransactableTransactorRaw struct {
	Contract *TransactableTransactor // Generic write-only contract binding to access the raw methods on
}

// NewTransactable creates a new instance of Transactable, bound to a specific deployed contract.
func NewTransactable(address common.Address, backend bind.ContractBackend) (*Transactable, error) {
	contract, err := bindTransactable(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Transactable{TransactableCaller: TransactableCaller{contract: contract}, TransactableTransactor: TransactableTransactor{contract: contract}, TransactableFilterer: TransactableFilterer{contract: contract}}, nil
}

// NewTransactableCaller creates a new read-only instance of Transactable, bound to a specific deployed contract.
func NewTransactableCaller(address common.Address, caller bind.ContractCaller) (*TransactableCaller, error) {
	contract, err := bindTransactable(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &TransactableCaller{contract: contract}, nil
}

// NewTransactableTransactor creates a new write-only instance of Transactable, bound to a specific deployed contract.
func NewTransactableTransactor(address common.Address, transactor bind.ContractTransactor) (*TransactableTransactor, error) {
	contract, err := bindTransactable(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &TransactableTransactor{contract: contract}, nil
}

// NewTransactableFilterer creates a new log filterer instance of Transactable, bound to a specific deployed contract.
func NewTransactableFilterer(address common.Address, filterer bind.ContractFilterer) (*TransactableFilterer, error) {
	contract, err := bindTransactable(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &TransactableFilterer{contract: contract}, nil
}

// bindTransactable binds a generic wrapper to an already deployed contract.
func bindTransactable(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(TransactableABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Transactable *TransactableRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Transactable.Contract.TransactableCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Transactable *TransactableRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Transactable.Contract.TransactableTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Transactable *TransactableRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Transactable.Contract.TransactableTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Transactable *TransactableCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Transactable.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Transactable *TransactableTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Transactable.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Transactable *TransactableTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Transactable.Contract.contract.Transact(opts, method, params...)
}

// ValidateTimestamp is a free data retrieval call binding the contract method 0xf50b2efe.
//
// Solidity: function validateTimestamp(uint256 _ts) constant returns(bool)
func (_Transactable *TransactableCaller) ValidateTimestamp(opts *bind.CallOpts, _ts *big.Int) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Transactable.contract.Call(opts, out, "validateTimestamp", _ts)
	return *ret0, err
}

// ValidateTimestamp is a free data retrieval call binding the contract method 0xf50b2efe.
//
// Solidity: function validateTimestamp(uint256 _ts) constant returns(bool)
func (_Transactable *TransactableSession) ValidateTimestamp(_ts *big.Int) (bool, error) {
	return _Transactable.Contract.ValidateTimestamp(&_Transactable.CallOpts, _ts)
}

// ValidateTimestamp is a free data retrieval call binding the contract method 0xf50b2efe.
//
// Solidity: function validateTimestamp(uint256 _ts) constant returns(bool)
func (_Transactable *TransactableCallerSession) ValidateTimestamp(_ts *big.Int) (bool, error) {
	return _Transactable.Contract.ValidateTimestamp(&_Transactable.CallOpts, _ts)
}

// ValidateTransaction is a free data retrieval call binding the contract method 0x763d5ee6.
//
// Solidity: function validateTransaction(uint8 _v, bytes32 _r, bytes32 _s, address _dest, uint256 _value, uint256 _ts) constant returns(bool)
func (_Transactable *TransactableCaller) ValidateTransaction(opts *bind.CallOpts, _v uint8, _r [32]byte, _s [32]byte, _dest common.Address, _value *big.Int, _ts *big.Int) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Transactable.contract.Call(opts, out, "validateTransaction", _v, _r, _s, _dest, _value, _ts)
	return *ret0, err
}

// ValidateTransaction is a free data retrieval call binding the contract method 0x763d5ee6.
//
// Solidity: function validateTransaction(uint8 _v, bytes32 _r, bytes32 _s, address _dest, uint256 _value, uint256 _ts) constant returns(bool)
func (_Transactable *TransactableSession) ValidateTransaction(_v uint8, _r [32]byte, _s [32]byte, _dest common.Address, _value *big.Int, _ts *big.Int) (bool, error) {
	return _Transactable.Contract.ValidateTransaction(&_Transactable.CallOpts, _v, _r, _s, _dest, _value, _ts)
}

// ValidateTransaction is a free data retrieval call binding the contract method 0x763d5ee6.
//
// Solidity: function validateTransaction(uint8 _v, bytes32 _r, bytes32 _s, address _dest, uint256 _value, uint256 _ts) constant returns(bool)
func (_Transactable *TransactableCallerSession) ValidateTransaction(_v uint8, _r [32]byte, _s [32]byte, _dest common.Address, _value *big.Int, _ts *big.Int) (bool, error) {
	return _Transactable.Contract.ValidateTransaction(&_Transactable.CallOpts, _v, _r, _s, _dest, _value, _ts)
}

// Execute is a paid mutator transaction binding the contract method 0x508ad278.
//
// Solidity: function execute(address _guarantor, uint8 _v, bytes32 _r, bytes32 _s, address _dest, uint256 _value, uint256 _ts) returns(bool)
func (_Transactable *TransactableTransactor) Execute(opts *bind.TransactOpts, _guarantor common.Address, _v uint8, _r [32]byte, _s [32]byte, _dest common.Address, _value *big.Int, _ts *big.Int) (*types.Transaction, error) {
	return _Transactable.contract.Transact(opts, "execute", _guarantor, _v, _r, _s, _dest, _value, _ts)
}

// Execute is a paid mutator transaction binding the contract method 0x508ad278.
//
// Solidity: function execute(address _guarantor, uint8 _v, bytes32 _r, bytes32 _s, address _dest, uint256 _value, uint256 _ts) returns(bool)
func (_Transactable *TransactableSession) Execute(_guarantor common.Address, _v uint8, _r [32]byte, _s [32]byte, _dest common.Address, _value *big.Int, _ts *big.Int) (*types.Transaction, error) {
	return _Transactable.Contract.Execute(&_Transactable.TransactOpts, _guarantor, _v, _r, _s, _dest, _value, _ts)
}

// Execute is a paid mutator transaction binding the contract method 0x508ad278.
//
// Solidity: function execute(address _guarantor, uint8 _v, bytes32 _r, bytes32 _s, address _dest, uint256 _value, uint256 _ts) returns(bool)
func (_Transactable *TransactableTransactorSession) Execute(_guarantor common.Address, _v uint8, _r [32]byte, _s [32]byte, _dest common.Address, _value *big.Int, _ts *big.Int) (*types.Transaction, error) {
	return _Transactable.Contract.Execute(&_Transactable.TransactOpts, _guarantor, _v, _r, _s, _dest, _value, _ts)
}

// UserSpaceABI is the input ABI used to generate the binding from.
const UserSpaceABI = "[{\"constant\":false,\"inputs\":[{\"internalType\":\"addresspayable\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"createUserWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userWallets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// UserSpaceFuncSigs maps the 4-byte function signature to its string representation.
var UserSpaceFuncSigs = map[string]string{
	"e7cf0c66": "createUserWallet(address)",
	"63e6ffdd": "userWallets(address)",
	"54fd4d50": "version()",
}

// UserSpaceBin is the compiled bytecode used for deploying new contracts.
var UserSpaceBin = "0x60806040527f55736572537061636532303139303530363135353330304d4c0000000000000060005534801561003457600080fd5b50610117806100446000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c806354fd4d5014604157806363e6ffdd146059578063e7cf0c66146098575b600080fd5b604760bb565b60408051918252519081900360200190f35b607c60048036036020811015606d57600080fd5b50356001600160a01b031660c1565b604080516001600160a01b039092168252519081900360200190f35b607c6004803603602081101560ac57600080fd5b50356001600160a01b031660dc565b60005481565b6001602052600090815260409020546001600160a01b031681565b60008080fdfea265627a7a723158204b4586e5b732686291f8d078dc0cbcc4818639dc4dfd8b2a2462b2af4f5fd19b64736f6c63430005110032"

// DeployUserSpace deploys a new Ethereum contract, binding an instance of UserSpace to it.
func DeployUserSpace(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *UserSpace, error) {
	parsed, err := abi.JSON(strings.NewReader(UserSpaceABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(UserSpaceBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &UserSpace{UserSpaceCaller: UserSpaceCaller{contract: contract}, UserSpaceTransactor: UserSpaceTransactor{contract: contract}, UserSpaceFilterer: UserSpaceFilterer{contract: contract}}, nil
}

// UserSpace is an auto generated Go binding around an Ethereum contract.
type UserSpace struct {
	UserSpaceCaller     // Read-only binding to the contract
	UserSpaceTransactor // Write-only binding to the contract
	UserSpaceFilterer   // Log filterer for contract events
}

// UserSpaceCaller is an auto generated read-only Go binding around an Ethereum contract.
type UserSpaceCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// UserSpaceTransactor is an auto generated write-only Go binding around an Ethereum contract.
type UserSpaceTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// UserSpaceFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type UserSpaceFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// UserSpaceSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type UserSpaceSession struct {
	Contract     *UserSpace        // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// UserSpaceCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type UserSpaceCallerSession struct {
	Contract *UserSpaceCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts    // Call options to use throughout this session
}

// UserSpaceTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type UserSpaceTransactorSession struct {
	Contract     *UserSpaceTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts    // Transaction auth options to use throughout this session
}

// UserSpaceRaw is an auto generated low-level Go binding around an Ethereum contract.
type UserSpaceRaw struct {
	Contract *UserSpace // Generic contract binding to access the raw methods on
}

// UserSpaceCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type UserSpaceCallerRaw struct {
	Contract *UserSpaceCaller // Generic read-only contract binding to access the raw methods on
}

// UserSpaceTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type UserSpaceTransactorRaw struct {
	Contract *UserSpaceTransactor // Generic write-only contract binding to access the raw methods on
}

// NewUserSpace creates a new instance of UserSpace, bound to a specific deployed contract.
func NewUserSpace(address common.Address, backend bind.ContractBackend) (*UserSpace, error) {
	contract, err := bindUserSpace(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &UserSpace{UserSpaceCaller: UserSpaceCaller{contract: contract}, UserSpaceTransactor: UserSpaceTransactor{contract: contract}, UserSpaceFilterer: UserSpaceFilterer{contract: contract}}, nil
}

// NewUserSpaceCaller creates a new read-only instance of UserSpace, bound to a specific deployed contract.
func NewUserSpaceCaller(address common.Address, caller bind.ContractCaller) (*UserSpaceCaller, error) {
	contract, err := bindUserSpace(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &UserSpaceCaller{contract: contract}, nil
}

// NewUserSpaceTransactor creates a new write-only instance of UserSpace, bound to a specific deployed contract.
func NewUserSpaceTransactor(address common.Address, transactor bind.ContractTransactor) (*UserSpaceTransactor, error) {
	contract, err := bindUserSpace(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &UserSpaceTransactor{contract: contract}, nil
}

// NewUserSpaceFilterer creates a new log filterer instance of UserSpace, bound to a specific deployed contract.
func NewUserSpaceFilterer(address common.Address, filterer bind.ContractFilterer) (*UserSpaceFilterer, error) {
	contract, err := bindUserSpace(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &UserSpaceFilterer{contract: contract}, nil
}

// bindUserSpace binds a generic wrapper to an already deployed contract.
func bindUserSpace(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(UserSpaceABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_UserSpace *UserSpaceRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _UserSpace.Contract.UserSpaceCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_UserSpace *UserSpaceRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _UserSpace.Contract.UserSpaceTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_UserSpace *UserSpaceRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _UserSpace.Contract.UserSpaceTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_UserSpace *UserSpaceCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _UserSpace.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_UserSpace *UserSpaceTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _UserSpace.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_UserSpace *UserSpaceTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _UserSpace.Contract.contract.Transact(opts, method, params...)
}

// UserWallets is a free data retrieval call binding the contract method 0x63e6ffdd.
//
// Solidity: function userWallets(address ) constant returns(address)
func (_UserSpace *UserSpaceCaller) UserWallets(opts *bind.CallOpts, arg0 common.Address) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _UserSpace.contract.Call(opts, out, "userWallets", arg0)
	return *ret0, err
}

// UserWallets is a free data retrieval call binding the contract method 0x63e6ffdd.
//
// Solidity: function userWallets(address ) constant returns(address)
func (_UserSpace *UserSpaceSession) UserWallets(arg0 common.Address) (common.Address, error) {
	return _UserSpace.Contract.UserWallets(&_UserSpace.CallOpts, arg0)
}

// UserWallets is a free data retrieval call binding the contract method 0x63e6ffdd.
//
// Solidity: function userWallets(address ) constant returns(address)
func (_UserSpace *UserSpaceCallerSession) UserWallets(arg0 common.Address) (common.Address, error) {
	return _UserSpace.Contract.UserWallets(&_UserSpace.CallOpts, arg0)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_UserSpace *UserSpaceCaller) Version(opts *bind.CallOpts) ([32]byte, error) {
	var (
		ret0 = new([32]byte)
	)
	out := ret0
	err := _UserSpace.contract.Call(opts, out, "version")
	return *ret0, err
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_UserSpace *UserSpaceSession) Version() ([32]byte, error) {
	return _UserSpace.Contract.Version(&_UserSpace.CallOpts)
}

// Version is a free data retrieval call binding the contract method 0x54fd4d50.
//
// Solidity: function version() constant returns(bytes32)
func (_UserSpace *UserSpaceCallerSession) Version() ([32]byte, error) {
	return _UserSpace.Contract.Version(&_UserSpace.CallOpts)
}

// CreateUserWallet is a paid mutator transaction binding the contract method 0xe7cf0c66.
//
// Solidity: function createUserWallet(address ) returns(address)
func (_UserSpace *UserSpaceTransactor) CreateUserWallet(opts *bind.TransactOpts, arg0 common.Address) (*types.Transaction, error) {
	return _UserSpace.contract.Transact(opts, "createUserWallet", arg0)
}

// CreateUserWallet is a paid mutator transaction binding the contract method 0xe7cf0c66.
//
// Solidity: function createUserWallet(address ) returns(address)
func (_UserSpace *UserSpaceSession) CreateUserWallet(arg0 common.Address) (*types.Transaction, error) {
	return _UserSpace.Contract.CreateUserWallet(&_UserSpace.TransactOpts, arg0)
}

// CreateUserWallet is a paid mutator transaction binding the contract method 0xe7cf0c66.
//
// Solidity: function createUserWallet(address ) returns(address)
func (_UserSpace *UserSpaceTransactorSession) CreateUserWallet(arg0 common.Address) (*types.Transaction, error) {
	return _UserSpace.Contract.CreateUserWallet(&_UserSpace.TransactOpts, arg0)
}

// UtilsABI is the input ABI used to generate the binding from.
const UtilsABI = "[]"

// UtilsBin is the compiled bytecode used for deploying new contracts.
var UtilsBin = "0x60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820b41c418cafc0b1bec46537ca9d7aef5859711c747e2b00057b8eb986688fbc3664736f6c63430005110032"

// DeployUtils deploys a new Ethereum contract, binding an instance of Utils to it.
func DeployUtils(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Utils, error) {
	parsed, err := abi.JSON(strings.NewReader(UtilsABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(UtilsBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Utils{UtilsCaller: UtilsCaller{contract: contract}, UtilsTransactor: UtilsTransactor{contract: contract}, UtilsFilterer: UtilsFilterer{contract: contract}}, nil
}

// Utils is an auto generated Go binding around an Ethereum contract.
type Utils struct {
	UtilsCaller     // Read-only binding to the contract
	UtilsTransactor // Write-only binding to the contract
	UtilsFilterer   // Log filterer for contract events
}

// UtilsCaller is an auto generated read-only Go binding around an Ethereum contract.
type UtilsCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// UtilsTransactor is an auto generated write-only Go binding around an Ethereum contract.
type UtilsTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// UtilsFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type UtilsFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// UtilsSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type UtilsSession struct {
	Contract     *Utils            // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// UtilsCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type UtilsCallerSession struct {
	Contract *UtilsCaller  // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// UtilsTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type UtilsTransactorSession struct {
	Contract     *UtilsTransactor  // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// UtilsRaw is an auto generated low-level Go binding around an Ethereum contract.
type UtilsRaw struct {
	Contract *Utils // Generic contract binding to access the raw methods on
}

// UtilsCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type UtilsCallerRaw struct {
	Contract *UtilsCaller // Generic read-only contract binding to access the raw methods on
}

// UtilsTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type UtilsTransactorRaw struct {
	Contract *UtilsTransactor // Generic write-only contract binding to access the raw methods on
}

// NewUtils creates a new instance of Utils, bound to a specific deployed contract.
func NewUtils(address common.Address, backend bind.ContractBackend) (*Utils, error) {
	contract, err := bindUtils(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Utils{UtilsCaller: UtilsCaller{contract: contract}, UtilsTransactor: UtilsTransactor{contract: contract}, UtilsFilterer: UtilsFilterer{contract: contract}}, nil
}

// NewUtilsCaller creates a new read-only instance of Utils, bound to a specific deployed contract.
func NewUtilsCaller(address common.Address, caller bind.ContractCaller) (*UtilsCaller, error) {
	contract, err := bindUtils(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &UtilsCaller{contract: contract}, nil
}

// NewUtilsTransactor creates a new write-only instance of Utils, bound to a specific deployed contract.
func NewUtilsTransactor(address common.Address, transactor bind.ContractTransactor) (*UtilsTransactor, error) {
	contract, err := bindUtils(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &UtilsTransactor{contract: contract}, nil
}

// NewUtilsFilterer creates a new log filterer instance of Utils, bound to a specific deployed contract.
func NewUtilsFilterer(address common.Address, filterer bind.ContractFilterer) (*UtilsFilterer, error) {
	contract, err := bindUtils(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &UtilsFilterer{contract: contract}, nil
}

// bindUtils binds a generic wrapper to an already deployed contract.
func bindUtils(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(UtilsABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Utils *UtilsRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Utils.Contract.UtilsCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Utils *UtilsRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Utils.Contract.UtilsTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Utils *UtilsRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Utils.Contract.UtilsTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Utils *UtilsCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Utils.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Utils *UtilsTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Utils.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Utils *UtilsTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Utils.Contract.contract.Transact(opts, method, params...)
}

// VerifierABI is the input ABI used to generate the binding from.
const VerifierABI = "[{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"isSigned\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"recoverAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}]"

// VerifierFuncSigs maps the 4-byte function signature to its string representation.
var VerifierFuncSigs = map[string]string{
	"8677ebe8": "isSigned(address,bytes32,uint8,bytes32,bytes32)",
	"e5df669f": "recoverAddr(bytes32,uint8,bytes32,bytes32)",
}

// VerifierBin is the compiled bytecode used for deploying new contracts.
var VerifierBin = "0x608060405234801561001057600080fd5b50610207806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638677ebe81461003b578063e5df669f14610090575b600080fd5b61007c600480360360a081101561005157600080fd5b506001600160a01b038135169060208101359060ff60408201351690606081013590608001356100de565b604080519115158252519081900360200190f35b6100c2600480360360808110156100a657600080fd5b5080359060ff6020820135169060408101359060600135610166565b604080516001600160a01b039092168252519081900360200190f35b6000856001600160a01b031660018686868660405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610147573d6000803e3d6000fd5b505050602060405103516001600160a01b031614905095945050505050565b604080516000808252602080830180855288905260ff87168385015260608301869052608083018590529251909260019260a080820193601f1981019281900390910190855afa1580156101be573d6000803e3d6000fd5b5050604051601f190151969550505050505056fea265627a7a72315820e625ee1584e0380ac2373f7d111cdb1552d558e4c881cea0e2d0a9cffd57be4664736f6c63430005110032"

// DeployVerifier deploys a new Ethereum contract, binding an instance of Verifier to it.
func DeployVerifier(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Verifier, error) {
	parsed, err := abi.JSON(strings.NewReader(VerifierABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(VerifierBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Verifier{VerifierCaller: VerifierCaller{contract: contract}, VerifierTransactor: VerifierTransactor{contract: contract}, VerifierFilterer: VerifierFilterer{contract: contract}}, nil
}

// Verifier is an auto generated Go binding around an Ethereum contract.
type Verifier struct {
	VerifierCaller     // Read-only binding to the contract
	VerifierTransactor // Write-only binding to the contract
	VerifierFilterer   // Log filterer for contract events
}

// VerifierCaller is an auto generated read-only Go binding around an Ethereum contract.
type VerifierCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// VerifierTransactor is an auto generated write-only Go binding around an Ethereum contract.
type VerifierTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// VerifierFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type VerifierFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// VerifierSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type VerifierSession struct {
	Contract     *Verifier         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// VerifierCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type VerifierCallerSession struct {
	Contract *VerifierCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// VerifierTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type VerifierTransactorSession struct {
	Contract     *VerifierTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// VerifierRaw is an auto generated low-level Go binding around an Ethereum contract.
type VerifierRaw struct {
	Contract *Verifier // Generic contract binding to access the raw methods on
}

// VerifierCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type VerifierCallerRaw struct {
	Contract *VerifierCaller // Generic read-only contract binding to access the raw methods on
}

// VerifierTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type VerifierTransactorRaw struct {
	Contract *VerifierTransactor // Generic write-only contract binding to access the raw methods on
}

// NewVerifier creates a new instance of Verifier, bound to a specific deployed contract.
func NewVerifier(address common.Address, backend bind.ContractBackend) (*Verifier, error) {
	contract, err := bindVerifier(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Verifier{VerifierCaller: VerifierCaller{contract: contract}, VerifierTransactor: VerifierTransactor{contract: contract}, VerifierFilterer: VerifierFilterer{contract: contract}}, nil
}

// NewVerifierCaller creates a new read-only instance of Verifier, bound to a specific deployed contract.
func NewVerifierCaller(address common.Address, caller bind.ContractCaller) (*VerifierCaller, error) {
	contract, err := bindVerifier(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &VerifierCaller{contract: contract}, nil
}

// NewVerifierTransactor creates a new write-only instance of Verifier, bound to a specific deployed contract.
func NewVerifierTransactor(address common.Address, transactor bind.ContractTransactor) (*VerifierTransactor, error) {
	contract, err := bindVerifier(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &VerifierTransactor{contract: contract}, nil
}

// NewVerifierFilterer creates a new log filterer instance of Verifier, bound to a specific deployed contract.
func NewVerifierFilterer(address common.Address, filterer bind.ContractFilterer) (*VerifierFilterer, error) {
	contract, err := bindVerifier(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &VerifierFilterer{contract: contract}, nil
}

// bindVerifier binds a generic wrapper to an already deployed contract.
func bindVerifier(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(VerifierABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Verifier *VerifierRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Verifier.Contract.VerifierCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Verifier *VerifierRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Verifier.Contract.VerifierTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Verifier *VerifierRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Verifier.Contract.VerifierTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Verifier *VerifierCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Verifier.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Verifier *VerifierTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Verifier.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Verifier *VerifierTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Verifier.Contract.contract.Transact(opts, method, params...)
}

// IsSigned is a free data retrieval call binding the contract method 0x8677ebe8.
//
// Solidity: function isSigned(address _addr, bytes32 msgHash, uint8 v, bytes32 r, bytes32 s) constant returns(bool)
func (_Verifier *VerifierCaller) IsSigned(opts *bind.CallOpts, _addr common.Address, msgHash [32]byte, v uint8, r [32]byte, s [32]byte) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Verifier.contract.Call(opts, out, "isSigned", _addr, msgHash, v, r, s)
	return *ret0, err
}

// IsSigned is a free data retrieval call binding the contract method 0x8677ebe8.
//
// Solidity: function isSigned(address _addr, bytes32 msgHash, uint8 v, bytes32 r, bytes32 s) constant returns(bool)
func (_Verifier *VerifierSession) IsSigned(_addr common.Address, msgHash [32]byte, v uint8, r [32]byte, s [32]byte) (bool, error) {
	return _Verifier.Contract.IsSigned(&_Verifier.CallOpts, _addr, msgHash, v, r, s)
}

// IsSigned is a free data retrieval call binding the contract method 0x8677ebe8.
//
// Solidity: function isSigned(address _addr, bytes32 msgHash, uint8 v, bytes32 r, bytes32 s) constant returns(bool)
func (_Verifier *VerifierCallerSession) IsSigned(_addr common.Address, msgHash [32]byte, v uint8, r [32]byte, s [32]byte) (bool, error) {
	return _Verifier.Contract.IsSigned(&_Verifier.CallOpts, _addr, msgHash, v, r, s)
}

// RecoverAddr is a free data retrieval call binding the contract method 0xe5df669f.
//
// Solidity: function recoverAddr(bytes32 msgHash, uint8 v, bytes32 r, bytes32 s) constant returns(address)
func (_Verifier *VerifierCaller) RecoverAddr(opts *bind.CallOpts, msgHash [32]byte, v uint8, r [32]byte, s [32]byte) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Verifier.contract.Call(opts, out, "recoverAddr", msgHash, v, r, s)
	return *ret0, err
}

// RecoverAddr is a free data retrieval call binding the contract method 0xe5df669f.
//
// Solidity: function recoverAddr(bytes32 msgHash, uint8 v, bytes32 r, bytes32 s) constant returns(address)
func (_Verifier *VerifierSession) RecoverAddr(msgHash [32]byte, v uint8, r [32]byte, s [32]byte) (common.Address, error) {
	return _Verifier.Contract.RecoverAddr(&_Verifier.CallOpts, msgHash, v, r, s)
}

// RecoverAddr is a free data retrieval call binding the contract method 0xe5df669f.
//
// Solidity: function recoverAddr(bytes32 msgHash, uint8 v, bytes32 r, bytes32 s) constant returns(address)
func (_Verifier *VerifierCallerSession) RecoverAddr(msgHash [32]byte, v uint8, r [32]byte, s [32]byte) (common.Address, error) {
	return _Verifier.Contract.RecoverAddr(&_Verifier.CallOpts, msgHash, v, r, s)
}
